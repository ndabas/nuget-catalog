{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jean-Marie Alfonsi",
  "catalog:commitId": "6c67fa05-9d96-451d-8915-19fedb3c5cd4",
  "catalog:commitTimeStamp": "2021-06-23T08:50:41.1482205Z",
  "copyright": "Copyright 2021 Sharpnado",
  "created": "2021-06-23T08:46:56.18Z",
  "description": "Free yourself from IsBusy=true!\nThe `TaskLoaderView` is a UI component that handles all your UI loading state (Loading, Error, Result, Notification), and removes all the pain of async loading from your view models (try catch / async void / IsBusy / HasErrors / base view models / ...) thanks to its brother the `TaskLoaderNotifier`.\n\nBREAKING CHANGE Version 2.4.0:\nThe task source given to to TaskLoaderNotifier is now a Func{bool, Task} (or a Func{bool, Task{T}}) instead of a Func{Task}.\nYou can simply change your calls from Loader.Load(() => InitializeAsync()) to Loader.Load(_ => InitializeAsync()) to ignore it if you like.\n\nThe boolean that is passed now to your task source is a boolean indicating if the notifier is refreshing.\nYou can use it for invalidating your cache, for example:\n\npublic Task LoadItems(bool isRefreshing)\n{\n    if (isRefreshing || !_cache.ContainsItems())\n    {\n        _cache.InvalidateItems();\n        var items = _httpService.GetItems()\n        _cache.PutItems(items);\n        return items;\n    }\n\n    return _cache.GetItems();\n}\n\nFeaturing:\n\n* Default views for all loading states (Loading, Error, Success, Notification, Refresh)\n* Snackbar component\n* Compose notifiers with CompositeTaskLoaderNotifier\n* Stylable views including fonts, accent color, error images, ...\n* Any states are overridable with user custom views and easily positionned with AbsoluteLayout properties\n* Support for Xamarin.Forms.Skeleton nuget package\n* Support for refresh scenarios, and error while refreshing with the ErrorNotificationView\n* Supports Async mvvm ICommand through TaskLoaderCommand\n* Supports loading task on demand with the NotStarted state\n* TaskLoaderNotifier for the ViewModel side taking care of all the error handling and the IsBusy nonsense",
  "iconUrl": "https://raw.githubusercontent.com/roubachof/Sharpnado.TaskLoaderView/master/Docs/tlv_icon_tos.png",
  "id": "Sharpnado.TaskLoaderView",
  "isPrerelease": false,
  "lastEdited": "2021-06-23T08:50:30.903Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "x98Ea+o8UVFT6QYxvPvrrWMvv4r105jpfylZQWf7lcjSokYcZSqbnmHGvySsIZGjmtJywf0VXthYiAT+uGFO4g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 42284,
  "projectUrl": "https://github.com/roubachof/Sharpnado.TaskLoaderView",
  "published": "2021-06-23T08:46:56.18Z",
  "releaseNotes": "Fix Snackbar BackgroundColor and CompositeLoader behavior.\nBREAKING CHANGE: the task source given to to TaskLoaderNotifier is now a Func{bool, Task} (or a Func{bool, Task{T}}) instead of a Func{Task}.\nYou can simply change your calls from Loader.Load(() => InitializeAsync()); to Loader.Load(_ => InitializeAsync());\nThe booleand that is passed now to your task source is a boolean indicating if the notifier is refreshing.\nYou can use it for invalidating your cache for example.\n\nLoader.Load(LoadItems);\n\npublic Task LoadItems(bool isRefreshing)\n{\n    if (isRefreshing || !_cache.ContainsItems())\n    {\n         _cache.InvalidateItems();\n         var items = _httpService.GetItems()\n         _cache.PutItems(items);\n         return items;\n    }\n\n    return _cache.GetItems();\n}\n\nWhen the Refresh command will be called, it will pass automatically the isRefreshing boolean set to true to your task source.",
  "repository": "",
  "title": "TaskLoaderView: free yourself from IsBusy=true!",
  "verbatimVersion": "2.4.0",
  "version": "2.4.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json#dependencygroup/.netstandard2.0/sharpnado.taskmonitor",
          "@type": "PackageDependency",
          "id": "Sharpnado.TaskMonitor",
          "range": "[1.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json#dependencygroup/.netstandard2.0/xamarin.forms",
          "@type": "PackageDependency",
          "id": "Xamarin.Forms",
          "range": "[5.0.0.2012, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json#Sharpnado.TaskLoaderView.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1600,
      "fullName": "Sharpnado.TaskLoaderView.nuspec",
      "length": 4088,
      "name": "Sharpnado.TaskLoaderView.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json#lib/netstandard2.0/Sharpnado.TaskLoaderView.dll",
      "@type": "PackageEntry",
      "compressedLength": 28543,
      "fullName": "lib/netstandard2.0/Sharpnado.TaskLoaderView.dll",
      "length": 73728,
      "name": "Sharpnado.TaskLoaderView.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.06.23.08.50.41/sharpnado.taskloaderview.2.4.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "xamarin",
    "xamarin.forms",
    "skeleton",
    "loading",
    "states",
    "async",
    "task",
    "loader",
    "isbusy",
    "control",
    "taskloader",
    "taskloadernotifier"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}