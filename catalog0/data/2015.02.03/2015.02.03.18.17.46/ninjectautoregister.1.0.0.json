{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.18.17.46/ninjectautoregister.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Wael Emara",
  "catalog:commitId": "1e10897f-9186-451f-8381-043bc909949b",
  "catalog:commitTimeStamp": "2015-02-03T18:17:46.9108248Z",
  "created": "2013-08-25T07:52:33.963Z",
  "description": "My package description.",
  "id": "NinjectAutoRegister",
  "isPrerelease": false,
  "language": "en-AU",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/ms-pl.html",
  "minClientVersion": "1.0",
  "packageHash": "xxwGguamPszGwFS0bNBRlAs1b8n4v7y39OE9RRbZBeLqU/meEUrcmZSap5TivkZziXiw321n5+pYh3sqDWjYoQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 84979,
  "projectUrl": "https://github.com/waelemara/NinjectAutoRegister",
  "published": "2013-08-25T07:52:33.963Z",
  "requireLicenseAcceptance": false,
  "summary": "Is Package gives you a way to auto register claess and interfaces without manullay bind them",
  "title": "Ninject AutoRegister",
  "version": "1.0.0",
  "tags": [
    ".Net",
    "Ninject",
    "IoC",
    "AutoRegister"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}