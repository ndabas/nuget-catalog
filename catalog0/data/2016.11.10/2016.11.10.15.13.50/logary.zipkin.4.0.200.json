{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.10.15.13.50/logary.zipkin.4.0.200.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Henrik Feldt, Logibit AB",
  "catalog:commitId": "bcf34939-e2d0-4eb2-aebc-81c6eb3eec0f",
  "catalog:commitTimeStamp": "2016-11-10T15:13:50.8963593Z",
  "copyright": "Henrik Feldt, Logibit AB",
  "created": "2016-11-10T15:12:59.597Z",
  "description": "Logary is a high performance, multi-target logging, metric and health-check library for mono and .Net.",
  "iconUrl": "https://raw.githubusercontent.com/logary/logary-assets/master/graphics/LogaryLogoSquare32x32.png",
  "id": "Logary.Zipkin",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://www.apache.org/licenses/LICENSE-2.0.html",
  "listed": true,
  "packageHash": "KVcXTfoUfsfnTz3LKZIRDPLgQgi0WN1qs6Csiva8pnfvd2FXxfVpSFEC4k4lD3cP0F1SzCm92lJ+FKY3fh8HRQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15260,
  "published": "2016-11-10T15:12:59.597Z",
  "releaseNotes": "Release Notes:\n\n * [tests] repro of Travis and Appveyor lockup\n * [infra] adding all AssemblyVersionInfos\n * [tests] skip locking test\n * [infra] more logging for Travis and AppVeyor\n * [datamodel] #202 - Duration is primitive\n * [datamodel] #202 - TimeSpan is primitive\n * [file] using CreationTimeUtc instead of CreationTime\n * [infra] more test logging\n * Merge remote-tracking branch 'lynx/feature/file-flush-improvements'\n * [infra] making test debug listen to DEBUG env var\n * [file] flush improvements, docs for it\n * [infra] try mono 4.6.1 instead\n * Merge branch 'feature/file-target'\n * [file] rotation first cut\n * [file] regex match exactly service name and host\n * [infra] adding TMPDIR to travis, new mono version\n * [file] implemented rotation policy checks\n * [file] supports regex-matching spec\n * [tests] extract literal to Fac module\n * [runtimeinfo] refactor to use #create\n * [infra] refactoring fsproj files\n * [tests] support acting on targets without doing Hopac.run\n * [tests] adapt LiterateConsole to Expecto's logger\n * [tests] adding Logary.Adapters.Facade as ref\n * [file] test for logging 10K messages (takes about 1.1s on my laptop)\n * [target] better value name\n * [registry] better value name\n * [file] extending file target file name validation\n * [file] extract parser concerns\n * [file] parses naming 100% correct\n * [file] simple multi-variable parser\n * [runtimeinfo] expanding with hostName property (BREAKING)\n * [file] FParsec can parse single spec atom\n * [file] wrote tests for Naming\n * [file] refactor basic tests, turn on integration tests\n * [file] passing basic tests\n * [file] basicTests now relevant\n * [file] moving into Logary\n * [file] refactor deletions\n * [file] rotateCh for scheduled rotations\n * [file] adding TODOs\n * [file] comments, #create on State\n * [file] +recovery, working through flush logic\n * [file] adding more invariants to docs\n * [file] reword comment\n * [file] pass reference instead of closing over\n * [file] update comment to reflect Job\n * [file] ensuring order of things\n * [file] allow NACK to exit while flushing\n * [file] wrote the flushing logic\n * [facade] semaphore protection\n * [file] work towards working file target\n * [infra] toc\n * [file] documenting architecture\n * [file] working on the target\n * [infra] update deps\n * [infra] paket churn\n * [file] initial sketches\n * Merge pull request #200 from haf-lynx/feature/unit-tasks\n * [refactor] replace awaitUnitTask with fromUnitTask to catch potential errors\n * [facade] converting flyweight to logical clock\n * Update README.md\n * Update README.md\n * Merge pull request #197 from haf-lynx/master\n * [core] better test for local time\n * [core] adding test for converting DateTimeOffset\n * [winperfcounters] skip stuff on mono\n * [winperfcounters] test pidInstance on mono\n * [metrics] fix and test for #196",
  "requireLicenseAcceptance": false,
  "title": "Logary.Zipkin",
  "verbatimVersion": "4.0.200",
  "version": "4.0.200",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.10.15.13.50/logary.zipkin.4.0.200.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.10.15.13.50/logary.zipkin.4.0.200.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[4.0.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.10.15.13.50/logary.zipkin.4.0.200.json#dependencygroup/apachethrift",
          "@type": "PackageDependency",
          "id": "ApacheThrift",
          "range": "[0.9.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.10.15.13.50/logary.zipkin.4.0.200.json#Logary.Zipkin.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1739,
      "fullName": "Logary.Zipkin.nuspec",
      "length": 3909,
      "name": "Logary.Zipkin.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.10.15.13.50/logary.zipkin.4.0.200.json#lib/net40/Logary.Zipkin.dll",
      "@type": "PackageEntry",
      "compressedLength": 11852,
      "fullName": "lib/net40/Logary.Zipkin.dll",
      "length": 28160,
      "name": "Logary.Zipkin.dll"
    }
  ],
  "tags": [
    "logging",
    "f#",
    "log",
    "logs",
    "metrics",
    "metrics.net",
    "measure",
    "gauge",
    "semantic",
    "structured"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}