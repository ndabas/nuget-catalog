{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.16.38.37/smith.asyncmemcachedclient.0.7.4445.30021.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Bj√∏rn Bouet Smith",
  "catalog:commitId": "5a4d0b9c-9ec2-464a-bb6e-32a691eabe57",
  "catalog:commitTimeStamp": "2015-02-01T16:38:37.2241172Z",
  "created": "2012-03-03T16:03:56.54Z",
  "description": "Fully asynchronous memcached client that uses consistent hashing to minimise cache loss if a cache server leaves the cluster or if you add a cache server to the cluster.\nBuilt in performance counters so you can see how the memcached client is behaving on your machine and how many requests you are making.\nCache server monitoring is built in so cache servers are removed from the cluster if the stop responding and will be added automatically if they start responding again.\n\nPerformance are good, I have seen 50 threads doing more than 20k add operations per second against on server, using only 25 sockets.",
  "id": "Smith.AsyncMemcachedClient",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "1OPBlKBlvuII2Mz7klCnIjDYnZu4A/6d4hDn2lqjEskiKgWIhPqRdtiZu/4wox2fcpKb55x5GEnmC7+Rm1Yn7g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 237565,
  "projectUrl": "http://asyncmemcached.codeplex.com",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Fully Asynchronous memcached client built with scalability in mind.",
  "title": "Smith.AsyncMemcachedClient",
  "version": "0.7.4445.30021",
  "tags": [
    "memcached",
    "asynchronous"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}