{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.16.07.34/redfoxmq.0.13.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Hans Wolff",
  "catalog:commitId": "a40c5e67-4091-4fdc-a65c-12ebb6f9286a",
  "catalog:commitTimeStamp": "2015-02-04T16:07:34.7856203Z",
  "copyright": "Hans Wolff",
  "created": "2014-01-30T07:51:54.967Z",
  "description": "Lightweight .NET in-memory message queue that uses TCP/InProc transport",
  "id": "RedFoxMQ",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "2014-01-30T07:52:13.853Z",
  "licenseUrl": "https://raw.github.com/hanswolff/redfoxmq/master/LICENSE.txt",
  "packageHash": "aoWoplfL6zuUdj87fDkh8sBGRLU4tfi4DATWtrIMQY4LHALUOhwJH9NFHVlRnXThLyysgnZIX4joVDK4nULAkg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 198950,
  "projectUrl": "https://github.com/hanswolff/redfoxmq",
  "published": "2014-01-30T07:51:54.98Z",
  "releaseNotes": "- added ServiceQueue implementation\n- added IMessageSerializer for multiple custom message serializers",
  "requireLicenseAcceptance": false,
  "summary": "RedFoxMQ is a lightweight .NET in-memory message queue that uses a simple TCP or InProc transport. It is fairly low-level and provides full control over message serialization / deserialization.",
  "title": ".NET in-memory message queue over TCP/InProc transport",
  "version": "0.13.0",
  "tags": [
    "redfoxmq",
    "message",
    "queue",
    "mq",
    "memory",
    "lightweight"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}