{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Vyacheslav Volkov",
  "catalog:commitId": "80522e92-ada0-4db7-9b5b-0832138df1a9",
  "catalog:commitTimeStamp": "2018-11-25T01:54:42.8773092Z",
  "created": "2015-11-04T10:31:08.38Z",
  "description": "This package contains the WinForms assemblies.\n      Mugen MVVM Toolkit makes it easier to develop cross-platform application using the Model-View-ViewModel design pattern.\n      The Mugen MVVM Toolkit provides a cross-platform MVVM development framework built on top of:\n      - WinForms\n      - WPF\n      - Silverlight 5\n      - Silverlight for WP8, WP8.1\n      - Xamarin.Android\n      - Xamarin.iOS\n      - Xamarin.Forms\n      - WinRT XAML framework for Windows 8 Store apps\n      The MVVM framework includes the following features that differs this project from other frameworks:\n      - Deep integration with each platform.\n      - Supports state preservation and restoration for mobile platforms.\n      - Full Fragment support for Android, you do not need to worry about activity, fragments, sub-fragments or their state all this makes the framework.\n      - Solves the nested user controls problem in MVVM, all view models are dynamically created by you, using the GetViewModel method and you do not need to use the ViewModelLocator.\n      - Supports all kinds of navigation like modal window, page navigation, tab navigation, back stack fragment navigation for android. You can also easily add a new kind of navigation.\n      - Navigation system works with view models and allows to expect the completion of the operation. You can pass any parameters between view models.\n      - Good design mode support, for xaml platforms supports the creation of design view model with any constructor parameters.\n      - Supports bindings on all platforms, all of the native binding features available for WPF platform available on all platforms and even more.\n      - Binding supports C# language expressions like Linq, Extension methods, method call, ternary operator (?:), coalescing operator (??), etc.\n      - Supports subscription to any control event.\n      - Built-in support for validation.\n      - You can easily write their own extensions for bindings.\n      - Supports attached members (properties, events, methods), you can extend any object as you want.\n      - Special editor for WinForms, you do not need to write code to create bindings.\n      - Binding parser builds syntax tree that allows you to easily change or extend the bindings, without manipulation of the raw text.\n      - Binding supports fluent syntax.\n      - Excellent binding performance.",
  "iconUrl": "https://raw.githubusercontent.com/MugenMvvmToolkit/MugenMvvmToolkit/master/logo128_128.png",
  "id": "MugenMvvmToolkit.WinForms",
  "isPrerelease": false,
  "lastEdited": "2018-11-25T01:54:22.517Z",
  "licenseUrl": "http://opensource.org/licenses/MS-PL",
  "listed": false,
  "packageHash": "h8oQWURaegwg27qoIesD7cuNB5EzRYmJ5vD7gNIlQ8W8POOJ3RI0364DXUNOOce0pLk4ourCLhzzSs929KLFJg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 808890,
  "projectUrl": "https://github.com/MugenMvvmToolkit/MugenMvvmToolkit",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Breaking changes:\n      - Changed arguments of all fluent binding methods from (model) => model.Name to (model, ctx) => mode.Name, where the ctx argument is IBindingSyntaxContext interface that allows to use the specific binding extension methods instead of direct use BindingSyntaxEx class (Binding).\n      - Changed the management and the creation of IocContainer for view models (Core).\n      - Changed return value in the IToastPresenter.ShowAsync method to the IToast interface instead of the Task class (Core).\n      - Changed implementation of INotifiableCollection.AddRange and INotifiableCollection.RemoveRange methods from the implicit to the explicit (Core).\n      - Renamed protected methods in the ViewModelProvider class (Core).\n      - Removed the IocContainerCreationMode enum (Core).\n      - Removed the ViewModelDataTemplateModule class that is responsible for generating the default data templates for the view models (WPF, Silverlight).\n      - Removed the ListItem class that is used to display the rows, the row view now show directly (Android).\n\nCore:\n      - Removed all summary comments, because in 95% of cases it does not make sense.\n      - Removed SignAssembly.\n      - Fixed incorrect loading of modules in runtime mode.\n      - Fixed IndexOutOfRangeException when remove an item with empty filter.\n      - Added the ability to use predefined parameters with an IIocContainer.\n      - Added the IIocContainerOwnerViewModel interface.\n      - Added the IParentAwareViewModel interface.\n      - Added the TryGetViewModelById method to the IViewModelProvider class.\n      - Added Initializing, Initialized events to IViewModelProvider that allows to intercept view model initialization process.\n      - Added Preserving, Preserved, Restoring, Restored events to IViewModelProvider that allows to intercept state preservation\\restoration process.\n      - Added JetBrains.Annotations as source file instead of dll.\n      - Added TryGet, GetOrCreate, Get static methods to the ServiceProvider.\n      - Added the ApplicationSettings.NotificationCollectionBatchSize static property that allows to change default value of the BatchSize property.\n      - Added IsInitialized property to the IMvvmApplication.\n      - Added the GetViewAsync method with IViewMappingItem parameter to the IViewManager interface.\n      - Added PlatformType.WinRTPhone and PlatformType.XamarinFormsWinRTPhone constants.\n      - Changed the ItemsSource property type from IList<T> to INotifiableCollection<T> in IGridViewModel and IMultiViewModel interfaces.\n      - Now the SuspendNotifications method suspends properties and collection notifications for the GridViewModel class.\n      - Now all bootstrappers return by default all assemblies without a filter.\n      - Now the WindowViewMediatorBase class invokes the OnNavigatingFrom method.\n\nBinding:\n      - Added interpolated strings support (https://msdn.microsoft.com/en-us/library/dn961160.aspx).\n      - Added the ability to clear source value for binding if it implements IDisposable interface.\n      - Added null check when invoke an instance method.\n      - Added automatic registration of all implementations of the IDataTempateSelector interface.\n      - Added the ability to traverse binding expression tree in pre-order or post-order way.\n      - Added the GetView alias for the ViewModelToViewConverter.\n      - Added BindingBuilderExtensions.TryGetDefaultBindingMember method.\n      - Added enum converter that converts a string value to an enum value.\n      - Added the SetSingleValue method to the IBindingMemberInfo interface that allows to set value without array.\n      - Added the ability to use OneTime scope in binding expression (Text Property + $OneTime(GetOneTimeValue(Property1))).\n      - Added BindingServiceProvider.DisableConverterAutoRegistration and BindingServiceProvider.DisableDataTemplateSelectorAutoRegistration properties.\n      - Added the AttachedBindingMember.TrySetRaiseAction method that allows to set action that is invoked by INotifiableAttachedBindingMemberInfo.Raise method.\n      - Replaced the 'Format' method from resource method call to string.Format() method call.\n      - Reduced memory usage for 'src' and 'self' resources.\n      - Changed algorithm of methods resolution for dynamic methods.\n      - Changed all attached member classes to abstract.\n      - Now the binding sets a value for data context, even if it is null.\n\nAndroid:\n      - Added the GetPageTitleDelegate attached member to ViewPager.\n      - Added the RestoreSelectedIndex attached member for TabLayout.\n      - Added the RestoreSelectedIndex attached member for TabHost and ViewPager.\n      - Added the DisableHierarchyListener attached member for ViewGroup that allows to remove the default IOnHierarchyChangeListener.\n      - Added the StartActivityDelegate attached member for Activity that allows to control navigation to another Activity.\n      - Added the CreateViewHolderDelegate attached member for RecyclerView that allows to create custom implementation of the ViewHolder class.\n      - Added the Initialize method to the IViewFactory interface.\n      - Added Filter property to IItemsSourceAdapter interface that allows to use adapter with AutoCompleteTextView.\n      - Added support for the standard menu (Android).\n      - Added the ability to use custom IPopupMenuPresenter to show popup menu.\n      - Added the ability to use custom implementation of IStableIdProvider interface for list adapters.\n      - Added support for AutoCompleteTextView.\n      - Added support for Snackbar.\n      - Added the ViewId property for all Fragments and Activities.\n      - Updated FindByNameMember method the method uses the root view instead of target view.\n      - Updated activity lifecycle events.\n      - Updated support libraries to 23.0.1.3.\n      - Now the activity mediator does not invoke the Dispose method when activity is destroyed.\n      - Changed algorithm of view creation: first try to create a view using android factories then create using own factory, this is necessary for AppCompat library.\n      - Changed the UserControl class to non abstract.\n      - Changed the view creation algorithm.\n      - Improved performance of the JavaObjectWeakReference class using JNI directly instead of wrapper method.\n      - Improved performance when selecting a template.\n      - Increased performance of ItemsSourceAdapter.\n      - Increased performance of ItemsSourcePagerAdapter.\n      - Increased performance of ItemsSourceRecyclerAdapter.\n\niOS:\n      - Added MasterView and DetailView attached members for the UISplitViewController.\n      - Added ClickEvent for UICollectionViewCell and UITableViewCell.\n      - Added PlatformExtensions.SetHasState and PlatformExtensions.GetHasState methods that allows to control the process of saving the state of the controller.\n      - Improved performance when selecting a template.\n      - Increased performance of CollectionViewSourceBase.\n      - Increased performance of TableViewSourceBase.\n\nXamarin.Forms:\n      - Fixed incorrect root page navigation.\n      - Added implemenation for the XamarinFormsExtensions.SendBackButtonPressed property.\n      - Updated Xamarin.Forms to 1.5.1.6471.\n\nOther:\n      - Added the ToastTemplateSelector attached member.\n      - Added back button handler for WinRT, WinPhone, XamForms platforms.",
  "requireLicenseAcceptance": false,
  "title": "MugenMvvmToolkit - WinForms",
  "verbatimVersion": "5.0.0",
  "version": "5.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#dependencygroup/mugenmvvmtoolkit",
          "@type": "PackageDependency",
          "id": "MugenMvvmToolkit",
          "range": "[5.0.0, 5.1.0)"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#MugenMvvmToolkit.WinForms.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3748,
      "fullName": "MugenMvvmToolkit.WinForms.nuspec",
      "length": 10698,
      "name": "MugenMvvmToolkit.WinForms.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net40-client/MugenMvvmToolkit.Binding.dll",
      "@type": "PackageEntry",
      "compressedLength": 107590,
      "fullName": "lib/net40-client/MugenMvvmToolkit.Binding.dll",
      "length": 256512,
      "name": "MugenMvvmToolkit.Binding.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net40-client/MugenMvvmToolkit.Binding.pdb",
      "@type": "PackageEntry",
      "compressedLength": 178223,
      "fullName": "lib/net40-client/MugenMvvmToolkit.Binding.pdb",
      "length": 779776,
      "name": "MugenMvvmToolkit.Binding.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net40-client/MugenMvvmToolkit.WinForms.dll",
      "@type": "PackageEntry",
      "compressedLength": 46080,
      "fullName": "lib/net40-client/MugenMvvmToolkit.WinForms.dll",
      "length": 98816,
      "name": "MugenMvvmToolkit.WinForms.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net40-client/MugenMvvmToolkit.WinForms.pdb",
      "@type": "PackageEntry",
      "compressedLength": 61565,
      "fullName": "lib/net40-client/MugenMvvmToolkit.WinForms.pdb",
      "length": 267776,
      "name": "MugenMvvmToolkit.WinForms.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#content/net40-client/ViewBinder.cs.pp",
      "@type": "PackageEntry",
      "compressedLength": 260,
      "fullName": "content/net40-client/ViewBinder.cs.pp",
      "length": 511,
      "name": "ViewBinder.cs.pp"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net45/MugenMvvmToolkit.Binding.dll",
      "@type": "PackageEntry",
      "compressedLength": 108346,
      "fullName": "lib/net45/MugenMvvmToolkit.Binding.dll",
      "length": 258560,
      "name": "MugenMvvmToolkit.Binding.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net45/MugenMvvmToolkit.Binding.pdb",
      "@type": "PackageEntry",
      "compressedLength": 178916,
      "fullName": "lib/net45/MugenMvvmToolkit.Binding.pdb",
      "length": 783872,
      "name": "MugenMvvmToolkit.Binding.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net45/MugenMvvmToolkit.WinForms.dll",
      "@type": "PackageEntry",
      "compressedLength": 46184,
      "fullName": "lib/net45/MugenMvvmToolkit.WinForms.dll",
      "length": 98816,
      "name": "MugenMvvmToolkit.WinForms.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#lib/net45/MugenMvvmToolkit.WinForms.pdb",
      "@type": "PackageEntry",
      "compressedLength": 61386,
      "fullName": "lib/net45/MugenMvvmToolkit.WinForms.pdb",
      "length": 265728,
      "name": "MugenMvvmToolkit.WinForms.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#content/net45/ViewBinder.cs.pp",
      "@type": "PackageEntry",
      "compressedLength": 260,
      "fullName": "content/net45/ViewBinder.cs.pp",
      "length": 511,
      "name": "ViewBinder.cs.pp"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.25.01.54.42/mugenmvvmtoolkit.winforms.5.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "mugen",
    "mvvm",
    "toolkit",
    "binding",
    "wpf",
    "winforms",
    "android",
    "windows",
    "phone",
    "winrt",
    "cross",
    "platform",
    "ios"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}