{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.07.26.06/injectionmap.1.3.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Christian Walpen",
  "catalog:commitId": "293d9c41-c4c5-4f96-9ea5-63722c1a762b",
  "catalog:commitTimeStamp": "2015-02-05T07:26:06.6909318Z",
  "created": "2014-05-01T20:12:53.51Z",
  "description": "InjectionMap is a very small and extremely lightweight IoC/DI container for .NET.  \nInjectionMap allows loose coupling betweeen a client's dependencies and its own behaviour. InjectionMap promotes reusability, testability and maintainability of any part of an application.\n\n- InjectionMap uses type mapping to reference the key/reference and the implementation. \n- Instances are resolved using reflection or can be provided through a callback whitch allows you to create the instance in your own code.\n- It suports a fluent syntax to help keep the code simple, small and clean.\n- Injection constructors can be marked with attributes.\n- Parameters for constructors can be injected or passed at the time of mapping or as expressions.\n- InjectionMap is very simple and straightforward.\n\nBugs, issues or feature wishes can submitted on https://github.com/InjectionMap/InjectionMap on the issues page or feel free to fork the project and send a pull request.",
  "iconUrl": "https://github.com/InjectionMap/InjectionMap/raw/master/assets/InjectionMap.ico",
  "id": "InjectionMap",
  "isPrerelease": false,
  "language": "",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/InjectionMap/InjectionMap/raw/master/License.txt",
  "packageHash": "QQZu6OUBcqxJyPRnX3N00i50lk75EK+wCMCCgTBdLj1Rq3n7+a6UFT0iAfoNBus4iWwVtGxU7LSQ4Le+0S7AKQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18454,
  "projectUrl": "http://wicked-flame.blogspot.ch/p/injectionmap.html",
  "published": "2014-05-01T20:12:53.51Z",
  "releaseNotes": "- Fixed choosing correct constructor to compose\n- Rename MappingOption to MappingConfiguration\n- Refactored IBindingExpression<T>.WithOption(...) to IBindingExpression<T>.WithConfiguration(...)\nRemoved Clean<T>() from InjectionResolver",
  "requireLicenseAcceptance": false,
  "summary": "A small and lightweight IoC/DI container for .NET.",
  "title": "InjectionMap",
  "version": "1.3.5",
  "tags": [
    "InjectionMap",
    "IoC",
    "DI"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}