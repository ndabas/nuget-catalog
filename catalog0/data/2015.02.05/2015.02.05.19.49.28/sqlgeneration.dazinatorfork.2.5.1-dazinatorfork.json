{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.19.49.28/sqlgeneration.dazinatorfork.2.5.1-dazinatorfork.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dazinator",
  "catalog:commitId": "fc5f3961-d411-4b28-9d86-8a930acb3a2a",
  "catalog:commitTimeStamp": "2015-02-05T19:49:28.3273393Z",
  "copyright": "Copyright 2014",
  "created": "2014-07-07T19:39:08.057Z",
  "description": "A fork of the SQLGeneration code base.",
  "id": "SQLGeneration.DazinatorFork",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "jy0bboE1v+pGXj1P76F903ykjzuvNjv1OVca+fgUuCoRUmR2Vmu3dZp1m1Vv4X5YmlI82UoH7BhrzcLy6DQfoA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 50553,
  "projectUrl": "https://github.com/dazinator/SQLGeneration",
  "published": "2014-07-07T19:39:08.057Z",
  "releaseNotes": "Can now parse SQL that contains multiple commands, when they are terminated with a semicolon.",
  "requireLicenseAcceptance": false,
  "title": "SQLGeneration (DazinatorFork)",
  "version": "2.5.1-dazinatorfork",
  "tags": [
    "SQL",
    "generation",
    "builder",
    "sql",
    "parser",
    "sqlparser",
    "building",
    "command",
    "select",
    "insert",
    "update",
    "delete"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}