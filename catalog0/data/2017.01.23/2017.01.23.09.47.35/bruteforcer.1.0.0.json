{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.23.09.47.35/bruteforcer.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Artur Kipel",
  "catalog:commitId": "a6340ec1-016e-4ee1-837f-ebef1f1eee79",
  "catalog:commitTimeStamp": "2017-01-23T09:47:35.8625713Z",
  "created": "2017-01-23T09:46:53.013Z",
  "description": "There are two classes in the namespace BruteForcer: DictionaryOfPasswordsCreator and BruteForcer.\n\t  DictionaryOfPasswordsCreator class helps to generate all combinations in given alphabet with different conditions.  \t  \n\t  BruteForcer class helps to pick over all possible passwords in asynchronous way. It can be very useful for test covering with all possible values. \n\t  It is handy to generate dictionary of passwords with DictionaryOfPasswordsCreator and than use this class to pick over this dictionary with BruteForcer class.",
  "id": "BruteForcer",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "listed": true,
  "packageHash": "7Ve9T+m72mc/1tM+zryjjaN2TumOXYFp5X/yxqsKUD3w3l58i+btaJFOc4aICbiiNyqloyHDrh7Yhm7/5QudIQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18616,
  "projectUrl": "https://github.com/JohnyWaster/BruteForcer",
  "published": "2017-01-23T09:46:53.013Z",
  "requireLicenseAcceptance": false,
  "summary": "Helps to generate and pick over all combinations of letters from given alphabet with different conditions.",
  "title": "BruteForcer",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.23.09.47.35/bruteforcer.1.0.0.json#BruteForcer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 600,
      "fullName": "BruteForcer.nuspec",
      "length": 1310,
      "name": "BruteForcer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.23.09.47.35/bruteforcer.1.0.0.json#lib/portable-net45%2Bnetcore45%2Bwpa81%2Bwp8/BruteForcer.dll",
      "@type": "PackageEntry",
      "compressedLength": 12624,
      "fullName": "lib/portable-net45%2Bnetcore45%2Bwpa81%2Bwp8/BruteForcer.dll",
      "length": 32256,
      "name": "BruteForcer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.23.09.47.35/bruteforcer.1.0.0.json#lib/portable-net45%2Bnetcore45%2Bwpa81%2Bwp8/BruteForcer.XML",
      "@type": "PackageEntry",
      "compressedLength": 1579,
      "fullName": "lib/portable-net45%2Bnetcore45%2Bwpa81%2Bwp8/BruteForcer.XML",
      "length": 11978,
      "name": "BruteForcer.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.23.09.47.35/bruteforcer.1.0.0.json#content/Example.cs.txt",
      "@type": "PackageEntry",
      "compressedLength": 1567,
      "fullName": "content/Example.cs.txt",
      "length": 5741,
      "name": "Example.cs.txt"
    }
  ],
  "tags": [
    "password",
    "generator",
    "n-ary",
    "number",
    "system",
    "brute",
    "forcer",
    "pick",
    "over",
    "multithreading",
    "all",
    "combinations",
    "automatic",
    "test",
    "cover",
    "alphabet",
    "crossplatform"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}