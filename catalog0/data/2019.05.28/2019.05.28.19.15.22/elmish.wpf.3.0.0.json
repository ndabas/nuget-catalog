{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "jsacks, cmeeren",
  "catalog:commitId": "7c95256a-7271-4c51-a79d-63c3a35be195",
  "catalog:commitTimeStamp": "2019-05-28T19:15:22.3790541Z",
  "created": "2019-05-28T19:10:46.43Z",
  "description": "F# bindings for using Elmish in WPF",
  "id": "Elmish.WPF",
  "isPrerelease": false,
  "lastEdited": "2019-05-28T19:14:56.547Z",
  "licenseUrl": "https://github.com/elmish/Elmish.WPF/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "vgZAc8euQ65NIDqorlmtaW0iBBScQxJDEXt381bV7nF1+p9xrAg+S8Y/PatilABZq2kR5rlTcP1WyG6UoMAyPw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 117191,
  "projectUrl": "https://github.com/elmish/Elmish.WPF",
  "published": "2019-05-28T19:10:46.43Z",
  "releaseNotes": "- The most massive (and hopefully useful) update yet!\n- Breaking: Overload-based syntax for `Binding`. The old `Binding` module is deprecated and renamed to `BindingFn`.  The new `Binding` is a static class with static methods, providing many overloads for flexibility. To migrate, replace all occurrences of `Binding.` with `BindingFn.` and follow the deprecation warnings.\n- Breaking: The `Elmish.WPF.Internal` namespace has been removed and everything in it that should actually be internal has been marked `internal`. This includes `ViewModel`.\n- Breaking: `Elmish.WPF.Internal.BindingSpec&lt;_,_&gt;` has been moved/renamed to `Elmish.WPF.Binding&lt;_,_&gt;`. It should thus be more pleasant to use in type annotations.\n- Breaking: `Elmish.WPF.Utilities.ViewModel.designInstance` has been moved to `Elmish.WPF.ViewModel`. Furthermore, it returns `obj` since `ViewModel` is internal.\n- Breaking: Removed `twoWayIfValid`. It hasn’t worked for a while due to core Elmish internals, and was of suspect utility anyway.\n- New: Many more helpful `Binding` signatures available due to the new overload-based syntax.\n- New: More general `Binding.subModel` and `Binding.subModelSeq` overloads that allow a more idiomatic Elm architecture even with static views. For background information, see [#86](https://github.com/elmish/Elmish.WPF/issues/86) (the issue is otherwise outdated).\n- New: Sticky `subModelOpt` bindings that returns the last non-null model when model is `None` (useful when animating out stuff)\n- New: `elmEq` and `refEq` as useful equality defaults for lazy bindings. `elmEq` efficiently uses reflection to do a comparison for each member that is referential for reference types except strings, and structural for strings and value types.\n- New: `Program.mkSimpleWpf` and `Program.mkProgramWpf` with more WPF-friendly signatures.\n- New: `Program.mkProgramWpfWithCmdMsg` for easily following the `CmdMsg` pattern to allow testable commands. See the FAQ in the readme for details.\n- New: `Cmd.showWindow` helper to open a new window.\n- New: Slow calls can be logged (configurable threshold).\n- New: Made available `Program.startElmishLoop` which is a low-level function that starts an Elmish loop given an Elmish `Program` and a WPF `FrameworkElement`. You probably won’t need it.\n- Improvement: Logs now indicate the binding path.\n- Improvement: Possibly better performance due to internals now using `ValueOption` instead of `Option`.\n- Improvement: Finally added (lots of) unit tests, so confidence of correct functionality is higher. (No critical bugs were found when creating the tests.)",
  "title": "Elmish.WPF",
  "verbatimVersion": "3.0.0",
  "version": "3.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#dependencygroup/elmish",
          "@type": "PackageDependency",
          "id": "Elmish",
          "range": "[3.0.0, 4.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[4.6.0, 5.0.0)"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#lib/net461/Elmish.WPF.xml",
      "@type": "PackageEntry",
      "compressedLength": 5253,
      "fullName": "lib/net461/Elmish.WPF.xml",
      "length": 61921,
      "name": "Elmish.WPF.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#lib/net461/Elmish.WPF.dll",
      "@type": "PackageEntry",
      "compressedLength": 99133,
      "fullName": "lib/net461/Elmish.WPF.dll",
      "length": 277504,
      "name": "Elmish.WPF.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#Elmish.WPF.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1627,
      "fullName": "Elmish.WPF.nuspec",
      "length": 3407,
      "name": "Elmish.WPF.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.28.19.15.22/elmish.wpf.3.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9472,
      "fullName": ".signature.p7s",
      "length": 9472,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "F#",
    "fsharp",
    "Elmish",
    "Elm"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}