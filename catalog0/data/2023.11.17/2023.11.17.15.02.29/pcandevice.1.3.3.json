{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ioannis Deligiannis",
  "catalog:commitId": "56794018-a969-4d0c-bd19-94feea520bfc",
  "catalog:commitTimeStamp": "2023-11-17T15:02:29.5313062Z",
  "copyright": "Copyright (C) 2021 Ioannis Deligiannis | Devcoons Blog",
  "created": "2021-11-10T11:23:09.893Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json#deprecation",
    "message": "Copyrights issue with PCAN",
    "reasons": [
      "Other"
    ]
  },
  "description": "PeakCAN USB device helper class for C#\n\n## How to use this nuget package?\n\n```\nusing System.Collections.Generic;\nusing PCANDevice;\nnamespace ConsoleApp\n{\n    class Program\n    {\n        public static int callback(object[] args)\n        {\n            TPCANMsg msg = (TPCANMsg)args[0];\n\n            return 0;\n        }\n\n\n        static void Main(string[] args)\n        {\n            List<ushort> interfaces = PCANDevice.PCANManager.GetAllAvailable();\n            PCANDevice.PCANManager pcan = new PCANDevice.PCANManager();\n\n            var oo = pcan.Connect(interfaces[0], PCANDevice.TPCANBaudrate.PCAN_BAUD_500K);\n            pcan.AddReceiveCallback(callback);\n            pcan.SendFrame(1, 8, new byte[] { 0, 1, 2, 3, 4, 5, 6, 7 });\n            pcan.SendFrameExt(0x7ff1, 8, new byte[] { 0, 1, 2, 3, 4, 5, 6, 7 });\n            pcan.ActivateAutoReceive();\n\n            ...\n            ...\n            ...\n\n\n            pcan.Disconnect();\n        }\n    }\n}\n```",
  "id": "PCANDevice",
  "isPrerelease": false,
  "lastEdited": "2023-11-17T15:02:16.277Z",
  "licenseFile": "LICENSE.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": false,
  "packageHash": "5hw7NX4kwiv7mQdFhAAtk7E4VXxDAUYC2Tmpr8JCCroJZoMYPzCW4mRGJlmGuIhFeymySIUbT6tNH/KOM+zNgQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 254643,
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.3.3",
  "version": "1.3.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json#PCANDevice.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 824,
      "fullName": "PCANDevice.nuspec",
      "length": 1710,
      "name": "PCANDevice.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json#lib/netstandard2.0/PCANDevice.dll",
      "@type": "PackageEntry",
      "compressedLength": 241655,
      "fullName": "lib/netstandard2.0/PCANDevice.dll",
      "length": 532992,
      "name": "PCANDevice.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json#LICENSE.md",
      "@type": "PackageEntry",
      "compressedLength": 472,
      "fullName": "LICENSE.md",
      "length": 773,
      "name": "LICENSE.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.11.17.15.02.29/pcandevice.1.3.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9459,
      "fullName": ".signature.p7s",
      "length": 9459,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}