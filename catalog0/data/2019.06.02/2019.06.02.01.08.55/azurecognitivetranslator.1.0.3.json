{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "AzureCognitiveTranslator",
  "catalog:commitId": "e8a87fef-2849-4c82-bd17-d6ea5689cbce",
  "catalog:commitTimeStamp": "2019-06-02T01:08:55.2119292Z",
  "created": "2019-06-02T01:02:30.5Z",
  "description": "Call CognitiveServices Translator API 3.0\n* This Nuget can help you on Batch-Translation, easily and quickly.\n1. Create an instance of Translator with your BaseUrl and Key:\nTranslator translator = new Translator(resources.MyAzureCognitiveBaseUrl, Secret.MyAzureCogitiveKey);\n2. Add content to the Translator:\ntranslator.AddContent(\"哈啰，\");//here you can add many times, more than 100, 1000, 10000. You can also set the property \"Contents\" instead.\n3. Get results aysnc:\nList<string> translation = await translator.TranslateAsync(\"en\");",
  "id": "AzureCognitiveTranslator",
  "isPrerelease": false,
  "lastEdited": "2019-06-02T01:08:41.14Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "Fz8OtrCyZ7dV5c9GPd5PEa3Y5ymvjN0tQOjXjh6kbMffZdtm2Wc+SoykddiOtrakoIY0/Y4yZy7n4aeQU1pkgg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18770,
  "projectUrl": "https://github.com/mujiannan/AzureCognitiveTranslator",
  "published": "2019-06-02T01:02:30.5Z",
  "releaseNotes": "Delete the property \"LimitedThreadsCount\"",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.3",
  "version": "1.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[12.0.2, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json#AzureCognitiveTranslator.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 747,
      "fullName": "AzureCognitiveTranslator.nuspec",
      "length": 1441,
      "name": "AzureCognitiveTranslator.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json#lib/netstandard2.0/AzureCognitiveTranslator.dll",
      "@type": "PackageEntry",
      "compressedLength": 6342,
      "fullName": "lib/netstandard2.0/AzureCognitiveTranslator.dll",
      "length": 14336,
      "name": "AzureCognitiveTranslator.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 47,
      "fullName": "LICENSE.txt",
      "length": 48,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.02.01.08.55/azurecognitivetranslator.1.0.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}