{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.22.50.28/nlist.3.8.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Truncon",
  "catalog:commitId": "abaf9f38-003a-4484-9d9a-e86a318faeaf",
  "catalog:commitTimeStamp": "2015-02-02T22:50:28.5902773Z",
  "copyright": "Copyright 2012",
  "created": "2012-12-31T14:49:49.623Z",
  "description": "NList brings an enormous number of powerful, STL-like algorithms to the .NET platform for processing indexable collections. There is a handlebars.js-like text generator. It has a powerful IComparer builder. There is a DefaultDictionary class. There is a class to convert an object into a dictionary of its properties.",
  "id": "NList",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://nlist.codeplex.com/license",
  "packageHash": "wbPb2B5z8Uo+pLBPi7afZuF6QSUhTQJKj9h4xm2UakALto3q07oGJiZhlkzfrEjrCd691faX3Sxc2UDqOkYtJA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 109843,
  "projectUrl": "http://nlist.codeplex.com/",
  "published": "2012-12-31T14:49:49.623Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "title": "NList",
  "version": "3.8.4",
  "tags": [
    "algorithm",
    "array",
    "dictionary",
    "ilist",
    "list",
    "linq",
    "reversed",
    "stl",
    "sublist",
    "convert",
    "format",
    "formatting",
    "substitution",
    "orderby",
    "thenby",
    "compund",
    "comparer",
    "converter",
    "conversion",
    "default",
    "read-only",
    "readonly",
    "key",
    "key-comparer",
    "key-comparison",
    "null",
    "reverse",
    "sub-list",
    "sub-string",
    "string",
    "substring",
    "type",
    "typed",
    "typing",
    "combine",
    "transform",
    "set",
    "difference",
    "where",
    "intersection",
    "merge",
    "sort",
    "partition",
    "random",
    "replace",
    "rotate",
    "union",
    "unique",
    "disjoint",
    "equality",
    "equalitycomparer",
    "binary",
    "search",
    "comparison",
    "contains",
    "duplicates",
    "sequence",
    "copy",
    "sample",
    "count",
    "fill",
    "foreach",
    "for-each",
    "heap",
    "heapify",
    "nth-element",
    "lower-bound",
    "lowerbound",
    "observablecollection",
    "collection",
    "upper-bound",
    "upperbound",
    "permutation",
    "overwrite",
    "shuffle",
    "random-shuffle",
    "shell",
    "stable",
    "swap",
    "handlebars",
    "mustache",
    "text",
    "generator",
    "generation",
    "priority",
    "queue"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}