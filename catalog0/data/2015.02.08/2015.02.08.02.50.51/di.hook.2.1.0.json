{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.02.50.51/di.hook.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Punit Ganshani",
  "catalog:commitId": "f9044971-de62-458f-b2ab-7544de576d27",
  "catalog:commitTimeStamp": "2015-02-08T02:50:51.1565708Z",
  "copyright": "Copyright Punit Ganshani, 2014",
  "created": "2014-12-16T12:50:34.32Z",
  "description": "dI.Hook is a Hook Repository and Container using AOP",
  "iconUrl": "http://www.ganshani.com/wp-content/uploads/2012/07/di2.png",
  "id": "dI.Hook",
  "isPrerelease": false,
  "lastEdited": "2014-12-16T12:54:41.58Z",
  "licenseUrl": "https://raw.githubusercontent.com/punitganshani/dI.Hook/master/LICENSE",
  "packageHash": "GMD0/L+kB6oig1ECoSA9RaSpN778/nR91b3Wu+4EeA1RGh9ZhJB6yQWBLvdwElAqX7mRLvVhcyl5yakTvSCe1w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20978,
  "projectUrl": "https://github.com/punitganshani/dI.Hook",
  "published": "2014-12-16T12:50:34.32Z",
  "releaseNotes": "Unsigned assembly",
  "requireLicenseAcceptance": false,
  "summary": "Light-weight IoC and DI engine to define hooks via code or configuration, call them dynamically or conditionally and dispose them when not required",
  "title": "dI.Hook",
  "version": "2.1.0",
  "tags": [
    "c#",
    "dependency",
    "injection",
    "container",
    "aop",
    "repository",
    "hook",
    "configuration",
    "invoke",
    "parallel",
    "dynamic"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}