{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.09.47.47/memorycachet.0.2.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ufuk Hacıoğulları",
  "catalog:commitId": "897fcced-7b26-461e-b9c7-02bd33689514",
  "catalog:commitTimeStamp": "2015-02-03T09:47:47.1216525Z",
  "created": "2013-05-21T18:58:17.84Z",
  "description": "MemoryCacheT is a simple in-memory cache with eviction options.",
  "id": "MemoryCacheT",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "kIC+lE+TfLPv1kA+crxfy0Ct2+6k8xFh1W62457MPpHOyxm87svmAKkkNVP7gWSSdd1XPpRjsVNKVq1j32DYBg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37139,
  "projectUrl": "https://github.com/uhaciogullari/MemoryCacheT",
  "published": "2013-05-21T18:58:17.84Z",
  "requireLicenseAcceptance": false,
  "summary": "MemoryCacheT simply wraps System.Collections.Concurrent.ConcurrentDictionary class and offers some options for expiring elements.",
  "version": "0.2.2",
  "tags": [
    "caching"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}