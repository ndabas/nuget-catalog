{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.19.19.37.53/cronus.2.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nikolai Mynkow, Simeon Dimov, Blagovest Petrov",
  "catalog:commitId": "9b64b02a-f969-4423-9bd9-188aa3000bd0",
  "catalog:commitTimeStamp": "2016-03-19T19:37:53.4294906Z",
  "created": "2016-03-19T19:37:16.02Z",
  "description": "Elders.Cronus",
  "iconUrl": "https://raw.githubusercontent.com/Elders/Cronus/master/Cronus.png",
  "id": "Cronus",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/Elders/Cronus/blob/master/LICENSE",
  "listed": true,
  "packageHash": "tAe+0ioG4Ojr1p8QNMaOOlsltBEwdIzT0XKjgbkXJGxOpA3OnvlxpdEngZ4n5Sx1ecTYlw7fPKGsQweD5Agfpg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 157291,
  "projectUrl": "http://Elders.github.io/Cronus",
  "published": "2016-03-19T19:37:16.02Z",
  "releaseNotes": "Set default EventStreamIntegrityPolicy when Cronus starts.\nSend the publish delay directly with the EndpointMessage.\nWhen message is published we now attach GUID byte array as Base64 string in the message headers. Also if a message is schedules\nor published with delay the publish timestamp is also attached to the message headers.\nIntroduce EventStreamIntegrityPolicy which should take care about validation upon AggregateRoot loading. The resolvers only\napply InMemory fixes without writing to the database. At the moment this policy is a fact only in the UnitTests because we\nneed a configuration settings for this feature.",
  "requireLicenseAcceptance": false,
  "summary": "Elders.Cronus",
  "verbatimVersion": "2.6.0",
  "version": "2.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.19.19.37.53/cronus.2.6.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.19.19.37.53/cronus.2.6.0.json#dependencygroup/cronus.domainmodeling",
          "@type": "PackageDependency",
          "id": "Cronus.DomainModeling",
          "range": "[2.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.19.19.37.53/cronus.2.6.0.json#dependencygroup/liblog",
          "@type": "PackageDependency",
          "id": "LibLog",
          "range": "[4.2.4, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.19.19.37.53/cronus.2.6.0.json#dependencygroup/multithreading.scheduler",
          "@type": "PackageDependency",
          "id": "Multithreading.Scheduler",
          "range": "[1.1.0, )"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "DDD",
    "ES",
    "Event",
    "store",
    "sourcing"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}