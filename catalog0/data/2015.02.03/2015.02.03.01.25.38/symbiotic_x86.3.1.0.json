{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.01.25.38/symbiotic_x86.3.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Frozen Elephant Inc.,Eric Schneider",
  "catalog:commitId": "0e6d2b59-88f1-4869-887d-50eae21f53ba",
  "catalog:commitTimeStamp": "2015-02-03T01:25:38.515078Z",
  "copyright": "Copyright Â© 2011-2013 Frozen Elephant Inc.",
  "created": "2013-02-01T02:38:43.697Z",
  "description": "The main goal of this library is the simplify data access for Object Oriented programmers. This library provides a simple way to perform CRUD operations. It is not expected to work for everyone or every application. Currently works with SQL Server, Sqlite, My Sql and Oracle.\nI wanted something that would be simple to use, understand, and have very little impact on the code. With this library, you can have basic object CRUD working in less than three lines of code, and should require less than an hour to understand the library usage.\n\nI also wanted something that could easily be integrated into an existing project.\n\nThe basic concept is that you add a few attributes to your objects which explains the mapping to a database results column/s. You can also implement IDatabaseDefineSupport to provide the mapping details.\n\nThere a two main objects used to work with the database. ObjectLoader and ObjectWriter.",
  "iconUrl": "http://www.frozenelephant.com/Soda/Soda.ico",
  "id": "Symbiotic_x86",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "NU1DsO2w69H9B9tW94yzUO6YiLWj+7PqwmbqVV573SMgwLru3uvuHaGIDYN5hD7S7K0uGSgj4QZdveQA+k5XLA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4121490,
  "projectUrl": "http://www.frozenelephant.com/symbiotic.html",
  "published": "2013-02-01T02:38:43.697Z",
  "releaseNotes": "20-21 Dec-2012\nAdded ExecuteNonQuery, and ExecuteScalar support.\nStarted wWorking on Optimistic Concurrency.\n\n29-Dec-2012\nStill working on Optimistic Concurrency support.\n\nRefactoring Sql Builders to create parameterized versions, and changed the ObjectWriter to use parameters.\nMoving to parameters is safer and may also make the ISqlBuilder interface cleaner. \nParameterized sql is typically cached by the database.\n\nMore Oracle Issues:\nParameters must be in the same order; unless you set Command.bindByNames = true (requires direct reference)\nParameter names cannot use reserved words.\nOrcale does not like the bind identifiers in the parameter names.\n\n27-Jan-2013\nStill working on Optimistic Concurrency support, Sql Server and Oracle working so far.\n\n28-Jan-2013\nOptimistic Concurrency support working for My Sql. You must be using version 5.6>\nAlso the managment client does not seem to allow you create the new TimeStamp with millisecond support.\nIt must be done via script.\n\nNeed to change sql builders to return id as an output parameter.\n\nAdded a test project for Sql Server CE, may require some work. DateTime2, Scope_Indentity, and batch statements does not seem to be supported. \nMARS Support may not be supported also. Will probably put this on the back burner for a while.\n\n29-Jan-2013\nCode analysis clean-ups. Prep for deployment.",
  "requireLicenseAcceptance": false,
  "summary": "The main goal of this library is to simplify data access for Object Oriented programmers. This library provides a simple way to perform CRUD operations.",
  "title": "Symbiotic ORM x86",
  "version": "3.1.0",
  "tags": [
    "SODA",
    "Symbiotic",
    "ORM",
    "Micro-ORM",
    "Sql",
    "Server",
    "MySql",
    "Sqlite",
    "Oracle",
    "Frozen",
    "Elephant"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}