{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Stephen Hodgson, Roger Pincombe",
  "catalog:commitId": "c9b1c556-c3c8-4eec-aff8-05acddadef6a",
  "catalog:commitTimeStamp": "2024-09-14T21:35:08.5759274Z",
  "copyright": "2024",
  "created": "2024-09-14T21:31:59.28Z",
  "description": "A simple C# .NET client library for OpenAI to use though their RESTful API.\nIndependently developed, this is not an official library and I am not affiliated with OpenAI.\nAn OpenAI API account is required.\n\nForked from [OpenAI-API-dotnet](https://github.com/OkGoDoIt/OpenAI-API-dotnet).\nMore context [on Roger Pincombe's blog](https://rogerpincombe.com/openai-dotnet-api).",
  "iconFile": "Assets/OpenAI-DotNet-Icon.png",
  "id": "OpenAI-DotNet",
  "isPrerelease": false,
  "lastEdited": "2024-09-14T21:34:36.83Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "XEB2ayQYe+HKURSkOWKoNNynijT/Sz8h3C1noC6n/y/Dh6jvXYBSSo24j8Wh75Ys4HJegCuvGQ4KJnitBxfEXQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 205356,
  "projectUrl": "https://github.com/RageAgainstThePixel/OpenAI-DotNet",
  "published": "2024-09-14T21:31:59.28Z",
  "readmeFile": "README.md",
  "releaseNotes": "Version 8.2.5\n- Fixed ResponseObjectFormat deserialization when maxNumberOfResults is null\nVersion 8.2.4\n- Fixed ResponseObjectFormat deserialization when set to auto\n- Added RankingOptions to FileSearchOptions\n- Fixed potential memory leaks when uploading files to various endpoints\n- Added timestamp values to BaseResponse to calculate rate limits\nVersion 8.2.2\n- Added generic parameters to methods that support structured output\nVersion 8.2.1\n- Fixed a typo in the Azure OpenAI URL base endpoint\nVersion 8.2.0\n- Added structured output support\n- Added support for Azure OpenAI assistants\n- Fixed Azure OpenAI Id parsing for events\n- Fixed Assistant.CreateThreadAndRunAsync to properly copy assistant parameters\n- Removed stream parameter from CreateThreadAndRunRequest and CreateRunRequest\n  - They were overridden by the presence of an IStreamEventHandler anyway\nVersion 8.1.2\n- Added constructor overloads to Tool and Function classes to support manually adding tool calls in the conversation history\nVersion 8.1.1\n- Added overloads to Assistant streaming event callbacks to include event name: Func<String, IServerSentEvent, Task>\nVersion 8.1.0\n- Fixed streaming event race conditions where the subscriber to the stream would finish before steam events were executed\n- Refactored streaming events callbacks from Action<IServerSentEvent> to Func<IServerSentEvent, Task>\n- Added Exception data to OpenAI.Error response\n- Added ChatEndpoint.StreamCompletionAsync with Func<ChatResponse, Task> overload\nVersion 8.0.3\n- Fixed Thread.MessageResponse and Thread.RunStepResponse Delta stream event objects not being properly populated\n- Added Thread.MessageDelta.PrintContent()\n- Added additional unit tests for delta objects\nVersion 8.0.2\n- Fixed Thread.Message.Attachement serialization\n- Fixed CreateAssistantRequest to properly copy all override assistant properties\n- Fixed some objects that are chunked, were not properly being appended to the final object\n- Added FileSearchOptions to Tool.FileSearch\n- Added some additional constructor overloads for CodeInterpreterResources\n- Added some additional constructor overloads for VectorStoreRequest\n- Thread.DeleteAsync and Assistant.DeleteAsync now fetch the latest before deleting when deleteToolResources is also requested\n- Refactored the way Function handles reflected invocations for both synchronous and asynchronous calls\n  - Function.InvokeAsync will now properly also call synchronous invocations in the tool call collection\n- Refactored Threads/Assistant Unit Tests\nVersion 8.0.1\n- Fixed Thread.Run.Status enum ordering\nVersion 8.0.0\n- Updated Assistants Beta v2\n- Added support for specifying project id\n- Added BatchEndpoint\n- Added VectorStoresEndpoint\n- Added Message.ctr to specify specific tool call id, function name, and content\n- Renamed OpenAI.Images.ResponseFormat to OpenAI.Images.ImageResponseFormat\n- Changed ThreadEndpoint.CancelRunAsync return type from RunResponse to bool\n- Fixed Json defined Tools/Functions being improperly added to tool cache\n- Added Tool.TryUnregisterTool to remove a tool from the cache\nVersion 7.7.8\n- Updated OpenAIClientSettings.ctr to allow for domain http protocol override (i.e. http://localhost:8080 or http://0.0.0.0:8080)\n- Updated OpenAIClientSettings.BaseRequest public for easier access when implementing custom proxies.\n- Updated OpenAIClientSettings.IsAzureDeployment public for easier access when implementing custom proxies.\nVersion 7.7.7\n- Updated static models list\n  - Added gpt-4-turbo\n  - Marked some models as deprecated since they are no longer available\n- Added temperature to CreateRunRequest and CreateThreadAndRunRequest\n- Fixed temperature to string conversion to be invariant culture for audio requests\n- Fixed type checking built in function tool calls\n- Fixed duplicate registration of function tool calls\nVersion 7.7.6\n- Added support for Audio Transcription and Translation verbose json output\n  - Added support for timestamp granularities for segments and words\n  - Added AudioResponse\n  - Marked CreateTranscriptionAsync obsolete\n  - Added CreateTranscriptionTextAsync\n  - Added CreateTranscriptionJsonAsync\n  - Marked CreateTranspationAsync obsolete\n  - Added CreateTranslationTextAsync\n  - Added CreateTranslationJsonAsync\n- Updated SpeechResponseFormat to include wav and pcm\nVersion 7.7.5\n- Allow FunctionPropertyAttribute to be assignable to fields\n- Updated Function schema generation\n  - Fall back to complex types, and use $ref for discovered types\n  - Fixed schema generation to properly assign unsigned integer types\nVersion 7.7.4\n- Fixed Threads.RunResponse.WaitForStatusChangeAsync timeout\nVersion 7.7.3\n- Updated ChatRequest toolChoice to only send type and name of function, reducing token usage\nVersion 7.7.2\n- Added FunctionParameterAttribute to help better inform the feature how to format the Function json\nVersion 7.7.1\n- More Function utilities and invoking methods\n  - Added FunctionPropertyAttribute to help better inform the feature how to format the Function json\n  - Added FromFunc<,> overloads for convenance\n  - Fixed invoke args sometimes being casting to wrong type\n  - Added additional protections for static and instanced function calls\n  - Added additional tool utilities:\n    - Tool.ClearRegisteredTools\n    - Tool.IsToolRegistered(Tool) - Tool.TryRegisterTool(Tool)\n  - Improved memory usage and performance by propertly disposing http content and response objects\n  - Updated debug output to be formatted to json for easier reading and debugging\nVersion 7.7.0\n- Added Tool call and Function call Utilities and helper methods\n  - Added FunctionAttribute to decorate methods to be used in function calling\n  - Chat.Message.ToolCalls can be directly invoked using Function.Invoke() or Function.InvokeAsync(CancellationToken)\n  - Assistant tool call outputs can be easily generated using assistnat.GetToolOutputAsync(run.RequiredAction.SubmitToolOutputs.ToolCalls)\n  - Check updated docs for more details and examples\n- Fixed ChatRequest seed parameter not being set correctly\nVersion 7.6.5\n- Updated api key prefix checks to only be enforced for OpenAI domain\nVersion 7.6.4\n- Removed obsolete completions and edit endpoints\nVersion 7.6.3\n- Added RetrieveFileStreamAsync method to Files.FilesEndpoint\n- Added new Embedding Models\n  - Added Model.Dimensions property\n- Added Threads.Run and Threads.RunStep Usage properties\n- Added CodeInterpreter Outputs to RunStepDetails.ToolCalls\n- Added Retrieval Outputs to RunStepDetails.ToolCalls\nVersion 7.6.2\n- Fixed parameter name in Threads.CreateMessageRequest\n- Added Stream overload to Threads.FileUploadRequest\nVersion 7.6.1\n- Include Output in Threads.FunctionCall\nVersion 7.6.0\n- Changed License to MIT\n- Added OpenAI.Chat logprob parameters\n- Added SourceLink references for debugging\n- Added Docfx build workflow\nVersion 7.5.0\n- Changed OpenAIClient to implement IDisposable.\n  - Disposing OpenAICLient is now required if you're not passing a custom HttpClient.\n  - If passing an custom HttpClient, it will need to be expressly disposed after use.\n- Updated Chat.Message.CopyFrom Content check from string.IsNullOrEmpty to null check.\nVersion 7.4.4\n- Updated Docs\nVersion 7.4.3\n- Updated FileResponse.Size int -> int?\nVersion 7.4.2\n- Fixed missing Threads.Message.Content.ImageFile property.\n- Marked OpenAI.Completions Obsolete\nVersion 7.4.1\n- Fixed AssistantExtension.UploadFileAsync spelling error with file purpose.\nVersion 7.4.0\n- Refactored OpenAI.Threads.LastRunError -> OpenAI.Error for more generic use in future.\n- Fixed OpenAI.Threads.Annotations namespace\n- Fixed OpenAI.Threads.ContextText namespace\nVersion 7.3.8\n- Added Chat.Content.ctr overloads and implicit casting for easier usage\n- Internal refactoring of FilesEndpoint.DeleteFileAsync (better status checking)\n- Internal refactoring of FineTuningEndpoint to ensure we're properly setting response data\n- Updated unit tests\n- Updated docs\nVersion 7.3.7\n- Fixes streaming with tools not being property copied over\nVersion 7.3.6\n- Fixed ArgumentOutOfRangeException when streaming chat completion response contains more than one tool\nVersion 7.3.5\n- Added GetModerationChunkedAsync method in ModerationsEndpoint\n- Fixed streaming function tool serialization\nVersion 7.3.4\n- Fixed AudioTranslationRequest.Temperature type. int? -> float?\nVersion 7.3.3\n- Fixed Threads.FileCitation json property name\nVersion 7.3.2\n- Added detail parameter to ImageURL\nVersion 7.3.1\n- Fixed json serialization settings when EnableDebug is disabled\nVersion 7.3.0\n- Added AgentsEndpoint\n- Added ThreadsEndpoint\n- Updated ImagesEndpoint return types to ImageResult list\n- Updated FilesEndpoint.ListFilesAsync with optional purpose filter query parameter.\n- Refactored list responses with a more generic ListQuery and ListResponse<TObject> pattern\n  - EventList -> ListResponse<EventResponse>\n  - FineTuneJobList -> ListResponse<FineTuneJobResponse>\n- Standardized names for timestamps to have suffix: UnixTimeSeconds\n- Standardized response class names (existing classes depreciated)\n  - FileData -> FileResponse\n  - CompletionResult -> CompletonResponse\n  - Event -> EventResponse\n  - FineTuneJob -> FineTuneJobResponse\nVersion 7.2.3\n- Added support for reading RateLimit information from the Headers\nVersion 7.2.2\n- Fixed Image Generation for Azure\nVersion 7.2.1\n- Fixed a NRE with chat Message.ToString call when dynamic content is json element\n- Removed improper set accessors for Function.Arguments and Function.Parameters properties\n- Removed improper ChatResponse constructor\n- Fixed unit test names\n- Updated docs\nVersion 7.2.0\n- Updated chat endpoint features\n  - json mode\n  - gpt-vision\n  - reproducible outputs\n  - tool functions\nVersion 7.1.0\n- Convert Fine Tuning endpoint to latest (Breaking Change!)\n- Added Text to Speech endpoint\n- Updated Image endpoints with model parameters and support for Dall E 3\n- Removed Model type checks, and now lets api handle errors\nVersion 7.0.10\n- Fixed processing time string culture conversion when parsing double\nVersion 7.0.9\n- Fixed Model delete permission Unauthorized Access check\nVersion 7.0.8\n- Fixed AudioTranscriptionRequest.Temperature type. int? -> float?\n- Updated Moderations Categories and Scores with new metrics\nVersion 7.0.5\n- Fixed Message.Content serialization in Role.Function message history\nVersion 7.0.4\n- Fixed ChatRequest forced function calls\nVersion 7.0.3\n- Fixed chat streaming message copy from delta\nVersion 7.0.2\n- Only set response header properties if they exist\n- Remove OpenAIClient.ctr overload\nVersion 7.0.1\n- Fixed streaming chat functions\nVersion 7.0.0\n- Added function calling to chat models\nVersion 6.8.7\n- Added ToString and string operator to Moderation Scores\nVersion 6.8.6\n- Populated finish reason in streaming chat final message content\nVersion 6.8.5\n- Updated all method calls to take a Model as string\nVersion 6.8.3\n- Revert BaseEndpoint.GetUrl changes\nVersion 6.8.2\n- Misc internal fixes, formatting, and docs\nVersion 6.8.1\n- Updated basic and chat completions choices to default to empty string.\n- Fixed Completions.CompletionResult.ToString first completion index lookup\n- Update the HttpClient creation to set the PooledConnectionLifetime property per Microsofts recommendation.\nVersion 6.8.0\n- Removed Obsolete ChatPrompt\n- ChatEndpoint.StreamCompletionAsync will now also raise additional ChatResponse with completed Message\n- ChatEndpoint.StreamCompletionEnumerableAsync will now also raise additional ChatResponse with completed Message\n- Refactored all streaming endpoints to use a new string extension for centralized parsing of event stream data\n- Added optional paramter cancelJob to FineTuningEndpoint.StreamFineTuneEventsEnumerableAsync. Default is false.\n- Added optional parameter cancelJob to FineTuningEndpoint.StreamFineTuneEventsAsync. Default is false.\n- Added optional parameter deleteCachedFile to FileEndpoint.DownloadFileAsync. Defaults to false.\n- Updated Completions.LogProbabilities.TopLogProbabilities to properly use immutable IReadOnlyList<IReadOnlyDictionary<string, double>>\nVersion 6.7.4\n- Fixed Model.Permissions\n- Added Model.CreatedAt\nVersion 6.7.3\n- added missing IDisposable to audio requests\nVersion 6.7.2\n- Made it easier to specify a specific configuration file path\n- Added optional author name property to chat message\n- Added implicit string conversions to make ChatResponses easier to work with\n- Updated Docs\nVersion 6.7.1\n- Fixed parsing old env file format\n- Fixed parsing missing ORGANIZATION env variables\n- Fixed checking of CancellationToken.IsCancellationRequested in streaming endpoints\n- Updated Docs\nVersion 6.7.0\n- Deprecated ChatPrompt -> Message\n- Added Role enum for Chat.Messages and Chat.Delta\n- Updated ChatRequest constructor to use IEnumerable<Message> messages\n- Updated ChatRequest.Messages to IReadonlyList<Message>\n- Updated unit tests\nVersion 6.6.0\n- Added ResponseFormat to ImageGenerationRequests\n- Refactored Image Requests with AbstractBaseImageRequest\nVersion 6.5.3\n- Added missing ConfigureAwait to await calls\nVersion 6.5.2\n- Updated SetResponseData to better reflect the difference between OpenAI and Azure responses.\n- Updated ProcessingTime parsing from int to double\nVersion 6.5.1\n- Removed Obsolete from EditEndpoint as it has now been fixed by OpenAI\nVersion 6.5.0\n- Marked EditEndpoint Obsolete as codex and edit models have been removed\nVersion 6.4.3\n- Fixed support for Azure Active Directory authentication for Azure OpenAI\nVersion 6.4.2\n- Misc fixes and added validation for OpenAICLientSettings\n- Updated docs\n- Decoupled proxy version from main package\nVersion 6.4.1\n- Added ImageEditRequest overloads for optional mask parameter\nVersion 6.4.0\n- Moved OpenAI-DotNet-Proxy back into its own project and package\n- Make a few classes sealed that are not meant to be extended\nVersion 6.3.2\n- Attempt to fix dependency requirement for dotnet/runtime docker base images\n- Made internal OpenAIClient constructor with HttpClient public\n- Make sure we only copy the appropriate headers in the proxy\nVersion 6.3.1\n- Fixed apikey requiring sk- prefix with Azure OpenAI\nVersion 6.3.0\n- Removed OpenAI-DotNet-Proxy and put it directly in package on its own\nVersion 6.2.0\n- Added OpenAI-DotNet-Proxy project and package.\n- Added support for custom domains\n- Updated unit tests\n- Updated docs\nVersion 6.1.0\n- Added support for gpt-4 models\nVersion 6.0.1\n- Updated package info\n- Updated docs\nVersion 6.0.0\n- Added support for Azure OpenAI\nVersion 5.1.2\n- Fixed an issue when deleting personal account fine tuned models\nVersion 5.1.1\n- Refactored Model validation\n- Added additional default models\n- Deprecate OpenAIClient.DefaultModel\n- Implemented chat completion streaming\n- Refactored immutable types\nVersion 5.1.0\n- Add support for Audio endpoint and Whisper models\n  - Audio Speech to text\n  - Audio translation\nVersion 5.0.2\n- Support multiple inputs in embedding\n- Added better model validation in all endpoints\nVersion 5.0.1\n- Fixed chat parameters\nVersion 5.0.0\n- Added Chat endpoint\nVersion 4.4.4\n- ImageEditRequest mask is now optional so long as texture has alpha transparency\n- ImageVariationRequest added constructor overload for memory stream image\n- Updated AuthInfo parameter validation\n- Renamed OPEN_AI_ORGANIZATION_ID -> OPENAI_ORGANIZATION_ID\nVersion 4.4.3\n- added OPEN_AI_ORGANIZATION_ID environment variable\n- deprecated Organization use OrganizationId instead\nVersion 4.4.2\n- Removed a useless assert\n- Updated docs\nVersion 4.4.1\n- hotfix to CompletionsEndpoint to use IEnumerable<string>\n- hotfix to cleanup Images endpoints\nVersion 4.4.0\n- Renamed Choice.Logprobs -> Choice.LogProbabilities\n- Renamed OpenAI.Completions.Logprobs -> OpenAI.Completions.OpenAI.Completions\n- Renamed CompletionRequest parameter names:\n  - max_tokens -> maxTokens\n  - top_p -> topP\n- Updated CompletionRequest to accept IEnumerable<string> values for prompts and stopSequences\n- Refactored all endpoints to use new response validation extension\n- Added CancellationToken to most endpoints that had long running operations",
  "repository": "",
  "title": "OpenAI-DotNet",
  "verbatimVersion": "8.2.5",
  "version": "8.2.5",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#OpenAI-DotNet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 6212,
      "fullName": "OpenAI-DotNet.nuspec",
      "length": 17571,
      "name": "OpenAI-DotNet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#lib/net6.0/OpenAI-DotNet.dll",
      "@type": "PackageEntry",
      "compressedLength": 145644,
      "fullName": "lib/net6.0/OpenAI-DotNet.dll",
      "length": 392704,
      "name": "OpenAI-DotNet.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#Assets/OpenAI-DotNet-Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 22837,
      "fullName": "Assets/OpenAI-DotNet-Icon.png",
      "length": 23479,
      "name": "OpenAI-DotNet-Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 14776,
      "fullName": "README.md",
      "length": 67683,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 622,
      "fullName": "LICENSE",
      "length": 1072,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.14.21.35.08/openai-dotnet.8.2.5.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12945,
      "fullName": ".signature.p7s",
      "length": 12945,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "OpenAI",
    "AI",
    "ML",
    "API",
    "gpt-4",
    "gpt-3.5-tubo",
    "gpt-3",
    "chatGPT",
    "chat-gpt",
    "gpt-2",
    "gpt",
    "dall-e-2",
    "dall-e-3"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}