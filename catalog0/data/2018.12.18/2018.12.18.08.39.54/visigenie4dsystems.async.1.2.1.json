{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.08.39.54/visigenie4dsystems.async.1.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mike Dorough",
  "catalog:commitId": "be5566fa-9f85-42eb-923c-71d5bc10aa12",
  "catalog:commitTimeStamp": "2018-12-18T08:39:54.6290035Z",
  "copyright": "Copyright © 2016 Async Consulting",
  "created": "2016-06-23T06:02:09.767Z",
  "description": "Provides Windows IoT apps with an easy to use interface to 4D Systems’ graphic display modules. IoT devices like the Raspberry Pi 2, 3, Dragonboard 410c or Minnowboard Max are connected to the 4D Systems display module via a Silicon Labs CP2102 USB to Serial UART Bridge Converter cable. Host communications with the display module is accomplished by using the singleton class named Host, which is located in the namespace ViSiGenie4DSystems.Async.SerialComm. Host Class Methods enable the discovery of multiple displays connected to the IoT device. Once device discovery is complete, the app can connect,  subscribe to reports, and send commands.",
  "iconUrl": "https://github.com/CQDX/visi-genie-4d-systems-async/blob/master/ViSiGenie4DSystems.Async/Packaging/LogoAC64x64.png",
  "id": "ViSiGenie4DSystems.Async",
  "isPrerelease": false,
  "lastEdited": "2018-12-18T08:39:46.26Z",
  "licenseUrl": "https://github.com/CQDX/visi-genie-4d-systems-async/blob/master/License.txt",
  "listed": true,
  "packageHash": "aXDca6nXeAbsC68gU541cbb1j/ysfn7P61V5fnw6OHilVLduGgkbEFTVys0bnOyoOMJxke/NhODYvnZ/lmQTbQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 39980,
  "projectUrl": "https://github.com/CQDX/visi-genie-4d-systems-async",
  "published": "2016-06-23T06:02:09.767Z",
  "releaseNotes": "Version 1.2.1 now excludes icon from build, which previously caused build payload error for clients.",
  "requireLicenseAcceptance": false,
  "serviceable": "false",
  "summary": "A C# async class library that implements the ViSi Genie Serial Communication Protocol. Windows IoT builders can now include a 4D Systems display module in their product solution.",
  "title": "Windows IoT Serial Device Library for 4D Systems Graphic Display Modules",
  "verbatimVersion": "1.2.1",
  "version": "1.2.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.08.39.54/visigenie4dsystems.async.1.2.1.json#ViSiGenie4DSystems.Async.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 988,
      "fullName": "ViSiGenie4DSystems.Async.nuspec",
      "length": 2095,
      "name": "ViSiGenie4DSystems.Async.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.08.39.54/visigenie4dsystems.async.1.2.1.json#Lib/ARM/ViSiGenie.4DSystems.Async.dll",
      "@type": "PackageEntry",
      "compressedLength": 26215,
      "fullName": "Lib/ARM/ViSiGenie.4DSystems.Async.dll",
      "length": 68608,
      "name": "ViSiGenie.4DSystems.Async.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.08.39.54/visigenie4dsystems.async.1.2.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "4DSystems",
    "Workshop4",
    "ViSi-Genie",
    "graphics",
    "touch",
    "display",
    "serial",
    "communications",
    "async",
    "host",
    "windows",
    "iot-core"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}