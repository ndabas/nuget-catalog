{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.22.20.42/koenzomers.onedrive.api.2.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Koen Zomers",
  "catalog:commitId": "75f41e4a-bed2-4ee7-bfc5-a65fcdb4fa3b",
  "catalog:commitTimeStamp": "2018-12-08T22:20:42.1977915Z",
  "copyright": "Koen Zomers",
  "created": "2017-08-22T23:12:33.113Z",
  "description": "Contains a OneDrive API that can be used to read from and write to the Consumer OneDrive and OneDrive for Business on Office 365. It has support for both using the Azure Active Directory and the Azure Active Directory v2.0 endpoints which allow communication via either the tenant-my.microsoft.com and api.onedrive.com services or through the graph.microsoft.com service.",
  "id": "KoenZomers.OneDrive.Api",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-08T22:20:21.38Z",
  "licenseUrl": "https://github.com/KoenZomers/OneDriveAPI/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "vuUPpIZBvmsNpo26oJaIQiVriXNqJnsneR01XpbZ4oXmYET6uijF5W3AwhNxyce+3ihQJfo5QLS78HW3w8X/wA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 61124,
  "projectUrl": "https://github.com/KoenZomers/OneDriveAPI",
  "published": "2017-08-22T23:12:33.113Z",
  "releaseNotes": "- Adjusted the functionality behind GetFolderOrCreate so that it also accepts multipaths. I.e. when you call GetFolderOrCreate(\"Files\\Work\\Contracts\") it will now ensure that all the folders Files, Work and Contracts exist and return the instance of Contracts. Feature request from Vincent van Hulst.",
  "requireLicenseAcceptance": false,
  "summary": "Contains a OneDrive API that can be used to read from and write to the Consumer OneDrive and OneDrive for Business on Office 365",
  "title": "OneDrive API",
  "verbatimVersion": "2.0.1.0",
  "version": "2.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.22.20.42/koenzomers.onedrive.api.2.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.22.20.42/koenzomers.onedrive.api.2.0.1.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[8.0.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.22.20.42/koenzomers.onedrive.api.2.0.1.json#KoenZomers.OneDrive.Api.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 775,
      "fullName": "KoenZomers.OneDrive.Api.nuspec",
      "length": 1654,
      "name": "KoenZomers.OneDrive.Api.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.22.20.42/koenzomers.onedrive.api.2.0.1.json#lib/KoenZomers.OneDrive.Api.dll",
      "@type": "PackageEntry",
      "compressedLength": 47981,
      "fullName": "lib/KoenZomers.OneDrive.Api.dll",
      "length": 138240,
      "name": "KoenZomers.OneDrive.Api.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.22.20.42/koenzomers.onedrive.api.2.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "OneDrive"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}