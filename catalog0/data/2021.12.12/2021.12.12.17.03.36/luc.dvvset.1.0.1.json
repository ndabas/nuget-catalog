{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "LUC.DVVSet",
  "catalog:commitId": "e2d5fc17-4448-4c8a-bfe8-55c681246459",
  "catalog:commitTimeStamp": "2021-12-12T17:03:36.317237Z",
  "created": "2021-12-12T17:01:06.57Z",
  "description": "We are presenting the compact version of the original Dotted Version Vectors(DVV), which we call Dotted Version Vector Sets (DVVSet). Like its predecessor, DVVSet still accurately describes causality between related or conflicting values (values that reflect concurrent updates and that must be all kept until a future reconciliation supersedes them), but now with a smaller representation, very similar to Version Vectors in size.\n\nLets assume the scenario of a Distributed Key-Value Store (Ex: Riak, Cassandra, etc), where we have clients, servers and we can write ( PUT ) and read ( GET ) values. We also want to track the causality information of these values, so that causally descendant values replace older values and causally concurrent values are all kept (for further reconciliation).\n\nWe can use DVVSet to keep the values and their causal history together, with support for multiple conflicting values (siblings). One DVVSet has 1 value (a single sibling) if there are no conflicts. Otherwise, it stores all siblings and their relevant causal information in a single DVVSet. Thus, this data structure encapsulates the tracking, maintaining and reasoning about the values' causality.\n\nThis is adaptation from Erlang to C#\nOriginal code: https://github.com/ricardobcl/Dotted-Version-Vectors",
  "iconFile": "simply-midnight-black-wall-clocks.jpg",
  "id": "LUC.DVVSet",
  "isPrerelease": false,
  "lastEdited": "2021-12-12T17:03:07.863Z",
  "listed": true,
  "packageHash": "pQGWdbqacXA7+Ius8RhQ595hMO/PElxdjHTMHlUWsLwL1lyA8lxEncJcXHZZFepeqNZ8oXwRAAXPKm+BZ2Sy+g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 576704,
  "published": "2021-12-12T17:01:06.57Z",
  "readmeFile": "README.md",
  "releaseNotes": "Improved ClockToString and StringToClock",
  "repository": "",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#dependencygroup/.netframework4.7.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#dependencygroup/.netframework4.7.1/microsoft.bcl.hashcode",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.HashCode",
          "range": "[1.1.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#dependencygroup/.netframework4.7.1/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.1, )"
        }
      ],
      "targetFramework": ".NETFramework4.7.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#LUC.DVVSet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1097,
      "fullName": "LUC.DVVSet.nuspec",
      "length": 2175,
      "name": "LUC.DVVSet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#lib/net471/LUC.DVVSet.dll",
      "@type": "PackageEntry",
      "compressedLength": 13670,
      "fullName": "lib/net471/LUC.DVVSet.dll",
      "length": 87040,
      "name": "LUC.DVVSet.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#lib/net471/LUC.DVVSet.xml",
      "@type": "PackageEntry",
      "compressedLength": 1830,
      "fullName": "lib/net471/LUC.DVVSet.xml",
      "length": 11472,
      "name": "LUC.DVVSet.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#simply-midnight-black-wall-clocks.jpg",
      "@type": "PackageEntry",
      "compressedLength": 547205,
      "fullName": "simply-midnight-black-wall-clocks.jpg",
      "length": 567205,
      "name": "simply-midnight-black-wall-clocks.jpg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 715,
      "fullName": "README.md",
      "length": 1695,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.12.17.03.36/luc.dvvset.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "vectorclock",
    "dottedversionvectorclock"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}