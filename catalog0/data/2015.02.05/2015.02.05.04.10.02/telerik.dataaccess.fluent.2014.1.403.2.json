{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.04.10.02/telerik.dataaccess.fluent.2014.1.403.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Telerik AD",
  "catalog:commitId": "9c0a4b82-9c85-42ec-95a1-3f3c5a4a62d4",
  "catalog:commitTimeStamp": "2015-02-05T04:10:02.8976068Z",
  "copyright": "Copyright (C) 1996 - 2014 Telerik AD",
  "created": "2014-04-09T08:30:16.79Z",
  "description": "The Telerik.DataAccess.Fluent NuGet package is designed for projects containing classes that are stored using Telerik Data Access. It can be utilized for defining your data access model using the code-only Fluent Mapping.\n\nIt provides the assembly references and project enhancements made by the Telerik Data Access Enhancer tool during the build process, required by Telerik Data Access runtime.\n\nIf you need a NuGet package for a project only consuming Telerik Data Access model from another assembly, the Telerik.DataAccess.Core NuGet package which contains the Telerik Data Access runtime assemblies necessary to work with Telerik Data Access persistent objects is sufficient and can be used instead.\n\nTelerik Data Access helps defining mapping and executing create, retrieve, update and delete operations for your data access classes and database tables. It allows you to consume stored procedures and functions.",
  "iconUrl": "http://www.telerik.com/sfimages/default-source/productsimages/openaccess-orm/Resources/nuget-telerik-data-access.png",
  "id": "Telerik.DataAccess.Fluent",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.telerik.com/purchase/license-agreement/data-access",
  "packageHash": "TbnVlRAcz4yFYCK3cC3jY3TUF4m4bpNsdjwzQW15IU3q3z+ciDS+PjDzHcqlHEzEGfk6q+s1QCldyMCzVtXYSA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 752900,
  "projectUrl": "http://www.telerik.com/data-access",
  "published": "2014-04-09T08:30:16.79Z",
  "releaseNotes": "New\n- NuGets: Telerik.DataAccess.Core NuGet package now includes Telerik.OpenAccess.40.Extensions.dll - Telerik.OpenAccess.40.Extensions.dll that will be added automatically as reference if target project is using .Net 4.0 or later.\n- Database default values in Fluent API - Database First users of the Code-Only mapping can now specify whether a column has a default value calculated by the database server. This could be done using the .HasDefaultValue() extension method.\n- Bulk Select integrated in LINQ statements - The recently released functionality for Bulk Select based on a set of object keys is now fully integrated into the Data Access LINQ engine, which means that joining data from different systems is now easier and less error prone.\n- Support for MS SQL Server 2014 - Data Access is now fully tested and can be used in production with MS SQL Server 2014 RTM.\n- Dynamic detection of Azure database so that missing Backend value is deduced correctly - When an Azure database is specified via connection string settings (app.config/web.config), and no explicit backend is specified in the BackendConfiguration, the missing value is no longer given as MSSQL, but Azure is used. This eases the transition between the two backends.\n- MariaDB support upgraded to 10.0.10 - Data Access is now tested with the latest version (at the release date) of MariaDB - 10.0.10\n\nFixed\n- Runtime: Too frequent Garbage Collection under heavy load with a small connection pool - When the connection pool is empty (no more connections are available), activities on the server used to get blocked until a connection gets available again. This situation can arise when too many requests are attempted in parallel for the given connection pool size. In such case, the connection pool thread schedules a System.GC.Collect(1) based on a predefined period in seconds in order to free non-disposed connections that can be collected. This period is now changed to 31 seconds to improve the overall performance.\n- Runtime: IndexOutOfRangeException in OpenAccessRuntime.common.GenericState due to metadata mismatch - In some complex scenarios, it happened that an IndexOutOfRangeException was thrown because the state and the metadata were out of sync. Now this exception is avoided.\n- Runtime: In presence of server side exceptions, cleanup of statements, readers and connections could fail - When a lock conflict occurs, the reader, statement and connection were sometimes incorrectly kept active and not cleaned up.\n- LINQ: OR expressions in filters producing invalid SQL in Oracle when vertical inheritance is used - Invalid SQL was generated for LINQ queries with filters chained using OR, vertical inheritance and target database server Oracle.\n- Runtime: Highlow key generator using too many connections - The high-low key generator was always taking a connection out of the pool even if that was not necessary.",
  "requireLicenseAcceptance": true,
  "summary": "The Telerik.DataAccess.CodeFirst NuGet package is designed for projects containing classes that are stored using Telerik Data Access.",
  "title": "Telerik.DataAccess.Fluent",
  "version": "2014.1.403.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.04.10.02/telerik.dataaccess.fluent.2014.1.403.2.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.04.10.02/telerik.dataaccess.fluent.2014.1.403.2.json#dependencygroup/telerik.dataaccess.core",
          "@type": "PackageDependency",
          "id": "Telerik.DataAccess.Core",
          "range": "[2014.1.403.2, 2014.1.403.2]"
        }
      ]
    }
  ],
  "tags": [
    "ORM",
    "Fluent",
    "CodeOnly",
    "Entity",
    "Mapping",
    "DataAccess",
    "Database",
    "DAL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}