{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.33.47/ractor.persistence.0.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Victor Baybekov",
  "catalog:commitId": "e01f813a-c604-4474-9fe6-9538dfcc47e9",
  "catalog:commitTimeStamp": "2015-02-05T20:33:47.7256197Z",
  "copyright": "Copyright 2014",
  "created": "2014-07-11T19:18:54.223Z",
  "description": "Ractor.Persistence is a collection of APIs for POCOs and blobs persistence and a strongly typed Redis\nclient based on excellent Stackexchange.Redis library.\nThe typed Redis client has strong opinion about keys schema inside Redis and uses a concept \nroot/owner objects to store dependent objects/collections. POCO/database persistor base implementation\nwraps around ServiceStack.ORMLite.v3, however there is no binary dependency and any ORM could be plugged \nin. Blob persistor saves large data objects to files or S3.",
  "iconUrl": "http://buybackoff.github.io/Ractor.CLR/img/logo.png",
  "id": "Ractor.Persistence",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://github.com/buybackoff/Ractor.CLR/blob/master/LICENSE.txt",
  "packageHash": "fz2iCRaTcg484+4e/fVPyaLyeYRSmVBaPZ8WAK65hlbUjg+z0OYmF8YcMEptmeSYEXmiEKds+MrbRZzRjO3yVQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 141911,
  "projectUrl": "http://buybackoff.github.com/Ractor.CLR",
  "published": "2014-07-11T19:18:54.223Z",
  "releaseNotes": "Rename to Ractor and change direction: the goal is to make CLR/JVM interoperable actors. An actor could be defined in any language on any platform and called from another platform. The only requirement is that message types are defined on both platforms and are serializable to the same Json representation.",
  "requireLicenseAcceptance": false,
  "summary": "Ractor.Persistence is a collection of APIs for POCOs and blobs persistence and a strongly typed Redis\nclient based on excellent Stackexchange.Redis library.",
  "version": "0.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.33.47/ractor.persistence.0.1.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.33.47/ractor.persistence.0.1.1.json#dependencygroup/stackexchange.redis",
          "@type": "PackageDependency",
          "id": "StackExchange.Redis",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.33.47/ractor.persistence.0.1.1.json#dependencygroup/servicestack.ormlite.sqlserver",
          "@type": "PackageDependency",
          "id": "ServiceStack.OrmLite.SqlServer",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.33.47/ractor.persistence.0.1.1.json#dependencygroup/fsharp.core.microsoft.signed",
          "@type": "PackageDependency",
          "id": "FSharp.Core.Microsoft.Signed",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.33.47/ractor.persistence.0.1.1.json#dependencygroup/fspickler",
          "@type": "PackageDependency",
          "id": "FsPickler",
          "range": ""
        }
      ]
    }
  ],
  "tags": [
    "persistence",
    "DB",
    "database",
    "shards"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}