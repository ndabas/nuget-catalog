{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.25.22.36.29/physicalmeasure.2.0.5776.40885.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kilo Bravo",
  "catalog:commitId": "96ae1583-98d1-4a50-918e-bbf9eb6da3c0",
  "catalog:commitTimeStamp": "2015-10-25T22:36:29.4789065Z",
  "copyright": "Copyright Â© 2010-2015 Kilo Bravo",
  "created": "2015-10-25T22:13:13.443Z",
  "description": "Physical Unit System Framework. PhysicalMeasure is a C# library for handling physical quantities by specifying value and unit. Scaling of units and conversions between multiple unit systems are supported.",
  "id": "PhysicalMeasure",
  "isPrerelease": false,
  "lastEdited": "2015-10-25T22:36:20.55Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "uEn3ImjtnuiLp4UfTsvKem5GZSQkZeKd3Q+4zyfbw6TJ6y/ih2j32PWH0i7Ji0MRmRN0NCNR+ZAdCk5RtBWIvg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 42870,
  "published": "2015-10-25T22:13:13.443Z",
  "requireLicenseAcceptance": false,
  "title": "PhysicalMeasure",
  "verbatimVersion": "2.0.5776.40885",
  "version": "2.0.5776.40885",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.25.22.36.29/physicalmeasure.2.0.5776.40885.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}