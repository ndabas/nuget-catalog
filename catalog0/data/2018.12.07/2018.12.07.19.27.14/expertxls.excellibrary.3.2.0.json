{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Outside Software Inc.",
  "catalog:commitId": "68526256-fc0a-46d9-9040-61e2949427c5",
  "catalog:commitTimeStamp": "2018-12-07T19:27:14.9215546Z",
  "copyright": "Outside Software Inc.",
  "created": "2017-03-27T13:33:21.647Z",
  "description": "Create Excel spreadsheets for Office 97/2003 or Office 2007+ on the fly with an easy to use .NET library. No 3rd party dependencies. No Microsoft Office Excel dependencies. \n\nThe ExpertXLS Excel Library for .NET can be linked into any type of .NET project, either ASP.NET web sites or Windows Forms and WPF applications, to enable your application to create new Excel documents from scratch or to edit existing Excel documents. The ExpertXLS Excel Library for .Net offers support both for the old Excel 97-2003 format (.xls) and for the new Excel 2007 or above (.xlsx) format. \n\nThe integration is extremely easy and no additional installation is necessary in order to get started. The library is delivered as a strong named assembly that can be directly referenced by your project. The downloaded archive contains C# and VB.NET samples for ASP.NET and Windows Forms and the complete API documentation. \n\nFeatures\n\n- Easy integration, no installation or setup is necessary\n - Deployed as single strong named .NET assembly\n - Can be used from any .NET application (ASP.NET, Windows Forms, WPF)) \n - Does not depend on Microsoft Office Excel\n - Can run in Medium Trust environments (like shared hosting)\n - Can run on 32-bit and 64-bit Windows servers\n - Create new Excel documents or edit existing Excel documents\n - Support for Excel 97-2003 (.xls) and Excel 2007 or above (.xlsx) formats \n - Load a workbook from a stream or from a file\n - Save a workbook to a stream or to a file\n - Load data from CSV files and save data to CSV format\n - Load data from a .NET DataTable or save data to a DataTable object\n - Add chart shapes or chart worksheets to a workbook\n - Add formulas and array formulas to a worksheet\n - Add global styles to a workbook\n - Advanced support for Excel 2007 and above gradients and textures\n - Add named ranges at worksheet or workbook level\n - Add images to a worksheet\n - Add hyperlinks and comments to a worksheet\n - Support for data validation",
  "iconUrl": "http://www.html-to-pdf.net/images/boxes/expertxls-excel-library-spreadsheets.jpg",
  "id": "ExpertXls.ExcelLibrary",
  "isPrerelease": false,
  "lastEdited": "2018-12-07T19:26:56.28Z",
  "licenseUrl": "http://www.html-to-pdf.net/EULA.aspx",
  "listed": true,
  "packageHash": "OaCJLKv05KrZz1JTvZzBBjJT/v6KoqS9QIjoPC/vbG6id8dVtFF93+0rXNJlg6LcnVm2Nf726xyn7QzzR1PlCw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6776465,
  "projectUrl": "http://www.html-to-pdf.net/excel-library.aspx",
  "published": "2017-03-27T13:33:21.647Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "Using ExpertXls Excel Spreadsheets Library for .NET you can create or edit Excel spreadsheets in C#/VB.NET.",
  "title": "ExpertXls Excel Spreadsheets Library for .NET",
  "verbatimVersion": "3.2.0",
  "version": "3.2.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#ExpertXls.ExcelLibrary.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1298,
      "fullName": "ExpertXls.ExcelLibrary.nuspec",
      "length": 3092,
      "name": "ExpertXls.ExcelLibrary.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#lib/net20/expertxls.dll",
      "@type": "PackageEntry",
      "compressedLength": 3255075,
      "fullName": "lib/net20/expertxls.dll",
      "length": 10692608,
      "name": "expertxls.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#lib/net20/expertxls.xml",
      "@type": "PackageEntry",
      "compressedLength": 28871,
      "fullName": "lib/net20/expertxls.xml",
      "length": 304534,
      "name": "expertxls.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#lib/net40/expertxls.dll",
      "@type": "PackageEntry",
      "compressedLength": 3446849,
      "fullName": "lib/net40/expertxls.dll",
      "length": 11289088,
      "name": "expertxls.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#lib/net40/expertxls.xml",
      "@type": "PackageEntry",
      "compressedLength": 28871,
      "fullName": "lib/net40/expertxls.xml",
      "length": 304534,
      "name": "expertxls.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 739,
      "fullName": "readme.txt",
      "length": 1661,
      "name": "readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.19.27.14/expertxls.excellibrary.3.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "excel",
    "spreadsheet",
    "excel-library",
    "spreadsheet-library",
    "xls",
    "xls-library",
    "xlsx",
    "xlsx-library",
    "csv",
    "csv-import",
    "csv-to-excel"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}