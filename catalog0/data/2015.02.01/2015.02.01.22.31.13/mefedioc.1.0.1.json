{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.22.31.13/mefedioc.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jone Polvora",
  "catalog:commitId": "8c57ab0e-19a9-47b7-9231-057d3348f7a4",
  "catalog:commitTimeStamp": "2015-02-01T22:31:13.7390475Z",
  "created": "2012-06-09T16:02:42.767Z",
  "description": "MEF extension methods that will allows you to use MEF as an IoC container.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.22.31.13/mefedioc.1.0.1.json#frameworkassemblygroup",
    "assembly": "System.ComponentModel.Composition"
  },
  "id": "MEFedIoC",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "Fo8z8nx80pXc/SmUIS3fQFvvlY5ENevVdn2OFVZVHVZ6LV/zqsv77KV5LVV4WwHeZ9Z4t593Homerz3Cy3PZMQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10331,
  "projectUrl": "https://github.com/jpolvora/MEFedIoC",
  "published": "2012-06-09T16:02:42.767Z",
  "requireLicenseAcceptance": false,
  "summary": "MEF extension methods that will allows you to use MEF as an IoC container.",
  "title": "MEFedIoC",
  "version": "1.0.1",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}