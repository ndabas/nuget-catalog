{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Steve Gilham",
  "catalog:commitId": "1373180d-b88d-442a-891c-3e4e26c5199a",
  "catalog:commitTimeStamp": "2021-10-23T10:21:28.2210407Z",
  "copyright": "Copyright (c) 2010-2020 by Steve Gilham <SteveGilham@users.noreply.github.com>",
  "created": "2020-11-09T13:59:04.003Z",
  "description": "A cross-platform pre-instrumenting code coverage tool set for .net/.net core and Mono",
  "iconFile": "AltCover_128.png",
  "iconUrl": "https://cdn.jsdelivr.net/gh/SteveGilham/altcover/Build/AltCover_128.png",
  "id": "altcover.fake",
  "isPrerelease": false,
  "lastEdited": "2021-10-23T10:21:25.03Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": false,
  "packageHash": "qocF4gbnqPImBQyyZA8TyAN86deuEJg/UIYI3AiAA8lQavaaSg0mc+U6JFhLZn4a+kmRLWBSh/zC3K4UMCh40A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 136367,
  "projectUrl": "https://github.com/SteveGilham/altcover/wiki",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "This build from https://github.com/SteveGilham/altcover/tree/5dcad3856a64d93ed17e29ca7539cc28cf3c32e3\n\nQ. Never mind the fluff -- how do I get started?\n\nA. Start with the Quick Start guide : https://github.com/SteveGilham/altcover/wiki/QuickStart-Guide\n\n# 7.1.795 (Genbu series release 7)\n* [BUGFIX] Make LCov tracefile output follow what is actually generated, and not just what the `man` page says\n* As well as interfaces, hide other types with no non-abstract methods (e.g. plain enums) in the coverage\n* Show the branch in `public int string Ternary(bool select) => !select ? Left : Right;` just like it is shown in `public int Ternary (bool select, int left, int right) { return select ? left : right; }`.\n* For  <TrackedMethod /> records, add `entry` and `exit` attributes as semicolon separated lists of the UTC times in ticks at which the method was entered and returns\n* For `dotnet test ... /p:AltCoverXmlReport=...` , if the value for the report file path contains one of the following literals\n  * $(ProjectName)  \n  * $(SolutionDir)  \n  * $([System.Guid]::NewGuid())  \n  then substitute in the actual values of those build parameters where they haven't already been replaced by MSBuild.\n  Example: Using `/p:AltCoverXmlReport=$(SolutionDir)/_Reports/solution.$(ProjectName).xml` with `dotnet test` of a solution to place distinctly named report files in a common folder.\nAlso\n* Rationalise .net versions to help speed up the build and ease the net5.0 transition\n  * Clear out some corner case differences between .net core and .net framework builds based on old work-arounds for symbol writing for the instrumented files\n  * Build the recorder at `net20` only and use the same assembly everywhere\n  * Move all the core logic from `AltCover.exe/.dll` to `AltCover.Engine.dll`\n  * Unify the three different entry-point assembly instances into the now shim-like `AltCover.exe/.dll`\n  * Build everything against `netstandard2.0` except executable shims and unit tests (tests at `netcoreapp3.0` by default)\n  * Build `AltCover.exe/.dll` against `net472` for framework support, `netcoreapp2.1` for the global tool and `netcoreapp2.0` for everywhere else\n  * Build the GTK2 visualizer against `net472` for consistency\n  * `net472` debug builds for published libraries are retained purely for FxCop consumption\n* Collect coverage from unit tests at build time too\n\n# 7.1.783  (Genbu series release 6a)\n* [Visualizer-global-tool] \n  * [BUGFIX] Don't NRE when cancelling a File Open dialog when Avalonia uses its GTK binding (Linux)\n  * Support font selection on Windows natively (monospace fonts only)\n  * On non-Windows platforms, if Tcl/Tk `wish` is present, use that to perform font selection (choose wisely)\n\n# 7.1.782  (Genbu series release 6)\n* [BUGFIX] Don't throw NRE when encountering an interface with a default method implementation\n* Omit interfaces without default method implementations from coverage recording, to match the behaviour of OpenCover (Issue #91)\n* [Visualizer-global-tool] \n  * Fix the display of branch information on the second and subsequent coverage file loaded in a session\n  * Fix the loading of the most recently accessed files list to prune ones that don't now exist\n  * other minor tidyings\n* [Visualizer-GTK] \n  * Make this look more like the Avalonia version\n  * Tentative fix for the `About` dialog link-button on non-Windows platforms based partly on the Avalonia code.\n  * Keep the GTK3 build in step, even though it's not packaged for release\n\n# 7.1.780  (Genbu series release 5a)\n* [Visualizer] Rewritten global tool based on the cross-platform AvaloniaUI toolkit (so no need for all the GTK3 set-up, including the `--schemadir[=path]` command-line parameter)\n  * There's no font selection support yet as AvaloniaUI doesn't offer a cross-platform one\n  * The colour scheme differs as there's not yet support for selecting a different background brush for text ranges -- covered = blue text\n  * line numbers are shown, and are coloured according to any sequence point starting that line\n\n# 7.1.778 (Genbu series release 5)\n* [BUGFIX] Address problems revealed in issue #87\n  * The collection process now fails gracefully if the XML report is missing or broken\n  * `dotnet test` will halt after instrumentation fails, should it do so, rather than continuing to test and process the missing or broken XML report\n  * Work round F# issue 9255 by replacing Newtonsoft as the JSON processor with one that can static link\n\n# 7.1.777 (Genbu series release 4)\n* [BUGFIX] Fix the GTK2/Framework Visualizer (broken since v6.8.761)\n* Multi-monitor support for the Visualizer in all versions; the window will restore to its previous location even when placed on non-primary monitors\n* Use integrated MSBuild error reporting in the data collector [used by the `dotnet test` integration](https://github.com/SteveGilham/altcover/wiki/The-AltCover-data-collector-and-%60dotnet-test%60).\n\n# 7.1.776 (Genbu series release 3)\n* [BUGFIX] Set the `visited` attribute and CRAP score accordingly for methods with no sequence points, if the method is recorded as having been visted at all.\n* [BUGFIX] Exclude CRAP score for methods with no sequence points from the min/max summary values for the containing type and above (just as such methods aren't counted for the other roll-up quantities)\n* Emit CRAP score values in the OpenCover style summary\n* Distinguish between methods with source and no source in the threshold computations, the option to select the alternative measures (AM, AC) that include the no-source methods.  Extend the `TypeSafe.Thresholds` record type with the coresponding  extra fields.\n* On a threshold violation, always report that via return code by preference to any non-zero process value.\n\n# 7.0.773 (Genbu series release 2)\n* [BUGFIX] Compute CRAP score for unvisited methods too (and add it to the higher level summary items)\n* Add `TypeSafe.Filters.Join` to compute the concatenation of a `TypeSafe.FilterItems seq` to an existing `TypeSafe.Filters` instance.  Strict SemVer would bump the minor version at this point, but given the short time since the initial 7.0 release, I doubt the dust has settled fully yet.\n\n# 7.0.770/771 (Genbu series release 1)\n* There are functional changes (fixes and enhancements from the previous pre-release)\n* [BUGFIX] Don't automatically exclude C# inner functions (and other `[CompilerGenerated]`) from coverage.\n* [BREAKING; Command Line] Option `--defer` now takes no arguments; there is no use-case for the `--defer:-` so that and the redundant `--defer:+` are gone\n* [BREAKING; MSBuild tasks] `AltCover.Prepare.Defer` defaults to `true`; in `dotnet test`, as the value is overridden (effectively forced true), this has no effect.\n* [BREAKING; PowerShell] rename and generalise `Format-FromCoverletOpenCover` as `Write-OpenCoverDerivedState`\n* [BREAKING; API] Rationalise and rename across most parts of the API, above and beyond the pre-release; remove `CSApi` as a separate assembly, with the main `AltCover` assembly publishing that part of the C# callable API, and split `FSApi` into `Toolkit` for PowerShell support and `DotNet` for `dotnet test` support.\n* Add `--attributetoplevel`, `--typetoplevel`  and `--methodtoplevel` command line options (and equivalents) to allow inner classes or functions to be included in coverage independently their containing class or function.\n* Revise/update/fix the Wiki API pages, help-text and the like\n* Autogenerate more of the documentation\n\n# 7.0.766-pre (Genbu series release pre-1)\n\n* There should not be any functional changes before a full 7.0 release; the pre-release is just to ensure I'm happy with the API before freezing it for 7.x\n* [BREAKING] Replace the `--opencover` command line argument and its equivalents with `--reportFormat=...` defaulting to `OpenCover` and currently also accepting `NCover`\n* [BREAKING; dotnet tool] Remove the deprecated `altcover.dotnet` package with the old-style `DotNetCliToolReference` Tool\n* [BREAKING; API] Rename the `AltCover_Fake` namespace to `AltCoverFake`, because it's simpler that way\n* [BREAKING; API] Remove obsolete APIs previously marked as `[Obsolete]`\n* [BREAKING; API] Rationalise and rename across most parts of the API\n* [BREAKING; API, PowerShell] PowerShell cmdlets and the supporting API are now all `XDocument` based\n* [BREAKING; PowerShell] Make the `Invoke-AltCover -ShowStatic` parameter take only the typesafe `enum`\n* [Documentation] Completely revise the API documentation in [the wiki](https://github.com/SteveGilham/altcover/wiki)\n* [PowerShell]`Add-Accelerator` and `Get-Accelerator` cmdlets to write and read new type accelerators e.g. `[xdoc]` for `System.Xml.Linq.XDocument`\n*  `--zipfile` command line option (and equivalents) to put the coverage report into a `.zip` archive\n* `--methodpoint` command line option (and equivalents) to restrict visit reporting to just the method level\n* extend `--threshold` command line option (and equivalents) to allow minimum branch or method coverage, and maximum CRAP score\n* [Global tool] `TargetsPath` command line option for the global `altcover` tool to report where the associated `.targets` file is located (as it can't be `dotnet add`ed to a project)\n\n\nFor previous releases (6.x.x and earlier) [go here](https://github.com/SteveGilham/altcover/blob/master/ReleaseNotes%20-%20Previously.md)",
  "repository": "",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "AltCover (FAKE task helpers)",
  "verbatimVersion": "7.1.795",
  "version": "7.1.795",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#dependencygroup/fake.core.environment",
          "@type": "PackageDependency",
          "id": "Fake.Core.Environment",
          "range": "[5.18.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#dependencygroup/fake.dotnet.cli",
          "@type": "PackageDependency",
          "id": "Fake.DotNet.Cli",
          "range": "[5.18.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#dependencygroup/system.collections.immutable",
          "@type": "PackageDependency",
          "id": "System.Collections.Immutable",
          "range": "[1.6.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#altcover.fake.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4649,
      "fullName": "altcover.fake.nuspec",
      "length": 10925,
      "name": "altcover.fake.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.deps.json",
      "@type": "PackageEntry",
      "compressedLength": 15869,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.deps.json",
      "length": 101778,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.deps.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "@type": "PackageEntry",
      "compressedLength": 63030,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "length": 189440,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.pdb",
      "@type": "PackageEntry",
      "compressedLength": 9406,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.pdb",
      "length": 31740,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.xml",
      "@type": "PackageEntry",
      "compressedLength": 3930,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.xml",
      "length": 51544,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#lib/netstandard2.0/BlackFox.CommandLine.dll",
      "@type": "PackageEntry",
      "compressedLength": 21379,
      "fullName": "lib/netstandard2.0/BlackFox.CommandLine.dll",
      "length": 64000,
      "name": "BlackFox.CommandLine.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#README.html",
      "@type": "PackageEntry",
      "compressedLength": 2987,
      "fullName": "README.html",
      "length": 7390,
      "name": "README.html"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 628,
      "fullName": "LICENSE",
      "length": 1069,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#AltCover_128.png",
      "@type": "PackageEntry",
      "compressedLength": 2088,
      "fullName": "AltCover_128.png",
      "length": 2088,
      "name": "AltCover_128.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.10.23.10.21.28/altcover.fake.7.1.795.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "codecoverage",
    ".net",
    "Mono",
    ".netcore",
    "cross-platform",
    "FAKE",
    "build"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}