{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.13.44.13/griffin.container.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "jgauffin",
  "catalog:commitId": "11e6dbc7-e6ab-4060-97a8-28da0d0575dd",
  "catalog:commitTimeStamp": "2018-11-29T13:44:13.3572994Z",
  "copyright": "(c) Jonas Gauffin 2012",
  "created": "2012-10-18T10:23:37.35Z",
  "description": "Inversion Of Control container which is reasonable fast (faster than Unity, Autofac, Ninject etc) and very easy to configure.",
  "id": "Griffin.Container",
  "isPrerelease": false,
  "lastEdited": "2018-11-29T13:43:41.78Z",
  "licenseUrl": "http://www.gnu.org/licenses/lgpl.txt",
  "listed": true,
  "packageHash": "jewAwif5Z5R57mfzsEeFlEGMlwxgKLl6WJptxhVF+yaB5O8rtJ/ts1rTIqQjd3mp1pfF6dvfj3Dy6yqVj/EwDA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 76946,
  "projectUrl": "https://github.com/jgauffin/griffin.container",
  "published": "2012-10-18T10:23:37.35Z",
  "releaseNotes": "Marked DomainEvent handling and Command handling as obsolete. You should use Griffin.Decoupled instead.\n\nAlso made so that IServiceFilter implementations are allowed to decide if classes should get registered as themselves.",
  "requireLicenseAcceptance": false,
  "summary": "Inversion Of Control container which is reasonable fast (faster than Unity, Autofac, Ninject etc) and very easy to configure.",
  "title": "Griffin.Container",
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.13.44.13/griffin.container.1.1.0.json#Griffin.Container.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 599,
      "fullName": "Griffin.Container.nuspec",
      "length": 1269,
      "name": "Griffin.Container.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.13.44.13/griffin.container.1.1.0.json#lib/net40/Griffin.Container.dll",
      "@type": "PackageEntry",
      "compressedLength": 20336,
      "fullName": "lib/net40/Griffin.Container.dll",
      "length": 45056,
      "name": "Griffin.Container.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.13.44.13/griffin.container.1.1.0.json#lib/net40/Griffin.Container.pdb",
      "@type": "PackageEntry",
      "compressedLength": 30621,
      "fullName": "lib/net40/Griffin.Container.pdb",
      "length": 169472,
      "name": "Griffin.Container.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.13.44.13/griffin.container.1.1.0.json#lib/net40/Griffin.Container.XML",
      "@type": "PackageEntry",
      "compressedLength": 12839,
      "fullName": "lib/net40/Griffin.Container.XML",
      "length": 111988,
      "name": "Griffin.Container.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.13.44.13/griffin.container.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ioc",
    "inversion",
    "of",
    "control",
    "dependency",
    "injection"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}