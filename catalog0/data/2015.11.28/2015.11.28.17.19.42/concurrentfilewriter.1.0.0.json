{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.28.17.19.42/concurrentfilewriter.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tom Brewer",
  "catalog:commitId": "dc7dda34-0388-44e9-8223-b3bf2c12476c",
  "catalog:commitTimeStamp": "2015-11-28T17:19:42.1589847Z",
  "copyright": "Â©2015 Tom Brewer",
  "created": "2015-11-28T13:47:08.477Z",
  "description": "A class library for managing multi-threaded sequential write access to one or more files.\nNote: This class should be injected as a single or static instance shared across all process threads.\nFiles will be locked exclusively from the first Write() call until FlushAndClose() is called or the class is disposed.",
  "id": "ConcurrentFileWriter",
  "isPrerelease": false,
  "lastEdited": "2015-11-28T17:19:12.643Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "Ju3YO5W6h4+5iUpPZCpBHzjnoOJUiVU+f1WZNt5PnP6MgDxw5pWfRU8eNKCohYjaGqQygokn9piIAf8H6pVE8g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8935,
  "published": "2015-11-28T13:47:08.477Z",
  "requireLicenseAcceptance": false,
  "summary": "A class library for managing multi-threaded sequential write access to one or more files.",
  "title": "ConcurrentFileWriter",
  "verbatimVersion": "1.0.0.0",
  "version": "1.0.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}