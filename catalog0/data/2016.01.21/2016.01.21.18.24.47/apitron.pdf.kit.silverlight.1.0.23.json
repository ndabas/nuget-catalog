{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.21.18.24.47/apitron.pdf.kit.silverlight.1.0.23.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Apitron LTD.",
  "catalog:commitId": "dc2262ca-ecbb-4a3c-97dc-4a2784810e43",
  "catalog:commitTimeStamp": "2016-01-21T18:24:47.7231847Z",
  "copyright": "©Apitron 2014-2016. All Rights Reserved.",
  "created": "2016-01-21T18:22:24.19Z",
  "description": "It’s 100% managed code\nPDF standard versions supported are: ALL versions. Files can be normal, linearized, password-protected, signed, incrementally updated.\n\n- We support many possible PDF content manipulations scenarios, below are a few things that worth mentioning:\n- Extract, modify and add graphics (text, images, drawings)\n- Split or merge PDF documents\n- Fill or create PDF forms\n- Add or remove document fields\n- Examine resources within a document - fonts, embedded files\n- Digitally sign and check existing signatures on PDF documents\n- Search for specific text\n- Protect document with a password\n- Work with navigation objects, e.g. create bookmarks or links\n- Full support for annotations\n- Full support for PDF actions\n- All fonts defined by specification are supported\n- Various colorspaces and color profiles are supported, e.g. you may draw in RGB, CMYK, gray, or whatever colorspace you like.\n- Files can be saved to other “subtypes” of PDF – Linearized or PDF/A for example.\n- If you require a specific funtionality and are unsure about whether it is supported, please review our online help you contact support so we'll be able to handle this.\n- Fixed layout API, implemented to be 100% PDF specification compatible, it unlocks full power of the PDF for you. Any complex PDF creation or manipulation task can be completed instantly.\n- Flow layout API, a styles-driven content generation API similar to HTML+CSS provides you with ability to create stunning documents, reports, bills, catalogues an more in minutes. Compact and easy to use, supports creation of XML templates and much more.",
  "iconUrl": "http://apitron.com/Uploads/logo3.png",
  "id": "Apitron.PDF.Kit.Silverlight",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2016-01-21T18:24:34.103Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://apitron.com/Income/Income/kit/application-license.txt",
  "listed": true,
  "packageHash": "jscQEyRhreGg2WeE+lAaloFZIvoW8PMf7Fz/CJeWHZ0mBJ2bTjFP1znl32xBXODu3jhY10oxdejU2mrfVrZ+Mg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6283596,
  "projectUrl": "http://apitron.com/pdf-kit",
  "published": "2016-01-21T18:22:24.19Z",
  "releaseNotes": "- Bugfixes.\n- Improved exception handling.\n- Improved PDF/A support.\n- PDF version 1.5\n- Improved text extraction (as TaggedText, as a HTML).\n- Enhanced font substitution mechanism.\n- PDF signing improvements.\n- Silverlight support",
  "requireLicenseAcceptance": true,
  "summary": "Apitron PDF Kit is a .NET component that allows you to do whatever you want with PDF files. Add text and images, drawings, sign documents, edit existing content and much more. Royalty-free.",
  "title": "Apitron.PDF.Kit for Silverlight",
  "verbatimVersion": "1.0.23",
  "version": "1.0.23",
  "tags": [
    "Apitron.Pdf.Kit",
    ".NET",
    "create",
    "pdf",
    "PDF",
    "forms",
    "Library",
    "editor",
    "Viewer",
    "PDF/A",
    "Print",
    "pdf-generation",
    "pdf-library",
    "encryption",
    "extract"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}