{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Viktor Mitev",
  "catalog:commitId": "0cf74a4a-5a03-4d57-902c-211c1310f3f4",
  "catalog:commitTimeStamp": "2018-12-08T19:49:46.2671035Z",
  "created": "2015-08-29T10:10:43.597Z",
  "description": "The implementation of this string formatting function is inspired by .NET's (and other MicrosoftÂ® products') Composite Formatting feature. Therefore the final behaviour should be similar to what's described in the Getting started with the String.Format method MSDN article. The main difference is that method names in JavaScript are intrinsically camelcase therefore String.format should be used instead. The API documentation can be refered for more details at http://clr-format.github.io/clr-format/\n\nUsage:\n  var formatted = String.format(\"Value: {0:00-00}\", 345.6); // formatted = \"Value: 03-46\"\n\n  formatted = String.format(\"Value: {0,-2}{1}\", 1, \"text\"); // formatted = \"Value: 1 text\"\n\n  // Using the configuration API\n  Format.Config.addFormatToPrototype();\n  formatted = \"Value:{0,10}\".format(\"prototype\"); // formatted = \"Value: prototype\"",
  "iconUrl": "https://avatars3.githubusercontent.com/u/13048800",
  "id": "clr-format.js",
  "isPrerelease": false,
  "lastEdited": "2018-12-08T19:49:08.27Z",
  "licenseUrl": "https://github.com/clr-format/clr-format/blob/master/LICENSE",
  "listed": true,
  "packageHash": "KCjfi/nXropHno7Y/DXEwtJjE1OcgEBakLSde1btWBzQ91v9EyQvrHO1GuEAUQ4vocW8KQEHzp7x6pOy/PhFKg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 66884,
  "projectUrl": "https://github.com/clr-format/clr-format",
  "published": "2015-08-29T10:10:43.597Z",
  "releaseNotes": "1. Support for all of .NET's standard and custom numeric format strings (except for currency). The only available culture format provider for now is the invariant culture.\n2. Full support for index {0} and alignment {0,-10} components.\n3. Optional configuration API contained in clr-format-config.js and defined under the Format.Config namespace. See http://clr-format.github.io/clr-format/modules/format.config.html\n4. Changed Format.Utils.Function.getName behavior to be consistent with ECMAScript's Function.name (to return `\"\"` for anonymous functions). Also Format.Errors.SystemError.stack no longer attempts to standardize the returned values, instead, it returns what the runtime context does.",
  "requireLicenseAcceptance": false,
  "summary": "A lightweight, modular JavaScript implementation of a string formatting function that supports composite format strings and globalization",
  "title": "CLR Format (Javascript)",
  "verbatimVersion": "0.3.2",
  "version": "0.3.2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#clr-format.js.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1171,
      "fullName": "clr-format.js.nuspec",
      "length": 2478,
      "name": "clr-format.js.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#content/clr-format-config.d.ts",
      "@type": "PackageEntry",
      "compressedLength": 4424,
      "fullName": "content/clr-format-config.d.ts",
      "length": 26853,
      "name": "clr-format-config.d.ts"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#content/clr-format.d.ts",
      "@type": "PackageEntry",
      "compressedLength": 11447,
      "fullName": "content/clr-format.d.ts",
      "length": 59632,
      "name": "clr-format.d.ts"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#content/clr-format.js",
      "@type": "PackageEntry",
      "compressedLength": 21868,
      "fullName": "content/clr-format.js",
      "length": 147242,
      "name": "clr-format.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#content/clr-format.min.js",
      "@type": "PackageEntry",
      "compressedLength": 9538,
      "fullName": "content/clr-format.min.js",
      "length": 40773,
      "name": "clr-format.min.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#content/clr-format-config.js",
      "@type": "PackageEntry",
      "compressedLength": 3257,
      "fullName": "content/clr-format-config.js",
      "length": 17780,
      "name": "clr-format-config.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#content/clr-format-config.min.js",
      "@type": "PackageEntry",
      "compressedLength": 1404,
      "fullName": "content/clr-format-config.min.js",
      "length": 4746,
      "name": "clr-format-config.min.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.19.49.46/clr-format.js.0.3.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "string",
    "format",
    "javascript",
    "typescript",
    "number",
    "date",
    "globalization",
    "intl"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}