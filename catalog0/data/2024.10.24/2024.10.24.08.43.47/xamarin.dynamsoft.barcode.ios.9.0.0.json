{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.24.08.43.47/xamarin.dynamsoft.barcode.ios.9.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dynamsoft",
  "catalog:commitId": "1fb4e626-840b-4168-a61f-6e8c1ea27838",
  "catalog:commitTimeStamp": "2024-10-24T08:43:47.9836217Z",
  "copyright": "Dynamsoft Corporation",
  "created": "2022-03-23T06:40:30.887Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.24.08.43.47/xamarin.dynamsoft.barcode.ios.9.0.0.json#deprecation",
    "alternatePackage": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.24.08.43.47/xamarin.dynamsoft.barcode.ios.9.0.0.json#deprecation/alternatePackage",
      "id": "Dynamsoft.CaptureVision.Xamarin.Forms",
      "range": "*"
    },
    "message": "Package no longer supported. Please use package Dynamsoft.CaptureVision.Xamarin.Forms instead.",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "Dynamsoft's Barcode Reader SDK enables you to efficiently embed barcode reading functionality in your web, desktop and mobile application using just a few lines of code.This can save you from months of added development time and extra costs. With the Barcode Reader SDK, you can decode barcodes from various image file formats (bmp, jpg, png, gif, single-page and multi-page tiff, and PDF).\nTo extend your trial license: Email trial@dynamsoft.com and make sure to include the word \"privateTrial\" in the email title.",
  "iconUrl": "https://www.dynamsoft.com/assets/img-icon/logo-dbr-36x37.png",
  "id": "Xamarin.Dynamsoft.Barcode.iOS",
  "isPrerelease": false,
  "lastEdited": "2024-10-24T08:43:18.96Z",
  "licenseUrl": "https://www.dynamsoft.com/Products/barcode-reader-license-agreement.aspx",
  "listed": false,
  "packageHash": "oEDCl38D9yd+Pl4bL0ovIMbQwdZfOCopE97Cwo3CL+WiCrqH+mVAqHRsI2kN9GK61koLgkpyRXQLAjzCHuHtzA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 71854554,
  "projectUrl": "https://www.dynamsoft.com/barcode-reader/sdk-mobile/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Highlights\n      \n      Simplified the license activation steps. Different license activation APIs are integrated into initLicense method.\n      Added support for Pharmacode.\n      Added support for Code 11, an 1D format.\n      Deformation resisting modes DRM_BROAD_WARP, DRM_LOCAL_REFERENCE and DRM_DEWRINKLE are optimized and detached from DRM_GENERAL. Users can specify a more effective deformation resisting mode when processing QRCode and DataMatrix codes.\n      Optimized the confidence scoring system for PDF417 codes.\n      \n      Changelog\n      \n      New\n      \n      Added EnumBarcodeFormatCODE11 under enumeration EnumBarcodeFormat to specify newly supported barcode format, Code 11. The enumeration value of EnumBarcodeFormatONED and EnumBarcodeFormatALL are updated as well.\n      Added EnumBarcodeFormat2PHARMACODEONETRACK, EnumBarcodeFormat2PHARMACODETWOTRACK and EnumBarcodeFormat2PHARMACODE under enumeration EnumBarcodeFormat_2 to specify newly supported barcode format, Pharmacode.\n      Added a new error code DBRERR_PHARMACODE_LICENSE_INVALID which will be returned when the license of Pharmacode is invalid.\n      Added EnumDeformationResistingModeBroadWarp, EnumDeformationResistingModeLocalReference and EnumDeformationResistingModeDewrinkle under enumeration EnumDeformationResistingMode to apply new deformation resisting modes.\n      Added a parameter FormatSpecification.VerifyCheckDigit.\n      Added new argument ConfidenceThreshold to the LocalizationModes mode arguments.\n      Added static method DynamsoftBarcodeReader.initLicense to replace legacy license activation APIs.\n      Added protocol DBRLicenseVerificationListener to get license verification callback when using DynamsoftBarcodeReader.initLicense.\n      Added protocol DBRTextResultListener.\n      Added protocol DBRIntermediateResultListener.\n      Added the following image decoding methods. The parameter templateName is not required in the new methods.\n      DynamsoftBarcodeReader.decodeBuffer\n      DynamsoftBarcodeReader.decodeImage\n      DynamsoftBarcodeReader.decodeFileWithName\n      DynamsoftBarcodeReader.decodeBase64\n      DynamsoftBarcodeReader.decodeIntermediateResult\n      \n      Fixed\n      \n      Fixed a bug that might cause a crash when using multiple threads for barcode decoding.\n      \n      Deprecated\n      \n      The following license activation APIs are deprecated:\n      Interface iDMDLSConnectionParameters\n      Protocol DBRServerLicenseVerificationDelegate\n      Protocol DMDLSLicenseVerificationDelegate\n      Enumeration EnumDMChargeWay\n      Enumeration EnumDMLicenseModule\n      Enumeration EnumDMUUIDGenerationMethod\n      Enumeration EnumProduct\n      Method DynamsoftBarcodeReader.initLicenseFromServer\n      Method DynamsoftBarcodeReader.initLicenseFromDLS\n      Method DynamsoftBarcodeReader.outputLicenseToString\n      The image decoding methods with parameter templateName are deprecated\n      DynamsoftBarcodeReader.decodeIntermediateResult\n      DynamsoftBarcodeReader.decodeImage\n      DynamsoftBarcodeReader.decodeFileWithName\n      DynamsoftBarcodeReader.decodeBase64\n      DynamsoftBarcodeReader.decodeBuffer\n      DBRTextResultDelegate is deprecated.\n      DBRIntermediateResultListener is deprecated.\n      \n      Breaking Changes\n      \n      Configurations of the preset templates are changed.\n      Changed the configurations of EnumPresetTemplate.default to EnumPresetTemplate.videoSingleBarcode.\n      Added template EnumPresetTemplate.imageDefault to store the legacy configurations of EnumPresetTemplate.default.\n      \n      Updated Swift APIs\n      \n      The following method names are changed\n      DynamsoftBarcodeReader.updateRuntimeSettings(with parameter iPublicRuntimeSettings)\n      DynamsoftBarcodeReader.decodeIntermediateResult\n      DynamsoftBarcodeReader.decodeImage\n      DynamsoftBarcodeReader.decodeFileWithName\n      DynamsoftBarcodeReader.initRuntimeSettingsWithFile\n      DynamsoftBarcodeReader.initRuntimeSettingsWithString\n      DynamsoftBarcodeReader.appendTplFileToRuntimeSettings\n      DynamsoftBarcodeReader.appendTplStringToRuntimeSettings\n      DynamsoftBarcodeReader.outputSettingsToString\n      DynamsoftBarcodeReader.outputSettingsToFile\n      Enumeration members of EnumTerminatePhase\n      \n      The following methods will signal errors by throw exceptions\n      DynamsoftBarcodeReader.decodeIntermediateResult\n      DynamsoftBarcodeReader.decodeImage\n      DynamsoftBarcodeReader.decodeFileWithName\n      DynamsoftBarcodeReader.decodeBase64\n      DynamsoftBarcodeReader.decodeBuffer\n      DynamsoftBarcodeReader.getIntermediateResult\n      DynamsoftBarcodeReader.createIntermediateResult\n      DynamsoftBarcodeReader.outputLicenseToString\n      DynamsoftBarcodeReader.outputSettingsToString\n      DynamsoftBarcodeReader.allParameterTemplateNames\n      DynamsoftBarcodeReader.getModeArgument\n      DynamsoftBarcodeReader.getRuntimeSettings\n      \n      The following methods will return an BOOL value\n      DynamsoftBarcodeReader.updateRuntimeSettings\n      DynamsoftBarcodeReader.setModeArgument\n      DynamsoftBarcodeReader.resetRuntimeSettings\n      DynamsoftBarcodeReader.initRuntimeSettingsWithFile\n      DynamsoftBarcodeReader.initRuntimeSettingsWithString\n      DynamsoftBarcodeReader.appendTplFileToRuntimeSettings\n      DynamsoftBarcodeReader.appendTplStringToRuntimeSettings\n      DynamsoftBarcodeReader.outputSettingsToFile\n      \n      Removed the following legacy video barcode decoding APIs\n      Interface iDCESettingParameters\n      Interface iFrameDecodingParameters\n      Enumeration EnumClarityCalculationMethod\n      Enumeration EnumClarityFilterMode\n      Protocol DBRErrorDelegate\n      Method DynamsoftBarcodeReader.setCameraEnhancerParam\n      Method DynamsoftBarcodeReader.startFrameDecoding\n      Method DynamsoftBarcodeReader.startFrameDecodingEx\n      Method DynamsoftBarcodeReader.appendFrame\n      Method DynamsoftBarcodeReader.setDBRErrorDelegate\n      Method DynamsoftBarcodeReader.stopFrameDecoding\n      Method DynamsoftBarcodeReader.getFrameDecodingParameters\n      Method DynamsoftBarcodeReader.getLenghtOfFrameQueue\n      \n      Removed the following legacy license activation APIs\n      Interface iDMLTSConnectionParameters\n      Protocol DMLTSLicenseVerificationDelegate\n      Method DynamsoftBarcodeReader.initLicenseFromLTS\n      Property DynamsoftBarcodeReader.license",
  "requireLicenseAcceptance": true,
  "summary": "Powerful barcode SDK supporting Code 39, Code 93, Code 128, Codabar, Interleaved 2 of 5, EAN-8, EAN-13, UPC-A, UPC-E, Industrial 2 of 5, Code 11, QR code, Datamatrix, PDF417, Aztec code, GS1 Databar, PatchCode, Maxicode (mode 2-5), COMPOSITE, MICRO_QR, MICRO_PDF417, PharmaCode.",
  "title": "Dynamsoft Barcode Reader",
  "verbatimVersion": "9.0.0",
  "version": "9.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.24.08.43.47/xamarin.dynamsoft.barcode.ios.9.0.0.json#Xamarin.Dynamsoft.Barcode.iOS.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2374,
      "fullName": "Xamarin.Dynamsoft.Barcode.iOS.nuspec",
      "length": 8354,
      "name": "Xamarin.Dynamsoft.Barcode.iOS.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.24.08.43.47/xamarin.dynamsoft.barcode.ios.9.0.0.json#lib/Xamarin.iOS10/DBRiOS.dll",
      "@type": "PackageEntry",
      "compressedLength": 71840548,
      "fullName": "lib/Xamarin.iOS10/DBRiOS.dll",
      "length": 154949528,
      "name": "DBRiOS.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.24.08.43.47/xamarin.dynamsoft.barcode.ios.9.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9479,
      "fullName": ".signature.p7s",
      "length": 9479,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Aztec",
    "barcode",
    "QR",
    "Datamatrix",
    "PDF417",
    "Code39",
    "Code93",
    "Code128",
    "Codabar",
    "EAN-8",
    "EAN-13",
    "UPC-A",
    "UPC-E",
    "Code11",
    "GS1",
    "Databar",
    "PatchCode",
    "Maxicode",
    "(mode",
    "2-5)",
    "COMPOSITE",
    "MICRO_QR",
    "MICRO_PDF417",
    "PharmaCode"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}