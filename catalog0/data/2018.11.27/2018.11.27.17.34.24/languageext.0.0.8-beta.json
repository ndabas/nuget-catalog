{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Paul Louth",
  "catalog:commitId": "531e9858-4633-490d-86d1-b528d650197d",
  "catalog:commitTimeStamp": "2018-11-27T17:34:24.0627619Z",
  "created": "2014-11-23T19:43:21.69Z",
  "description": "Using and abusing the features of C# 6 to provide lots of functions and types, which, if you squint, can look like extensions to the language itself. \n\nThis package brings functional helpers for classic C# problems:\n\nPoor tuple support\nNull reference problem\nLack of lambda and expression inference\nVoid isn't a real type\nMutable lists and dictionaries\nThe awful 'out' parameter",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#frameworkassemblygroup",
    "assembly": "System"
  },
  "iconUrl": "http://www.4four.org/images/lang-ext-logo.png",
  "id": "LanguageExt",
  "isPrerelease": true,
  "lastEdited": "2018-11-27T17:34:13.74Z",
  "licenseUrl": "https://github.com/louthy/language-ext/blob/master/LICENSE.md",
  "listed": false,
  "packageHash": "i6Mp3Vyr4RFtZYQNylyxuSlJBU5gyBLZQYaIEr1hWYULe7/x5M75ulbN+w97uLDjCS/I5WsdsPQ+/lrtVVU6xQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 97358,
  "projectUrl": "https://github.com/louthy/language-ext",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "## List matching\n\nImproved list matching.  There are many more overrides for deconstructing the head items from a list (up to six elements). e.g.\n\n    // The fewest number of elements deconstructed\n    int Product(IEnumerable<int> list) =>\n        match(list,\n            ()      => 1,\n            (x, xs) => x * Product(xs));\n\n    // The most\n    int GetLength(IEnumerable<int> list) =>\n        match(\n            lst,\n            () => 0,\n            a => 1,\n            (a, b) => 2,\n            (a, b, c) => 3,\n            (a, b, c, d) => 4,\n            (a, b, c, d, e) => 5,\n            (a, b, c, d, e, f) => 6,\n            (x, xs) => xs.Count() + 1\n        );\n\nAlso, a `null` list is considered empty.\n\n## range\n\nAdditional `range()` variants:\n\n* Ranges with different step sizes - `range(0,100,10)`\n* range of ranges - `range( range(0,100), range(200,100) )`\n* range of chars - `range('a','z')`\n\n## List\n\nAdditional functions:\n\n* `repeat`\n* `init` - generate a sequence where each step calls a generator function with the index\n* `initInfinite` \n* `choose`\n* `collect`\n* `scan`\n* `scanBack`\n* `find`\n* `distinct`\n* `take`\n* `takeWhile`\n* `unfold`\n* `exists`\n\n__Breaking changes__\n\n* `foldr` renamed `foldBack`\n* Removed the variants of `map` and `iter` (`mapi` and `iteri`) and just used overloading instead\n* Fluent variants now use Pascal Case naming\n\n## Map\n\nAdditional function:\n\n* `exists`\n\n__Breaking changes__\n\n* `contains` renamed `containsKey`\n* Fluent variants now use Pascal Case naming\n\n## Set\n\nAdditional functions:\n\n* `add`\n* `compare`\n* `length`\n* `difference`\n* `exists`\n* `filter`\n* `intersect`\n* `map`\n* `contains`\n* `remove`\n* `isSubset`\n* `isProperSubset`\n\n## Tuple\n\n__Breaking change__\n\n* Removed `this` from `with`, they shouldn't be extension methods because `With` is already performing that duty.\n\n## Assorted updates\n\n* `convert` returns `Option<T>`\n* Added `TryGetValue` for `ImmutableDictionary` and `ImmutableSet`\n* Added `AsEnumerable()` extension to `Nullable<T>`\n* Functions for converting IEnumerable to immutable collections: `toList`, `toArray`, `toSet`, `toQueue`, `toStack`",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "C# Functional Language Extensions",
  "verbatimVersion": "0.0.8-beta",
  "version": "0.0.8-beta",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#dependencygroup/.netframework4.5/system.collections.immutable",
          "@type": "PackageDependency",
          "id": "System.Collections.Immutable",
          "range": "[1.1.32-beta, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#LanguageExt.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1627,
      "fullName": "LanguageExt.nuspec",
      "length": 3797,
      "name": "LanguageExt.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#content/ConcurrentHashtable.License.txt",
      "@type": "PackageEntry",
      "compressedLength": 8162,
      "fullName": "content/ConcurrentHashtable.License.txt",
      "length": 24085,
      "name": "ConcurrentHashtable.License.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#lib/ConcurrentHashtable.dll",
      "@type": "PackageEntry",
      "compressedLength": 30676,
      "fullName": "lib/ConcurrentHashtable.dll",
      "length": 81408,
      "name": "ConcurrentHashtable.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#lib/LanguageExt.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 44170,
      "fullName": "lib/LanguageExt.Core.dll",
      "length": 112128,
      "name": "LanguageExt.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.17.34.24/languageext.0.0.8-beta.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "Functional",
    "Language",
    "Extension"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}