{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Frozen Elephant Inc.,Eric Schneider",
  "catalog:commitId": "0fa9e120-e46a-4418-93d8-5f34db116748",
  "catalog:commitTimeStamp": "2017-09-09T08:39:30.360395Z",
  "copyright": "Copyright © 2011-2014 Frozen Elephant Inc.",
  "created": "2014-02-21T03:12:20.12Z",
  "description": "Feature summary:\n.  Small and simple to use and understand.\n.  Single file reference needed.\n.  Full object hierarchy CRUD support. Saves all object properties and the relationships to related tables. Also supports collection properties.\n.  Allows developers to write sql as needed for reads. The design just maps the results to the objects. Writes are tightly coupled to the database and build on primary key constraints.\n.  No inheritance requirements, uses either interface implementation or attributes.\n.  Allows developers to modify the relation sql to further optimize loading of children.\n.  Sql Server bulk insert support.\n.  Lazy initialization support, with child sql override.\n.  Change trackng support to history tables.\n.  Supported databases: Sql Server / Express / Local DB, My Sql, Sqlite, Oracle.\n. Built-in Performance tracking, implement IPerformanceTracking to allow performance tracking of all database actions.\n. Optimistic concurrency support.\n. No configuration files needed.\n. Trace output of SQL statements and parameter values.\n. Password one way hashing support.\n. Field level encryption with auto decrypt upon load ability.\n. Processing intercept support, BeforeInsert, BeforeUpdate, BeforeDelete, AfterLoad.",
  "iconUrl": "http://www.frozenelephant.com/Soda/Soda.ico",
  "id": "Symbiotic_x86",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2017-09-09T08:38:52.11Z",
  "listed": false,
  "packageHash": "XyrfKYBEoa7jr9sydenFf6WvqhJdroUhxEJUt2o1VOAujwsUiy45Z7m4i6rfaYDAurAajzt/FOydjl+4rqEXag==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 7159172,
  "projectUrl": "http://www.frozenelephant.com/symbiotic.html",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Version: 4.0.1.0\n\n29-Aug-2013\nCode analysis fixes.\n\n09-Sep-2013\nFixed a bug in TraceSql, mislabeled parameter name and values.\n\n01-Jan-2014\nStarted adding support for encryption, \nadding new attributes HashedFieldAttribute and EncryptedFieldAttribute, \nhashed field provides a one way hash for fields like passwords, \nEncrypted fields will encrypt strings prior to insert and will allow the developer to automatically unencrypt or remain encrypted when loaded.\n\n06-Jan-2014\nField one way hashing, and field encryption is working.\nFixed a bug in the add parameters when setting parameter value to nothing, parameter must be set with DBNull.\n\n26-Jan-2014\nChange ObjectHierarchyWriter.DeleteHierarchy which calls DeleteChildren which in turn calls Delete (Non hierarchical) to use to DeleteHierarchy instead.\nThe same done for InsertUpdate and Creates also. \nThis will support child hierarchy objects.\nExisting unit tests all passed.\n\n29-Jan-2014\nFound some places where the ORM was not explicitly closing the connection, I change the code to call close. \nOnly seems to be a problem when creating a lot of connections quickly.\nApparently the garbage collection is too slow.\n\n04-Feb-2014\nReviewed all code for needing explicit connection close. Add all cases as needed.\nAll unit test passed.\n\n08-Feb-2014\nWhen someone deletes a hierarchical object that has a relation where the deferred load is true the delete fails (foreign key constraints on relation table). \nThis is because the data is not present on the object and the ORM assumes there are no relationships or children to remove.\n\nChanging the ORM automatically load the relations and children.\n\n\n15-Feb-2014\nRan unit tests for SQLite, had to make a few fixes. In cases of IObjectChangedSupport and when we skipped due to an unchanged record, we did not close the transaction, apparently SQLite locks the database file until the Rollback.\nThese issues are due to the changes for explicit closes, SQLite is just more picky which makes sense as it’s a file database.\nThis does improve the ORM performance with SQLite, typically when I run the unit tests all at once, many write tests would fail as it only support one write.\nNow they all pass, seems SQLite know to wait for a pending close, before attempting another.\n\nI also tested Symbiotic with Local DB (Sql Server compact/express), all tests passed, and seems to work fine.\n\nFound a few cases where ISqlQuery parameter were not beign added for (ObtainHierarchy, ObtainItems), have never needed it but its available now.\n\nAdded checks for sql injection to the sql wrapper class: SqlQuerySimple",
  "requireLicenseAcceptance": false,
  "summary": "Stable, small, fast and simple to use micro ORM. Just add some attributes and begin loading, saving, updating hierarchical objects. You can choose to implement simple interfaces for more features.",
  "title": "Symbiotic ORM x86",
  "verbatimVersion": "4.0.1.0",
  "version": "4.0.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#Symbiotic_x86.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2251,
      "fullName": "Symbiotic_x86.nuspec",
      "length": 4951,
      "name": "Symbiotic_x86.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#content/Symbiotic_SDK_4.0.1.0.zip",
      "@type": "PackageEntry",
      "compressedLength": 7060976,
      "fullName": "content/Symbiotic_SDK_4.0.1.0.zip",
      "length": 7107072,
      "name": "Symbiotic_SDK_4.0.1.0.zip"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#lib/net35/FrozenElephant.Symbiotic.dll",
      "@type": "PackageEntry",
      "compressedLength": 35354,
      "fullName": "lib/net35/FrozenElephant.Symbiotic.dll",
      "length": 101888,
      "name": "FrozenElephant.Symbiotic.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#lib/net35/FrozenElephant.Symbiotic.xml",
      "@type": "PackageEntry",
      "compressedLength": 10392,
      "fullName": "lib/net35/FrozenElephant.Symbiotic.xml",
      "length": 91145,
      "name": "FrozenElephant.Symbiotic.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#lib/net451/FrozenElephant.Symbiotic.dll",
      "@type": "PackageEntry",
      "compressedLength": 35004,
      "fullName": "lib/net451/FrozenElephant.Symbiotic.dll",
      "length": 100864,
      "name": "FrozenElephant.Symbiotic.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#lib/net451/FrozenElephant.Symbiotic.xml",
      "@type": "PackageEntry",
      "compressedLength": 10295,
      "fullName": "lib/net451/FrozenElephant.Symbiotic.xml",
      "length": 90826,
      "name": "FrozenElephant.Symbiotic.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.09.08.39.30/symbiotic_x86.4.0.1.json#readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 152,
      "fullName": "readme.txt",
      "length": 210,
      "name": "readme.txt"
    }
  ],
  "tags": [
    "SODA",
    "Symbiotic",
    "ORM",
    "Micro-ORM",
    "Sql",
    "Server",
    "MySql",
    "Sqlite",
    "Oracle",
    "Frozen",
    "Elephant"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}