{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.25.17.25.04/smartit.payment.mockdb.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SmartIT by John Kocer",
  "catalog:commitId": "b64e01d6-9587-4daa-9fcc-009296fd244d",
  "catalog:commitTimeStamp": "2017-09-25T17:25:04.5091204Z",
  "copyright": "Copyright 2017 (c) SmartIT. All rights reserved.",
  "created": "2017-09-25T17:24:31.627Z",
  "description": "Package Description\nDevelopment Payment,Member, Product Mock Database, Fast API Development/Test Training",
  "id": "SmartIT.Payment.MockDB",
  "isPrerelease": false,
  "lastEdited": "2017-09-25T17:25:02.77Z",
  "listed": true,
  "packageHash": "K2fe3Q8QqKSGbsHk96q/lwADz6sbitSBP39iDOAAUBMAyFxY1d7ZdwtsAt2ZUOVjg7x5RjEcH+z4efSXMvhH2A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6692,
  "published": "2017-09-25T17:24:31.627Z",
  "releaseNotes": "Development Payment,Member, Product Mock Database, Fast API Development/Test Training\nvar member = new Member();\n      usage Example\n------------------------------------------------------\npublic class PaymentController : ControllerBase\n  {\n    private PaymentRespository _repository = PaymentRespository.Current;\n\n    [Route(\"api/GetMemberInfo\")]\n    [HttpPost]\n    public Member GetMemberInfo([FromBody]string id)\n    {\n      var errorMessage = string.Empty;\n      var member = new Member();\n      if (!string.IsNullOrEmpty(id))\n      {\n        Member found = _repository.Get(id);\n   \n        if (found != null)\n        {\n          member = found;\n          errorMessage = \"200 OK\";\n          member.ErrorMessage = errorMessage;\n          member.IsSuccess = true;\n        }\n        else\n        {\n          errorMessage = \"id: IsNullOrEmpty\";\n          member.ErrorMessage = errorMessage;\n          member.IsSuccess = false;\n        }\n      }\n      else\n      {\n        errorMessage = \" Query string arguments memberId is missing!\";\n      }\n   \n      return member;\n    }\n\n    [Route(\"api/MakePayment\")]\n    [HttpPost]\n    public Payment.Ui.DataAccess.Payment MakePayment([FromBody]DataAccess.Payment item)\n    {\n         if (string.IsNullOrEmpty(item.ExpirationDate))\n      {\n        item.IsSuccess = false;\n        item.ErrorMessage = \"expiration date is not valid!\";\n        return item;\n      }\n      var expirationMmYy = item.ExpirationDate.Split('/');\n      item.ErrorMessage = \"200 OK\";\n      item.PaymentMessage = \"Your payment of $\" + item.PaymentAmount + \" has been processed\";\n      return item;\n    }\n\n    [Route(\"api/GetProductList\")]\n    [HttpGet]\n    public List<Product> GetProductList(string filter)\n    {\n      var productList = _repository.GetAllProduct();\n      return productList;\n    }\n  }",
  "requireLicenseAcceptance": false,
  "summary": "Development Payment,Member, Product Mock Database, Fast API Development/Test Training",
  "title": "SmartIT.Payment.MockDB by John Kocer",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.25.17.25.04/smartit.payment.mockdb.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.25.17.25.04/smartit.payment.mockdb.1.0.0.json#SmartIT.Payment.MockDB.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1020,
      "fullName": "SmartIT.Payment.MockDB.nuspec",
      "length": 2873,
      "name": "SmartIT.Payment.MockDB.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.25.17.25.04/smartit.payment.mockdb.1.0.0.json#lib/netstandard2.0/SmartIT.Payment.MockDB.dll",
      "@type": "PackageEntry",
      "compressedLength": 3945,
      "fullName": "lib/netstandard2.0/SmartIT.Payment.MockDB.dll",
      "length": 9728,
      "name": "SmartIT.Payment.MockDB.dll"
    }
  ],
  "tags": [
    "Development",
    "Payment",
    "Member",
    "Product",
    "Mock",
    "Database",
    "Fast",
    "API",
    "Development/Test",
    "Training"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}