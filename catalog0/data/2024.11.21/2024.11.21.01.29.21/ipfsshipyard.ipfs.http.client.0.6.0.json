{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "IPFS Shipyard, Arlo Godfrey, Richard Schneider",
  "catalog:commitId": "aed29e3e-0685-4a80-9557-aa3a0cc2a6ad",
  "catalog:commitTimeStamp": "2024-11-21T01:29:21.0257205Z",
  "created": "2024-11-21T01:26:21.92Z",
  "description": "Backed by the IPFS Shipyard and developer community. Picking up where Richard Schneider left off.\n    \n    An easy to use .NET library for the IPFS HTTP Gateway API, and the Kubo RPC API v0.",
  "iconFile": "icon.png",
  "id": "IpfsShipyard.Ipfs.Http.Client",
  "isPrerelease": false,
  "lastEdited": "2024-11-21T01:29:10.41Z",
  "listed": true,
  "packageHash": "CjSPQfUL+1sYN411fHVLLJXB3+hOoIpcLYm8YW7x97DxFbFsNeUrrGkM876cRJtBqfllDUVSGPB/voHFkFby5g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 121414,
  "projectUrl": "https://github.com/ipfs-shipyard/net-ipfs-http-client",
  "published": "2024-11-21T01:26:21.92Z",
  "releaseNotes": "--- 0.6.0 ---\n[Breaking]\nFixed WebRTC-Direct support added in Kubo 0.30.0.\nRemoved the Object API completely, since Kubo replaced it with the DAG API and no longer offers it.\nRefactored the FileSystem API to:\n  - Enable proper directory uploads via a new `AddAsync` method that takes File and Folder parts separately.\n  - Bring `FileAddOptions` fully up-to-date with modern Kubo.\n  - Remove `AddDirectoryAsync` (used missing Object API).\nUpdated several types to use one of int, long or ulong for Size matching the Kubo API.\nMerkleNode no longer has a static internal IpfsClient, and several properties that performed async calls synchronously were adjusted or removed.\nBlock.DataBytes was removed as it was unused by any known interface or implementation.\n\n[New]\nAdded FilestoreApi and the corresponding types.\n\n[Improvements]\nFilesystemApi.AddAsync now uses chunked transfer encoding, enabling uploading of very large files or groups of files.\n\n--- 0.5.1 ---\n[New]\nAdded support for MfsWriteOptions.Flush in MfsApi.WriteAsync.\n\n[Improvements]\nUpdated to IpfsShipyard.Ipfs.Core 0.6.1.\n\n--- 0.5.0 ---\n[Breaking]\nInherited breaking changes from IpfsShipyard.Ipfs.Core 0.6.0. See release notes for details.\n\n[New]\nImplemented MfsApi.ReadFileStreamAsync.\n\n--- 0.4.0 ---\n[Breaking]\nNo breaking changes for code in this library.\nInherited breaking changes from IpfsShipyard.Ipfs.Core 0.5.0. See release notes for details.\n\n--- 0.3.0 ---\n[Breaking]\nNo breaking changes for code in this library.\nInherited breaking changes from IpfsShipyard.Ipfs.Core 0.4.0. See release notes for details.\n\n[Improvements]\nUpdated all package dependencies to latest version.\n\n--- 0.2.0 ---\n[Breaking]\nInherited breaking changes from IpfsShipyard.Ipfs.Core 0.2.0 and 0.3.0.\nIDataBlock.DataStream was removed. This pattern encouraged async calls behind synchronous property getters, which is a bad practice and can cause deadlocks. Call the async methods directly on the API instead.\nThe obsolete IFileSystemApi.ListFileAsync was removed due to prior deprecation and removal in Kubo 0.26.0. Use IFileSystemApi.ListAsync and MfsApi.StatAsync instead. See https://github.com/ipfs/kubo/issues/7493#issuecomment-2016563729.\n\n[New]\nAdded missing IFileSystemApi.ListAsync. Doesn't fully replace the removed IFileSystemApi.ListFileAsync, but is a step in the right direction. See https://github.com/ipfs/kubo/issues/7493#issuecomment-2016563729.",
  "repository": "",
  "title": "IPFS HTTP Client",
  "verbatimVersion": "0.6.0",
  "version": "0.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#dependencygroup/.netstandard2.0/ipfsshipyard.ipfs.core",
          "@type": "PackageDependency",
          "id": "IpfsShipyard.Ipfs.Core",
          "range": "[0.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#dependencygroup/.netstandard2.0/microsoft.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CSharp",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#dependencygroup/.netstandard2.0/multiformats.base",
          "@type": "PackageDependency",
          "id": "Multiformats.Base",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.3, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#IpfsShipyard.Ipfs.Http.Client.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1614,
      "fullName": "IpfsShipyard.Ipfs.Http.Client.nuspec",
      "length": 3765,
      "name": "IpfsShipyard.Ipfs.Http.Client.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#lib/netstandard2.0/IpfsShipyard.Ipfs.Http.Client.pdb",
      "@type": "PackageEntry",
      "compressedLength": 36741,
      "fullName": "lib/netstandard2.0/IpfsShipyard.Ipfs.Http.Client.pdb",
      "length": 56840,
      "name": "IpfsShipyard.Ipfs.Http.Client.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#lib/netstandard2.0/IpfsShipyard.Ipfs.Http.Client.dll",
      "@type": "PackageEntry",
      "compressedLength": 55490,
      "fullName": "lib/netstandard2.0/IpfsShipyard.Ipfs.Http.Client.dll",
      "length": 137728,
      "name": "IpfsShipyard.Ipfs.Http.Client.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#lib/netstandard2.0/IpfsShipyard.Ipfs.Http.Client.xml",
      "@type": "PackageEntry",
      "compressedLength": 8717,
      "fullName": "lib/netstandard2.0/IpfsShipyard.Ipfs.Http.Client.xml",
      "length": 66415,
      "name": "IpfsShipyard.Ipfs.Http.Client.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 3525,
      "fullName": "icon.png",
      "length": 3520,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.21.01.29.21/ipfsshipyard.ipfs.http.client.0.6.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12924,
      "fullName": ".signature.p7s",
      "length": 12924,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ipfs",
    "peer-to-peer",
    "distributed",
    "file-system"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}