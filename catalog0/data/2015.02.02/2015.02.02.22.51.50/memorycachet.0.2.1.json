{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.22.51.50/memorycachet.0.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ufuk Hacıoğulları",
  "catalog:commitId": "3e3c0256-8374-498d-b89a-2881606e78d7",
  "catalog:commitTimeStamp": "2015-02-02T22:51:50.6026022Z",
  "created": "2013-01-01T20:07:34.653Z",
  "description": "MemoryCacheT is a simple in-memory cache with eviction options.",
  "id": "MemoryCacheT",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "kCl/O20CYDF/ViyPRKPbE4urY+iyEQ417r7Y4Zj+CvuGlGS9SiZfc/E6o38yW3GBCsslE6alU0XPzaSsni8wbg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37278,
  "projectUrl": "https://github.com/uhaciogullari/MemoryCacheT",
  "published": "2013-01-01T20:07:34.983Z",
  "requireLicenseAcceptance": false,
  "summary": "MemoryCacheT simply wraps System.Collections.Concurrent.ConcurrentDictionary class and offers some options for expiring elements.",
  "version": "0.2.1",
  "tags": [
    "caching"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}