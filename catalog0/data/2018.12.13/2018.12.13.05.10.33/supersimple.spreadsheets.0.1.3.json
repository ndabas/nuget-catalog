{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.05.10.33/supersimple.spreadsheets.0.1.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Savvas Kleanthous",
  "catalog:commitId": "f6b552aa-4021-447b-aa93-24ca6aff48d2",
  "catalog:commitTimeStamp": "2018-12-13T05:10:33.5079424Z",
  "copyright": "Copyright 2017",
  "created": "2017-12-06T15:36:59.033Z",
  "description": "Read and save to .xlsx made easy. For the developer that has better things to do that work with spreadsheets but just has to provide something to the business. The purpose of this package is to minimize the learning curve required to start saving to excel files or reading spreadsheet files uploaded from users.",
  "id": "SuperSimple.Spreadsheets",
  "isPrerelease": false,
  "lastEdited": "2018-12-13T05:10:32.77Z",
  "licenseUrl": "https://github.com/skleanthous/SuperSimple.Spreadsheets/blob/dev/LICENSE",
  "listed": true,
  "packageHash": "ZWCH4odIbSCx3RL/fRWgI8oT9Ui4u+294TLVZsicGCy/1fqlj3DMx5p4Vm4QlarlD5L5ZPld4+1cFBUdpiQLdQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25324,
  "projectUrl": "https://github.com/skleanthous/SuperSimple.Spreadsheets",
  "published": "2017-12-06T15:36:59.033Z",
  "releaseNotes": "Added flag to allow for not ignoring null cells in rows when reading a spreadsheet. Now loader uses spans to not skip empty cells and returns cells as Excel does. Excel: you are weird.",
  "requireLicenseAcceptance": false,
  "title": "SuperSimple.Spreadsheets",
  "verbatimVersion": "0.1.3",
  "version": "0.1.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.05.10.33/supersimple.spreadsheets.0.1.3.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.05.10.33/supersimple.spreadsheets.0.1.3.json#dependencygroup/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.5.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.05.10.33/supersimple.spreadsheets.0.1.3.json#SuperSimple.Spreadsheets.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 661,
      "fullName": "SuperSimple.Spreadsheets.nuspec",
      "length": 1365,
      "name": "SuperSimple.Spreadsheets.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.05.10.33/supersimple.spreadsheets.0.1.3.json#lib/net451/SuperSimple.Spreadsheets.dll",
      "@type": "PackageEntry",
      "compressedLength": 13275,
      "fullName": "lib/net451/SuperSimple.Spreadsheets.dll",
      "length": 30720,
      "name": "SuperSimple.Spreadsheets.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.05.10.33/supersimple.spreadsheets.0.1.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Excel",
    "Spreadsheet",
    "OpenXml"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}