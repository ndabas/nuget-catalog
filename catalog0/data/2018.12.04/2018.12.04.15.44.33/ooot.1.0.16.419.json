{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Matt Campbell",
  "catalog:commitId": "b8717d1e-7671-4381-ae39-8f624f1a6729",
  "catalog:commitTimeStamp": "2018-12-04T15:44:33.9436229Z",
  "copyright": "2010",
  "created": "2016-04-19T20:01:00.923Z",
  "description": "A library (.dll) of various linear, nonlinear, and stochastic numerical optimization techniques. While some of these are older than 40 years, many have yet to take advantage of an object-oriented programming model. This toolbox was originally created to aid in the automated design of various engineering artifacts.\n\nThe following “class diagram” shows the main optimization methods that have currently been implemented – as well as some insight into organization of classes and objects.  The best way to understand how to use OOOT, is through examples. There are two basic types of methods implemented so far: methods for continuous variables and methods for discrete variables. Approaches for mixed methods such as Branch-and-Bound are planned but not currently included.\n\nClassDiagram1Many of the optimization methods for real valued decision variables will require that a line-search method be specified (Arithmetic Mean, Golden Section, DSC-Powell) and a search direction method (Cyclic Coordinate Search, Steepest Descent, Powell’s Method, Fletcher-Reeves, or Broyden-Fletcher-Goldfarb-Shanno).\n\nWith this modular design it is possible to reconfigure these to create 80 unique algorithms. In addition to these there are also ten different convergence criteria that can be added  individually or in any combination to these 80 algorithms.  Read more about convergence methods here.\n\nBut, one of the biggest advantages of the toolbox is the way that objective functions, equalities and inequalities can be easily added to the optimization process. Most (if not all open source approaches) optimization codes requires the problem specific details to be compiled along with the algorithm. Here, the problem formulation can be in another library or exe and can be customized at run-time instead of compile time. It is even possible to have the optimization algorithm change in response to the nature of the design variables and the number of constraints.  Read more about problem formulation",
  "id": "OOOT",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-04T15:44:22.613Z",
  "licenseUrl": "https://ooot.codeplex.com/license",
  "listed": true,
  "packageHash": "KFQjiIsq909FUuUjWd+WKU6bPIy7J0t4NLogDTkEfRmZMDC09+UqF6p5eVFMmO/kMowiwaVOjeeoHlYcL8olAg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 180215,
  "projectUrl": "https://ooot.codeplex.com/",
  "published": "2016-04-19T20:01:00.923Z",
  "requireLicenseAcceptance": false,
  "summary": "A library (.dll) of various linear, nonlinear, and stochastic numerical optimization techniques. While some of these are older than 40 years, many have yet to take advantage of an object-oriented prog",
  "title": "OOOT: Object-Oriented Optimization Toolbox",
  "verbatimVersion": "1.0.16.0419",
  "version": "1.0.16.419",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#dependencygroup/.netportable0.0-net45+win+monoandroid10+monotouch10",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#dependencygroup/.netportable0.0-net45+win+monoandroid10+monotouch10/starmath",
          "@type": "PackageDependency",
          "id": "StarMath",
          "range": "[1.0.14.827, )"
        }
      ],
      "targetFramework": ".NETPortable0.0-net45+win+MonoAndroid10+MonoTouch10"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#OOOT.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1465,
      "fullName": "OOOT.nuspec",
      "length": 3209,
      "name": "OOOT.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#content/OptimizationToolbox.XML",
      "@type": "PackageEntry",
      "compressedLength": 13753,
      "fullName": "content/OptimizationToolbox.XML",
      "length": 116280,
      "name": "OptimizationToolbox.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#lib/OptimizationToolbox.dll",
      "@type": "PackageEntry",
      "compressedLength": 51152,
      "fullName": "lib/OptimizationToolbox.dll",
      "length": 126464,
      "name": "OptimizationToolbox.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#lib/OptimizationToolbox.pdb",
      "@type": "PackageEntry",
      "compressedLength": 99416,
      "fullName": "lib/OptimizationToolbox.pdb",
      "length": 429568,
      "name": "OptimizationToolbox.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.15.44.33/ooot.1.0.16.419.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "numerical",
    "optimization",
    "nonlinear",
    "programming"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}