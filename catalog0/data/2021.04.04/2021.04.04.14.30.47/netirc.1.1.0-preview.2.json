{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Fredi Machado",
  "catalog:commitId": "885841ac-614a-48f3-8a28-7e7be05423eb",
  "catalog:commitTimeStamp": "2021-04-04T14:30:47.0580063Z",
  "copyright": "Copyright Fredi Machado",
  "created": "2021-04-04T14:28:59.093Z",
  "description": "Simple open-source Portable IRC Client Library written in C# targeting .NETStandard 2.0 and .NET Framework 4.6.1",
  "iconFile": "icon.png",
  "id": "NetIRC",
  "isPrerelease": true,
  "lastEdited": "2021-04-04T14:30:34.843Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "RrhVkLuMeg72PN+BkQCir4YZvr/P2a0fE16kGvRDJcE37u0CU26mrhVY5Ex9l4FXxMAtlfjttrfY8AE0N1uIWA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 63159,
  "projectUrl": "https://github.com/fredimachado/NetIRC",
  "published": "2021-04-04T14:28:59.093Z",
  "releaseNotes": "## 1.1.0-preview.2\n Use PackageReleaseNotes instead of PackageDescription\n\n## 1.1.0-preview.1\n Update release.yml\n Add release notes to NuGet package\n Setting dispatcher invoker action to null should throw\n Test IComparer implementation in ChannelUserComparer\n Fixes sending PrivMsg with no spaces and starting with colon\n Set DispatcherInvoker in constructor\n Added channel user comparer for sorting\n Enable setting a dispatcher invoker method\n Refactor ServerMessage tests and add Timestamp test\n Rename Date to Timestamp in messages\n Handle some numeric replies and add to server messages\n (tag: v1.1.0-alpha) Fix version\n Renamed events (BREAKING CHANGE)\n Add basic CTCP handling\n Fix test for IRCMessage not implementing IClientMessage\n Test validation of custom message handler registration\n Fix package description\n Small refactoring and added WebSocketClientConnection\n Moved collections to Collections folder\n Don't build on windows, it's too slow\n Hey, that's some more tests...\n Some more tests\n Remove unnecessary null coalescing operator\n Use private setters in IRCMessage properties\n Make Comment immutable\n Added more tests and refactored a few others\n Micro performance improvement\n Add CreatedDate to IRCMessage\n Add property to identity a Channel Notice\n Add ModeMessage for MODE command\n Add ability to send array of channels to PartMessage\n Remove unused messages for now\n Add ability to send array of channels or dictionary to JoinMessage\n Add Kick message and handler\n Small refactoring\n Channel GetUser\n Add channel user with no status\n Regular dispose\n Disable test parallelization for now\n Stop TCP listeners\n Sample: move classes to their own files\n Small refactor and tests\n Add Client connection tests\n Remove unnecessary lines from csproj\n\n## 1.0.0\n Refactoring pre-1.0 (#9)\n Add coverage status badge\n Fix token\n Set coverallsapp version\n Add code coverage\n Fix push condition\n Add os matrix\n Fix launching Console client from VS Code\n Ignore CI build for changes in .vscode folder\n Update README.md\n Added GitHub Workflows. Some cleanup (#8)\n Version 0.1.2\n Update dotnet-steps.yml\n Update NetIRC.ConsoleCli.csproj\n Use .NET Core 3.1.x\n Update Azure Pipeline images\n Update test project target framework and packages\n Tests are fixed\n Update a new dispose pattern\n Use SafeFireAndForget when running data receiver\n Add ConfigureAwait(false) since we don't care what thread we return to\n Add null/empty check (#5)\n Generate version (#2)\n Set up CI with Azure Pipelines (#1)\n Update Codecov badge\n No colors\n Update README.md\n Update Build.ps1\n Allow sending PASS to the server\n Update to .NET Core 2.1\n Updating Github username\n Even more tests :)\n More tests\n Wait for DataReceived to be trigger before disposing server connection\n Refactoring TcpClientConnection tests\n Updated timeout for disconnect test. Appveyor is driving me crazy!! :P\n Added more tests\n Not using INotifyPropertyChanged in Query yet\n Handle nick change\n Updated the disconnect test to go through the entire pipeline\n Added test for user leaving channel and refactored client tests\n Added missing tests for the EventHub - RegistrationCompleted event - Nick event\n Use ManualResetEvent when only a flag is needed\n Fix deployment to MyGet\n Added NuGet badge\n\n## 0.1.1\n Version 0.1.1\n Trying to achieve 100% coverage in TcpClientConnection\n Hmm.. Am I talking to the git repo? \\o/\n Yeahh, let's see!\n Apparently same tests take too long to execute in Appveyor\n Added on more TcpClientConnection test and refactored a couple of others - Using ManualResetEvent to make sure the event is triggered and make sure we don't block for more time than it's necessary\n Refactored RunDataReceiver\n Refactored some tests and added on more for TcpClientConnection class\n Enable executing CodeCoverage.ps1 locally\n Ignore OpenCover and coverage xml\n Ignore OpenCover\n Changed license to MIT\n Add .vscode configs\n Disable gcov\n Converting CodeCoverage.cmd to a PowerShell script\n Update README.md\n Started writing some test to the TcpClientConnection class\n Restore code coverage\n Updated README.md\n Some changes in the CI/CD pipeline\n Update README.md\n Fixing code coverage\n Get code coverage results for NetIRC.csproj\n Fix typo\n Code Coverage FTW!\n Added more documentation in classes, methods, events and properties\n Renamed Users to Peers in the Client class\n Update appveyor.yml\n Update README\n Update folder structure\n Update project information\n Started writing some documentation\n Cleaning up some tests\n xUnit: Show method name only in test runners\n Change build configuration in appveyor\n Added appveyor.yml\n Fix version\n Added script to modify the version of the package\n Update project description\n Removed appveyor.yml until I configure it properly\n Updated to .NET Core 1.1\n Trying to fix CI\n Added appveyor.yml\n Added Query and QueryCollection classes plus some cleanups\n Added Channel OnMessageReceived event\n PART and QUIT messages\n Modeling users and channels. Parsing and processing RPL_NAMREPLY messages\n JOIN Message\n Connection Connected and Disconnected events\n Separating server and client messages\n Removed unused code\n Created messages and events to registration numeric replies\n Treating the trailing as a parameter, cause that's what it is :) It just happens to be the last one\n NOTICE message\n Minor changes and cleanups\n USER message\n NICK message implementation\n Refactoring a couple of tests\n Created ServerMessage class that represents both server and client messages and can trigger events of the EventHub when the message is received from the server. An IRCMessage alone is just ment to be client messages, for example, the PONG message.\n Sending messages in a more object oriented way :)\n PrivMsg message, Ping and Pong commands\n Passing the client as the sender in IRC message event handlers\n Created an Event Hub to provide events for messages and commands Some more refactorings\n Update README.md\n More simplification\n Simplifying the TcpClientConnection class\n Updated README.md\n Converted it into a Portable library targeting .NETStandard 1.3\n Using C# 6 getter-only auto-properties\n Temp icon\n Created Base IRC EventArgs\n Updated console client using the new OnPrivMsgReceived event\n Created event OnPrivMsgReceived\n Using IRCCommand Enum instead of comparing string\n Parsing numeric reply Enum\n Parsing IRC command Enum\n Bot checks only direct messages\n Implemented a very simple IRC Bot to execute commands received\n Parsing IRC prefix\n Nice IRCMessage ToString override\n Flush after writing to the stream\n Simplified irc message parsing\n Created event OnIRCMessageReceived\n Parsing more complete data with trailing\n Parsing data with two parameters\n Parsing a command with single parameter\n Started the raw data parser\n Added RFC and other documentation\n Fixed exception after disposing the TCP socket\n Added basic console client functionality\n Send NICK and USER when connected\n Responding PING messages\n OnRawDataReceived event and unit tests\n Added Moq Nuget package\n Added tests project\n Base client and TCP connection\n Initial commit",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.1.0-preview.2",
  "version": "1.1.0-preview.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#dependencygroup/.netframework4.6.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#dependencygroup/.netframework4.6.1/system.memory",
          "@type": "PackageDependency",
          "id": "System.Memory",
          "range": "[4.5.4, )"
        }
      ],
      "targetFramework": ".NETFramework4.6.1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#dependencygroup/.netstandard2.0/system.memory",
          "@type": "PackageDependency",
          "id": "System.Memory",
          "range": "[4.5.4, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#NetIRC.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3444,
      "fullName": "NetIRC.nuspec",
      "length": 8293,
      "name": "NetIRC.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#lib/net461/NetIRC.dll",
      "@type": "PackageEntry",
      "compressedLength": 23792,
      "fullName": "lib/net461/NetIRC.dll",
      "length": 53248,
      "name": "NetIRC.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#lib/netstandard2.0/NetIRC.dll",
      "@type": "PackageEntry",
      "compressedLength": 23733,
      "fullName": "lib/netstandard2.0/NetIRC.dll",
      "length": 53248,
      "name": "NetIRC.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 772,
      "fullName": "icon.png",
      "length": 958,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.04.14.30.47/netirc.1.1.0-preview.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "irc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}