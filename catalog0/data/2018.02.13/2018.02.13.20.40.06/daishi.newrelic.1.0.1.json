{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.13.20.40.06/daishi.newrelic.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Paul Mooney",
  "catalog:commitId": "f21815bc-e752-4592-b754-13fd08217e98",
  "catalog:commitTimeStamp": "2018-02-13T20:40:06.4067813Z",
  "copyright": "Copyright 2016",
  "created": "2016-06-17T08:44:55.437Z",
  "description": "New Relic Tools for .NET is an unobtrusive New Relic logging-service, designed to run as a background task in ASP.NET, or Windows applications. It currently supports New Relic Insights, is fully asynchronous, and proxy-aware.",
  "id": "Daishi.NewRelic",
  "isPrerelease": false,
  "lastEdited": "2018-02-13T20:39:54.373Z",
  "licenseUrl": "https://www.dropbox.com/s/pqhl1bj6xxxs2cf/License.txt?dl=0",
  "listed": true,
  "packageHash": "ODWSI3DlVIDJ11azDLajGNCktEX4XdbhrEZH1rHRyn++5PSLUiPocDi3UoxuzgT+hyd6OPw+PbFKw8bpjXvdDA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9815,
  "projectUrl": "https://github.com/daishisystems/Daishi.NewRelic",
  "published": "2016-06-17T08:44:55.437Z",
  "releaseNotes": "Added serializable attributes to custom exceptions, and removed unnecessary references.",
  "requireLicenseAcceptance": false,
  "summary": "New Relic Tools for .NET provides features such as uploading events to New Relic Insights on-the-fly, as well as caching events for background batch-upload, at regular intervals. It consumes a single thread only, to facilitate \"silent-upload\" mode, and can be restricted in terms of its maximum memory-footprint size.",
  "title": "New Relic Tools for .NET",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.13.20.40.06/daishi.newrelic.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.13.20.40.06/daishi.newrelic.1.0.1.json#dependencygroup/fluentscheduler",
          "@type": "PackageDependency",
          "id": "FluentScheduler",
          "range": "[4.1.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.13.20.40.06/daishi.newrelic.1.0.1.json#dependencygroup/jil",
          "@type": "PackageDependency",
          "id": "Jil",
          "range": "[2.14.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.13.20.40.06/daishi.newrelic.1.0.1.json#Daishi.NewRelic.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 754,
      "fullName": "Daishi.NewRelic.nuspec",
      "length": 1507,
      "name": "Daishi.NewRelic.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.13.20.40.06/daishi.newrelic.1.0.1.json#lib/net452/Daishi.NewRelic.Insights.dll",
      "@type": "PackageEntry",
      "compressedLength": 7370,
      "fullName": "lib/net452/Daishi.NewRelic.Insights.dll",
      "length": 16384,
      "name": "Daishi.NewRelic.Insights.dll"
    }
  ],
  "tags": [
    "New",
    "Relic",
    "Insights",
    "Tools",
    ".NET"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}