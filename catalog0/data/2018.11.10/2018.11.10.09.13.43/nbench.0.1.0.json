{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.09.13.43/nbench.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aaron Stannard",
  "catalog:commitId": "e3e57ed9-57b3-46ab-9ec5-2e9516a20d2f",
  "catalog:commitTimeStamp": "2018-11-10T09:13:43.2695824Z",
  "copyright": "Copyright Â© 2015",
  "created": "2015-12-04T17:45:49.97Z",
  "description": "NBench is a cross-platform automated performance profiling and testing framework for.NET applications.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.09.13.43/nbench.0.1.0.json#frameworkassemblygroup/.netframework4.5",
    "assembly": [
      "System.Core",
      "System",
      "Microsoft.CSharp"
    ],
    "targetFramework": ".NETFramework4.5"
  },
  "id": "NBench",
  "isPrerelease": false,
  "lastEdited": "2018-11-10T09:13:32.95Z",
  "licenseUrl": "https://github.com/petabridge/NBench/blob/master/LICENSE",
  "listed": true,
  "packageHash": "5WAUGjKxLLPb+dcPwruR9n5vpDuNrh9XWrEAeGmZ3bowk8qoy5ItVK8OF8Q7gLcYLyMvdFvCW+5/W6HBGZCzMA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 41602,
  "projectUrl": "https://github.com/petabridge/NBench",
  "published": "2015-12-04T17:45:49.97Z",
  "releaseNotes": "First \"production-ready\" release of NBench.\nPlease see our detailed [NBench README and FAQ](https://github.com/petabridge/nbench) for instructions and documentation!\nTo use NBench, install the NBench package from NuGet:\n```\nPS> Install-Package NBench\n```\nAnd then create a POCO class with a default constructor and some methods, like this:\n```csharp\nusing NBench.Util;\nusing NBench;\n/// <summary>\n/// Test to see if we can achieve max throughput on a <see cref=\"AtomicCounter\"/>\n/// </summary>\npublic class CounterPerfSpecs\n{\nprivate Counter _counter;\n[PerfSetup]\npublic void Setup(BenchmarkContext context)\n{\n_counter = context.GetCounter(\"TestCounter\");\n}\n[PerfBenchmark(Description = \"Test to ensure that a minimal throughput test can be rapidly executed.\",\nNumberOfIterations = 3, RunMode = RunMode.Throughput,\nRunTimeMilliseconds = 1000, TestMode = TestMode.Test)]\n[CounterThroughputAssertion(\"TestCounter\", MustBe.GreaterThan, 10000000.0d)]\n[MemoryAssertion(MemoryMetric.TotalBytesAllocated, MustBe.LessThanOrEqualTo, ByteConstants.ThirtyTwoKb)]\n[GcTotalAssertion(GcMetric.TotalCollections, GcGeneration.Gen2, MustBe.ExactlyEqualTo, 0.0d)]\npublic void Benchmark()\n{\n_counter.Increment();\n}\n[PerfCleanup]\npublic void Cleanup(){\n// does nothing\n}\n}\n```\nAfter defining some NBench `PerfBenchmark` methods and declaring some measurements, you can run your benchmark by downloading the `NBench.Runner.exe` via NuGet.\n```\nPS> Install-Package NBench.Runner\nPS> .\\packages\\NBench.Runner\\NBench.Runner.exe .\\src\\bin\\Debug\\MyPerfTests.dll output-directory=\"C:\\Perf\"\n```\nAnd this command will run your `PerfBenchmark` and write output [that looks like this](https://gist.github.com/Aaronontheweb/8e0bfa2cccc63f5bd8bf) to a markdown file in the `output-directory`.",
  "requireLicenseAcceptance": false,
  "title": "NBench",
  "verbatimVersion": "0.1.0",
  "version": "0.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.09.13.43/nbench.0.1.0.json#NBench.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1334,
      "fullName": "NBench.nuspec",
      "length": 2913,
      "name": "NBench.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.09.13.43/nbench.0.1.0.json#lib/net45/NBench.dll",
      "@type": "PackageEntry",
      "compressedLength": 28125,
      "fullName": "lib/net45/NBench.dll",
      "length": 66048,
      "name": "NBench.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.09.13.43/nbench.0.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9481,
      "fullName": ".signature.p7s",
      "length": 9481,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "performance",
    "benchmarking",
    "benchmark",
    "perf",
    "testing",
    "NBench"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}