{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Mortensen",
  "catalog:commitId": "252bc170-493a-444d-8c30-67468af12848",
  "catalog:commitTimeStamp": "2019-02-10T13:50:24.2409935Z",
  "copyright": "Copyright Â© Weubphoria 2009-2019. All rights reserved.",
  "created": "2019-02-10T13:45:58.747Z",
  "description": "The Cuemon.Core assembly is the patriarch of the Cuemon .NET Standard family and provides fundamental-, utility- and base-classes that define commonly-used value and reference data types, events and event handlers, interfaces, attribute, and feature rich delegates to greatly support functional programming.",
  "iconUrl": "https://nblcdn.net/themes/cuemon.net/img/core/128x128x.png",
  "id": "Cuemon.Core",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2019-02-10T13:50:08.577Z",
  "licenseUrl": "https://github.com/gimlichael/CuemonCore/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "vmtojVOH/3nPtSoD5+PVBiENvtMFSUzb/j+4HcBP2Ickq8AvFmXcq4yDVc9Jtdv9mhOmGJ38CnepyTI4qlvIVg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 245209,
  "projectUrl": "https://www.cuemon.net/",
  "published": "2019-02-10T13:45:58.747Z",
  "releaseNotes": "5.0.2019.40\n* CHANGED - ExceptionDescriptor class in the Cuemon.Diagnostics namespace was made more true to it's given context and simple in implementation; eg. RequestId was removed, HelpLink was made public read-write property and the setup delegate (ExceptionDescriptorOptions) was removed\n* REMOVED - ExceptionDescriptorOptions class in the Cuemon.Diagnostics namespace\n* ADDED - DynamicRequest class in the Cuemon.Messaging namespace that provides a factory based way to create and wrap an IRequest implementation\n* ADDED - IRequest interface in the Cuemon.Messaging namespace that provides a Request ID that is an unique identifier which is attached to requests and messages that allow reference to a particular transaction\n\n5.0.2019.30\n* ADDED - New extension for Stream in the Cuemon.IO namespace: WriteAsync\n* ADDED - New extensions for Type in the Cuemon namespace: GetRuntimePropertiesExceptOf and IsSimple\n\n5.0.2019.20\n* CHANGED - Consolidated DateTimeUtility and DateTimeUtilityExtensions class in Cuemon namespace to DateTimeExtensions class\n* REMOVED - DateTimeUtility class in the Cuemon namespace\n* REMOVED - DateTimeUtilityExtensions class in the Cuemon namespace\n* ADDED - New extension method for TimeSpan in the Cuemon namespace: Floor, Ceiling and Round\n* ADDED - New overloaded extension method for ICollection{T} in the Cuemon.Collections.Generic namespace: AddRange\n\n5.0.2018.310\n* REMOVED - ExecuteMethodAsync, BeginExecuteMethod and EndExecuteMethod on the ActionFactory class in the Cuemon namespace as .NET Core does not support BeginInvoke and EndInvoke (so much for same API)\n* REMOVED - ExecuteMethodAsync, BeginExecuteMethod and EndExecuteMethod on the FuncFactory class in the Cuemon namespace as .NET Core does not support BeginInvoke and EndInvoke (so much for same API)\n\n5.0.2018.256\n* ADDED - New extensions for ICollection{T}: AddRange\n* ADDED - New extensions for IList{T}: Remove\n\n5.0.2018.253\n* ADDED - EncodingConverter class in the Cuemon.Text namespace that is designed to make Encoding conversions easier to work with\n* ADDED - New extensions for Encoding: ToEncodedString\n* ADDED - FallbackEncodingOptions class in the Cuemon.Text namespace that specifies options that is related to Encoding operations\n\n5.0.2018.251\n* FIXED - The extension method for IEnumerable{T}: Shuffle{T} was fixed so it no longer skips one item\n\n5.0.2018.250\n* PRELUDE - This is a major release with breaking changes through out the assembly family\n* CHANGED - Refactored and moved ExceptionDescriptor class from Cuemon namespace to Cuemon.Diagnostics\n* CHANGED - Refactored and moved ExceptionDescriptorAttribute class from Cuemon namespace to Cuemon.Diagnostics\n* ADDED - IMessageLocalizer interface in the Cuemon.Globalization namespace that provides a generic way to support localized messages on attribute decorated methods\n* ADDED - Support for localization of fault messages on ExceptionDescriptorAttribute class\n* ADDED - ExceptionDescriptorOptions class in the Cuemon.Diagnostics namespace that specifies options that is related to ExceptionDescriptor\n* CHANGED - Wrapper class in the Cuemon namespace received a simplified constructor\n* ADDED - New extensions for {T}: UseWrapper (Wrap and extend an existing object of {T} with additional data)\n* ADDED - Two new validation methods on Validator class in the Cuemon namespace; ThrowIfDistinctDifference and ThrowIfNotDistinctDifference\n* CHANGED - ContainsInterface on the TypeUtility class in the Cuemon namespace to include self (should self be an interface)\n* ADDED - IConfigurable interface in the Cuemon.Configuration namespace that provides a generic way to support the options pattern on a class level\n* ADDED - Configurable abstract class in the Cuemon.Configuration namespace that provides a generic base class to support the options pattern on a class level\n* FIXED - TryParse on EncodingUtility class in the Cuemon.Text namespace no longer throws exception when byte array is less than fourn in length\n* ADDED - ICorrelation interface in the Cuemon.Messaging namespace that provides a Correlation ID (also known as a Request ID) that is a unique identifier which is attached to requests and messages that allow reference to a particular transaction or event chain\n* ADDED - DynamicCorrelation class in the Cuemon.Messaging namespace that provides a factory based way to create and wrap an ICorrelation implementation\n* ADDED - ChecksumResult class in the Cuemon.Integrity namespace that represents the result of a computed checksum operation\n* CHANGED - TimeMeasureOptions class in the Cuemon.Diagnostics namespace is no longer sealed\n\n4.3.2018.2200\n* ADDED - AsyncOptions class in the Cuemon.Threading namespace that specifies options that is related to asynchronous operations\n\n4.3.2018.2070\n* CHANGED - Assembly version 4.2.2017.0 --> 4.3.2018.205\n* CHANGED - Renamed Remove --> RemoveAll on the StringUtility and StringUtilityExtensions class in the Cuemon namespace (breaking)\n* ADDED - New extensions for Task: ContinueWithCapturedContext, ContinueWithSuppressedContext\n* ADDED - New extensions for Task{TResult}: ContinueWithCapturedContext, ContinueWithSuppressedContext\n* CHANGED - HashUtility and HashUtilityExtensions class in the Cuemon.Security.Cryptography namespace was refactored to support the options pattern\n* CHANGED - HmacUtility and HmacUtilityExtensions class in the Cuemon.Security.Cryptography namespace was refactored to support the options pattern\n* ADDED - HashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to HashAlgorithm operations\n* ADDED - KeyedHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to KeyedHashAlgorithm operations\n* ADDED - StreamHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to HashAlgorithm operations\n* ADDED - StreamKeyedHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to KeyedHashAlgorithm operations\n* ADDED - StringHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to HashAlgorithm operations\n* ADDED - StringKeyedHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to KeyedHashAlgorithm operations\n\n4.2.2018.840\n* PRELUDE - Microsoft has now proven that .NET Standard is the way to go why per assembly download is re-introduced again\n\n4.2.2017.2270\n* CHANGED - Renamed FromChars --> ToEnumerable on the StringConverter class in the Cuemon namespace\n* ADDED - StringConverter class in the Cuemon namespace received one new method; FromChars\n* ADDED - New extensions for IEnumerable{Char}: FromChars\n* ADDED - StringUtility class in the Cuemon namespace received three new methods; two overloaded HasConsecutiveCharacters and one ParseDistinctDifference\n\n4.2.2017.2250\n* ADDED - New extensions for IDictionary{TKey,TValue}: TryGetValue, GetValueOrDefault\n* ADDED - ConditionalCollection{T} class in the Cuemon.Collections.Generic namespace that provides an abstract base class for a generic, conditional collection\n* ADDED - Initializer class in the Cuemon namespace that provides a generic way to wrap and initialize a class for countless scenarios\n* ADDED - InitializerBuilder{T} class in the Cuemon namespace that supports the Initializer class for building custom initializers\n\n4.2.2017.900\n* FIXED - All async/await methods now uses ConfigureAwait(false)\n* ADDED - ActionFactory class in the Cuemon namespace received a Task based method; ExecuteMethodAsync (TAP)\n* ADDED - FuncFactory class in the Cuemon namespace received a Task{TResult} based method; ExecuteMethodAsync (TAP)\n* ADDED - TaskActionFactory class in the Cuemon namespace that provides access to factory methods for creating instances that encapsulate a Task based function delegate with a variable amount of generic arguments (TAP)\n* ADDED - TaskFuncFactory class in the Cuemon namespace that provides access to factory methods for creating instances that encapsulate a Task{TResult} based function delegate with a variable amount of generic arguments (TAP)\n* ADDED - TransientOperation class in the Cuemon namespace received several Task based overloaded methods; WithFuncAsync and WithActionAsync (TAP)\n* FIXED - TransientOperationOptions class in the Cuemon namespace now have a default value of 5 minutes on the MaximumAllowedLatency property\n* ADDED - ExceptionDescriptorAttribute class in the Cuemon namespace that provides information about an Exception, in a developer friendly way, optimized for open- and otherwise public application programming interfaces (API)\n* ADDED - ExceptionDescriptor class in the Cuemon namespace received two new overloaded methods; PostInitializeWith\n* CHANGED - MethodDescriptor class in the Cuemon.Reflection namespace was refactored to use property Caller:Type instead of property ClassName:string, which in return should add higher flexibility\n* ADDED - MethodWrappedException class in the Cuemon namespace that wraps an exception that was refined with meta information from the ExceptionUtility class\n* ADDED - ExceptionUtility class in the Cuemon namespace received a new method; Unwrap\n* CHANGED - ExceptionUtility class in the Cuemon namespace received refactoring of Refine methods; instead of returning a generic {T of Exception}, they now return a MethodWrappedException\n* FIXED - Renamed extensions for Exception: RefineException --> Refine\n* ADDED - New extensions for MethodWrappedException: Unwrap\n* FIXED - StringConverter class in the Cuemon namespace now writes punctuations delimiters again on the FromType method\n* ADDED - Validator class in the Cuemon namespace received four new overloaded methods; ThrowIfUri, ThrowIfNotUri, ThrowIfContainsType and ThrowIfNotContainsType\n* ADDED - TimeMeasure class in the Cuemon.Diagnostics namespace received several Task based overloaded methods; WithActionAsync and WithFuncAsync (TAP)\n* ADDED - TesterDoer class in the Cuemon namespace that provides a set of methods that can assist with the tester-doer pattern\n\n4.1.2017.500\n* CHANGED - DataPair class in the Cuemon namespace can now be inherited from\n* CHANGED - FromPascalCasing method on the StringConverter class in the Cuemon namespace to be more flexible on conversion\n\n4.1.2017.400\n* ADDED - DayPart class in the Cuemon namespace that represents a part of a day.\n* ADDED - DayParts class in the Cuemon namespace that provides a roughly way to determine if a given part of a day is either; Night, Morning, Forenoon, Afternoon og Evening\n* FIXED - World class in the Cuemon.Globalization namespace now tries to load cultures by reflection; if unsuccessful, it reverts to an embedded resource where CultureNotFoundException are swallowed\n* ADDED - New extensions for DateTime: IsWithinRange, IsTimeOfDayNight, IsTimeOfDayMorning, IsTimeOfDayForenoon, IsTimeOfDayAfternoon, IsTimeOfDayEvening\n* ADDED - New extensions for String: SubstringBefore\n\n4.1.2017.350\n* ADDED - New extensions for Int16: Min, Max\n* ADDED - New extensions for Int32: Min, Max\n* ADDED - New extensions for Int64: Min, Max\n* ADDED - New extensions for RegionInfo: GetCultures\n* ADDED - CasingMethod enum in the Cuemon namespace that specifies ways that a string must be converted in terms of casing\n* CHANGED - Renamed FromConvertible --> FromConvertibles on the ByteConverter class in the Cuemon namespace\n* ADDED - World class in the Cuemon.Globalization namespace that is designed to make System.Globalization related operations easier to work with\n\n4.1.2017.280\n* FIXED - EncodingOptions class in the Cuemon.Text namespace now uses the static default values\n* FIXED - The extension method for String: ToByteArray was re-implemented using the old way of method overloading due to conflict with the generic variant of this method\n\n4.1.2017.200\n* CHANGED - Assembly version 4.0.2016.0 --> 4.1.2017.0\n* CHANGED - All extension methods, that uses the options pattern, now has an optional setup delegate\n* ADDED - Validator class in the Cuemon namespace received several new overloaded methods; ThrowIfEmpty, ThrowIfWhiteSpace, ThrowIfNullOrEmpty, ThrowIfNullOrWhitespace\n* ADDED - Condition class in the Cuemon namespace received a new method; IsWhiteSpace\n\n4.1.2016.3580\n* ADDED - LatencyException class in the Cuemon namespace that provides the exception that is thrown when a latency related operation was taking to long to complete\n* CHANGED - Parse and Flatten methods on the static ExceptionUtility class in the Cuemon namespace was tweaked to be more versatile\n* CHANGED - ByteConverter class in the Cuemon namespace was simplified internally\n* CHANGED - CharConverter class in the Cuemon namespace was simplified internally and tweaked with a try to detect encoding on relevant methods\n* CHANGED - StringConverter class in the Cuemon namespace was simplified internally and tweaked with a try to detect encoding on relevant methods\n* CHANGED - Renamed extensions for Stream: ToString --> ToEncodedString\n* CHANGED - Renamed extensions for Exception: ToString --> ToEncodedString\n* CHANGED - Renamed extensions for Byte[]: ToString --> ToEncodedString\n* ADDED - TransientFaultEvidence class in the Cuemon namespace that provides evidence about a faulted TransientOperation\n* CHANGED - TransientFaultException class in the Cuemon namespace was changed to include TransientFaultEvidence\n* CHANGED - TransientOperation class in the Cuemon namespace was extended to support a FaultCallback delegate, calculate latency and include TransientFaultEvidence\n* CHANGED - TransientOperationOptions class in the Cuemon namespace was extended to support MaximumAllowedLatency\n* CHANGED - TimeMeasure class in the Cuemon.Diagnostics namespace was changed in terms of TimeMeasureCompletedCallback delegate being renamed to CompletedCallback\n\n4.1.2016.3500\n* ADDED - ExceptionDescriptor class in the Cuemon namespace that provides information about an Exception, in a developer friendly way, optimized for open- and otherwise public application programming interfaces (API)\n* ADDED - ObjectHierarchyOptions class in the Cuemon.Reflection namespace that specifies options that is related to ReflectionUtility.GetObjectHierarchy operations\n* REMOVED - Callback suffix from various delegates throughout the assembly package\n* ADDED - New extensions for TOptions: ConfigureOptions\n* ADDED - New extensions for IHierarchy<DataPair>: UseTimeSpanFormatter, UseUriFormatter, UseDateTimeFormatter, UseConvertibleFormatter, UseGuidFormatter, UseStringFormatter, UseDecimalFormatter, UseCollection, UseDictionary\n* REMOVED - Redundant extension methods that collisioned with the .NET Standard Library\n* CHANGED - Hierarchy{T} class in the Cuemon namespace was made more simple and flexible\n* ADDED - New extensions for IHierarchy{T}: FindFirstInstance, FindSingleInstance, FindInstance, FindFirst, FindSingle, Find, Replace, ReplaceAll\n* CHANGED - IHierarchy{T} interface in the Cuemon namespace received two new members; Replace and GetPath\n* CHANGED - DataPair class in the Cuemon namespace was made more simple and flexible\n* ADDED - TimeRange class in the Cuemon namespace that represents a period of time between two DateTime values\n* CHANGED - IsComplex method on the TypeUtility class in the Cuemon namespace to be more precise\n* ADDED - New extensions for IDictionary{TKey,TValue}: AddIfNotContainsKey, AddOrUpdate\n* ADDED - New extensions for DateTime: ToString\n* REMOVED - Uri support from the ObjectConverter.FromString method in the Cuemon namespace\n\n4.0.2016.3270\n* PRELUDE - Because of the many paths given by Microsoft in the road of .NET Core, this is a major and breaking release where all assemblies have been refactored and put together again in a nifty package. So, just like Cuemon .NET Framework, this is the Core version. No more single assemblies for download. It seemed smart, but reality has proven otherwise. So all single assemblies has been deemed deprecated.\n* REMOVED - Act delegates in the Cuemon namespace (leftover from Cuemon .NET Framework merge); all lamda expressions has been replaced with Action delegates\n* REMOVED - Doer delegates in the Cuemon namespace (leftover from Cuemon .NET Framework merge); all lamda expressions has been replaced with Func delegates\n* CHANGED - ActFactory class in the Cuemon namespace was renamed to ActionFactory\n* CHANGED - DoerFactory class in the Cuemon namespace was renamed to FuncFactory\n* CHANGED - TesterDoer delegates in the Cuemon namespace was renamed to TesterFunc delegates\n* CHANGED - TesterDoerFactory class in the Cuemon namespace was renamed to TesterFuncFactory\n* CHANGED - TesterDoerUtility class in the Cuemon namespace was renamed to TesterFuncUtility\n* CHANGED - MethodSignature class in the Cuemon.Reflection namespace was renamed to MethodDescriptor\n* CHANGED - TransientFaultUtility class in the Cuemon namespace was renamed to TransientOperation and refactored to support the options pattern\n* ADDED - TransientOperationOptions class in the Cuemon namespace that specifies options that is related to TransientOperation handling\n* ADDED - Profiler class in the Cuemon.Diagnostics namespace that represents a base class for profiler related operations\n* ADDED - ProfilerOptions class in the Cuemon.Diagnostics namespace that specifies options that is related to Profiler operations\n* ADDED - TimeMeasureOptions class in the Cuemon.Diagnostics namespace that specifies options that is related to TimeMeasureProfiler operations\n* ADDED - TimeMeasureProfiler class in the Cuemon.Diagnostics namespace that represents a profiler that is optimized for time measuring operations\n* ADDED - TimeMeasureProfiler<TResult> class in the Cuemon.Diagnostics namespace that represents a profiler that is optimized for time measuring operations that provides a return value\n* ADDED - Tweaker class in the Cuemon namespace that provides a way to change any instance of the same generic type\n* ADDED - EncodingOptions class in the Cuemon.Text namespace that specifies options that is related to Encoding operations\n* ADDED - One new method, IsAnonymousMethod, was added to the TypeUtility class in the Cuemon namepspace\n* ADDED - Two new method, SafeInvokeDisposable (overloaded) and ConfigureAction, was added to the DelegateUtility class in the Cuemon namepspace\n* ADDED - New extensions for DateTime: ToUtcKind, ToLocalKind, ToDefaultKind\n* ADDED - New extensions for T: Adjust\n* ADDED - New extensions for TimeSpan: GetTotalNanoseconds, GetNanoseconds, GetTotalMicroseconds, GetMicroseconds\n\n4.0.2016.1880\n* ADDED - Two new methods, ToProtocolRelativeUri, was added to the StringConverter class in the Cuemon namepspace\n* ADDED - UriConverter static class in the Cuemon namepspace that is designed to make Uri related conversions easier to work with\n* ADDED - Two new methods, IsProtocolRelativeUri, was added to the UriUtility class in the Cuemon namepspace\n* FIXED - The default function delegate for ByteConverter.TryFromBase64String and StringUtility.IsBase64 now evaluates a Base64 string correctly\n\n4.0.2016.1380-rc2\n* ADDED - Support for .NET Platform Standard 1.4 (netstandard1.4)\n* CHANGED - Removed support for .NET Platform Standard 5.4 (dotnet5.4)\n\n4.0.2016.1360-beta\n* CHANGED - The StringConverter.FromException(Exception, ..) method in the Cuemon namespace now flatten and includes all inner exceptions\n* FIXED - The ByteConverter.TryFromBase64String(string, ..) method in the Cuemon namespace now evaluates false if the predicate evaluates false\n* FIXED - The TransientFaultUtility class in the Cuemon namespace does not include a dublet of the last exception thrown",
  "requireLicenseAcceptance": false,
  "summary": "The Cuemon.Core assembly is the patriarch of the Cuemon .NET Standard family and provides feature rich delegates to greatly support functional programming.",
  "title": "Cuemon.Core",
  "verbatimVersion": "5.0.2019.40",
  "version": "5.0.2019.40",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#dependencygroup/.netstandard1.4",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#dependencygroup/.netstandard1.4/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#dependencygroup/.netstandard1.4/system.componentmodel.typeconverter",
          "@type": "PackageDependency",
          "id": "System.ComponentModel.TypeConverter",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#dependencygroup/.netstandard1.4/system.diagnostics.fileversioninfo",
          "@type": "PackageDependency",
          "id": "System.Diagnostics.FileVersionInfo",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#dependencygroup/.netstandard1.4/system.linq.expressions",
          "@type": "PackageDependency",
          "id": "System.Linq.Expressions",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#dependencygroup/.netstandard1.4/system.reflection.typeextensions",
          "@type": "PackageDependency",
          "id": "System.Reflection.TypeExtensions",
          "range": "[4.5.1, )"
        }
      ],
      "targetFramework": ".NETStandard1.4"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#Cuemon.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 5617,
      "fullName": "Cuemon.Core.nuspec",
      "length": 22074,
      "name": "Cuemon.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#lib/netstandard1.4/Cuemon.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 134747,
      "fullName": "lib/netstandard1.4/Cuemon.Core.dll",
      "length": 364032,
      "name": "Cuemon.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#lib/netstandard1.4/Cuemon.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 93284,
      "fullName": "lib/netstandard1.4/Cuemon.Core.xml",
      "length": 1715771,
      "name": "Cuemon.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.10.13.50.24/cuemon.core.5.0.2019.40.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "extensions",
    "extension",
    "methods",
    "pagedcollection",
    "timemeasure",
    "lambda",
    "profiler",
    "encoding",
    "converters",
    "options",
    "pattern",
    "transient",
    "fault",
    "handling",
    "timeunit",
    "transientoperation",
    "timerange",
    "action",
    "func",
    "factory",
    "utilities"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}