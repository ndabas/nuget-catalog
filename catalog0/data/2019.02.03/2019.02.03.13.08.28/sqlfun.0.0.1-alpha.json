{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jacek He≈Çka",
  "catalog:commitId": "2cdf19ad-7d9d-48d9-a93f-3688931dc36c",
  "catalog:commitTimeStamp": "2019-02-03T13:08:28.689789Z",
  "copyright": "Copyright 2019",
  "created": "2019-02-03T12:42:39.333Z",
  "description": "SqlFun is a tool for writing data access code in F# functional way. \n\t\tIt's fast, type safe and gives you all powers of SQL, no custom query language constraints you. \n\t\tIt's also lightweight, you need to know a general idea and few functions (and, of course SQL).",
  "id": "SqlFun",
  "isPrerelease": true,
  "lastEdited": "2019-02-03T13:07:58.26Z",
  "licenseUrl": "https://github.com/jacentino/SqlFun/blob/master/LICENSE",
  "listed": false,
  "packageHash": "t44EGB1PN3A4Q9gWsY1zL8QpibOI88dpUWctUnksGxRGuPzM2rzffcXN0SkhtK7AMllPFj60KykWgDWyTu5iaA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 122093,
  "projectUrl": "https://github.com/jacentino/SqlFun",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "First release.",
  "requireLicenseAcceptance": false,
  "title": "SqlFun: Idiomatic data access for F#",
  "verbatimVersion": "0.0.1-alpha",
  "version": "0.0.1-alpha",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[4.2.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#SqlFun.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 600,
      "fullName": "SqlFun.nuspec",
      "length": 1111,
      "name": "SqlFun.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#build-sqlfun.bat",
      "@type": "PackageEntry",
      "compressedLength": 138,
      "fullName": "build-sqlfun.bat",
      "length": 238,
      "name": "build-sqlfun.bat"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#lib/net461/SqlFun.dll",
      "@type": "PackageEntry",
      "compressedLength": 106230,
      "fullName": "lib/net461/SqlFun.dll",
      "length": 276992,
      "name": "SqlFun.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#lib/net461/SqlFun.XML",
      "@type": "PackageEntry",
      "compressedLength": 3574,
      "fullName": "lib/net461/SqlFun.XML",
      "length": 21825,
      "name": "SqlFun.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.03.13.08.28/sqlfun.0.0.1-alpha.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "microorm",
    "orm",
    "f#",
    "fsharp",
    "sql",
    "sqlserver",
    "postgresql"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}