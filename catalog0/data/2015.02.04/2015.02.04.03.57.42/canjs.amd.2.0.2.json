{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.03.57.42/canjs.amd.2.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Bitovi",
  "catalog:commitId": "1fedb548-e219-4e78-afbb-0efcd47ed7de",
  "catalog:commitTimeStamp": "2015-02-04T03:57:42.7634497Z",
  "copyright": "Copyright (C) 2012 Bitovi",
  "created": "2013-11-15T01:48:27.787Z",
  "description": "CanJS is a MIT-licensed, client-side, JavaScript framework that makes building rich web applications easy. Use it because it’s: Smaller, Faster, Safer, Easier, Library-er.\n\nCanJS’s core supports jQuery, Zepto, Dojo, YUI and Mootools.",
  "iconUrl": "http://canjs.com/images/canjs_logo_yellow_small.png",
  "id": "CanJS.AMD",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/bitovi/canjs/blob/master/license.md",
  "packageHash": "EjXJN7ApIRsm88AS9wx8injiWX84L2wtQsqTSZMzLSMfQlSl+U0lquI9Q9xpP60BtLyBx6A1AgSk7HlOHJD0ZQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 190503,
  "projectUrl": "http://canjs.com/",
  "published": "2013-11-15T01:48:27.787Z",
  "releaseNotes": "2.0.2 ( Nov 14 2013 )\n\n◾change: cloning setter comptues\n◾change: Event listeners leak in 2.0.1\n◾change: can.VERSION for 2.0.1 says @EDGE rather than 2.0.1\n◾change: 'key' property breaks mustache helpers\n◾change: component does not respect can.compute passed via attributes\n◾change: Wrapping can.compute in can.Map breaks live-binding\n\n2.0.1 ( Nov 12 2013 )\n◾change: Fixes #538 helpers aren't called is data passed to the template happens ...\n◾change: Update included plugins and release tasks\n◾change: mustache: 'with' string is interpreted as with helper keyword\n◾change: can.Component two way binding issues\n◾change: New lines are not handled properly in special attributes\n◾change: can.Control: {document} events are not working\n◾change: \"{document} body click\" breaks in latest\n◾change: pushstate() and preventDefault() were not working on default route becau...\n◾change: Make $#domManip patch jq2.0-compatible\n◾change: broken livebinding after replace can.Map property or remove property\n◾change: fixes a problem with each not working if the whole list is replaced\n◾change: can.Map stack exceeded on circular data structures\n◾change: Fixes #512 #513, sees the glorious return of can.camelize and his trusty sidekick, can.hyphenate\n◾change: List.join is not compute-able\n◾change: Fix to multiple tags not necessarily having the right context. Close #515\n◾change: avoids jQuery's event system when binding on observes which fixes #280\n◾change: Implement can.Mustache.safeString\n◾change: can.Component helpers context issue\n◾change: can.camelize\n◾change: can.Component template attributes name case\n◾change: Makes attribute arguments passed to a component two way binding\n◾change: Fix Model.List.prototype.findAll() in IE8.\n◾change: Return a new can.compute every time (new can.view.Scope()).compute() is called\n◾change: Mustache and EJS issues with attributes and truthy blocks\n◾change: Handlebars {{#if}} losing scope of var\n◾change: can.Model.List() updates its length after destoy() of one of its models only if it has bindings\n◾change: can.Mustache doesn't support SafeString\n◾change: can.Mustache: inconsistent behavior when updating nested attributes of an Observe\n◾change: Support Handlebars @key and @index directives\n◾change: Accessing a parent array property from within mustche\n◾change: can.Observe binds for nested object. First time event trigger is only on top level object instead of nested one.\n\n2.0.0 ( Oct 17 2013 )\nTHERE ARE BREAKING CHANGES\nA MIGRATION GUIDE IS AT: http://canjs.com/guides/migrating.html\n\nchange: Replacing lists live-binding\nchange: Fix destroy params\nchange: Special attribute binding\nchange: Fix Mustache binding lists in helpers\nchange: Certain HTML attributes need special live-binding\nchange: Destroy templates and attributes.\nchange: Fix some typo's in the documentation.\nchange: attr() not working in some cases in IE9\nchange: docs update: can.Object dependency for can.fixture\nchange: View renderer functions don't work with Deferreds\nchange: Issue: can.view.ejs(str) and can.view.ejs(id, str) return different responses\nchange: can.Mustache: #if sections are rendered twice when activated from live-binding\nchange: can.route.ready should not be called automatically\nchange: fixed issue #470 can.route default values are not working\nchange: can.route.ready called multiple times\nchange: Mustache two way helpers don't work as documented\nchange: Can't 2-way bind Array\nchange: Bower component does not work with steal\nchange: Live Binding Broken with Models with Nested Sub-models\nchange: String parameter not working as expected for: jQuery.fn.control / jQuery.fn.controls\nchange: error passing can.Observe.List to custom Mustache element helper\nchange: Wrong variable name in the Guide.\nchange: Model.destroy request params\nchange: Fixing can.ajax missing test for error handler with mootools\nchange: Fixing error that occurs when an item in an Observe.List contains a comp...\nchange: Observe#on\nchange: Array is skipped on serialize\nchange: can.Mustache live-binding on can.route attributes\nchange: create can.Component for custom tags\nchange: Feature/route to string\nchange: Default can.route.ready to false\nchange: Attributes automatic conversion to Map/Model specified type\nchange: can.route.pushstate mishandles hash fragments\nchange: Needed host check for pushstate.js\nchange: Support for rendering document fragments (returned from the renderer function) in the templates\nchange: Model.save: handle response data or return data in save callback\nchange: AMD Consistency\nchange: Extensionless views fail\nchange: can.Model.findAll promotes usage of XSS attack vector\nchange: Allow context change after element has been rendered\nchange: Make it easier to setup 2-way-binding and other interesting behaviors\nchange: Accessing attributes in Model destroy\nchange: mustache: support for backtrack path\nchange: Live-bound dynamic attributes don't get updated properly if they don't exist on initial execution\nchange: The can.Model.models arrayName should be configurable like observable's 'id' property\nchange: can.observe.delegate fails on compound selectors with wildcards\n\n1.1.8 ( Sep 24 2013 )\nchange: can.Observe.List.Sort: fix for case when comparator is not a function \nchange: makeFindOne example cache error: http://canjs.com/docs/can.Model.makeFindOne.html \nchange: Two return statements in Mustache.getHelper \nchange: recommended syntax breaks can.route \nchange: Prevent infinite recursion on unbindAndTeardown when Observe's _bindings is undefined and Observe is self-referential \nchange: Catch only exceptions thrown by modelfunc (fix #454 and re #384)\nchange: CanJS Swallowing Errors \n\n1.1.7 ( Jul 23 2013 )\nchange: Mustache doesn't read computed List.length correctly \nchange: Removing the semi-colon splitter in EJS transform, too unreliable #242 \nchange: EJS transforming wasn't processing semi-colons properly within parentheses #242 \nchange: Adds support for EJS shared blocks #242 \nchange: . in helpers \nchange: 1.1.6pre - something going wrong with can.computes() in Mustache templates \nchange: can.route references delegate but does not include it \nchange: Binding to an Observe.compute value is broken \nchange: Added validatesNumericalityOf to validations \nchange: Include can.Object in CanJS distribution \nchange: can.Observe makes can.Deferred into an observable \nchange: Update sub to not break when str is undefined \nchange: List memory leak fix \nchange: Integrated incremental live lists \nchange: can.view.render update is sometimes undefined \nchange: Model.store and live bind does not handle same object initialized more times \nchange: Prevent errors if destroy is called multiple times on a Control instance \nchange: Outputting attribute and value containing '=' truncates the value (EJS & Mustache) \nchange: can.sub fix remove param. Allow only to remove properties + tests \nchange: Can.string getNext function fix \nchange: Maximum Call Stack Exceeded When Destroying a nested model \nchange: Add VERSION property to CanJS Object \nchange: Better handling of null values in Mustache sections. \nchange: model override should work for create and update not just findone and findall \nchange: Download builder should include build version in output \nchange: Don't treat links to \"#\" as \"/\" \nchange: Run all tests also on pluginified files \nchange: Observable list's length attribute does not update with live binding using dot separated accessors \nchange: Twitter Bower component of CanJS \nchange: ejs files loose variables after $.each loop \n\n1.1.6.1 (June 5 2013)\nNuGet Package:\nAdded Missing proxy.js\nFixed logo \n\n1.1.6 (May 29 2013)\nNuGet Package:\nChanged logo to match github\nRemoved jQuery as a dependency since its really not.\n\nLibrary:\n\nchange: Mustache doesn't read computed List.length correctly\nchange: Removing the semi-colon splitter in EJS transform, too unreliable #242\nchange: EJS transforming wasn't processing semi-colons properly within parentheses #242\nchange: Adds support for EJS shared blocks #242\nchange: . in helpers\nchange: 1.1.6pre - something going wrong with can.computes() in Mustache templates\nchange: can.route references delegate but does not include it\nchange: Binding to an Observe.compute value is broken\nchange: Added validatesNumericalityOf to validations\nchange: Include can.Object in CanJS distribution\nchange: can.Observe makes can.Deferred into an observable\nchange: Update sub to not break when str is undefined\nchange: List memory leak fix\nchange: Integrated incremental live lists\nchange: can.view.render update is sometimes undefined\nchange: Model.store and live bind does not handle same object initialized more times\nchange: Prevent errors if destroy is called multiple times on a Control instance\nchange: Outputting attribute and value containing '=' truncates the value (EJS & Mustache)\nchange: can.sub fix remove param. Allow only to remove properties + tests\nchange: Can.string getNext function fix\nchange: Maximum Call Stack Exceeded When Destroying a nested model\nchange: Add VERSION property to CanJS Object\nchange: Better handling of null values in Mustache sections.\nchange: model override should work for create and update not just findone and findall\nchange: Download builder should include build version in output\nchange: Don't treat links to \"#\" as \"/\"\nchange: Run all tests also on pluginified files\nchange: Observable list's length attribute does not update with live binding using dot separated accessors\nchange: Twitter Bower component of CanJS\nchange: ejs files loose variables after $.each loop",
  "requireLicenseAcceptance": false,
  "summary": "CanJS is a MIT-licensed, client-side, JavaScript framework that supports MVC, Live Binding, Routing and Modular Development",
  "title": "CanJS using RequireJS AMD Modules",
  "version": "2.0.2",
  "tags": [
    "canjs",
    "javascript",
    "mvc",
    "jquery",
    "dojo",
    "yui",
    "zepto",
    "mootools"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}