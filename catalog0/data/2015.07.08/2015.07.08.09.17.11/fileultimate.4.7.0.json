{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.08.09.17.11/fileultimate.4.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GleamTech",
  "catalog:commitId": "74c47b9e-0464-41bb-ae19-34f3f2e6095d",
  "catalog:commitTimeStamp": "2015-07-08T09:17:11.6766523Z",
  "copyright": "Copyright ï¿½ 2006-2015 GleamTech",
  "created": "2015-07-08T09:15:56.28Z",
  "description": "File Manager Control for ASP.NET WebForms and ASP:NET MVC 3+ (.NET Framework 4.0+).\nIntegrate a file manager into your ASP.NET application or site rapidly.\n- Browse and manage files with access control.\n\n- Accept files with the advanced upload functionality.\n\n- Offer a structured and neat download area.\n\nNote: This package contains a fully working version of the product, however without a license key it will run in trial mode.",
  "iconUrl": "http://www.gleamtech.com/resources/images/nuget-logo.png",
  "id": "FileUltimate",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://support.gleamtech.com/kb/a15/eula-for-fileultimate.aspx",
  "packageHash": "PzDwidBdZPy6vzKQ991tmO5suV7X3P7lImJxTLEBKEM/S0BSTBYTKXIL6X7DVEgfR2vdFaZrKGShZbfeTimiew==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 53243104,
  "projectUrl": "http://www.gleamtech.com/fileultimate",
  "published": "2015-07-08T09:15:57.357Z",
  "releaseNotes": "Version 4.7 - July 6, 2015\n- Added: Amazon S3 file system. You can now use an Amazon S3 bucket like a regular folder on disk.\n- Improved: FileManagerRootFolder.Location property is now of type Location class instead of string. You can still assign a string to this property as it's automatically casted so this is not a breaking change. The advantage of this special Location class is that you can now set it directly to an instance of PhysicalLocation or AmazonS3Location (more will be available in the future) classes. For instance this line:\n \n    rootFolder.Location = \"Type=AmazonS3; Bucket Name=mybucket\";\n\n  is same as this line:\n\n    rootFolder.Location = new AmazonS3Location { BucketName = \"mybucket\" };\n\n  This means you don't need to bother with formatting location strings correctly (eg. guessing property names) Except in aspx markup, you will still need to use strings which look like connection strings if you need to set advanced properties. Also note that this line:\n\n      rootFolder.Location = \"c:\\some\\folder\";\n\n  is same as this line:\n\n    rootFolder.Location = \"Type=Physical; Path=c:\\some\\folder\";\n\n  and also same as this line:\n\n    rootFolder.Location = new PhysicalLocation { Path = \"c:\\some\\folder\" };\n\n  So as in previous versions, setting location to a path string directly means it's a physical location by default.",
  "requireLicenseAcceptance": false,
  "summary": "File manager control for integrating file browsing, upload & download features into your ASP.NET application or site (WebForms or MVC) rapidly.",
  "title": "FileUltimate: ASP.NET File Manager",
  "version": "4.7.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.08.09.17.11/fileultimate.4.7.0.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework4.0"
    }
  ],
  "tags": [
    "File-Manager",
    "File-Explorer",
    "File-Picker",
    "File-Browser",
    "Folder-View",
    "Directory-Listing",
    "ASP.NET",
    "WebForms",
    "MVC"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}