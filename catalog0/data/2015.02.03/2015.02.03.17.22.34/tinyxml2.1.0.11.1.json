{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.17.22.34/tinyxml2.1.0.11.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Lee Thomason",
  "catalog:commitId": "c342e2c9-c058-4cc4-8118-be743d5cf8a6",
  "catalog:commitTimeStamp": "2015-02-03T17:22:34.871856Z",
  "copyright": "Copyright 2013",
  "created": "2013-08-14T20:50:43.817Z",
  "description": "There are different ways to access and interact with XML data. TinyXML-2 uses a Document Object Model (DOM), meaning the XML data is parsed into a C++ objects that can be browsed and manipulated, and then written to disk or another output stream. You can also construct an XML document from scratch with C++ objects and write this to disk or another output stream. You can even use TinyXML-2 to stream XML programmatically from code without creating a document first.\n\n\t\tTinyXML-2 is designed to be easy and fast to learn. It is one header and one cpp file. Simply add these to your project and off you go. There is an example file - xmltest.cpp - to get you started.\n\n\t\tTinyXML-2 is released under the ZLib license, so you can use it in open source or commercial code. The details of the license are at the top of every source file.\n\n\t\tTinyXML-2 attempts to be a flexible parser, but with truly correct and compliant XML output. TinyXML-2 should compile on any reasonably C++ compliant system. It does not rely on exceptions, RTTI, or the STL.",
  "iconUrl": "http://ICON_URL_HERE_OR_DELETE_THIS_LINE",
  "id": "tinyxml2",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.zlib.net/zlib_license.html",
  "packageHash": "whACHk7ZmqeeBOGvWNCRrm5PNkU3AZC6C7AoE8FMkq4aOImP4Muh26zonlY8tvFNFl5SwYrtP5CHgvq1GUIzBQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 351756,
  "projectUrl": "http://www.grinninglizard.com/tinyxml2",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Summary of changes made in this release of the package.",
  "requireLicenseAcceptance": false,
  "summary": "TinyXML-2 is a simple, small, efficient, C++ XML parser that can be easily integrating into other programs",
  "title": "TinyXML-2",
  "version": "1.0.11.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.17.22.34/tinyxml2.1.0.11.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.17.22.34/tinyxml2.1.0.11.1.json#dependencygroup/tinyxml2.redist",
          "@type": "PackageDependency",
          "id": "tinyxml2.redist",
          "range": "[1.0.11.1, )"
        }
      ]
    }
  ],
  "tags": [
    "XML",
    "native",
    "CoApp",
    "nativepackage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}