{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.04.14.02.51.21/shaolinq.sqlite.1.2.0.1071-rc1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thong Nguyen",
  "catalog:commitId": "7c1397f0-355c-49b7-b60c-bebaa014dbef",
  "catalog:commitTimeStamp": "2017-04-14T02:51:21.3909774Z",
  "copyright": "Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)",
  "created": "2017-04-14T02:50:15.113Z",
  "description": "Shaolinq is a thoughtfully designed ORM and Linq provider for .NET\n    \nUse this package to add Shaolinq and out-of-the-box Sqlite support.\n    \nDesigned to perform super fast and be easy to use, Shaolinq's features also include:\n    \n- First class schema-first ORM with WYSIWYG data access and minipulation.\n- First class LINQ support (not the basic kind you see in most other OSS projects).\n- Single trip updating of objects.\n- Support for Sqlite, MySql and Postgres.\n- Automatic database creation and schema migration.\n- Delete LINQ extension for batch server side deletes.\n- Full support for server side date functions (Date.DayOfWeek etc).\n- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.\n- Open Source!",
  "id": "Shaolinq.Sqlite",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt",
  "listed": true,
  "packageHash": "5T/rTsfhn5ELRGdJz8fvzkP6BzQ+1wwNp2FCgZVtIkE+XYqbLk3QaV7jrUnLNwP7PJ6kWFuBlJDFigOKVp8nbg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19969,
  "projectUrl": "https://github.com/tumtumtum/Shaolinq",
  "published": "2017-04-14T02:50:15.113Z",
  "releaseNotes": "- New DataAccessModelConfiguration ValueTypesAutoImplicitDefault and AlwaysSubmitDefaultValues settings\n- Add support for DataAccessModel hooks\n- [BREAKING_CHANGE] Changed handling of value type properties so that they don't get given default values on instantiation of the parent DAO unless a value is specified using DefaultValueAttribute. Attempts to commit incomplete objects result in a MissingPropertyValueException.\n-- Previous --\n- Fixed bug where including properties using a lambda over a generic type class or function type fails\n- Support explicit naming of foreign keys via \nNamingTransformsConfiguration\n- Support explicit naming of primary keys via NamingTransformsConfiguration\n- SqlServerProvider: Don't add NOT NULL conditions on index columns if index is not unique\n- Support disabling foreign key constraints on DAO properties and BackReferences via ForeignObjectConstraintAttribute.Disabled\n- Added UniqueNullIndexAnsiComplianceFixerClassicBehaviour\n- Improved performance DataAccessModel.BuildDataAccessModel(Type)\n- Added better support for explicitly setting identity columns.\n- Added AutoIncrementAttribute.ValidateExpression support allowing declarative skipping of autoincrement values.\n- Fix bug where TransactionContext for null transactions (before most outer DataAccessScope) could be replaced with TransactionContexts from inner scopes.\n- Various other transaction and async related fixes\n- Fix ambient TransactionContext sometimes not being disposed (like on initialisation of DataAccessModel)\n- Changed TransactionContext to have to be acquired in a using statement in order to be created. Transactioncontext.GetCurrent() will only return non-null if there is already a current transaction. Fixes leaky ambient DataAccessObjectDataContexts.\n- RewriteAsync now validates manually written async methods to make sure they're not calling sync methods when async equivalents are available.\n- RewriteAsync now supports searching all types for a matching extension method that can be used for async (rather than just the type that defined the non-async method).\n- Added more connection configuration properties to Postgres (KeepAlive, others)\n-- Previous --\n- AsyncRewriter improvements\n- Fixed InvalidCastException when saving a property using a  predicated deflated references where the referenced type is not the same as the property container type.\n- Fixed OrderBy sometimes ignored with some queries (e.g. GroupBy)\n- Added SumAsync(selector) method for decimal and decimal?\n- Fix potential exception when projecting structs\n- Fixed potential memory leak when querying with similarly structured queries with different constant values\n- Fixed ForUpdate not working when using Aggregates after ForUpdate is applied\n- Added SumAsync(Decimal) support\n- Fixed exception when using Enums with no declared values\n- Fixed Insert/Update of predicated deflated references",
  "requireLicenseAcceptance": false,
  "summary": "A thoughtful ORM and Linq provider for .NET and Sqlite",
  "title": "Shaolinq ORM and Linq provider for Sqlite",
  "verbatimVersion": "1.2.0.1071-rc1",
  "version": "1.2.0.1071-rc1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.04.14.02.51.21/shaolinq.sqlite.1.2.0.1071-rc1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.04.14.02.51.21/shaolinq.sqlite.1.2.0.1071-rc1.json#dependencygroup/shaolinq",
          "@type": "PackageDependency",
          "id": "Shaolinq",
          "range": "[1.2.0.1071-rc1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.04.14.02.51.21/shaolinq.sqlite.1.2.0.1071-rc1.json#dependencygroup/system.data.sqlite.core",
          "@type": "PackageDependency",
          "id": "System.Data.SQLite.Core",
          "range": "[1.0.104, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.04.14.02.51.21/shaolinq.sqlite.1.2.0.1071-rc1.json#Shaolinq.Sqlite.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2120,
      "fullName": "Shaolinq.Sqlite.nuspec",
      "length": 4689,
      "name": "Shaolinq.Sqlite.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.04.14.02.51.21/shaolinq.sqlite.1.2.0.1071-rc1.json#lib/net452/Shaolinq.Sqlite.dll",
      "@type": "PackageEntry",
      "compressedLength": 14541,
      "fullName": "lib/net452/Shaolinq.Sqlite.dll",
      "length": 33280,
      "name": "Shaolinq.Sqlite.dll"
    }
  ],
  "tags": [
    "shaolinq",
    "linq",
    "provider",
    "orm",
    "sqlite",
    "sql",
    "database"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}