{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TheArchitectDev, Timovzl",
  "catalog:commitId": "c72d3ffa-8718-42ac-aa20-c83e2040a305",
  "catalog:commitTimeStamp": "2020-12-07T14:28:01.0980324Z",
  "copyright": "The Architect",
  "created": "2020-12-07T14:25:58.453Z",
  "description": "Provides the basis for implementing the Ambient Context pattern, as well as a Clock implementation based on it.\n\nThe Ambient Context pattern is an Inversion of Control (IoC) pattern that provides static access to a dependency while controlling the dependency from the outside.\nThe pattern optimizes accessiblity (through statics) at the cost of transparency, making it suitable for obvious, ubiquitous, rarely-changing dependencies.\n\nA good example is System.Transactions.TransactionScope. Any code (such as the database connector) can access the static Transaction.Current, yet outer code in the current execution flow controls it, through TransactionScopes.\n\nBy inheriting from AmbientScope, a class can become an ambient scope much like TransactionScope. When code is wrapped in such a scope (with the help of a using statement), any code inside the scope can statically access that ambient scope.\n\nThe AmbientScope base class provides fine-grained control over scope nesting (by obscuring, combining, or throwing) and supports the registration of a ubiquitous default scope.\n\nThe implementation honors logical execution flows and is async-safe.\n\nThis package also includes the ClockScope, an Ambient Context implementation for accessing the clock.\n\nhttps://github.com/TheArchitectDev/Architect.AmbientContexts",
  "id": "Architect.AmbientContexts",
  "isPrerelease": false,
  "lastEdited": "2020-12-07T14:27:58.9Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "vvq+QCkhDW/+PBl6JgJU7xdhqbvb71WE3G+tBATorlxQCJAEtgKR97ENUMECv3wbx5IkaIQyavEKQYk27TpGNQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26603,
  "published": "2020-12-07T14:25:58.453Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#dependencygroup/.netcoreapp3.1/microsoft.aspnetcore.http.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Http.Abstractions",
          "range": "[2.2.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#dependencygroup/.netcoreapp3.1/microsoft.extensions.hosting.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Hosting.Abstractions",
          "range": "[3.1.0, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#Architect.AmbientContexts.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1116,
      "fullName": "Architect.AmbientContexts.nuspec",
      "length": 2469,
      "name": "Architect.AmbientContexts.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#lib/netcoreapp3.1/Architect.AmbientContexts.dll",
      "@type": "PackageEntry",
      "compressedLength": 7715,
      "fullName": "lib/netcoreapp3.1/Architect.AmbientContexts.dll",
      "length": 18944,
      "name": "Architect.AmbientContexts.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#lib/netcoreapp3.1/Architect.AmbientContexts.xml",
      "@type": "PackageEntry",
      "compressedLength": 2915,
      "fullName": "lib/netcoreapp3.1/Architect.AmbientContexts.xml",
      "length": 17887,
      "name": "Architect.AmbientContexts.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 2678,
      "fullName": "LICENSE",
      "length": 7817,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.07.14.28.01/architect.ambientcontexts.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9472,
      "fullName": ".signature.p7s",
      "length": 9472,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "AmbientContext",
    "AmbientScope",
    "ambient",
    "context",
    "scope",
    "IoC",
    "inversion",
    "control",
    "dependency",
    "dependencies",
    "static",
    "AsyncLocal",
    "ThreadLocal",
    "ThreadStatic",
    "clock",
    "ClockScope"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}