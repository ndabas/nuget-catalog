{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.12.18.20.01/leadtools.dicom.pacs.scu.20.0.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "LEADTOOLS",
  "catalog:commitId": "fe919c02-e977-4114-86a9-184c41b02bfd",
  "catalog:commitTimeStamp": "2018-06-12T18:20:01.9887698Z",
  "copyright": "Copyright © 2002-2018 All Rights Reserved. LEAD Technologies, Inc.",
  "created": "2018-06-12T18:14:53.117Z",
  "description": "Supported Platforms:\n• .NET Framework (Windows)\n\n\nCreate a DICOM Service Class User (SCU) solution that can store, query, and retrieve from a standard DICOM SCP. Automatically handle DICOM Connection, Association, and DIMSE Services, including C-ECHO, C-FIND, C-MOVE, C-STORE, and more. Patient Updating is also supported through the N-ACTION DIMSE Service.\n\nThis is just a small part of a large technology offering called LEADTOOLS, which offers complete DICOM data set, directory (DICOMDIR), secure communication, medical-related image processing, 2D and 3D viewers, and video playback technology. LEADTOOLS Medical toolkits are indispensable if you are working on applications for medical and other life sciences industries. To see all that LEADTOOLS has to offer, go to https://www.leadtools.com\n\n\n\nExample Projects:\n• Medical High-Level PACS - https://bitly.im/leadtools_medical\n• All - https://bitly.im/leadtools_all",
  "iconUrl": "https://www.leadtools.com/favicon-32x32.png",
  "id": "Leadtools.Dicom.Pacs.Scu",
  "isPrerelease": false,
  "lastEdited": "2018-06-12T18:19:44.797Z",
  "licenseUrl": "https://www.leadtools.com/downloads/nuget/license?utm_source=nuget.org&utm_medium=NugetPackage&utm_campaign=nuget&SrcOrigin=nuget.org&nuget_package=Leadtools.Dicom.Pacs.Scu",
  "listed": false,
  "packageHash": "DGIuqOy+mbxqXf2DfD+23n4hw+uyPi8GKuZ8M5IsK9F2p1IgWhzB9DV8ktWem5i8ZQG2NhQUtX8hMzuGd/FI/g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 3138,
  "projectUrl": "https://www.leadtools.com/downloads/nuget?utm_source=nuget.org&utm_medium=NugetPackage&utm_campaign=nuget&SrcOrigin=nuget.org&nuget_package=Leadtools.Dicom.Pacs.Scu",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": true,
  "summary": "Create a DICOM Service Class User (SCU) solution that can store, query, and retrieve from a standard DICOM SCP. Automatically handle DICOM Connection, Association, and DIMSE Services, including C-ECHO, C-FIND, C-MOVE, C-STORE, and more. Patient Updating is also supported through the N-ACTION DIMSE Service.",
  "verbatimVersion": "20.0.0.2",
  "version": "20.0.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.12.18.20.01/leadtools.dicom.pacs.scu.20.0.0.2.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.12.18.20.01/leadtools.dicom.pacs.scu.20.0.0.2.json#dependencygroup/.netframework4.0/leadtools.dicom.pacs.scu.netframework",
          "@type": "PackageDependency",
          "id": "Leadtools.Dicom.Pacs.Scu.NETFramework",
          "range": "[20.0.0.2, 21.0.0.1)"
        }
      ],
      "targetFramework": ".NETFramework4.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.12.18.20.01/leadtools.dicom.pacs.scu.20.0.0.2.json#Leadtools.Dicom.Pacs.Scu.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1072,
      "fullName": "Leadtools.Dicom.Pacs.Scu.nuspec",
      "length": 2577,
      "name": "Leadtools.Dicom.Pacs.Scu.nuspec"
    }
  ],
  "tags": [
    "SCU",
    "C-ECHO",
    "C-FIND",
    "C-MOVE",
    "C-STORE",
    "N-ACTION",
    "DIMSE",
    "Storage-Commit",
    "DICOM",
    "PACS",
    "Service",
    "Class",
    "User"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}