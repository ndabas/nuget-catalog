{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "9b92561b-18e7-498d-97bd-0a2a8364a406",
  "catalog:commitTimeStamp": "2019-01-31T19:10:14.5548044Z",
  "copyright": "Copyright 2018",
  "created": "2019-01-12T19:22:11.237Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2019-01-31T19:10:07.803Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "sfnxm0mfmZKc4jdyvhEGu0YjXf8sXk3EyDXSBnInrrvP3UZa5AL4eyevZb3GP7aiGl/dzDO5bneG581RKX3wVQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 446091,
  "published": "2019-01-12T19:22:11.237Z",
  "releaseNotes": "Unsigned Assembly\n\nCorrections and improvements made to BesselJ functions.\n\nRevised (again) procedures for x.Round and x.toString. One problem with earlier versions was that, for virtually all public functions which required an implicit or explicit Precision parameter, the outputs were Truncate'd to no more than Precision + 1 decimal digits. This worked as a disadvantage when attempting to later round outputs to N digits in base J, where J can be as large as 64. At a bare minimum, since one base 64 digit is almost a full two decimal digits, the outputs of public functions needed to contain at least 2 decimal digits beyond the specified output Precision. This version includes that change, with function outputs Truncate'd to Precision + 2 decimal digits. \n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2017) and using Mpir.net for the underlying integer math, supplies a variety of math functions and utilities with precisions at least as large as 2,000,000 base 10 digits. The underlying objects are bf (for 'big float' real values comprised of an mpz_t extended integer part from Mpir.net and a base 2 int64 exponent), bcr (for complex numbers expressed in the rectangular coordinates of a bf real part and a bf imaginary part), and bcp (for complex numbers expressed in the polar coordinates of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.3.21",
  "version": "0.3.21",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1373,
      "fullName": "LongCalc.nuspec",
      "length": 2842,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 2659,
      "fullName": "LICENSE.txt",
      "length": 7814,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 33152,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 99328,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.10.14/longcalc.0.3.21.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}