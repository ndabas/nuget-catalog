{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.02.13.32.07/managedbass.0.10.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mathew Sachin",
  "catalog:commitId": "2428f20e-31d7-494e-ae00-99582227351b",
  "catalog:commitTimeStamp": "2016-02-02T13:32:07.9173462Z",
  "copyright": "(c) 2015 Mathew Sachin",
  "created": "2016-02-02T13:31:42.75Z",
  "description": "Free OpenSource .Net Wrapper around un4seen Bass and most of its addons.\nThis project is currently in development.\nYou can contribute to it on GitHub.\n\nSamples available on GitHub Repository\n\nThe Library is compiled for AnyCPU.\nBut the Bass dlls need to be checked for x64 or x86.\nPut the Bass dlls in the same folder as ManagedBass.dll.\nManagedBass does not need to be licensed for Commercial use, but bass and many of the addons have to be.\nCheck the below website for more details\nBass dlls are available at http://www.un4seen.com/bass\nBass and its Addons are trademarks of their respective owners.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.02.13.32.07/managedbass.0.10.0.json#frameworkassemblygroup/.netframework4.0",
    "assembly": "System",
    "targetFramework": ".NETFramework4.0"
  },
  "id": "ManagedBass",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://mit-license.org/",
  "listed": true,
  "packageHash": "IoHSqOsbK3uC6s3E4CSHGtemQDNv9IX/r3cmn/nXwmgzC38TA5xvSrxfghD/wQrdUvPo8+Cb79Fsk0ISC1+oXA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 140983,
  "projectUrl": "https://github.com/MathewSachin/ManagedBass/",
  "published": "2016-02-02T13:31:42.75Z",
  "releaseNotes": "* Included XML Documentation\n* MixerStream for WasapiPlaybackDevice\n* Changed WasapiDevice.Mute and Volume to LinearCurve\n* Parameterless WasapiLoopbackDevice.Init()\n* PluginInfo.Formats is an Array\n* Fixed Plugins.BassAAC support for Mp4\n* IDecoder and IPlayer integrated into Channel\n\n* Removed Read[Float/Int/Short/Byte] methods.\n\nRENAME:\n---------------------------------------------------------\nBASS (most renamings result in closeness to BASS namings)\n* GetRecordingDeviceInfo to RecordGetDeviceInfo\n* LoadPlugin to PluginLoad\n* FreePlugin to PluginFree\n* LoadPluginsFromDirectory to PluginLoadDirectory\n* (G/S)etFXParameters to FX(S/G)etParameters\n* LoadMusic to MusicLoad\n* PlayChannel to ChannelPlay\n* PauseChannel to ChannelPause\n* StopChannel to ChannelStop\n* LockChannel to ChannelLock\n* IsChannelActive to ChannelIsActive\n* LinkChannels to ChannelSetLink\n* NetPassive to FTPPassive\n* StartRecording to RecordStart\n* GetRecordingDeviceInfo to RecordGetDeviceInfo\n* GetRecordingInfo to RecordGetInfo\n* LoadSample to SampleLoad\n\n* DeviceInfo.Flags to Status\n* RecordInfo.WaveFormat to SupportedFormats\n\nAudioSample\n* Read to ReadSampleData\n* Write to WriteSampleData\n\nSampleInfo\n* iAngle to InsideAngle\n* oAngle to OutsideAngle\n* OutVolume to OutsideVolume\n\nFXChannelFlags\n* ChannelAll to All\n* ChannelNone to None\n\n* ChannelAttribute.BASS_ATTRIB_OPUS_ORIGFREQ to OpusOriginalFrequency\n\n* BassMix.ChannelGet/SetEvelopePos to ChannelGet/SetEnvelopePosition\n\nASIO* delegates, enums and structs renamed to Asio*\n\nADDITIONS:\n---------------------------------------------------------------------\n* Added enum DataFlags\n* Added struct MixerNode\n* Added Errors.Mp4NoStream\n* Added enum CDDataType\n* Added enum EncodeMetaDataType\n* Added Bass.RecordGetInput();\n* Added Effect.Channels\n* Added enum AsioFuture\n* Added structs AsioChannelControls, AsioIOFormat, AsioTransportParameters to be used with BassAsio.Future()\n* Added AddOutputSource and RemoveOutputSource resp. add/remove a Bass decoding channel to/from WASAPI output\n* Added BassFlags.AacStereo",
  "requireLicenseAcceptance": false,
  "summary": "Free OpenSource .Net Wrapper for Un4seen Bass.",
  "title": "ManagedBass",
  "verbatimVersion": "0.10.0",
  "version": "0.10.0",
  "tags": [
    "C#",
    "Bass",
    "Bass.Net",
    "ManagedBass",
    "wasapi",
    "asio",
    "mo3",
    "recording",
    "microphone",
    "loopback",
    "Audio",
    "music",
    "un4seen",
    "mix",
    "midi",
    "mixer",
    "aac",
    "ac3",
    "alac",
    "flac",
    "tta",
    "mp3",
    "wav",
    "adx",
    "aix",
    "ape",
    "mpc",
    "ofr",
    "opus",
    "spx",
    "wv",
    "free",
    "open",
    "source",
    "cd",
    "enc",
    "encode",
    "encoder",
    "decoder",
    "playback",
    "fx",
    "reverse",
    "tempo",
    "pitch",
    "frequency",
    "pan",
    "balance",
    "plugin",
    "wma",
    "effects",
    "reverb",
    "autowah",
    "bqf",
    "chorus",
    "compressor",
    "damp",
    "distortion",
    "dsp",
    "echo",
    "peak",
    "level",
    "phaser",
    "rotate",
    "ping",
    "pong",
    "tags",
    "id3",
    "mp4",
    "mod",
    "ogg",
    "mp2",
    "mp1",
    "aiff",
    "m2a",
    "mpa",
    "m1a",
    "mpg",
    "mpeg",
    "aif",
    "mp3pro",
    "bwf",
    "mus",
    "s3m",
    "xm",
    "it",
    "mtm",
    "umx",
    "mdz",
    "s3z",
    "float",
    "itz",
    "xmz",
    "cda",
    "disc",
    "url",
    "bpm",
    "eax"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}