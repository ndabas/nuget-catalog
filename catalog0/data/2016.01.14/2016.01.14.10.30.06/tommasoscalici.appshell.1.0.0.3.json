{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.14.10.30.06/tommasoscalici.appshell.1.0.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tommaso Scalici",
  "catalog:commitId": "01cc5997-5e90-4df5-8617-84234b94aca0",
  "catalog:commitTimeStamp": "2016-01-14T10:30:06.2034673Z",
  "copyright": "Copyright Â© 2016 Tommaso Scalici",
  "created": "2016-01-14T10:29:42.743Z",
  "description": "AppShell provides a template for building UWP apps with a standard \"hamburger\" menu built using SplitView control. This avoid you to build or copy/paste the menu for each app while not sacrificing flexibility. AppShell was built starting from \"XamlNavigagion\" sample project that you can find in Windows Universal Samples",
  "id": "TommasoScalici.AppShell",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/TommasoScalici/AppShell/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "b1xOIkZz/yz9V5/KeCgw4ugH0rnHR8AynvVuVjG2/2XJcwuhGsP4++bkHyWgDM7vrSd7x5nMyNjwPIZQoLtO4Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27798,
  "projectUrl": "https://github.com/TommasoScalici/AppShell",
  "published": "2016-01-14T10:29:42.743Z",
  "requireLicenseAcceptance": true,
  "summary": "Menu Template for UWP apps",
  "title": "AppShell",
  "version": "1.0.0.3",
  "tags": [
    "AppShell.NuGet"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}