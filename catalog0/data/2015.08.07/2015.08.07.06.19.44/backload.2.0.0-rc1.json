{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.07.06.19.44/backload.2.0.0-rc1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Steffen Habermehl",
  "catalog:commitId": "daaeb866-2725-4ff1-875e-e5a3fd21699e",
  "catalog:commitTimeStamp": "2015-08-07T06:19:44.6104782Z",
  "copyright": "Steffen Habermehl 2015",
  "created": "2015-07-19T15:57:45.643Z",
  "description": "Backload is a professional, full featured server side file handler for ASP.NET (MVC, Web API, ASP.NET WebForms). It handles the client side jQuery File Upload Plugin from blueimp, PlUpload from Moxiecode and Fine Uploader from Widen Enterprises out of the box, but it can be easily customized to work with any client side plugin (Example 09 on GitHub). More than 15 examples on GitHub. Cloud upload/manage feature (Release 2.5+). Continually developed and backed by the software industry.\n\nDemo package: https://github.com/blackcity/Backload/\n\nLicenses: Standard (free), Pro lite (49EUR), Pro (99EUR), Enterprise light (149EUR), Enterprise (199EUR). Enterprise license includes source code. Web: http://backload.org",
  "iconUrl": "https://raw.github.com/blackcity/Backload/master/Examples/images/128/backload.png",
  "id": "Backload",
  "isPrerelease": true,
  "lastEdited": "2015-08-07T06:19:41.44Z",
  "licenseUrl": "https://github.com/blackcity/Backload/License.txt",
  "packageHash": "eUAB9kPZYFwY+5wNDvY754ad0KU8P55/W57FiWap7x4niESts/2f4evWbhLUG+3Dp7+cptGQoQ9v224bt2959A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 826238,
  "projectUrl": "https://github.com/blackcity/Backload/wiki/Upgrade-and-migration",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "IMPORTANT: Migration from previous releases needs your attention! Read the migration notes on github.\n\nWhats new:\n- No external dependencies. Now Backload references only system dlls.\n- MVC 5 compatible (see demo project)\n- All files (server and client) are now in the ~/Backload folder.\n- Brand new API to access most functions from your custom code \n- 50% new or refactored internal code\n- Optimized memory usage\n- Chunked file uploads for all supported client side plugins\n- Most recent version of the supported client side plugins\n- New options in the configuration",
  "requireLicenseAcceptance": false,
  "summary": "Backload is a professional, full featured server side file handler for ASP.NET (MVC, Web API, ASP.NET WebForms).\nhttp://backload.org",
  "title": "Backload. A professional full featured ASP.NET file handler (MVC, Web API, WebForms)",
  "version": "2.0.0-rc1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.07.06.19.44/backload.2.0.0-rc1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.07.06.19.44/backload.2.0.0-rc1.json#dependencygroup/backload.bundles",
          "@type": "PackageDependency",
          "id": "Backload.Bundles",
          "range": "[2.0.0-rc1, )"
        }
      ]
    }
  ],
  "tags": [
    "Fileupload",
    "jQuery",
    "ASP.NET",
    "PlUpload",
    "FineUploader",
    "MVC",
    "WebApi",
    "WebForms",
    "Controller",
    "upload"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}