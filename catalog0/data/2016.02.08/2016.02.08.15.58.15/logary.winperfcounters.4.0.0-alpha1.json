{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.08.15.58.15/logary.winperfcounters.4.0.0-alpha1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Henrik Feldt, Logibit AB",
  "catalog:commitId": "09fa3e71-790b-40ac-9056-9c50468a2d53",
  "catalog:commitTimeStamp": "2016-02-08T15:58:15.7394897Z",
  "copyright": "Henrik Feldt, Logibit AB",
  "created": "2016-02-08T15:57:47.953Z",
  "description": "Logary is a high performance, multi-target logging, metric and health-check library for mono and .Net.",
  "iconUrl": "https://raw.githubusercontent.com/logary/logary-assets/master/graphics/LogaryLogoSquare32x32.png",
  "id": "Logary.WinPerfCounters",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://www.apache.org/licenses/LICENSE-2.0.html",
  "listed": true,
  "packageHash": "DWw2BDfJUiA83VLs7/Z+Oho6sQyBp8r0FHkDAkRGyowMxfLn4Xel5kFEZUrTRGwHlndPcQ5T5VzuPzIk7kLfrg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4472,
  "published": "2016-02-08T15:57:47.953Z",
  "releaseNotes": "Release Notes:\n\n * [infra] bumping albacore deps\n * [infra] better readme formulation\n * [infra] readme update about pre-release status\n * Merge branch 'master' into 4.0-base\n * Merge pull request #5 from haf/4.0-base\n * [infra] remove FSharp.Actor line\n * [infra] v4.0.0-alpha.1\n * [heka] target compiling\n * [mailgun] mailgun tests passing\n * [mailgun] code compiles\n * Fix config validation tests\n * Add errors field if it doesn't exist\n * Remove printfns and tweak test logging\n * Disable code signing\n * Start the target server job manually in tests\n * Enable core target and health check tests\n * Minor changes\n * Fix test deadlock\n * Merge remote-tracking branch 'haf/feature/hopac-wip' into feature/hopac\n * [core] BoundedMb for Target, Logger API\n * [target] towards Alt from Logger.log\n * Use a timeout when InternalLogger shuts down targets\n * Merge pull request #4 from haf/feature/hopac\n * [core] alt hopac values\n * Fix Logary.CSharp build\n * Fix Cancellation.isCancelled + minor tweaks\n * Fix tests build\n * Merge pull request #3 from haf/feature/hopac\n * [heka] total mapping function from Message\n * Merge branch 'feature/hopac' of https://github.com/paavohuhtala/logary into feature/hopac\n * [datamodel] clarifying timestamps\n * More test fixing, still doesn't build\n * Fix Logary.CSharp build\n * Fix core library build.\n * Merge pull request #2 from haf/feature/hopac\n * [logary] core API revamp\n * [infra] build with v4.sln\n * [SuaveReporter] supporting new DataModel\n * [mailgun] passing tests\n * [mailgun] mailgun with new model\n * [heka] test passing\n * [infra] add Mailgun to v4.sln\n * Merge pull request #1 from haf/feature/hopac\n * [infra] rename Heka.sln -> v4.sln, adding fsprojs as I go\n * [infra] downgrade F# SDK to v3.1\n * [infra] include CSharp adapter asm in Core.sln\n * [heka] compiles with new model\n * [infra] app.config no longer needed\n * [infra] upgrading libraries\n * [logary] fix indentation\n * [infra] Core.sln builds\n * [infra] removing F# Actor refs\n * [infra] ensure we fix up the namespaces\n * [infra] upgrading gemfile\n * Store logger name in `name` instead of Context.service\n * Minor cleanup and refactoring\n * Remove .Measure from Logger\n * Remove FSharp.Actor from solutions\n * Remove FSharp.Actor-logary submodule\n * Add Supervisor.fs into the .fsproj\n * Implement supervisors and more\n * Minor cleanup\n * Fix test project build break\n * Minor cleanup\n * Now passes the tests\n * Remove FSharp.Actor from the core library and tests\n * Upgrade Hopac to 0.1.0\n * Simplify Cancellation implementation\n * Port the rest of the library and tests to Hopac\n * A lot of Hopac progress\n * Port Target.fs to Hopac\n * Add utility function for creating Jobs with timeout\n * Port health checks to Hopac\n * Port the rest of metrics to Hopac\n * Port (most of) metrics to use Hopac\n * Fix cancellation\n * Implement Internals.Scheduling with Hopac\n * Add references to Hopac\n * Convert Targets.Heka to the new object model\n * Update Mailgun target to the new object model\n * Minor comment change\n * Implement converting String.Format formats into message templates\n * Minor cleanup\n * Rename Message.metric to metricWithUnit and metric' to metric\n * Implement dynamic object serialization\n * Tweak assembly references\n * Implement the new object model in Logary.CSharp\n * Implement templated messages\n * Minor cleanup\n * Change the JSON serialization test to match the new output\n * Fix build break after merge\n * Merge branch '4.0-base' into feature/chiron\n * Change Message context into a Map\n * Ignore empty JSON data for more compact output\n * Make fractions use 64-bit integers\n * Minor cleanup\n * Initial Chiron support\n * Minor cleanup\n * Change exception formatting tests\n * Re-enable EWMA tests\n * Remove dead code\n * Fix tests and implement string formatting for message fields\n * The tests now compile\n * Update metric Message API\n * Set Message context in Logger\n * Rename MessageLogger back to Logger\n * Remove LogLine and Measure\n * More object model changes. Builds!\n * More object model work\n * Initial object model migration work. DOES NOT COMPILE.\n * Remove TOML projects.\n * Merge remote-tracking branch 'origin/feature/object-model' into 4.0-base\n * [objectmodel] removing comments\n * [infra] F# 3.1\n * [infra] only net45\n * [objectmodel] updated object model\n * wip\n * [datamodel] minor fixes\n * Merge branch 'master' into 4.0-base\n * [infra] Upgrade FSharp.Actor-logary to VS2015\n * Remove TOML parser and tests\n * [infra] Upgrade .sln and .sln.DotSettings to VS2015/R#9\n * [datamodel] adding in level to Message\n * [infra] ignore .userprefs\n * working transducers finally\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * wip\n * [core] work on object model\n * [core] add sln with only core projects\n * [heka] improvements to prepare.sh\n * [heka] more samples\n * wip\n * churn\n * wip\n * readme\n * [heka] sample - problem with compose - doesn't run logary sample\n * [infra] F# Core reference\n * [examples] first cut at logary + heka in docker\n * [core] a new data model perhaps\n * [heka] creating Message alright\n * [heka] Message equality\n * [heka] first cut at Heka target\n * [heka] size unit tests\n * [heka] passing signature tests\n * [heka] initial serialisation test passing\n * [heka] first failing test\n * wip",
  "requireLicenseAcceptance": false,
  "title": "Logary.WinPerfCounters",
  "verbatimVersion": "4.0.0-alpha1",
  "version": "4.0.0-alpha1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.08.15.58.15/logary.winperfcounters.4.0.0-alpha1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.08.15.58.15/logary.winperfcounters.4.0.0-alpha1.json#dependencygroup/logary",
          "@type": "PackageDependency",
          "id": "Logary",
          "range": "[4.0.0-alpha1, )"
        }
      ]
    }
  ],
  "tags": [
    "logging",
    "f#",
    "nosql",
    "log4net",
    "nlog",
    "serilog",
    "log",
    "logs",
    "metrics",
    "metrics.net",
    "measure",
    "performance",
    "perf",
    "semantic",
    "structured"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}