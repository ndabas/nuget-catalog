{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.11.01.48.32/aomapper.1.0.6-dev2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Oleh Formaniuk",
  "catalog:commitId": "5b46685e-8088-461b-87bb-747c77af24d4",
  "catalog:commitTimeStamp": "2015-10-11T01:48:32.9090927Z",
  "copyright": "Copyright (c) 2015 Oleh Formaniuk",
  "created": "2015-10-11T01:48:08.22Z",
  "description": "Object-to-object convention-based mapping tool",
  "id": "AOMapper",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/zjklee/AOMapper/master/LICENSE",
  "listed": true,
  "packageHash": "uyJWDCx7m33B7lU9OZ/a/PmPm4OoRlzmhpEHKiBE+Y/m716Qnv4Q0ogBkC3Vm+LOwXtZhe0L4etcFBdxaBXV/g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 353941,
  "projectUrl": "https://github.com/zjklee/AOMapper/",
  "published": "2015-10-11T01:48:08.22Z",
  "requireLicenseAcceptance": false,
  "title": "AOMapper",
  "verbatimVersion": "1.0.6-dev2",
  "version": "1.0.6-dev2",
  "tags": [
    "AOMapper",
    "Mapper",
    "object-to-object"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}