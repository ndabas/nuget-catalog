{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thomas James",
  "catalog:commitId": "c14f3930-469b-46eb-a7cf-7bcb092b1199",
  "catalog:commitTimeStamp": "2018-12-04T18:38:24.9079124Z",
  "created": "2017-07-12T20:56:58.21Z",
  "description": "TPJ Logging library - Easily Log errors into a log file and/or e-mail. Simple, light weight, easy to setup!",
  "iconUrl": "http://i.imgur.com/fTzk4ub.png",
  "id": "TPJ.Logging",
  "isPrerelease": false,
  "lastEdited": "2018-12-04T18:37:54.18Z",
  "listed": true,
  "packageHash": "tarnSOcVvTHyYWHeFBL9N+J21zprUtWwZuh1ZGpaOpOea30mSehrCXK/WsNN8PCERsYSM/Rkkj2DfUW71FRegw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22193,
  "projectUrl": "http://www.tpjsolutions.co.uk/",
  "published": "2017-07-12T20:56:58.21Z",
  "releaseNotes": "V2.5.0 is still only supporting full .net 4.5.2, 4.6, and 4.6.1. This version cleans up the code getting it ready for .NETstandard 2.0. Once .NETStandard 2.0 is released this packaged will be updated to run using this. More detailed Examples will follow then.\nASP.Net Core full framework (4.5.2 4.6 4.6.1) Website / WebAPI Set up using both E-mail and Log file.\n\nWithin  appsettings.json and add the following \n\n{ \n  \"TPJ\": { \n    \"Logging\": { \n      \"ApplicationName\": \"\", \n      \"Error\":{ \n        \"LogType\": \"\", \n        \"LogFileDirectory\": \"\", \n        \"Email\":{ \n          \"To\": \"\", \n          \"From\": \"\", \n          \"SmtpClient\": \"\", \n          \"SmtpUser\": \"\", \n          \"SmtpPassword\": \"\", \n          \"Port\": \"\", \n          \"EnableSSL\": \"\" \n        } \n      } \n    } \n  } \n} \n\nApplicationName – (Required) Name of the application used on the log file names and e-mails \n\nErrorLogType – (Required) There are three types of error log types \n              1) Email - Errors are sent via e-mail only (as per rest of the config settings) \n              2) LogFile - Errors are logged in a txt file (named – ‘[{Environment}] {Application Name} Error Log.txt’) \n              3) EmailLogFile - Does both Email and LogFile \n\nLogFileDirectory - (Required for log file logging) The location at which the log / error file will be placed \n\nTo - (Required for e-mail logging) Error e-mails sent to; Can be a list split by ';' E.G \"Test@test.com;Test2@test.com\" \n\nFrom - (Required for e-mail logging) E-mails are sent from this account \n\nSmtpClient – (Required for e-mail logging) SMTP server which e-mails will be sent from \n\nSmtpUser - (Not required) send e-mail using the given user name and password \n\nSmtpPassword - (Not required) send e-mail using the given user name and password \n\nPort - (Not required) port to send from \n\nEnableSSL - (Not required) enable SSL when sending the e-mail \n\nExample appsettings.json setup using Gmail to send error e-mails – \n{ \n  \"TPJ\": { \n    \"Logging\": { \n      \"ApplicationName\": \"Test Application\", \n      \"Error\":{ \n        \"LogType\": \"EmailLogFile\", \n        \"LogFileDirectory\": \"C:\\Logging\", \n        \"Email\":{ \n          \"To\": \"test@test.com\", \n          \"From\": \"test@gmail.com \", \n          \"SmtpClient\": \"smtp.gmail.com\", \n          \"SmtpUser\": \"test@gmail.com\", \n          \"SmtpPassword\": \"testPassword\", \n          \"Port\": \"587\", \n          \"EnableSSL\": \"true\" \n        } \n      } \n    } \n  } \n} \n\nOnce appsettings.json is done open StartUp.cs file and go to ConfigureServices \n\n\nvar logSettings = new TPJ.Logging.Models.ErrorLogSettings(Configuration);\nservices.Configure< TPJ.Logging.Models.ErrorLogSettings>(options => \n{\n    options.ApplicationName = logSettings.ApplicationName;\n    options.LogType = loggSettings. LogType;\n    options.LogFileDirectory = loggSettings.LogFileDirectory;\n    options.EmailTo = loggSettings.EmailTo;\n    options.EmailFrom = loggSettings.EmailFrom;\n    options.SmtpClient = loggSettings.SmtpClient;\n    options.SmtpUser = loggSettings.SmtpUser;\n\n    options.SmtpPassword = loggSettings.SmtpPassword;\n    options.Port = loggSettings.Port;\n    options.EnableSSL= loggSettings.EnableSSL;\n});\nservices.AddSingleton< TPJ.Logging.IErrorLogger, TPJ.Logging.ErrorLogger>();\n\n\nThen using DI within asp.net core you can call IErrorLogger like so \n\nprivate readonly TPJ.Logging.IErrorLogger _errorLogger; \n\npublic HomeController(TPJ.Logging.IErrorLogger logger) \n{ \n  _errorLogger = errorLogger; \n} \n\nThen within an IActionResult you might have this \n\npublic IActionResult About(Divide divide) \n{ \n  try \n  { \n     var divideByZero = divide.ValueOne / divide.ValueTwo;\n      return View(); \n  } \n  catch (Exception e) \n  { \n      _logger.Log(System.Reflection.MethodBase.GetCurrentMethod(), e, divide);\n      return RedirectToAction(nameof(Error)); \n  } \n}\n\nThis will then log the error with the current method information, the exception details and the details of the object ‘divide’ – it will log nested classes within objects.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.5.1",
  "version": "2.5.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#dependencygroup/.netframework4.6.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#dependencygroup/.netframework4.6.1/system.valuetuple",
          "@type": "PackageDependency",
          "id": "System.ValueTuple",
          "range": "[4.3.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#dependencygroup/.netframework4.6.1/microsoft.extensions.configuration.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Configuration.Abstractions",
          "range": "[1.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#dependencygroup/.netframework4.6.1/microsoft.extensions.options",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Options",
          "range": "[1.1.2, )"
        }
      ],
      "targetFramework": ".NETFramework4.6.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#TPJ.Logging.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1968,
      "fullName": "TPJ.Logging.nuspec",
      "length": 5275,
      "name": "TPJ.Logging.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#lib/net461/TPJ.Logging.dll",
      "@type": "PackageEntry",
      "compressedLength": 9027,
      "fullName": "lib/net461/TPJ.Logging.dll",
      "length": 31232,
      "name": "TPJ.Logging.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.04.18.38.24/tpj.logging.2.5.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9459,
      "fullName": ".signature.p7s",
      "length": 9459,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    ".NET",
    "Logging"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}