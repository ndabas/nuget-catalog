{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.44.47/memorycache.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Adam Riddick",
  "catalog:commitId": "981e49ff-7cef-4bc3-8b3a-d79e393d427f",
  "catalog:commitTimeStamp": "2015-02-04T22:44:47.6485976Z",
  "copyright": "2014 Adam Riddick",
  "created": "2014-03-07T23:55:44.257Z",
  "description": "Working with a simple In-Memory Cache shouldn't cause anyone a headache. It should be simple to use and implemented at the click of a button.\n\nEnter MemoryCache, a very lightweight, thread safe In-Memory Cache ready to be used in scalable, multi-threaded solutions. MemoryCache is a .Net Library which can be installed directly from NuGet, making it quick and easy to store and retrieve objects.",
  "id": "MemoryCache",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "1nsJjYK9ymk8SJhfdJk/1LawXE2J3OQ8fn/GuBwT09mjR/ic7E3fZ1tZkXYQPZeuGCguQO1FmAqebpaKcj4q4w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6808,
  "projectUrl": "http://www.adamriddick.com/memorycache-memory-storage/",
  "published": "2014-03-07T23:55:44.257Z",
  "releaseNotes": "V1.0.0 - Initial Release",
  "requireLicenseAcceptance": false,
  "title": "MemoryCache",
  "version": "1.0.0",
  "tags": [
    "Cache",
    "In-Memory",
    "Storage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}