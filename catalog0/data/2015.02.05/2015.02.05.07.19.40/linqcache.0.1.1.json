{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.07.19.40/linqcache.0.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Oskar Sj√∂berg",
  "catalog:commitId": "6c15cf2d-6a05-4188-8f42-29e500ab5e57",
  "catalog:commitTimeStamp": "2015-02-05T07:19:40.7245592Z",
  "created": "2014-04-30T22:40:22.433Z",
  "description": "LinqCache is a simple yet poweful framework for caching LINQ queries. \nThe framework works seamlessly wheter the backing data store is objects, XML, LINQ-to-SQL, Entity Framework, NHibernate or any other LINQ enabled provider. \nYou can also extend the frame work with your own custom cache containers or custom cache invalidation rules.",
  "iconUrl": "http://oskarsjoberg.se/LinqCache.png",
  "id": "LinqCache",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "HNkAUAYa+ubj7oF+GpKDQe+wCJWRVYRTEyQ0A5CUYlQG0DisxlzECAnSPR2/bzXqfVS9KESZ2v+cjL5PGMM2lQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 12861,
  "published": "2014-04-30T22:40:22.433Z",
  "requireLicenseAcceptance": false,
  "summary": "LinqCache is a simple yet poweful framework for caching LINQ queries. The framework works seamlessly wheter the backing data store is objects, XML, LINQ-to-SQL, Entity Framework, NHibernate or any other LINQ enabled provider. You can also extend the frame work with your own custom cache containers or custom cache invalidation rules.",
  "title": "LinqCache",
  "version": "0.1.1",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}