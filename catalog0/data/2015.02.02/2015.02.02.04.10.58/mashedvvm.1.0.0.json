{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.04.10.58/mashedvvm.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Seeger",
  "catalog:commitId": "f3d3538f-38de-42d7-b921-e6e4386fd60a",
  "catalog:commitTimeStamp": "2015-02-02T04:10:58.5741957Z",
  "copyright": "2012 by Michael Seeger",
  "created": "2012-09-16T18:11:30.42Z",
  "description": "MashedVVM is a quite lightweight MVVM framework that brings an 'INotifyable' data class and abstract ViewModel base classes plus an also abstract View base class. There are also Interfaces provided which are implemented in those classes to have them ready-to-use in an IoC scenario (like PRISM using Unity). It is stricly limited to WPF and it supports the ViewModel-First paradigm.",
  "id": "MashedVVM",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "jsA9YP9K0vzymp3pTA8bHi+LyNP9RiAjeuLhaISLKAKJYPatpCtzhFScCarHVw2hCe7bPLwZ8YOLpbxhnYcfNg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20725,
  "projectUrl": "https://github.com/miseeger/MashedVVM",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "This project is still a work-in-progress and although it is well (unit-)tested you'll use it at your own risk !!!",
  "requireLicenseAcceptance": false,
  "title": "MashedVVM",
  "version": "1.0.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}