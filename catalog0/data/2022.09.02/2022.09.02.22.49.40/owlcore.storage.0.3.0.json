{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Arlo Godfrey",
  "catalog:commitId": "399b75d3-0931-48a9-94df-a1af20a69d16",
  "catalog:commitTimeStamp": "2022-09-02T22:49:40.657414Z",
  "created": "2022-09-02T22:47:34.83Z",
  "description": "Coordinated, high-latency IPoAC == A bad hard drive comprised entirely of Owls (see rfc6214)\n\t\t\n\t\tThis package enables early adoption of CommunityToolkit.Storage, a proposed package in Toolkit Labs, eventually to end up in CommunityToolkit/dotnet on GitHub.",
  "iconFile": "logo.png",
  "id": "OwlCore.Storage",
  "isPrerelease": false,
  "lastEdited": "2022-09-02T22:49:36.187Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "R81r2fE2soQN2tJn2VXzxUAldD76JZOO4Y7vkmnbLkP/62OzN53ffFJ3EDhVAeM8QaNrqIo/m1Q4wM5oE3Ck3w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 49391,
  "published": "2022-09-02T22:47:34.83Z",
  "releaseNotes": "--- 0.3.0 ---\n[New]\nAdded MemoryFile and MemoryFolder under OwlCore.Storage.Memory.\n\n--- 0.2.0 ---\nTHIS IS A BREAKING RELEASE.\nUpdate asap, and do not use older versions.\nWe will switch to pure semver2.0 once a stable 1.0.0 released is made.\n\n[Breaking]\nDue to the wildly different strategies that could be used for generic recursive folder moving/copying, IModifiableFolder.CreateCopyOfAsync and IModifiableFolder.MoveFromAsync now exclusively handle files. This may be added back later as a fast-path interface + extension method.\n\nA new property has been added to the IFolderWatcher interface. Supplying the folder which is being observed is now a requirement. The \"sender\" in the INotifyCollectionChanged handler should be the watcher instead of the folder, meaning the folder can't be accessed from event handlers unless the watcher supplies it. \n\n[New]\nOwlCore.Storage.SimpleStorableItem has been added, a minimum possible implementation of IStorable. This is useful in scenarios when you need to identify a resource but shouldn't supply any access to it, such as when a file or folder is removed.\n\nWe've started adding inbox interface implementations, starting with System.IO, under the namespace OwlCore.Storage.SystemIO.\n\n--- 0.1.0 ---\n[New]\nAdded all missing interfaces and extension methods from proposal.\n      \n--- 0.0.0 ---\n[New]\nInitial release of OwlCore.Storage.",
  "repository": "",
  "verbatimVersion": "0.3.0",
  "version": "0.3.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#dependencygroup/.netstandard2.0/microsoft.bcl.asyncinterfaces",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.AsyncInterfaces",
          "range": "[6.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#dependencygroup/.netstandard2.0/system.linq.async",
          "@type": "PackageDependency",
          "id": "System.Linq.Async",
          "range": "[6.0.1, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#OwlCore.Storage.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1305,
      "fullName": "OwlCore.Storage.nuspec",
      "length": 2510,
      "name": "OwlCore.Storage.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#lib/netstandard2.0/OwlCore.Storage.dll",
      "@type": "PackageEntry",
      "compressedLength": 21180,
      "fullName": "lib/netstandard2.0/OwlCore.Storage.dll",
      "length": 36864,
      "name": "OwlCore.Storage.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#lib/netstandard2.0/OwlCore.Storage.xml",
      "@type": "PackageEntry",
      "compressedLength": 3141,
      "fullName": "lib/netstandard2.0/OwlCore.Storage.xml",
      "length": 25933,
      "name": "OwlCore.Storage.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#logo.png",
      "@type": "PackageEntry",
      "compressedLength": 11396,
      "fullName": "logo.png",
      "length": 13506,
      "name": "logo.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 691,
      "fullName": "LICENSE.txt",
      "length": 1135,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.02.22.49.40/owlcore.storage.0.3.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}