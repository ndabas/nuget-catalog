{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.22.05.19/jdcb.0.9.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "WaynebabyWang  FelixFang",
  "catalog:commitId": "e274f210-5735-4b5b-b380-478427859e23",
  "catalog:commitTimeStamp": "2015-02-02T22:05:19.7844412Z",
  "created": "2012-12-17T15:45:29.483Z",
  "description": "Yeah, you can access json with dynamic & Json.Net.\n      But why can't we have the old static way?\n      Is there no one miss the happiness of working with intellisense?\n\n      There must be a easy way.\n\n      动态调用RestAPI返回的json, 确实很简单\n      但是你自己要封装一个SDK给别人，你好意思给人家说明书让人家看着说明书动态调用么？\n      看着动态调用里面写着驼峰命名 和你的完美API格格不入，你不觉得强迫症要发作了么？\n      为了解决这些问题，我们开了这个项目。\n      智能提示很重要。",
  "id": "JDCB",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "A0xtosXb3VmwjVVMeRdRkQB0xCz3jmIn0SSr8Q+Xtpup/f8j0cI0M8QqQB1wUsRG94dUMb9Y3LJ2iDnLOXj/DA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 645567,
  "projectUrl": "http://jdcb.codeplex.com/",
  "published": "2012-12-17T15:45:29.483Z",
  "requireLicenseAcceptance": false,
  "summary": "No license at all, all free",
  "title": "Json Datacontract Builder",
  "version": "0.9.0.1",
  "tags": [
    "Csharp",
    "c#",
    "Json",
    "Datacontract",
    "JDCB",
    "Builder",
    "T4",
    "tttt",
    "text",
    "template"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}