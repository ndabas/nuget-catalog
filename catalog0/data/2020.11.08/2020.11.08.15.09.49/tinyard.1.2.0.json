{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.08.15.09.49/tinyard.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TinYard",
  "catalog:commitId": "60ef0f7b-8062-4897-9c7d-af1fc3360ee7",
  "catalog:commitTimeStamp": "2020-11-08T15:09:49.7781431Z",
  "created": "2020-11-08T15:08:09.717Z",
  "description": "TinYard is a C# framework built to provide easy DI, event system and more. https://github.com/TinYard/TinYard",
  "id": "TinYard",
  "isPrerelease": false,
  "lastEdited": "2020-11-08T15:09:45.55Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "tO1puRKAucBdCIOoh2qeZr/Nl5xO7Yoks1+qobFL6CSFmxxUNpS6wl+2DNh6vSAS+EzkMGxlT6VTx0xu8eZtMA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 28866,
  "projectUrl": "https://github.com/TinYard/TinYard",
  "published": "2020-11-08T15:08:09.717Z",
  "releaseNotes": "Release 1.2.0\n\n* What is new?\n  * Command System Extension, and Guards for Commands\n  * Callback Timer Extension\n  * Context Detain and Release functionality\n\n* What has changed?\n  * Mediators can be mapped to Interfaces\n  * Multiple Mediators can be mapped to a View\n  * Context has a `PostInitialize` Hook\n  * GetMappingValue<T> returns object of Type T\n  * Values being Injected into another class are also injected into prior to injection\n\n* Bug fixes\n    * EventDispatcher `AddListener<T>` function now will not throw an error when being used. `AddListener(Enum type, Action callback)` will now not throw an exception if type is null also.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.2.0",
  "version": "1.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.08.15.09.49/tinyard.1.2.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.08.15.09.49/tinyard.1.2.0.json#TinYard.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 800,
      "fullName": "TinYard.nuspec",
      "length": 1612,
      "name": "TinYard.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.08.15.09.49/tinyard.1.2.0.json#lib/netstandard2.0/TinYard.dll",
      "@type": "PackageEntry",
      "compressedLength": 16070,
      "fullName": "lib/netstandard2.0/TinYard.dll",
      "length": 37888,
      "name": "TinYard.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.08.15.09.49/tinyard.1.2.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 640,
      "fullName": "LICENSE",
      "length": 1089,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.08.15.09.49/tinyard.1.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "dll",
    "framework",
    "DI",
    "Events",
    "Dependency",
    "Injection",
    "IoC",
    "Commands"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}