{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Maksim Volkau",
  "catalog:commitId": "6ae3b7b9-0611-447f-9d0a-f5ea08731d60",
  "catalog:commitTimeStamp": "2018-12-14T19:29:12.5830812Z",
  "copyright": "Copyright Â© 2013 Maksim Volkau",
  "created": "2015-11-05T20:21:07.563Z",
  "description": "DryIoc is fast, small, full-featured IoC Container for .NET",
  "id": "DryIoc",
  "isPrerelease": true,
  "lastEdited": "2018-12-14T19:28:47.19Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "y19wXY76Jp4lxf5VeP197AsqmBbG/IQAX1j7d+z2r2g3Pci/hCphC0lWaFO+3kDRJs83yE1HZiVMn6iI4aU77A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 468343,
  "projectUrl": "https://bitbucket.org/dadhi/dryioc",
  "published": "2015-11-05T20:21:07.563Z",
  "releaseNotes": "- Support for [PCL](http://msdn.microsoft.com/en-us/library/gg597391(v=vs.110).aspx) and [.NET Core](https://oren.codes/2015/07/29/targeting-net-core).\n            - More consistent and complete API.\n            - Diagnose potential resolution problems with `container.VerifyResolutions()`.\n            - Possible compile-time factory delegate generation. Utilized by [DryIocZero](Companions/DryIocZero).\n            - Ambient current scope and `Reuse.InWebRequest` for ASP.NET integration.\n            - Support for static and instance factory methods in addition to constructor. It means support for method parameters injection.\n            - Batch registration from assemblies and type collections with `RegisterMany`.\n            - Service key of arbitrary type. The only requirement for key type is to implement `GetHashCode` and `Equals`.\n            - Resolve as `KeyValuePair` to get service key with service object.\n            - Register with condition for resolution.\n            - Required service type support: e.g. `var serviceObjects = c.Resolve{object[]}(typeof(Service));`.\n            - Optional parameters support.\n            - Fine-grained control over injection of parameters, properties, and fields.\n            - Injection of primitive values.\n            - Control how reused service is stored and disposed via `weaklyReferenced` and `preventDisposal` setups.\n            - Resolve service collection as `IList{T}`, `ICollection{T}`, `IReadOnlyList{T}`, `IReadOnlyCollection{T}`.\n            - Register once, existing registration update, unregister.\n            - Explicit cache management.\n            - __removed:__ Compilation to DynamicAssembly. DryIoc is fast enough without its complexity.",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.0.0-rc4build338",
  "version": "2.0.0-rc4build338",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#DryIoc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1200,
      "fullName": "DryIoc.nuspec",
      "length": 2484,
      "name": "DryIoc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 648,
      "fullName": "LICENSE.txt",
      "length": 1099,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net35/DryIoc/Container.cs",
      "@type": "PackageEntry",
      "compressedLength": 88581,
      "fullName": "content/net35/DryIoc/Container.cs",
      "length": 511549,
      "name": "Container.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net35/DryIoc/Ported-net40.cs",
      "@type": "PackageEntry",
      "compressedLength": 2393,
      "fullName": "content/net35/DryIoc/Ported-net40.cs",
      "length": 7443,
      "name": "Ported-net40.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net35/DryIoc/Ported-net45.cs",
      "@type": "PackageEntry",
      "compressedLength": 1721,
      "fullName": "content/net35/DryIoc/Ported-net45.cs",
      "length": 5109,
      "name": "Ported-net45.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net40/DryIoc/Container.cs",
      "@type": "PackageEntry",
      "compressedLength": 88581,
      "fullName": "content/net40/DryIoc/Container.cs",
      "length": 511549,
      "name": "Container.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net40/DryIoc/Ported-net45.cs",
      "@type": "PackageEntry",
      "compressedLength": 1721,
      "fullName": "content/net40/DryIoc/Ported-net45.cs",
      "length": 5109,
      "name": "Ported-net45.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net45/DryIoc/Container.cs",
      "@type": "PackageEntry",
      "compressedLength": 88581,
      "fullName": "content/net45/DryIoc/Container.cs",
      "length": 511549,
      "name": "Container.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/net45/DryIoc/AsyncExecutionFlowScopeContext.cs",
      "@type": "PackageEntry",
      "compressedLength": 1744,
      "fullName": "content/net45/DryIoc/AsyncExecutionFlowScopeContext.cs",
      "length": 4156,
      "name": "AsyncExecutionFlowScopeContext.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/portable-net4%2Bsl5%2Bnetcore45%2Bwpa81%2Bwp8%2BMonoAndroid1%2BMonoTouch1/DryIoc/Container.cs",
      "@type": "PackageEntry",
      "compressedLength": 88581,
      "fullName": "content/portable-net4%2Bsl5%2Bnetcore45%2Bwpa81%2Bwp8%2BMonoAndroid1%2BMonoTouch1/DryIoc/Container.cs",
      "length": 511549,
      "name": "Container.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/portable-net4%2Bsl5%2Bnetcore45%2Bwpa81%2Bwp8%2BMonoAndroid1%2BMonoTouch1/DryIoc/Ported-net45.cs",
      "@type": "PackageEntry",
      "compressedLength": 1721,
      "fullName": "content/portable-net4%2Bsl5%2Bnetcore45%2Bwpa81%2Bwp8%2BMonoAndroid1%2BMonoTouch1/DryIoc/Ported-net45.cs",
      "length": 5109,
      "name": "Ported-net45.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#content/portable-net45%2Bnetcore45%2Bwpa81%2Bwp8%2BMonoAndroid1%2BMonoTouch1/DryIoc/Container.cs",
      "@type": "PackageEntry",
      "compressedLength": 88581,
      "fullName": "content/portable-net45%2Bnetcore45%2Bwpa81%2Bwp8%2BMonoAndroid1%2BMonoTouch1/DryIoc/Container.cs",
      "length": 511549,
      "name": "Container.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.19.29.12/dryioc.2.0.0-rc4build338.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "IoC",
    "Container",
    "Inversion-of-Control",
    "DI",
    "Dependency-Injection",
    "DRY",
    "Service-Provider",
    "Factory"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}