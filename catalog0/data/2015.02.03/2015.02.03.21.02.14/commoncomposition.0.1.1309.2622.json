{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.21.02.14/commoncomposition.0.1.1309.2622.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Daniel Cazzulino, Clarius Labs",
  "catalog:commitId": "b504419e-9abc-4145-a670-05d882c3dd3c",
  "catalog:commitTimeStamp": "2015-02-03T21:02:14.3891879Z",
  "copyright": "Copyright 2013, ClariusLabs under Apache 2.0 license",
  "created": "2013-09-26T22:25:53.073Z",
  "description": "Portable component composition annotations, dependency injection framework agnostic.\n        \nAutomatically register your application components by convention with the most popular DI frameworks, while keeping your code container-agnostic.",
  "iconUrl": "http://clarius.io/commoncomposition",
  "id": "CommonComposition",
  "isPrerelease": false,
  "lastEdited": "2013-11-25T21:36:56.513Z",
  "licenseUrl": "https://raw.github.com/clariuslabs/CommonComposition/master/LICENSE",
  "packageHash": "hdG3Thqn4d/UcJpOEt5OGbQj0os1ihnCFV8dprk2DKTd3OrW3cEL7yp3jAF3jQjfx3H2hQpzBLi2Aqi91I/dew==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5522,
  "projectUrl": "https://github.com/clariuslabs/CommonComposition",
  "published": "2013-09-26T22:25:53.073Z",
  "releaseNotes": "v0.1\n\n* Initial ComponentAttribute annotation, with IsSingleton support\n* Bindings for Autofac, MEF, Ninject, Unity and Windsor",
  "requireLicenseAcceptance": false,
  "title": "CommonComposition",
  "version": "0.1.1309.2622",
  "tags": [
    "dependency",
    "injection",
    "di",
    "extensibility",
    "composition"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}