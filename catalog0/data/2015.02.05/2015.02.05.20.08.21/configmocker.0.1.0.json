{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.20.08.21/configmocker.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "dmitriy.martyscenko",
  "catalog:commitId": "6d6b7126-6bc9-4889-9b12-f3a3d84b012f",
  "catalog:commitTimeStamp": "2015-02-05T20:08:21.0272141Z",
  "created": "2014-07-09T15:03:04.28Z",
  "description": "Usage\nCreate a \"Web.config\" variation with machine name in extension, eg \"Web.PC-DEV.config\".\nAdd your machine specific connection strings or app settings to that file, using standard .NET configuration elements.\nCall new ConfigMocker.ConfigMocker.Mock(); during app init - it will replace default configuration with machine specific ones in runtime, if alternative config file was found for this machine.\nNOTE: \"configSource\" attribute is also supported. Just create new variation for config file specified in the attribute value. For example, for this line in the \"Web.config\":\n\n<connectionStrings configSource=\"App_Config\\ConnectionStrings.config\" />\ncreate a variation in \"App_Config\" folder with the name \"ConnectionStrings.%PC-NAME%.config\".",
  "id": "ConfigMocker",
  "isPrerelease": false,
  "lastEdited": "2014-07-09T16:38:19.107Z",
  "packageHash": "nsHeoZjEim0BcarhBbDodH+S8H/1Qb22vm/gRMmI06wa3QWvMztB1c2mXSoZZ7Y/fqTB1TNvB26VN+K+y47SNA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6981,
  "projectUrl": "https://github.com/DimaK0t/ConfigMocker",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Allows to have machine specific connection strings and app settings.",
  "title": "ConfigMocker",
  "version": "0.1.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}