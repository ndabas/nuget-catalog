{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.03.21.12.37/aspose.slides.net.14.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "16579bff-5afa-4390-83f3-f0f51867d37e",
  "catalog:commitTimeStamp": "2018-11-03T21:12:37.7414008Z",
  "copyright": "ï¿½ Aspose 2002-2013. All Rights Reserved.",
  "created": "2014-06-02T11:00:57.627Z",
  "description": "Aspose.Slides is a PowerPoint management library for working with Microsoft PowerPoint files without using Microsoft PowerPoint. It allows developers to work with PPT, PPS, POT, PPTX, PPSX, POTX and ODP files on ASP.NET web applications, web services and Windows applications.",
  "iconUrl": "http://www.aspose.com/images/products/dotnet/Aspose.Slides_128x128.png",
  "id": "Aspose.Slides.NET",
  "isPrerelease": false,
  "lastEdited": "2018-11-03T21:12:29.32Z",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "listed": true,
  "packageHash": "YgREL4DmoXmsjnydZx7nxzYN/XvF6tdxRv76cesLr6fJ9ygn4TxYxmn8n019Gqt9uL++4BA0K0OfagfBFl/lTQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20665945,
  "projectUrl": "http://www.aspose.com/.net/powerpoint-component.aspx",
  "published": "2014-06-02T11:00:57.627Z",
  "releaseNotes": "Aspose.Slides for .NET 14.4.0 Release Notes\nWe are pleased to announce the release of Aspose.Slides for .NET 14.4.0. This release includes new functionality and bug fixes.\n\nUsing Aspose.Slides for .NET you can work with PPT, PPTX, OpenDocument, and other formats in your applications. You can also view, generate, modify, convert, render and print presentations all without using Microsoft PowerPoint.\n\nVisit the documentation to learn how to get started with Aspose.Slides for .NET.\n\nNote this download contains a fully working version of the product, however without a license set it will run in evaluation mode. To test Aspose.Slides without these evaluation limitations you can request a free 30-day temporary license.\n\nThe following is a list of changes in this version of Aspose.Slides.\n\nMajor Features\n(SLIDESNET-35180) - Add possibility of adding/inserting/removing/cloning layout slides\nMinor Features\n(SLIDESNET-35103) - Relative Image height is not working in mreged API\n(SLIDESNET-31454) - Support for accessing and changing SmartArt node bullet images\n(SLIDESNET-35266) - Not able to clone custom layout slides by using destination theme\nOther Improvements and Changes\nBugs\n(SLIDESNET-35385) - small caps turn into lower case for PPTX presentation thumbnails\n(SLIDESNET-35376) - Shape Rotation is not working in version 14.3.0\n(SLIDESNET-35365) - Hyperlink to absolute file path doesn't work for PowerPoint 2007\n(SLIDESNET-35357) - ArgumentException while exporting presentation to HTML\n(SLIDESNET-35346) - Aspose.Slides takes enormous time to export to PDF\n(SLIDESNET-35343) - Some shapes in generated presentation is broken or missed\n(SLIDESNET-35338) - Animation is not getting preserved correctly after cloning slides\n(SLIDESNET-35326) - Error message on opening created Pdf\n(SLIDESNET-35315) - Error on opening the generated PDF file from PPT\n(SLIDESNET-35207) - Index out of range exception is thrown on opening the PPTX file\n(SLIDESNET-35173) - Saving presentation to PDF throws StackOverflowException\n(SLIDESNET-35151) - Wrong chart outline PDF and PNG rendering\n(SLIDESNET-35071) - Labels and Y-Axis Values are not displayed as per the number format in generated image file\n(SLIDESNET-34455) - SmartArt is missing in generated PDF\n(SLIDESNET-34091) - NullReferenceException during the \"DiagramNodeEx -> TextFrameEx.Text\" property accessing\n(SLIDESNET-34090) - Margins of the TextFrame of the smartArt diagrams node are not defined after a presentation loading\n(SLIDESNET-34089) - DiagramNodeEx.AllNodes returns a collection which works not obviously\n(SLIDESNET-34088) - DiagramNodeEx.ChildNodes\n() returns incorrect collection after a node removing\n(SLIDESNET-33916) - Setting node and child node position does not work for SmartArt Shapes\n(SLIDESNET-33840) - Exporting to HTML does not obey image resizing\n(SLIDESNET-33672) - Merging cells in tables reduce the number of rows or columns\n(SLIDESNET-33511) - SmartArt improperly renderd in generated PDF\n(SLIDESNET-30874) - SmartArt text is improperly rendered in exported PDF, TIFF\nPublic API and Backwards Incompatible Changes\nAspose.Slides.ILayoutSlide.HasDependingSlides property had been added\nThe property Aspose.Slides.ILayoutSlide.HasDependingSlides returns true if there exists at least one slide that depends on this layout slide. For example:\nILayoutSlide layout = ...;\nif (!layout.HasDependingSlides)\nlayout.Remove();\nAspose.Slides.ILayoutSlide.Remove() method had been added\nThe method Aspose.Slides.ILayoutSlide.Remove() allows to remove layout from presentation with minimum of code. For example:\nILayoutSlide layout = ...;\nif (!layout.HasDependingSlides)\nlayout.Remove();\nAspose.Slides.ILayoutSlideCollection.Remove(ILayoutSlide) method had been added\nThe method Aspose.Slides.ILayoutSlideCollection.Remove(ILayoutSlide) allows to remove a layout from the collection. Code examples:\nILayoutSlide layout = ...;\nif (!layout.HasDependingSlides)\npresentation.LayoutSlides.Remove(layout);\nor\nIMasterSlide masterSlide = ...;\nILayoutSlide layout = ...;\nif (!layout.HasDependingSlides)\nmasterSlide.LayoutSlides.Remove(layout);\nAspose.Slides.ILayoutSlideCollection.RemoveUnused() method had been added\nThe method Aspose.Slides.ILayoutSlideCollection.RemoveUnused() allows to remove unused layout slides (layout slides whose HasDependingSlides is false). Code examples:\npresentation.LayoutSlides.RemoveUnused();\nor\nIMasterSlide masterSlide = ...;\nmasterSlide.LayoutSlides.RemoveUnused();\nAspose.Slides.IMasterSlide.HasDependingSlides property had been added\nThe property Aspose.Slides.IMasterSlide.HasDependingSlides returns true if there exists at least one slide that depends on this master slide. For example:\nIMasterSlide masterSlide = ...;\nif (!masterSlide.HasDependingSlides)\npresentation.Masters.Remove(masterSlide);\nAspose.Slides.ISlide.Remove() method had been added\nThe method Aspose.Slides.ISlide.Remove() allows to remove slide from presentation with minimum of code. For example:\nISlide slide = ...;\nslide.Remove();\nAspose.Slides.SmartArt.ISmartArtNode.BulletFillFormat property has been added\nThe property Aspose.Slides.SmartArt.ISmartArtNode.BulletFillFormat returns IFillFormat for SmartArt node bullet if layout provide bullets. Can be used for set bullet image.\nusing(Presentation presentation = new Presentation())\n{\nISmartArt smart = presentation.Slides[0].Shapes.AddSmartArt(10, 10, 500, 400, SmartArtLayoutType.VerticalPictureList);\nISmartArtNode node = smart.AllNodes[0];\n\nif(node.BulletFillFormat != null)\n{\nImage img = (Image)new Bitmap(\"sample.jpg\");\nIPPImage image = presentation.Images.AddImage(img);\nnode.BulletFillFormat.FillType = FillType.Picture;\nnode.BulletFillFormat.PictureFillFormat.Picture.Image = image;\nnode.BulletFillFormat.PictureFillFormat.PictureFillMode = PictureFillMode.Stretch;\n}\npresentation.Save(\"out.pptx\", SaveFormat.Pptx);\n}\nAspose.Slides.SmartArt.ISmartArtNode.Level property has been added\nThe property Aspose.Slides.SmartArt.ISmartArtNode.Level returns nested level for SmartArt node\nISmartArtNode node = diagram.AllNodes[0];\nif(node.Level == 1)\nnode.TextFrame.Text = \"First level\";\nAspose.Slides.SmartArt.ISmartArtNode.Position property has been added\nThe property Aspose.Slides.SmartArt.ISmartArtNode.Position returns position of node among siblings.\nISmartArtNode node = diagram.AllNodes[0];\nif (node.ChildNodes.Count > 3)\nnode.ChildNodes[0].Position++;\nAspose.Slides.SmartArt.ISmartArtNode.Remove() method had been added\nAspose.Slides.SmartArt.ISmartArtNode.Remove() method allows to remove node from diagram.\nISmartArt node = diagram.AllNodes[0];\nnode.Remove();\nInterface IGlobalLayoutSlideCollection and class GlobalLayoutSlideCollection had been added\nInterface IGlobalLayoutSlideCollection and class GlobalLayoutSlideCollection had been added into namespace Aspose.Slides. Class GlobalLayoutSlideCollection implements interface IGlobalLayoutSlideCollection.\nInterface IGlobalLayoutSlideCollection represents a collection of all layout slides in presentation. IPresentation.LayoutSlides property is of type IGlobalLayoutSlideCollection. IGlobalLayoutSlideCollection extends ILayoutSlideCollection interface with methods for adding/cloning layout slides in context of uniting of the individual collections of master's layout slides:\nILayoutSlide AddClone(ILayoutSlide sourceLayout);\n- allows to add a copy of a specified layout slide to the presentation. This method keep source formatting (when cloning a layout between different presentations layout's master can be cloned too. Internal registry is used to track automatically cloned masters to prevent creation of multiple clones of the same master slide.)\nILayoutSlide AddClone(ILayoutSlide sourceLayout, IMasterSlide destMaster);\n- allows to add a copy of a specified layout slide to the presentation. New layout will be linked with defined master in destination presentation. So this is analogue of copy/paste with \"Use Destination Theme\" option in PowerPoint. ILayoutSlide Add(IMasterSlide master, SlideLayoutType layoutType, string layoutName);\n- allows to add a new layout slide to the presentation. Supported layout types: Title, TitleOnly, Blank, TitleAndObject, VerticalText, VerticalTitleAndText, TwoObjects, SectionHeader, TwoTextAndTwoObjects, TitleObjectAndCaption, PictureAndCaption, Custom. Layout name can be generated atomatically. Added layout of type SlideLayoutType.Custom contains no placeholders and no shapes. Analogue of this method is method IMasterLayoutSlideCollection.Add(SlideLayoutType, string) accessed with IMasterSlide.LayoutSlides property.\nInterface IMasterLayoutSlideCollection and class MasterLayoutSlideCollection had been added\nInterface IMasterLayoutSlideCollection and class MasterLayoutSlideCollection had been added into namespace Aspose.Slides. Class MasterLayoutSlideCollection implements interface IMasterLayoutSlideCollection.\nInterface IMasterLayoutSlideCollection represents a collections of all layout slides of defined master slide. It extends ILayoutSlideCollection interface with methods for adding/inserting/removing/cloning layout slides in context of the individual collections of master's layout slides:\n// method signature:\nILayoutSlide AddClone(ILayoutSlide sourceLayout);\n// code example that attaches copy of the sourceLayout to the destMasterSlide:\nIMasterSlide destMasterSlide = ...;\ndestMasterSlide.LayoutSlides.AddClone(sourceLayout);\n- allows to add a copy of a specified layout slide to the end of the collection. New layout will be linked with parent master slide for this layout slides collection. So this is analogue of copy/paste with \"Use Destination Theme\" option in PowerPoint. Analogue of this method is method IGlobalLayoutSlideCollection.AddClone(ILayoutSlide, IMasterSlide) accessed with IPresentation.LayoutSlides property.\nILayoutSlide InsertClone(int index, ILayoutSlide sourceLayout);\n- allows to insert a copy of a specified layout slide to specified position of the collection. New layout will be linked with parent master slide for this layout slides collection. So this is analogue of copy/paste with \"Use Destination Theme\" option in PowerPoint.\nILayoutSlide Add(SlideLayoutType layoutType, string layoutName);\nILayoutSlide Insert(int index, SlideLayoutType layoutType, string layoutName);\n- allows to add/inserts a new layout slide. Supported layout types: Title, TitleOnly, Blank, TitleAndObject, VerticalText, VerticalTitleAndText, TwoObjects, SectionHeader, TwoTextAndTwoObjects, TitleObjectAndCaption, PictureAndCaption, Custom. Layout name can be generated atomatically. Added layout of type SlideLayoutType.Custom contains no placeholders and no shapes. Analogue of this method is method IGlobalLayoutSlideCollection.Add(IMasterSlide, SlideLayoutType, string) accessed with IPresentation.LayoutSlides property.\nvoid RemoveAt(int index);\n- allows to remove the layout at the specified index of the collection.\nvoid Reorder(int index, ILayoutSlide layoutSlide);\n- allows to move layout slide from the collection to the specified position.\nSignature of the Aspose.Slides.ISlideCollection.AddClone(ISlide, IMasterSlide) method has been changed\nSignature of the ISlideCollection method\nISlide AddClone(ISlide sourceSlide, IMasterSlide destMaster);\nis obsolete now and is replaced with signature\nISlide AddClone(ISlide sourceSlide, IMasterSlide destMaster, bool allowCloneMissingLayout)\nParameter \"allowCloneMissingLayout\" specify what to do if there is no appropriate layout in \"destMaster\" for new (cloned) slide. Appropriate layout is the layout with the same Type or Name as of layout of the source slide. If there is no appropriate layout in specified master then layout of the source slide will be cloned (if allowCloneMissingLayout is true) or PptxEditException will be thrown (if allowCloneMissingLayout is false).\nCall of the obsolete method like\nAddClone(sourceSlide, destMaster);\nassumes \"allowCloneMissingLayout\" is equal to false (i.e. PptxEditException will be thrown if there is no appropriate layout). Functionally identical call that uses new signature looks as\nAddClone(sourceSlide, destMaster, false);\nIf you want missing layouts to be automatically cloned instead PptxEditException throwing then pass \"allowCloneMissingLayout\" parameter true.\nThe same refers to the ISlideCollection method\nISlide InsertClone(int index, ISlide sourceSlide, IMasterSlide destMaster);\nthat is also obsolete now and is replaced with signature\nISlide InsertClone(int index, ISlide sourceSlide, IMasterSlide destMaster, bool allowCloneMissingLayout);\nType of the Aspose.Slides.IMasterSlide.LayoutSlides property has been changed\nType of the Aspose.Slides.IMasterSlide.LayoutSlides property has been changed from ILayoutSlideCollection to new IMasterLayoutSlideCollection interface. IMasterLayoutSlideCollection interface is the descendant of the ILayoutSlideCollection so user code needs no adaptations.\nType of the Aspose.Slides.IPresentation.LayoutSlides property has been changed\nType of the Aspose.Slides.IPresentation.LayoutSlides property has been changed from ILayoutSlideCollection to new IGlobalLayoutSlideCollection interface. IGlobalLayoutSlideCollection interface is the descendant of the ILayoutSlideCollection so user code needs no adaptations.",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Slides is a PowerPoint management library for working with Microsoft PowerPoint files without using Microsoft PowerPoint. It allows developers to work with PPT, PPS, POT, PPTX, PPSX, POTX and ODP files on ASP.NET web applications, web services and Windows applications. It allows you to open files and manipulate the elements of the presentation from adding slides and managing variety of shapes and working with text to more complex elements like presentation protection, slide animations, charts and SmartArt rendering.The presentations can be exported to PDF, TIFF, XPS, SVG, PNG, JPEG, BMP or EMF formats.",
  "title": "Aspose.Slides for .NET",
  "verbatimVersion": "14.4.0",
  "version": "14.4.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.03.21.12.37/aspose.slides.net.14.4.0.json#Aspose.Slides.NET.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4108,
      "fullName": "Aspose.Slides.NET.nuspec",
      "length": 15035,
      "name": "Aspose.Slides.NET.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.03.21.12.37/aspose.slides.net.14.4.0.json#lib/net2.0/Aspose.Slides.dll",
      "@type": "PackageEntry",
      "compressedLength": 6847502,
      "fullName": "lib/net2.0/Aspose.Slides.dll",
      "length": 15978440,
      "name": "Aspose.Slides.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.03.21.12.37/aspose.slides.net.14.4.0.json#lib/net3.5-client/Aspose.Slides.dll",
      "@type": "PackageEntry",
      "compressedLength": 6847524,
      "fullName": "lib/net3.5-client/Aspose.Slides.dll",
      "length": 15975368,
      "name": "Aspose.Slides.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.03.21.12.37/aspose.slides.net.14.4.0.json#lib/net4.0-client/Aspose.Slides.dll",
      "@type": "PackageEntry",
      "compressedLength": 6954238,
      "fullName": "lib/net4.0-client/Aspose.Slides.dll",
      "length": 16662984,
      "name": "Aspose.Slides.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.03.21.12.37/aspose.slides.net.14.4.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "PowerPoint",
    "presentations",
    "Aspose.Slides",
    "PPT",
    "PPTX",
    "POTX",
    "POT",
    "PPS",
    "PPSX",
    "ODT"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}