{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thomas Nigro",
  "catalog:commitId": "3eabac04-7442-4eba-8ff9-55bbeffb0499",
  "catalog:commitTimeStamp": "2018-12-10T23:20:45.7350645Z",
  "copyright": "Copyright 2015",
  "created": "2015-08-13T09:36:45.097Z",
  "description": "Detect a scroll in a ListView/GridView",
  "id": "ScrollWatcher",
  "isPrerelease": false,
  "lastEdited": "2018-12-10T23:20:33.103Z",
  "licenseUrl": "https://github.com/ThomasNigro/ScrollWatcher/blob/master/LICENSE",
  "listed": true,
  "packageHash": "k5WiDfpqUdPS38Tstb5MFZCBFtM8MF5Q5QoaDGmCc1SQqVHfKNLb5URZ2D7Vlsyu++v15t8oQhSK8M+l1cycIA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 512984,
  "projectUrl": "https://github.com/ThomasNigro/ScrollWatcher",
  "published": "2015-08-13T09:36:45.097Z",
  "releaseNotes": "GoingTopOrBottom event is now called ScrollDetected. Enum ScrollingType is now called ScrollDirection.",
  "requireLicenseAcceptance": false,
  "summary": "This nuget package provides a simple way to detect if a ListView or a GridView is scrolling to the top, or the bottom. You just need to register to the ScrollDetected event and look at the ScrollDirection property included in the ScrollingEventArgs argument. It basically replaces your ListView/GridView by ScrollWatcherListView or ScrollWatcherGridView.",
  "verbatimVersion": "1.0.5",
  "version": "1.0.5",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json#ScrollWatcher.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 537,
      "fullName": "ScrollWatcher.nuspec",
      "length": 1133,
      "name": "ScrollWatcher.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json#nuget.exe",
      "@type": "PackageEntry",
      "compressedLength": 484869,
      "fullName": "nuget.exe",
      "length": 1686528,
      "name": "nuget.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json#lib/netcore45/ScrollWatcher.dll",
      "@type": "PackageEntry",
      "compressedLength": 8042,
      "fullName": "lib/netcore45/ScrollWatcher.dll",
      "length": 18432,
      "name": "ScrollWatcher.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json#lib/netcore45/ScrollWatcher.pdb",
      "@type": "PackageEntry",
      "compressedLength": 6586,
      "fullName": "lib/netcore45/ScrollWatcher.pdb",
      "length": 34304,
      "name": "ScrollWatcher.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json#lib/netcore45/ScrollWatcher.pri",
      "@type": "PackageEntry",
      "compressedLength": 305,
      "fullName": "lib/netcore45/ScrollWatcher.pri",
      "length": 1192,
      "name": "ScrollWatcher.pri"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.20.45/scrollwatcher.1.0.5.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}