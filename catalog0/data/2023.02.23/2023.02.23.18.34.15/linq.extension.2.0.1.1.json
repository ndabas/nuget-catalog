{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.23.18.34.15/linq.extension.2.0.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nav Malik",
  "catalog:commitId": "7d562c3c-2c49-4286-9641-85b729620858",
  "catalog:commitTimeStamp": "2023-02-23T18:34:15.0040927Z",
  "copyright": "Nav Malik",
  "created": "2023-02-23T18:31:45.353Z",
  "description": "Linq Extension to provide Dynamic Where Condition and Dynamic Select, Dynamic Take If Positive Number, Pagination and Nesting Predicates with parenthesis. Use SearchInput class for Dynamic Where and PaginationInput for pagination (take, skip and sort).",
  "id": "Linq.Extension",
  "isPrerelease": false,
  "lastEdited": "2023-02-23T18:33:45.593Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "WA/5m52ZKmF7eOCHFc0GxWxqGELmSMl/LGBzkNg9j5S8ab3NKsSs9tDOwPHajWiGWDi37c91wDLJLU7HuvYA7Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27715,
  "projectUrl": "https://github.com/nav-malik/Linq.Extension",
  "published": "2023-02-23T18:31:45.353Z",
  "releaseNotes": "Fixed Contains and Not Contains error. If string type operations like contains, notcontains, startswith,  notstartswith,  endswith, notendswith, cotainsinlist, notcontainsinlist,  startswithinlist,  notstartswithinlist,  \nendswithinlist, and notendswithinlist will be used with fields of non-string type then throw meaningful error that these operations not allowed. \nAlso, if parameter names doesn't match exactly to search and pagination, it will work as long as their type matches. \nThe Types can be like \nFor pagination: GraphQL.Extensions.Base.Pagination.PaginationInput  OR Linq.Extension.Pagination.PaginationInput  \nfor search:  GraphQL.Extensions.Base.Filter.SearchInput OR Linq.Extension.Base.Filter.SearchInput\nFor Key names 'pagination' and 'search' it will also work as it was before.\n\nAdded notstartswith, notendswith, containsinlist, notcontainsinlist,\n startswithinlist,\n endswithinlist, notstartswithinlist, notendswithinlist in FilterOperationEnum. These will only be applicable to Strings fields\nThis will allow to use contains, startsWith, and endsWith in list and will translate into as many contains, startswith and/or endswith expressions as many values in the list.\nE.g. if Not Contains In List is used then the values will be AND together, for exmaple (NOT (fieldName LIKE %value1%) AND (NOT (fieldName LIKE %value2%))). It will be similiar for startwith and endswith\nE.g. if Contains In List is used then the values will be OR together, for example (fieldName LIKE %value1%) OR (fieldName LIKE %value2%). It will be similiar for startswith and endswith",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "Linq.Extension",
  "verbatimVersion": "2.0.1.1",
  "version": "2.0.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.23.18.34.15/linq.extension.2.0.1.1.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.23.18.34.15/linq.extension.2.0.1.1.json#dependencygroup/net6.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.2, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.23.18.34.15/linq.extension.2.0.1.1.json#Linq.Extension.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1183,
      "fullName": "Linq.Extension.nuspec",
      "length": 2871,
      "name": "Linq.Extension.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.23.18.34.15/linq.extension.2.0.1.1.json#lib/net6.0/Linq.Extension.dll",
      "@type": "PackageEntry",
      "compressedLength": 13146,
      "fullName": "lib/net6.0/Linq.Extension.dll",
      "length": 31232,
      "name": "Linq.Extension.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.23.18.34.15/linq.extension.2.0.1.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11513,
      "fullName": ".signature.p7s",
      "length": 11513,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Linq",
    "Extension",
    "DynamicSelect",
    "DynamicWhere",
    "Linq.Entities",
    "LinqEntity",
    "Linq.Entity",
    "Nesting",
    "Predicates",
    "NestingPredicates"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}