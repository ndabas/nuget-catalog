{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.10.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "c4168257-838a-41f2-8f2d-f23cd760c1b2",
  "catalog:commitTimeStamp": "2018-11-17T10:32:51.827365Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2017-04-27T06:46:43.91Z",
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-17T10:32:47.26Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "MpWzIJFq0N2kVQlnNbqJxgpzNTjJW0thP7XZM6laUCKnduS218xjHJK6xnRpWN9j8TkwS56/LGFthv3LpmIRvw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 49306630,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2017-04-27T06:46:43.91Z",
  "releaseNotes": "With this release we are pleased to introduce the long awaited upgrade: now DotNetBrowser runs on a more powerful browser engine – Chromium 55.0.2883.87. But we did not stop there, check the full list of fixes and enhancements we delivered with this update.\n\nThe 1.10 update of DotNetBrowser comes with the following features and enhancements:\n\n\tImplemented Chromium sandbox support. By default, Chromium sandbox is disabled to keep the behavior of previous DotNetBrowser versions. To enable sandbox use the approach described in the following article.\n\tThe library now supports HTML5 transparent background. See example.\n\tAdded the OnPreviewKeyDown event support in WinForms heavyweight rendering mode.\n\tAdded support of the proper key modifiers for the keyboard events in WinForms heavyweight rendering mode.\n\tImplemented an ability to embed WPFBrowserView into WinForms ElementHost. See example.\n\nThis version contains the following fixes:\n\n\tFixed the MS Visual Studio 2013 crash when adding DotNetBrowser reference to the VB.NET project.\n\tFixed the issue related to using different proxy settings in different Browser instances. In the previous version, the functionality that allows configuring proxy settings for each Browser instance separately didn’t work properly.\n\tFixed the memory leak in JavaScript-.NET bridge. The JavaScript objects were not properly released on the web page unload causing the memory leak if a .NET object was injected into JavaScript via the bridge.\n\tFixed the WebStorage initialization issue. The WebStorage did not work if there were no calls to the localStorage/sessionStorage from JavaScript. Now you don’t have to access the localStorage/sessionStorage on JavaScript to initialize WebStorage.\n\tFixed the blacklisting issue for the PasswordManagerClient. The PasswordSubmitted event was created for already blacklisted websites.\n\tFixed the blurred fonts issue in the heavyweight rendering mode for both WinForms and WPF. Now fonts in the heavyweight rendering mode are rendered exactly as in Google Chrome.\n\tFixed the issue when some CSS cursors aren’t displayed in the heavyweight rendering mode for both WinForms and WPF.\n\tFixed the memory leak when creating and disposing WPF control multiple times.\n\tFixed the Browser initialization issue for the case when current thread culture is CultureInfo.InvariantCulture.\n\tFixed the MS Visual Studio Designer errors for the BrowserView.Focused property.",
  "requireLicenseAcceptance": true,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser",
  "verbatimVersion": "1.10",
  "version": "1.10.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.10.0.json#DotNetBrowser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1762,
      "fullName": "DotNetBrowser.nuspec",
      "length": 4105,
      "name": "DotNetBrowser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.10.0.json#lib/DotNetBrowser.Chromium.dll",
      "@type": "PackageEntry",
      "compressedLength": 48188072,
      "fullName": "lib/DotNetBrowser.Chromium.dll",
      "length": 48308736,
      "name": "DotNetBrowser.Chromium.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.10.0.json#lib/DotNetBrowser.dll",
      "@type": "PackageEntry",
      "compressedLength": 1015522,
      "fullName": "lib/DotNetBrowser.dll",
      "length": 1941504,
      "name": "DotNetBrowser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.10.0.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 88423,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 698455,
      "name": "DotNetBrowser.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.10.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}