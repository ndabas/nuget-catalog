{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.25.10.48.19/forwardmongologger.1.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Azhar Iqbal",
  "catalog:commitId": "f7976ac5-fba7-445d-a9f4-b75ab93fb88b",
  "catalog:commitTimeStamp": "2015-08-25T10:48:19.5763825Z",
  "copyright": "2015",
  "created": "2015-08-25T10:47:23.577Z",
  "description": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n\n  <configSections>\n    <section name=\"log4net\" type=\"log4net.Config.Log4NetConfigurationSectionHandler, log4net\"/>\n  </configSections>\n  <log4net>\n\n    <!--MongoDbAppender-->\n    <appender name=\"UepMongoLogAppender\" type=\"ForwardMongoLogger.MongoDbAppender, ForwardMongoLogger\">\n\n      <!--Mention connection string of your mongoDb, If you will not specify any db name, a default database will be created wit the name \"MongoLog\"-->\n      <connectionString value=\"mongodb://localhost/forwardTestLog\"/>\n\n      <!--Specify the collection name in mongoDb, in case of absence, default collection name would be \"logs\" -->\n      <collectionName value=\"logs\"/>\n\n      <!--1.if you are creating a brand new collection, by mentioning this flag true you will have a cappedCollecton created in your db.\n       2.if you have an existing collection( which is not capped) by mentionting this flag true, your existing collection will be converted to cappedCollection.Please consider \n         this operation may take long to complete, totally depends upon your existing collection documents size -->\n      <cappedCollection value=\"true\"/>\n\n      <!-- mention size in bytes for capped collection on file system, when your collection size will reach the thrashold it start overwriting\n  default size for capped collection is 4096 bytes-->\n      <cappedCollectionSize value=\"1000000\"/>\n\n      <!-- you can also specify maximam number of documents instead collection max size. In case collection documents count will reach to the max documents, it starts overwriting \n  default max document size for capped collection is 2000 documents -->\n      <maxNumberOfDocuments value=\"5000\"/>\n\n\n      <!-- you can add/delete field as suites to your project need -->\n      <field>\n        <name value=\"timestamp\"/>\n        <layout type=\"log4net.Layout.RawTimeStampLayout\"/>\n      </field>\n      <field>\n        <name value=\"level\"/>",
  "id": "ForwardMongoLogger",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "Dg1BVg64IouLyd2kxhm4PcvyQ+ZSb/DBEXq5r2h1mJykoYvLriWdkdnyyBo6XeF4u3B2/iqC/J+6HjUOPj0v1w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 13760,
  "published": "2015-08-25T10:47:23.577Z",
  "releaseNotes": "support of cappedCollection.",
  "requireLicenseAcceptance": false,
  "summary": "Customization of Log4Net for logging in MongoDb.",
  "title": "ForwardMongoLogger",
  "version": "1.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.25.10.48.19/forwardmongologger.1.0.3.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.25.10.48.19/forwardmongologger.1.0.3.json#dependencygroup/log4net",
          "@type": "PackageDependency",
          "id": "log4net",
          "range": "[2.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.25.10.48.19/forwardmongologger.1.0.3.json#dependencygroup/mongodb.driver",
          "@type": "PackageDependency",
          "id": "MongoDB.Driver",
          "range": "[2.0.1, )"
        }
      ]
    }
  ],
  "tags": [
    "Mongo",
    "Log",
    "Logging",
    "Log4Net"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}