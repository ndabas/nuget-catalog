{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.57.11/ractor.persistence.aws.0.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Victor Baybekov",
  "catalog:commitId": "e0fd244d-8422-4d8a-9ae9-6ed8fb70ca7d",
  "catalog:commitTimeStamp": "2015-02-05T23:57:11.0278711Z",
  "copyright": "Copyright 2014",
  "created": "2014-07-30T19:38:17.14Z",
  "description": "Ractor.Persistence is a collection of APIs for POCOs and blobs persistence and a strongly typed Redis\nclient based on excellent Stackexchange.Redis library.\nRactor.Persistence.AWS has some interface implementations for AWS platform.",
  "iconUrl": "https://raw.githubusercontent.com/buybackoff/Ractor.CLR/master/docs/files/img/logo.png",
  "id": "Ractor.Persistence.AWS",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://github.com/buybackoff/Ractor.CLR/blob/master/LICENSE.txt",
  "packageHash": "ih3ZeQO8YNmi+7PvJXBDt0HDW5qEOnCLqYx/MRW3EZgKPK+hHBLpxP8szB7PmLlfdoUn/iNp3/ItsWMyvGIR+w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17370,
  "projectUrl": "https://github.com/buybackoff/Ractor.CLR",
  "published": "2014-07-30T19:38:17.14Z",
  "releaseNotes": "Concrete shards instead of virtual shards. Sequential GUID generator with timestamp. Use sequential GUIDs for primary everywhere. With timestamp stored inside GUID there is effectively zero overhead. We always need 8 bytes timestamp and an incrementing ID for clustered index, with sequential GUIDs we get both + distributed generation. (use NTP to sync time on machines) ServiceStack.ORMLite.MySQL version with GUID stored as binary(16) (/lib with 4.0.23 version and [source here](https://github.com/buybackoff/ServiceStack.OrmLite)).",
  "requireLicenseAcceptance": false,
  "summary": "Ractor.Persistence is a collection of APIs for POCOs and blobs persistence and a strongly typed Redis\nclient based on excellent Stackexchange.Redis library.",
  "version": "0.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.57.11/ractor.persistence.aws.0.2.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.57.11/ractor.persistence.aws.0.2.0.json#dependencygroup/ractor.persistence",
          "@type": "PackageDependency",
          "id": "Ractor.Persistence",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.57.11/ractor.persistence.aws.0.2.0.json#dependencygroup/fsharp.core.microsoft.signed",
          "@type": "PackageDependency",
          "id": "FSharp.Core.Microsoft.Signed",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.57.11/ractor.persistence.aws.0.2.0.json#dependencygroup/fspickler",
          "@type": "PackageDependency",
          "id": "FsPickler",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.57.11/ractor.persistence.aws.0.2.0.json#dependencygroup/awssdk",
          "@type": "PackageDependency",
          "id": "AWSSDK",
          "range": ""
        }
      ]
    }
  ],
  "tags": [
    "F#",
    ".NET",
    "fsharp",
    "redis",
    "akka",
    "distributed",
    "JVM",
    "interop",
    "AWS",
    "S3",
    "persistence",
    "queue",
    "cloud"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}