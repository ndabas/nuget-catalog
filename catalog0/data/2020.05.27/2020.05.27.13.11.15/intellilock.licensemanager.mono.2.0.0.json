{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.27.13.11.15/intellilock.licensemanager.mono.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eziriz",
  "catalog:commitId": "b190e0e1-0250-452c-a399-22751702c3e3",
  "catalog:commitTimeStamp": "2020-05-27T13:11:15.2723475Z",
  "copyright": "Copyright by Eziriz",
  "created": "2020-05-27T13:09:10.397Z",
  "description": "Eziriz IntelliLock LicenseManager - Needed for license creation and management    \n    \n     - This Library enables you to:\n        * open IntelliLock project files\n        * create license files\n        * read license files\n        * easily encrypt and sign data using the master key stored in your project file (asymmetric encryption techniques are used here)\n        * easily decrypt data and verify its signature using the master key stored in your project file (asymmetric encryption techniques are used here)\n        * generate a reactivation code for invalidated license files\n     - You can freely use this library on a server or any other environment.",
  "id": "IntelliLock.LicenseManager.Mono",
  "isPrerelease": false,
  "lastEdited": "2020-05-27T13:11:03.34Z",
  "licenseUrl": "http://www.eziriz.com/",
  "listed": true,
  "packageHash": "gStxcgSTi+6MoSIU+LgimnyZZUwQMGqklmGCV+P5rVtYNN121AmzVYdH3yX1cqxS3R48miZfSEWJL+7DKCZKNA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 72620,
  "projectUrl": "http://www.eziriz.com/",
  "published": "2020-05-27T13:09:10.397Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "Eziriz IntelliLock LicenseManager - Needed for license creation and management",
  "title": "Eziriz IntelliLock LicenseManager",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.27.13.11.15/intellilock.licensemanager.mono.2.0.0.json#IntelliLock.LicenseManager.Mono.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 614,
      "fullName": "IntelliLock.LicenseManager.Mono.nuspec",
      "length": 1474,
      "name": "IntelliLock.LicenseManager.Mono.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.27.13.11.15/intellilock.licensemanager.mono.2.0.0.json#lib/net20/IntelliLock.LicenseManager.Mono.dll",
      "@type": "PackageEntry",
      "compressedLength": 30162,
      "fullName": "lib/net20/IntelliLock.LicenseManager.Mono.dll",
      "length": 68608,
      "name": "IntelliLock.LicenseManager.Mono.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.27.13.11.15/intellilock.licensemanager.mono.2.0.0.json#lib/net40/IntelliLock.LicenseManager.Mono.dll",
      "@type": "PackageEntry",
      "compressedLength": 30162,
      "fullName": "lib/net40/IntelliLock.LicenseManager.Mono.dll",
      "length": 68608,
      "name": "IntelliLock.LicenseManager.Mono.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.27.13.11.15/intellilock.licensemanager.mono.2.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9476,
      "fullName": ".signature.p7s",
      "length": 9476,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Eziriz",
    "IntelliLock",
    "license",
    "licensing",
    "obfuscation"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}