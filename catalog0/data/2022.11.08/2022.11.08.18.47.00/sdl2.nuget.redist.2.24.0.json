{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sam Lantinga and SDL contributors",
  "catalog:commitId": "fe81f74a-9731-4a7e-954a-2b659b5c2140",
  "catalog:commitTimeStamp": "2022-11-08T18:47:00.1251045Z",
  "copyright": "Copyright 2022",
  "created": "2022-11-08T18:44:37.88Z",
  "description": "Redistributable components for package 'sdl2.nuget'. This package should only be installed as a dependency. \n(This is not the package you are looking for).",
  "iconUrl": "https://www.libsdl.org/media/SDL_logo.png",
  "id": "sdl2.nuget.redist",
  "isPrerelease": false,
  "lastEdited": "2022-11-08T18:46:41.38Z",
  "licenseUrl": "https://www.libsdl.org/license.php",
  "listed": false,
  "packageHash": "jIDA8GRx35y5gvz+vLf1PuytjMQfuMu+vZCoU7zmMTQP1/FaXA2+Qc6GZaTGIrRR8uxGZjh8Ws7jG0FiIVdKZw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1508252,
  "projectUrl": "https://www.libsdl.org/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "In addition to lots of bug fixes, here are the major changes in this release:\n\nGeneral:\n* New version numbering scheme, similar to GLib and Flatpak.\n    * An even number in the minor version (second component) indicates a production-ready stable release such as 2.24.0, which would have been 2.0.24 under the old system.\n      * The patchlevel (micro version, third component) indicates a bugfix-only update: for example, 2.24.1 would be a bugfix-only release to fix bugs in 2.24.0, without adding new features.\n    * An odd number in the minor version indicates a prerelease such as 2.23.0. Stable distributions should not use these prereleases.\n      * The patchlevel indicates successive prereleases, for example 2.23.1 and 2.23.2 would be prereleases during development of the SDL 2.24.0 stable release.\n* Added SDL_GetPointDisplayIndex() and SDL_GetRectDisplayIndex() to get the display associated with a point and rectangle in screen space\n* Added SDL_bsearch(), SDL_crc16(), and  SDL_utf8strnlen() to the stdlib routines\n* Added SDL_CPUPauseInstruction() as a macro in SDL_atomic.h\n* Added SDL_size_mul_overflow() and SDL_size_add_overflow() for better size overflow protection\n* Added SDL_ResetHint() to reset a hint to the default value\n* Added SDL_ResetKeyboard() to reset SDL's internal keyboard state, generating key up events for all currently pressed keys\n* Added the hint SDL_HINT_MOUSE_RELATIVE_WARP_MOTION to control whether mouse warping generates motion events in relative mode. This hint defaults off.\n* Added the hint SDL_HINT_TRACKPAD_IS_TOUCH_ONLY to control whether trackpads are treated as touch devices or mice. By default touchpads are treated as mouse input.\n* The hint SDL_HINT_JOYSTICK_HIDAPI_JOY_CONS now defaults on\n* Added support for mini-gamepad mode for Nintendo Joy-Con controllers using the HIDAPI driver\n* Added the hint SDL_HINT_JOYSTICK_HIDAPI_COMBINE_JOY_CONS to control whether Joy-Con controllers are automatically merged into a unified gamepad when using the HIDAPI driver. This hint defaults on.\n* The hint SDL_HINT_JOYSTICK_HIDAPI_SWITCH_HOME_LED can be set to a floating point value to set the brightness of the Home LED on Nintendo Switch controllers\n* Added the hint SDL_HINT_JOYSTICK_HIDAPI_JOYCON_HOME_LED to set the Home LED brightness for the Nintendo Joy-Con controllers. By default the Home LED is not modified.\n* Added the hint SDL_HINT_JOYSTICK_HIDAPI_SWITCH_PLAYER_LED to control whether the player LED should be lit on the Nintendo Joy-Con controllers\n* Added support for Nintendo Online classic controllers using the HIDAPI driver\n* Added the hint SDL_HINT_JOYSTICK_HIDAPI_NINTENDO_CLASSIC to control whether the HIDAPI driver for Nintendo Online classic controllers should be used\n* Added support for the NVIDIA Shield Controller to the HIDAPI driver, supporting rumble and battery status\n* Added support for NVIDIA SHIELD controller to the HIDAPI driver, and a hint SDL_HINT_JOYSTICK_HIDAPI_SHIELD to control whether this is used\n* Added functions to get the platform dependent name for a joystick or game controller:\n    * SDL_JoystickPathForIndex()\n    * SDL_JoystickPath()\n    * SDL_GameControllerPathForIndex()\n    * SDL_GameControllerPath()\n* Added SDL_GameControllerGetFirmwareVersion() and SDL_JoystickGetFirmwareVersion(), currently implemented for DualSense(tm) Wireless Controllers using HIDAPI\n* Added SDL_JoystickAttachVirtualEx() for extended virtual controller support\n* Added joystick event SDL_JOYBATTERYUPDATED for when battery status changes\n* Added SDL_GUIDToString() and SDL_GUIDFromString() to convert between SDL GUID and string\n* Added SDL_HasLSX() and SDL_HasLASX() to detect LoongArch SIMD support\n* Added SDL_GetOriginalMemoryFunctions()\n* Added SDL_GetDefaultAudioInfo() to get the name and format of the default audio device, currently implemented for PipeWire, PulseAudio, WASAPI, and DirectSound\n* Added HIDAPI driver for the NVIDIA SHIELD controller (2017 model) to enable support for battery status and rumble\n* Added support for opening audio devices with 3 or 5 channels (2.1, 4.1). All channel counts from Mono to 7.1 are now supported.\n* Rewrote audio channel converters used by SDL_AudioCVT, based on the channel matrix coefficients used as the default for FAudio voices\n* SDL log messages are no longer limited to 4K and can be any length\n* Fixed a long-standing calling convention issue with dynapi affecting OpenWatcom or OS/2 builds\n\nWindows:\n* Added initial support for building for Windows and Xbox with Microsoft's Game Development Kit (GDK), see docs/README-gdk.md for details\n* Added a D3D12 renderer implementation and SDL_RenderGetD3D12Device() to retrieve the D3D12 device associated with it\n* Added the hint SDL_HINT_WINDOWS_DPI_AWARENESS to set whether the application is DPI-aware. This hint must be set before initializing the video subsystem\n* Added the hint SDL_HINT_WINDOWS_DPI_SCALING to control whether the SDL coordinates are in DPI-scaled points or pixels\n* Added the hint SDL_HINT_DIRECTINPUT_ENABLED to control whether the DirectInput driver should be used\n* Added support for SDL_GetAudioDeviceSpec to the DirectSound backend\n\nLinux:\n* Support for XVidMode has been removed, mode changes are only supported using the XRandR extension\n* Added the hint SDL_HINT_VIDEO_WAYLAND_MODE_EMULATION to control whether to expose a set of emulated modes in addition to the native resolution modes available on Wayland\n* Added the hint SDL_HINT_KMSDRM_DEVICE_INDEX to specify which KMSDRM device to use if the default is not desired\n* Added the hint SDL_HINT_LINUX_DIGITAL_HATS to control whether to treat hats as digital rather than checking to see if they may be analog\n* Added the hint SDL_HINT_LINUX_HAT_DEADZONES to control whether to use deadzones on analog hats\n\nmacOS:\n* Bumped minimum OS deployment version to macOS 10.9\n* Added SDL_GL_FLOATBUFFERS to allow Cocoa GL contexts to use EDR\n* Added the hint SDL_HINT_MAC_OPENGL_ASYNC_DISPATCH to control whether dispatching OpenGL context updates should block the dispatching thread until the main thread finishes processing. This hint defaults to blocking, which is the safer option on modern macOS.",
  "requireLicenseAcceptance": false,
  "summary": "Redistributable components for for package 'sdl2.nuget'",
  "title": "sdl2.nuget Redist",
  "verbatimVersion": "2.24.0",
  "version": "2.24.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#sdl2.nuget.redist.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3007,
      "fullName": "sdl2.nuget.redist.nuspec",
      "length": 7289,
      "name": "sdl2.nuget.redist.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#build/native/bin/Win32/SDL2.dll",
      "@type": "PackageEntry",
      "compressedLength": 696760,
      "fullName": "build/native/bin/Win32/SDL2.dll",
      "length": 2234368,
      "name": "SDL2.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#build/native/bin/x64/SDL2.dll",
      "@type": "PackageEntry",
      "compressedLength": 792497,
      "fullName": "build/native/bin/x64/SDL2.dll",
      "length": 2450944,
      "name": "SDL2.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#build/native/default-propertiesui.xml",
      "@type": "PackageEntry",
      "compressedLength": 634,
      "fullName": "build/native/default-propertiesui.xml",
      "length": 1847,
      "name": "default-propertiesui.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#build/native/sdl2.nuget.redist.targets",
      "@type": "PackageEntry",
      "compressedLength": 1062,
      "fullName": "build/native/sdl2.nuget.redist.targets",
      "length": 5173,
      "name": "sdl2.nuget.redist.targets"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#build/configurations.autopkg",
      "@type": "PackageEntry",
      "compressedLength": 137,
      "fullName": "build/configurations.autopkg",
      "length": 232,
      "name": "configurations.autopkg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#build/publisher-info.txt",
      "@type": "PackageEntry",
      "compressedLength": 72,
      "fullName": "build/publisher-info.txt",
      "length": 71,
      "name": "publisher-info.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.08.18.47.00/sdl2.nuget.redist.2.24.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11511,
      "fullName": ".signature.p7s",
      "length": 11511,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C++",
    "SDL2",
    "SDL",
    "Audio",
    "Graphics",
    "Keyboard",
    "Mouse",
    "Joystick",
    "Multi-Platform",
    "OpenGL",
    "Direct3D",
    "nativepackage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}