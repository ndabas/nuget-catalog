{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.07.17.48.27/eventflow.readstores.mssql.0.18.1181.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "fc9cc046-6cbe-42c4-bf2e-aa5c92de105f",
  "catalog:commitTimeStamp": "2015-10-07T17:48:27.4643564Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-10-07T17:48:11.243Z",
  "description": "MSSQL read store for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.ReadStores.MsSql",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": true,
  "packageHash": "ayJDL5DfZmfMjpSF/aXYVquJ00obTKZ8i9QzaJNdkeS7DobESrLh7DVMzUCeJ3Oj8qqs5b4W3fFx1SzPasuIuQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 12140,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-10-07T17:48:11.243Z",
  "releaseNotes": "POTENTIAL DATA LOSS for the **files event store**: The EventFlow\ninternal functionality regarding event stores has been refactored resulting\nin information regarding aggregate names being removed from the event\npersistence layer. The files based event store no longer stores its events in\nthe path `[STORE PATH]\\[AGGREGATE NAME]\\[AGGREGATE ID]\\[SEQUENCE].json`, but\nin the path `[STORE PATH]\\[AGGREGATE ID]\\[SEQUENCE].json`. Thus if you are\nusing the files event store for tests, you should move the events into the\nnew file structure. Alternatively, implement the new `IFilesEventLocator` and\nprovide your own custom event file layout.\nBreaking: Event stores have been split into two parts, the `IEventStore`\nand the new `IEventPersistence`. `IEventStore` has the same interface before\nbut the implementation is now no longer responsible for persisting the events,\nonly converting and serializing the persisted events. `IEventPersistence`\nhandles the actual storing of events and thus if any custom event stores have\nbeen implemented, they should implement to the new `IEventPersistence`\ninstead.\nNew: Added `IEntity`, `IEntity<>` and an optional `Entity<>` that developers\ncan use to implement DDD entities.",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.ReadStores.MsSql - MSSQL read store",
  "verbatimVersion": "0.18.1181",
  "version": "0.18.1181",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.07.17.48.27/eventflow.readstores.mssql.0.18.1181.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.07.17.48.27/eventflow.readstores.mssql.0.18.1181.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.18.1181, 0.18.1181]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.10.07.17.48.27/eventflow.readstores.mssql.0.18.1181.json#dependencygroup/eventflow.mssql",
          "@type": "PackageDependency",
          "id": "EventFlow.MsSql",
          "range": "[0.18.1181, 0.18.1181]"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "mssql",
    "readstore"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}