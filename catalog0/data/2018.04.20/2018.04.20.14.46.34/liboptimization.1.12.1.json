{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.20.14.46.34/liboptimization.1.12.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "tomitomi3",
  "catalog:commitId": "26c6dd1a-2fd6-4e1a-afa2-f4c6c2b21267",
  "catalog:commitTimeStamp": "2018-04-20T14:46:34.8875804Z",
  "copyright": "Copyright 2018 tomitomi3",
  "created": "2018-04-20T14:39:57.527Z",
  "description": "LibOptimization is a numerical optimization library that simplifies optimization using C#, VisualBasic.Net and other .NET Framework languages. Implementing optimization algorithm are Steepest Descent Method, Newton Method, Nelder Mead Method (Original ver, Wikipedia ver) ,Hooke and Jeeves of Pattern Search (Direct Search), Real-coded Genetic Algorithm(BLX-alpha and JGG, UNDX and JGG Simplex and JGG, REX and JGG, PCX and G3), Particle Swarm Optimization(Basic PSO, LDIW-PSO, CDIW-PSO, CRIW-PSO, AIW-PSO), Differential Evolution(DE/rand/1/bin, DE/best/1/bin, DE/rand/2/bin, DE/best/2/bin, JADE), Cuckoo Search(Standard), FireFry, Simulated Annealing, Evolution Strategy((1+1)-ES) and Hill Climbing.",
  "iconUrl": "https://raw.github.com/tomitomi3/LibOptimization/master/github_pic/logo_liboptimization.png",
  "id": "LibOptimization",
  "isPrerelease": false,
  "lastEdited": "2018-04-20T14:45:23.527Z",
  "licenseUrl": "http://opensource.org/licenses/MS-PL",
  "listed": true,
  "packageHash": "NcV2Jr8/8Jp7LinyWGBRu8Z4lEzNznZYoCbKMAStAB46sWyRhSBaDqG5f7yuxo+NvhGUsWhRzeM7phHVnRwnDw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 54687,
  "projectUrl": "https://github.com/tomitomi3/LibOptimization",
  "published": "2018-04-20T14:39:57.527Z",
  "releaseNotes": "bugfix iteration count",
  "requireLicenseAcceptance": false,
  "summary": "LibOptimization is numerical optimization library.",
  "title": "LibOptimization",
  "verbatimVersion": "1.12.1",
  "version": "1.12.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.20.14.46.34/liboptimization.1.12.1.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.20.14.46.34/liboptimization.1.12.1.json#LibOptimization.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 873,
      "fullName": "LibOptimization.nuspec",
      "length": 1815,
      "name": "LibOptimization.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.20.14.46.34/liboptimization.1.12.1.json#lib/net40/LibOptimization.dll",
      "@type": "PackageEntry",
      "compressedLength": 36843,
      "fullName": "lib/net40/LibOptimization.dll",
      "length": 98304,
      "name": "LibOptimization.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.20.14.46.34/liboptimization.1.12.1.json#lib/net40/LibOptimization.xml",
      "@type": "PackageEntry",
      "compressedLength": 14811,
      "fullName": "lib/net40/LibOptimization.xml",
      "length": 137274,
      "name": "LibOptimization.xml"
    }
  ],
  "tags": [
    "optimization",
    "heuristic",
    "nonlinear",
    "numerical",
    "math",
    "genetic",
    "algorithm",
    "GA",
    "PatternSearch",
    "NelderMead",
    "ParticleSwarmOptimization",
    "DifferentialEvolution",
    "CuckooSearch",
    "FireFly",
    "SimulatedAnnealing",
    "EvolutionStrategy",
    "HillClimbing"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}