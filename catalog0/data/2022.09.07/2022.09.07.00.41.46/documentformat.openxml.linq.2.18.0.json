{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Microsoft",
  "catalog:commitId": "68d465c6-36fd-436b-96ae-f82bddaf2af6",
  "catalog:commitTimeStamp": "2022-09-07T00:41:46.7579277Z",
  "copyright": "Â© Microsoft Corporation. All rights reserved.",
  "created": "2022-09-07T00:39:29.777Z",
  "description": "Provides additional LINQ functionality to the Open XML SDK to allow operations using XLINQ.",
  "iconFile": "icon.png",
  "iconUrl": "https://raw.githubusercontent.com/OfficeDev/Open-XML-SDK/master/icon.png",
  "id": "DocumentFormat.OpenXml.Linq",
  "isPrerelease": false,
  "lastEdited": "2022-09-07T00:41:32.327Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "Pm17Ef6+vIRhwm/7O6dkZk/UsqIPJcOcheaTDmp8EZvTJ/NjMQ3Gv2RAXBcJFZ99p75MZNhjarEEs3aPBZVrfQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1955541,
  "projectUrl": "https://github.com/OfficeDev/Open-XML-SDK",
  "published": "2022-09-07T00:39:29.777Z",
  "releaseNotes": "# Changelog\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [2.18.0] 2022-09-06\n\n### Added\n- Added DocumentFormat.OpenXml.Office.SpreadSheetML.Y2021.ExtLinks2021 namespace (#1196)\n- Added durableId attribute to DocumentFormat.OpenXml.Wordprocessing.NumberingPictureBullet (#1196)\n- Added few base classes for typed elements, parts, and packages (#1185)\n\n### Changed\n- Adjusted LICENSE.md to conform to .NET Foundation requirements (#1194)\n- Miscellaneous changes for better perf for internal services\n\n## [2.17.1] - 2022-06-28\n\n### Removed\n- Removed the preview namespace DocumentFormat.OpenXml.Office.Comments.Y2020.Reactions because this namespace will currently create invalid documents.\n\n### Fixed\n- Restored the PowerPointCommentPart relationship to PresentationPart.\n\n### Deprecated\n- The relationship between the PowerPointCommentPart and the PresentationPart is deprecated and will be removed in a future version.\n\n## [2.17.0] - Unreleased\n\n### Added\n- Added DocumentFormat.OpenXml.Office.Comments.Y2020.Reactions namespace (#1151)\n- Added DocumentFormat.OpenXml.Office.SpreadSheetML.Y2022.PivotVersionInfo namespace (#1151)\n\n### Fixed\n- Moved PowerPointCommentPart relationship to SlidePart (#1137)\n\n### Updated\n- Removed public API analyzers in favor of EnablePackageValidation (#1154)\n\n## [2.16.0] - 2022-03-14\n\n### Added\n- Added method `OpenXmlPart.UnloadRootElement` that will unload the root element if it is loaded (#1126)\n\n### Updated\n- Schema code generation was moved to the SDK project using C# code generators\n\nThanks to the following for their contribution:\n\n@f1nzer\n\n## [2.15.0] - 2021-12-16\n\n### Added\n- Added samples for strongly typed classes and Linq-to-XML in the `./samples` directory (#1101, #1087)\n- Shipping additional libraries for some additional functionality in `DocumentFormat.OpenXml.Features` and `DocumentFormat.OpenXml.Linq`. See documentation in repo for additional details.\n- Added extension method to support getting image part type (#1082)\n- Added generated classes and `FileFormatVersions.Microsoft365` for new subscription model types and constraints (#1097).\n\n### Fixed\n- Fixed issue for changed mime type `model/gltf.binary` (#1069)\n- DocumentFormat.OpenXml.Office.Drawing.ShapeTree is now available only in Office 2010 and above, not 2007.\n- Correctly serialize `new CellValue(bool)` values (#1070)\n- Updated known namespaces to be generated via an in-repo source generator (#1092)\n- Some documentation issues around `FileFormatVersions` enum\n\nThanks to the following for their contributions:\n\n@ThomasBarnekow\n@stevenhansen\n@JaimeStill\n@jnyrup\n\n## [2.14.0] - 2021-10-28\n\n### Added\n- Added generated classes for Office 2021 types and constraints (#1030)\n- Added `Features` property to `OpenXmlPartContainer` and `OpenXmlElement` to enable a per-part or per-document state storage\n- Added public constructors for `XmlPath` (#1013)\n- Added parts for Rich Data types (#1002)\n\nThanks to the following for their contributions:\n\n@rmboggs\n@ThomasBarnekow\n\n## [2.14.0-beta1] - 2021-09-20\n\n### Added\n- Added `Features` property to `OpenXmlPartContainer` and `OpenXmlElement` to enable a per-part or per-document state storage\n- Added public constructors for `XmlPath` (#1013)\n- Added parts for Rich Data types (#1002)\n- Added methods to generate unique paragraph ids (#1000)\n- Added generated classes for Office 2021 types and constraints (#1030)\n\nThanks to the following for their contributions:\n\n@rmboggs\n@ThomasBarnekow\n\n## [2.13.1] - 2021-08-17\n\n### Fixed\n- Fixed some nullability annotations that were incorrectly defined (#953, #955)\n- Fixed issue that would dispose a `TextReader` when creating an `XmlReader` under certain circumstances (#940)\n- Fixed a documentation type (#937)\n- Fixed an issue with adding additional children to data parts (#934)\n- Replaced some documentation entries that were generic values with helpful comments (#992)\n- Fixed a regression in AddDataPartRelationship (#954)\n\nThanks to the following for their contributions:\n\n@ThomasBarnekow\n@sorensenmatias\n@lklein53\n@lindexi\n\n## [2.13.0] - 2021-05-13\n\n### Added\n- Additional O19 types to match Open Specifications (#916)\n- Added generated classes for Office 2019 types and constraints (#882)\n- Added nullability attributes (#840, #849)\n- Added overload for `OpenXmlPartReader` and `OpenXmlReader.Create(...)` to ignore whitespace (#857)\n- Added `HexBinaryValue.TryGetBytes(...)` and `HexBinaryValue.Create(byte[])` to manage the encoding and decoding of bytes (#867)\n- Implemented `IEquatable<IdPartPair>` on `IdPartPair` to fix equality implementation there and obsoleted setters (#871)\n\n### Fixed\n- Fixed serialization of `CellValue` constructors to use invariant cultures (#903)\n- Fixed parsing to allow exponents for numeric cell values (#901)\n- Fixed massive performance bottleneck when `UniqueAttributeValueConstraint` is involved (#924)\n\n### Deprecated\n- Deprecated Office2013.Word.Person.Contact property. It no longer persists and will be removed in a future version (#912)\n\nThanks to the following for their contributions:\n\n@lklein53  \n@igitur\n\n## [2.13.0-beta2] - 2021-04-20\n\n### Added\n- Additional O19 types to match Open Specifications (#916)\n\n### Deprecated\n- Deprecated Office2013.Word.Person.Contact property. It no longer persists and will be removed in a future version (#912)\n\n## [2.13.0-beta1] - 2021-03-09\n\n### Added\n- Added nullability attributes (#840, #849)\n- Added overload for `OpenXmlPartReader` and `OpenXmlReader.Create(...)` to ignore whitespace (#857)\n- Added `HexBinaryValue.TryGetBytes(...)` and `HexBinaryValue.Create(byte[])` to manage the encoding and decoding of bytes (#867)\n- Implemented `IEquatable<IdPartPair>` on `IdPartPair` to fix equality implementation there and obsoleted setters (#871)\n- Added generated classes for Office 2019 types and constraints (#882)\n\n### Fixed\n- Fixed serialization of `CellValue` constructors to use invariant cultures (#903)\n- Fixed parsing to allow exponents for numeric cell values (#901)\n\n## [2.12.3] - 2021-02-24\n\n### Fixed\n- Fixed issue where `CellValue` may validate incorrectly for boolean values (#890)\n\n## [2.12.2] - 2021-02-16\n\n### Fixed\n- Fixed issue where `OpenSettings.RelationshipErrorHandlerFactory` creates invalid XML if the resulting URI is smaller than the input (#883)\n\n## [2.12.1] - 2021-01-11\n\n### Fixed\n- Fixed bug where properties on `OpenXmlCompositeElement` instances could not be set to null to remove element (#850)\n- Fixed `OpenXmlElement.RawOuterXml` to properly set null values without throwing (#818)\n- Allow rewriting of all malformed URIs regardless of target value (#835)\n\n## [2.12.0] - 2020-12-09\n\n### Added\n- Added `OpenSettings.RelationshipErrorHandlerFactory` to provide a way to handle URIs that break parsing documents with malformed links (#793)\n- Added `OpenXmlCompositeElement.AddChild(OpenXmlElement)` to add children in the correct order per schema (#774)\n- Added `SmartTagClean` and `SmartTagId` in place of `SmtClean` and `SmtId` (#747)\n- Added `OpenXmlValidator.Validate(..., CancellationToken)` overrides to allow easier cancellation of long running validation on .NET 4.0+ (#773)\n- Added overloads for `CellValue` to take `decimal`, `double`, and `int`, as well as convenience methods to parse them (#782)\n- Added validation for `CellType` for numbers and date formats (#782)\n- Added `OpenXmlReader.GetLineInfo()` to retrieve `IXmlLineInfo` of the underlying reader if available (#804)\n\n### Fixed\n- Fixed exception that would be thrown if attempting to save a document as FlatOPC if it contains SVG files (#822)\n- Added `SchemaAttrAttribute` attributes back for backwards compatibility (#825)\n\n### Removed\n- Removed explicit reference to `System.IO.Packaging` on .NET 4.6 builds (#774)\n\n## [2.11.3] - 2020-07-17\n### Fixed\n- Fixed massive performance bottleneck when `IndexReferenceConstraint` and `ReferenceExistConstraint` are involved (#763)\n- Fixed `CellValue` to only include three most signficant digits on second fractions to correct issue loading dates (#741)\n- Fixed a couple of validation indexing errors that might cause erroneous validation errors (#767)\n- Updated internal validation system to not use recursion, allowing for better short-circuiting (#766)\n\n## [2.11.2] - 2020-07-10\n\n### Fixed\n- Fixed broken source link (#749)\n- Ensured compilation is deterministic (#749)\n- Removed extra file in NuGet package (#749)\n\n## [2.11.1] - 2020-07-10\n\n### Fixed\n- Ensure .NET Framework builds pass PEVerify (#744)\n- `OpenXmlPartContainer.DeletePart` no longer throws an exception if there isn't a match for the identifier given (#740)\n- Mark obsolete members to not show up with Intellisense (#745)\n- Fixed issue with `AttributeRequiredConditionToValue` semantic constraint where validation could fail on correct input (#746)\n\n## [2.11.0] - 2020-05-21\n### Added\n- Added `FileFormatVersions.2019` enum (#695)\n- Added `ChartSpace` and chart elements for the new 2016 namespaces. This allows the connecting pieces for building a chart part with chart styles like \"Sunburst\" (#687).\n- Added `OpenXmlElementFunctionalExtensions.With(...)` extension methods, which offer flexible means for constructing `OpenXmlElement` instances in the context of pure functional transformations (#679)\n- Added minimum Office versions for enum types and values (#707)\n- Added additional `CompatSettingNameValues` values: `UseWord2013TrackBottomHyphenation`, `AllowHyphenationAtTrackBottom`, and `AllowTextAfterFloatingTableBreak` (#706)\n- Added gfxdata attribue to Arc, Curve, Line, PolyLine, Group, Image, Oval, Rect, and RoundRect shape complex types per MS-OI29500 2.1.1783-1799 (#709)\n- Added `OpenXmlPartContainer.TryGetPartById` to enable child part retrieval without exception if it does not exist (#714)\n- Added `OpenXmlPackage.StrictRelationshipFound` property that indicates whether this package contains Transitional relationships converted from Strict (#716)\n\n### Fixed\n- Custom derived parts did not inherit known parts from its parent, causing failure when adding parts (#722)\n\n### Changed\n- Marked the property setters in `OpenXmlAttribute` as obsolete as structs should not have mutable state (#698)\n\n## [2.10.1] - 2020-02-28\n### Fixed\n- Ensured attributes are available when `OpenXmlElement` is initialized with outer XML (#684, #692)\n- Some documentation errors (#681)\n- Removed state that made it non-thread safe to validate elements under certain conditions (#686)\n- Correctly inserts strongly-typed elements before known elements that are not strongly-typed (#690)\n\n## [2.10.0] - 2020-01-10\n### Added\n- Added initial Office 2016 support, including `FileFormatVersion.Office2016`, `ExtendedChartPart` and other new schema elements (#586)\n- Added .NET Standard 2.0 target (#587)\n- Included symbols support for debugging (#650)\n- Exposed `IXmlNamespaceResolver` from `XmlPath` instead of formatted list of strings to expose namespace/prefix mapping (#536)\n- Implemented `IComparable<T>` and `IEquatable<T>` on `OpenXmlComparableSimpleValue` to allow comparisons without boxing (#550)\n- Added `OpenXmlPackage.RootPart` to easily access the root part on any package (#661)\n\n### Changed\n- Updated to v4.7.0 of System.IO.Packaging which brings in a number of perf fixes (#660)\n- Consolidated data for element children/properties to reduce duplication (#540, #547, #548)\n- Replaced opaque binary data for element children constraints with declarative model (#603)\n- A number of performance fixes to minimize allocations where possible\n- 20% size reduction from 5.5mb to 4.3mb\n- The validation subsystem went through a drastic redesign. This may cause changes in what errors are reported.\n\n### Fixed\n- Fixed some documentation inconsistencies (#582)\n- Fixed `ToFlatOpcDocument`, `ToFlatOpcString`, `FromFlatOpcDocument`, and `FromFlatOpcString` to correctly process Alternative Format Import Parts, or \"altChunk parts\" (#659)\n\n## [2.9.1] - 2019-03-13\n### Changed\n- Added a workaround for a .NET Native compiler issue that doesn't support calling Marshal.SizeOf<T> with a struct that contains auto-implemented properties (#569)\n- Fixed a documentation error (#528)\n\n## [2.9.0] - 2018-06-08\n### Added\n- `ListValue` now implements `IEnumerable<T>` (#385)\n- Added a `WebExtension.Frozen` and obsoleted misspelled `Fronzen` property (#460)\n- Added an `OpenXmlPackage.CanSave` property that indicates whether a platform supports saving without closing the package (#468)\n- Simple types (except `EnumValue` and `ListValue`) now implement `IComparable<T>` and `IEquatable<T>` (#487)\n\n### Changed\n- Removed state that was carried in validators that would hold onto packages when not in use (#390)\n- `EnumSimpleType` parsing was improved and uses less allocations and caches for future use (#408)\n- Fixed a number of spelling mistakes in documentation (#462)\n- When calling `OpenXmlPackage.Save` on .NET Framework, the package is now flushed to the stream (#468)\n- Fixed race condition while performing strict translation of attributes (#480)\n- Schema data for validation uses a more compact format leading to a reduction in dll size and performance improvements for loading (#482, #483)\n- A number of APIs are marked as obsolete as they have simple workarounds and will be removed in the next major change\n- Fixed some constraint values for validation that contained Office 2007, even when it was only supported in later versions\n- Updated `System.IO.Packaging` to 4.5.0 which fixes some issues on Xamarin platforms as well as minimizes dependencies on .NET Framework\n\n## [2.8.1] - 2018-01-03\n### Changed\n- Corrected package license file reference to show updated MIT License\n\n## [2.8.0] - 2017-12-28\n### Added\n- Default runtime directive for better .NET Native support.\n\n### Changed\n- Fixed part saving to be encoded with UTF8 but no byte order mark. This caused some renderers to not be able to open the generated document.\n- Fixed exceptions thrown when errors are encountered while opening packages to be consistent across platforms.\n- Fixed issue on Mono platforms using System.IO.Packaging NuGet package (Xamarin, etc) when creating a document.\n- Fixed manual saving of a package when autosave is false.\n- Fixed schema constraint data and standardized serialization across platforms.\n- Upgraded to `System.IO.Packaging` version 4.4.0 which fixes some consistency with .NET Framework in opening packages.\n\n## [2.7.2] - 2017-06-06\n### Added\n- Package now supports .NET 3.5 and .NET 4.0 in addition to .NET Standard 1.3 and .NET Framework 4.6\n\n### Changed\n- Fixed issue where assembly version wasn't set in assembly. \n\n## [2.7.1] - 2017-01-31\n### Changed\n- Fixed crash when validation is invoked on .NET Framework with strong-naming enforced.\n\n## [2.7.0] - 2017-01-24\n### Added\n- SDK now  supports .NET Standard 1.3\n\n### Changed\n- Moved to using System.IO.Packaging from dotnet/corefx for .NET Standard 1.3 and WindowsBase for .NET 4.5.\n- Cleaned up project build system to use .NET CLI.\n\n## [2.6.1] - 2016-01-15\n### Added\n- Added hundreds of XUnit tests. There are now a total of 1333 tests. They take about 20 minutes to run, so be patient.\n\n## [2.6.0] - 2015-06-29\n### Added\n- Incorporated a replacement `System.IO.Packaging` that fixes some serious (but exceptional) bugs found in the WindowsBase implementation",
  "repository": "",
  "verbatimVersion": "2.18.0",
  "version": "2.18.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework3.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework3.5/documentformat.openxml.features",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml.Features",
          "range": "[2.18.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework3.5/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.18.0, )"
        }
      ],
      "targetFramework": ".NETFramework3.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework4.0/documentformat.openxml.features",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml.Features",
          "range": "[2.18.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework4.0/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.18.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework4.6",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework4.6/documentformat.openxml.features",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml.Features",
          "range": "[2.18.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netframework4.6/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.18.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.6"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard1.3",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard1.3/documentformat.openxml.features",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml.Features",
          "range": "[2.18.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard1.3/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.18.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard1.3/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard1.3/system.xml.readerwriter",
          "@type": "PackageDependency",
          "id": "System.Xml.ReaderWriter",
          "range": "[4.3.1, )"
        }
      ],
      "targetFramework": ".NETStandard1.3"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard2.0/documentformat.openxml.features",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml.Features",
          "range": "[2.18.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#dependencygroup/.netstandard2.0/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.18.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "frameworkAssemblyGroup": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#frameworkassemblygroup/.netframework3.5",
      "assembly": [
        "System",
        "System.Xml",
        "System.Xml.Linq",
        "WindowsBase"
      ],
      "targetFramework": ".NETFramework3.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#frameworkassemblygroup/.netframework4.0",
      "assembly": [
        "System",
        "System.Xml",
        "System.Xml.Linq",
        "WindowsBase"
      ],
      "targetFramework": ".NETFramework4.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#frameworkassemblygroup/.netframework4.6",
      "assembly": [
        "System",
        "System.Xml",
        "System.Xml.Linq",
        "WindowsBase"
      ],
      "targetFramework": ".NETFramework4.6"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#DocumentFormat.OpenXml.Linq.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 6388,
      "fullName": "DocumentFormat.OpenXml.Linq.nuspec",
      "length": 18895,
      "name": "DocumentFormat.OpenXml.Linq.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 4178,
      "fullName": "icon.png",
      "length": 4173,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/net35/DocumentFormat.OpenXml.Linq.dll",
      "@type": "PackageEntry",
      "compressedLength": 107690,
      "fullName": "lib/net35/DocumentFormat.OpenXml.Linq.dll",
      "length": 326048,
      "name": "DocumentFormat.OpenXml.Linq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/net35/DocumentFormat.OpenXml.Linq.xml",
      "@type": "PackageEntry",
      "compressedLength": 278305,
      "fullName": "lib/net35/DocumentFormat.OpenXml.Linq.xml",
      "length": 5684225,
      "name": "DocumentFormat.OpenXml.Linq.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/net40/DocumentFormat.OpenXml.Linq.dll",
      "@type": "PackageEntry",
      "compressedLength": 106484,
      "fullName": "lib/net40/DocumentFormat.OpenXml.Linq.dll",
      "length": 324000,
      "name": "DocumentFormat.OpenXml.Linq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/net40/DocumentFormat.OpenXml.Linq.xml",
      "@type": "PackageEntry",
      "compressedLength": 278227,
      "fullName": "lib/net40/DocumentFormat.OpenXml.Linq.xml",
      "length": 5683942,
      "name": "DocumentFormat.OpenXml.Linq.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/net46/DocumentFormat.OpenXml.Linq.dll",
      "@type": "PackageEntry",
      "compressedLength": 105541,
      "fullName": "lib/net46/DocumentFormat.OpenXml.Linq.dll",
      "length": 321952,
      "name": "DocumentFormat.OpenXml.Linq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/net46/DocumentFormat.OpenXml.Linq.xml",
      "@type": "PackageEntry",
      "compressedLength": 278107,
      "fullName": "lib/net46/DocumentFormat.OpenXml.Linq.xml",
      "length": 5683571,
      "name": "DocumentFormat.OpenXml.Linq.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/netstandard1.3/DocumentFormat.OpenXml.Linq.dll",
      "@type": "PackageEntry",
      "compressedLength": 106670,
      "fullName": "lib/netstandard1.3/DocumentFormat.OpenXml.Linq.dll",
      "length": 324528,
      "name": "DocumentFormat.OpenXml.Linq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/netstandard1.3/DocumentFormat.OpenXml.Linq.xml",
      "@type": "PackageEntry",
      "compressedLength": 278195,
      "fullName": "lib/netstandard1.3/DocumentFormat.OpenXml.Linq.xml",
      "length": 5683868,
      "name": "DocumentFormat.OpenXml.Linq.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/netstandard2.0/DocumentFormat.OpenXml.Linq.dll",
      "@type": "PackageEntry",
      "compressedLength": 105534,
      "fullName": "lib/netstandard2.0/DocumentFormat.OpenXml.Linq.dll",
      "length": 321952,
      "name": "DocumentFormat.OpenXml.Linq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#lib/netstandard2.0/DocumentFormat.OpenXml.Linq.xml",
      "@type": "PackageEntry",
      "compressedLength": 278107,
      "fullName": "lib/netstandard2.0/DocumentFormat.OpenXml.Linq.xml",
      "length": 5683571,
      "name": "DocumentFormat.OpenXml.Linq.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.09.07.00.41.46/documentformat.openxml.linq.2.18.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 18715,
      "fullName": ".signature.p7s",
      "length": 18715,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "openxml",
    "office"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}