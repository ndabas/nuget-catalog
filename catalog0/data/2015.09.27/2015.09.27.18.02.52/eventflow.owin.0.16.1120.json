{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.27.18.02.52/eventflow.owin.0.16.1120.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "cfa63c40-aa67-4b45-8c1b-d64b783845e8",
  "catalog:commitTimeStamp": "2015-09-27T18:02:52.0535638Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-09-27T18:01:52.23Z",
  "description": "OWIN support for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.Owin",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": true,
  "packageHash": "kJNVr54zLvLxUp10E7jIyzfEn85Ewb+mdUzfL7jrd3VEG+vq721sy+n24OMWCiULJgiKTkZlRbJuxKEzeqj7gw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 12228,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-09-27T18:01:52.23Z",
  "releaseNotes": "Breaking: Removed `HasRegistrationFor<>` and `GetRegisteredServices()`\nfrom `IServiceRegistration` and added them to `IResolver` instead. The\nmethods required that all service registrations went through EventFlow,\nwhich in most cases they will not\nObsolete: Marked `IServiceRegistration.RegisterIfNotRegistered(...)`, use\nthe `keepDefault = true` on the other `Register(...)` methods instead\nNew: Major changes have been done to how EventFlow handles service\nregistration and bootstrapping in order for developers to skip calling\n`CreateResolver()` (or `CreateContainer()` if using the `EventFlow.Autofac`\npackage) completely. EventFlow will register its bootstrap services in the\nIoC container and configure itself whenever the container is created\nNew: Introduced `IBootstrap` interface that you can register. It has a\nsingle `BootAsync(...)` method that will be called as soon as the IoC\ncontainer is ready (similar to that of `IStartable` of Autofac)\nFixed: Correct order of service registration decorators. They are now\napplied in the same order they are applied, e.g., the _last_ registered\nservice decorator will be the \"outer\" service\nFixed: Added missing `ICommand<,>` interface to abstract `Command<,>` class in\n`EventFlow.Commands`.",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.Owin - OWIN support",
  "verbatimVersion": "0.16.1120",
  "version": "0.16.1120",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.27.18.02.52/eventflow.owin.0.16.1120.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.27.18.02.52/eventflow.owin.0.16.1120.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.16.1120, 0.16.1120]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.27.18.02.52/eventflow.owin.0.16.1120.json#dependencygroup/owin",
          "@type": "PackageDependency",
          "id": "Owin",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.27.18.02.52/eventflow.owin.0.16.1120.json#dependencygroup/microsoft.owin",
          "@type": "PackageDependency",
          "id": "Microsoft.Owin",
          "range": "[3.0.1, )"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "owin"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}