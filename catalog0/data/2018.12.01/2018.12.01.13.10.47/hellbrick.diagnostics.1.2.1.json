{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.13.10.47/hellbrick.diagnostics.1.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "HellBrick",
  "catalog:commitId": "2c70480d-88fc-4c18-8788-7587a86d30f5",
  "catalog:commitTimeStamp": "2018-12-01T13:10:47.4827704Z",
  "created": "2015-09-20T10:01:54.907Z",
  "description": "Diagnostics",
  "id": "HellBrick.Diagnostics",
  "isPrerelease": false,
  "lastEdited": "2018-12-01T13:10:38.083Z",
  "listed": true,
  "packageHash": "++euPNm3YpPWim6veup9/f+ssJazciklUWkdqZdHbFnqs1nNTgWSvhTso7zeYpqZIjhD0RRmZ/lsZrQrRpMDog==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 31395,
  "projectUrl": "https://github.com/HellBrick/HellBrick.Diagnostics",
  "published": "2015-09-20T10:01:54.923Z",
  "releaseNotes": "v1.2.1:\n\t\t\t- fixed Nuget package installation issues\n\t\t\t- readonly modifier can now be enforced on fields of primitive types\n\t\t\t- var can be converted to explicit type inside the using declaration block\n\t\t\t- var can no longer be converted if it's generic type with anonymous arguments\n\t\t\t- conversion to expression-bodied member is no longer suggested for the methods that can't be converted\n\t\t\t- the reference is no longer considered unused if a method that returns a type declared in it is invoked\n\t\t\t\n\t\t\tv1.2.0:\n\t\t\t- a refactoring to convert String.Format() call to an interpolated string\n\t\t\t- a refactoring to convert var to explicit type name and back\n\t\t\t\n\t\t\tv1.1.0:\n\t\t\t- unused project references are reported to the error/information list\n\t\t\t\n\t\t\tv1.0.2:\n\t\t\t- upgraded to VS 2015 RTM\n\n\t\t\tv1.0.1:\n\t\t\t- readonly modifier is no longer enforced on value type fields (to avoid SpinLock-like issues)\n\n\t\t\tv1.0.0:\n\t\t\t- enforce readonly modifier on fields\n\t\t\t- convert one-line methods to expression-bodied methods",
  "requireLicenseAcceptance": false,
  "title": "HellBrick.Diagnostics",
  "verbatimVersion": "1.2.1.0",
  "version": "1.2.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.13.10.47/hellbrick.diagnostics.1.2.1.json#HellBrick.Diagnostics.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 697,
      "fullName": "HellBrick.Diagnostics.nuspec",
      "length": 1550,
      "name": "HellBrick.Diagnostics.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.13.10.47/hellbrick.diagnostics.1.2.1.json#analyzers/dotnet/cs/HellBrick.Diagnostics.dll",
      "@type": "PackageEntry",
      "compressedLength": 17448,
      "fullName": "analyzers/dotnet/cs/HellBrick.Diagnostics.dll",
      "length": 38400,
      "name": "HellBrick.Diagnostics.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.13.10.47/hellbrick.diagnostics.1.2.1.json#tools/install.ps1",
      "@type": "PackageEntry",
      "compressedLength": 400,
      "fullName": "tools/install.ps1",
      "length": 1341,
      "name": "install.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.13.10.47/hellbrick.diagnostics.1.2.1.json#tools/uninstall.ps1",
      "@type": "PackageEntry",
      "compressedLength": 426,
      "fullName": "tools/uninstall.ps1",
      "length": 1477,
      "name": "uninstall.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.13.10.47/hellbrick.diagnostics.1.2.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}