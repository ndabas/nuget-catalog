{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.21.22.59/methoddecorator.fody.0.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Matt Ellis",
  "catalog:commitId": "61c85bcb-4460-4147-9d65-9721524cbf96",
  "catalog:commitTimeStamp": "2015-02-01T21:22:59.1522019Z",
  "copyright": "Copyright Matt Ellis 2012",
  "created": "2012-05-22T15:58:26.56Z",
  "description": "Fody add-in to decorate arbitrary methods to run code before and after invocation",
  "id": "MethodDecorator.Fody",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "pgIEH+3gZcAm19Qg9QcpcHU33V/AwQEB2LJFTji+11BePjekHetEQI7zvhCWiRIl+xh88ufZbkJPHZgf84FXTw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15712,
  "projectUrl": "https://github.com/citizenmatt/MethodDecorator.Fody",
  "published": "2012-05-22T15:58:26.56Z",
  "releaseNotes": "The marker type can now be either an interface or a class. If it's an interface, it should be called IMethodDecorator. If it's a class, it should be called MethodDecoratorAttribute (although it doesn't strictly have to derive from System.Attribute). This allows specifying the implementation of the attribute in a separate assembly, while still being able to find the marker type. Also improved generation of IL for methods that contain multiple RET instructions.",
  "requireLicenseAcceptance": false,
  "title": "MethodDecorator.Fody",
  "version": "0.6.0",
  "tags": [
    "ILWeaving",
    "Fody",
    "AOP"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}