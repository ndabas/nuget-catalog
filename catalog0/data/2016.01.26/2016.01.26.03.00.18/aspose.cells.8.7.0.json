{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.26.03.00.18/aspose.cells.8.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "63b3ef1e-fcb4-4b20-90c2-111a4bc18b94",
  "catalog:commitTimeStamp": "2016-01-26T03:00:18.0875692Z",
  "copyright": "Â© Aspose 2002-2015. All Rights Reserved.",
  "created": "2016-01-26T03:00:03.33Z",
  "description": "Aspose.Cells for .NET is a spreadsheet programming component that allows software developers to manipulate and convert spreadsheet files from within their own applications. A combination of APIs and GUI controls, Aspose.Cells for .NET speeds up Microsoft Excel programming and conversion.",
  "iconUrl": "http://www.aspose.com/images/products/dotnet/Aspose.Cells_128x128.png",
  "id": "Aspose.Cells",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "listed": true,
  "packageHash": "DBQPaOYqZmGwTASvnD1u632R22oAxPtjdVR3vkuftsuXKd3lOkHq+wicKpYWfXy8EVpPJNVw8ztR6xgfi+LBig==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9817728,
  "projectUrl": "http://www.aspose.com/categories/.net-components/aspose.cells-for-.net/default.aspx",
  "published": "2016-01-26T03:00:03.33Z",
  "releaseNotes": "New Features\n(CELLSNET-43938)- Support exporting VBA certificate to file or stream \n(CELLSNET-43920)- Support an API to check if VBAcode is signed \n(CELLSNET-43867)- Digitally sign VBA projects/macros \n(CELLSNET-44150)- Ability to work with XML Maps \n(CELLSNET-43992)- Support XML Mapping Import functionality as it is done from Excel Developer tab \nEnhancements\n(CELLSNET-43878)- VBA digital sign is lost during conversion (XLSM to XLS) \n(CELLSNET-43160)- VBA Project loses digital signature when saving xls as xlsm file format \n(CELLSNET-44169)- Validation.Value1 array order is different to what is shown in Excel \n(CELLSNET-44168)- Unable to create 2-Color Scale conditional formatting \n(CELLSNET-44167)- Support ISOWEEKNUM MS Excel 2013 function \n(CELLSNET-44166)- VBA digital sign is lost during conversion (XLSB to XLSM) \nPerformance\n(CELLSNET-44156)- Console application crashes on Workbook.CalculateFormula \n(CELLSNET-44120)- Workbook.CalculateFormula takes more time to calculate the formulas in the Workbook. \n(CELLSNET-43896)- Process terminated when calling Workbook.CalculateFormula \nBugs\n(CELLSNET-44164)- Incomplete HTML structure when saving to a stream \n(CELLSNET-44147)- Refreshing pivot table generates corrupt excel file \n(CELLSNET-44022)- Workbook.Copy does not preserve formatting for pivot tables \n(CELLSNET-44139)- Different values for the same cell before and after calling CalculateFormula() method \n(CELLSNET-44135)- Excel file is not properly (fully) calculated (regarding Charts) prior to PDF generation \n(CELLSNET-44138)- Cell shading overlaps the border causing the border thinning \n(CELLSNET-44136)- Excel shows one page in print preview where Aspose.Cells render to PDF pages \n(CELLSNET-44122)- Images in the sheets are not rendered the same as per the original template Excel file \n(CELLSNET-43587)- Cell Area is overlapping the Cell Border while converting spreadsheet to PDF \n(CELLSNET-44171)- CopyData between ranges does not work horizontally but it works fine vertically \n(CELLSNET-44153)- XLSB to XLSM does not work properly and produces corrupted file \n(CELLSNET-44149)- OleObjects get removed after conversion from XLSB to XLSM \n(CELLSNET-44146)- Conditional Formatting results are not rendering properly in PDF \n(CELLSNET-44144)- Adding custom properties removes the worksheet contents \n(CELLSNET-44141)- Chart primary category axis gets wrong on resaving the source excel file \n(CELLSNET-44160)- Horizontal axis was changed to different labels than the initial file \n(CELLSNET-44157)- Custom chart's primary x-axis changed after opening and resaving the template XLSX file \n(CELLSNET-43910)- Extracting the image from Worksheet and inserting it in Document file renders it incomplete \n(CELLSNET-44151)- JavaScript is not being triggered while deleting contents from GridWeb cell \n(CELLSNET-44113)- Header row text also appears inside the Filter values \nExceptions\n(CELLSNET-44119)- Error in calculating at Workbook.CalculateFormula \n(CELLSNET-44089)- System.IndexOutOfRangeException at PivotTable.CalculateData \n(CELLSNET-44064)- CalculateFormula throws exception on source xlsm \n(CELLSNET-44055)- Aspose.Cell.Exception caused by pdf conversion because of memory preference setting \n(CELLSNET-44179)- Exception while loading an HTML file (created from XSLT) \n(CELLSNET-44145)- System.NullReferenceException at WorkbookMetadata ctor \n(CELLSNET-44143)- Exception at Workbook ctor while loading XLSX \n(CELLSNET-44142)- IndexOutOfBoundsException when creating instance of Workbook with XLS",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Cells for .Net is a class library for Excel document processing",
  "title": "Aspose.Cells for .NET",
  "verbatimVersion": "8.7.0",
  "version": "8.7.0",
  "tags": [
    "Excel",
    "Spreadsheet",
    "Aspose.Cells",
    "XLS",
    "XLSX",
    "TXT",
    "ODS"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}