{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Steve Gilham",
  "catalog:commitId": "1312295f-0f92-4638-b5d7-3d217780306a",
  "catalog:commitTimeStamp": "2021-11-27T17:10:42.1248621Z",
  "copyright": "Copyright © 2010-2021 by Steve Gilham <SteveGilham@users.noreply.github.com>",
  "created": "2021-05-21T14:49:26.223Z",
  "description": "A cross-platform pre-instrumenting code coverage tool set for .net/.net core and Mono",
  "iconFile": "AltCover_128.png",
  "iconUrl": "https://cdn.jsdelivr.net/gh/SteveGilham/altcover/Build/AltCover_128.png",
  "id": "altcover.fake",
  "isPrerelease": false,
  "lastEdited": "2021-11-27T17:10:39.547Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": false,
  "packageHash": "NYGeyWrH1kIfEmkSGtuIAtHk/udrBWxgo2BpIZMQIBy1FTFf5kHrd48ZAJCm5gZOB65fZHGTe0BrmgMMfQS12g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 144913,
  "projectUrl": "https://github.com/SteveGilham/altcover/wiki",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "This build from https://github.com/SteveGilham/altcover/tree/a9c0c13e47da072aa8a149e3cf0d6d6bf49b2710\n\nQ. Never mind the fluff -- how do I get started?\nA. Start with the Quick Start guide : https://github.com/SteveGilham/altcover/wiki/QuickStart-Guide\n8.2.821 (Habu series release 6)\n• Support deterministic builds /p:ContinuousIntegrationBuild=true, with or without --sourcelink//p:AltCoverSourceLink=true.  Note that assemblies created by deterministic builds will be excluded by -l//p:AltCoverLocalSource=true.\n• Experiment with the ReadMe feature recently added to NuGet\n• Internal refactoring of the JSON processing following the replacement of System.Text.Encodings.Web in the previous release.\n8.2.820 (Habu series release 5)\n• Replace System.Text.Encodings.Web for JSON-escaping module, class and method names\n• [BUGFIX] issue #125 -- prevent an NullReferenceException is some cases of computing cyclomatic complexity (a failure to exactly copy the algorithm from Mono.Gendarme)\n• [ENHANCEMENT; API] issue #126 -- further generalise the relative-directory support for CopyAlways/CopyIfNewer from v7.4; extends the ContingentCopy MSBuild task\n8.1.819 (Habu series release 4)\n• Adapt to recent F# compiler optimizations that make function objects static if they don't close over their environment -- properly detect their owner functions for exclusion and for JSON format output\n• If the report format is JSON, ensure that the coverage file doesn't end .xml, and if not JSON, that it doesn't end .json (case-blind comparison)\n8.1.817 (Habu series release 3)\n• Merge-OpenCover cmdlet and OpenCover.Merge API.  It should handle both strict (OpenCover, AltCover --reportFormat=OpenCover) and more relaxed (coverlet, ConvertFrom-CoverageJson, Write-OpenCoverDerivedState -Coverlet) interpretations\n• When --callContext indicates a method returning an F# async computation, then track all calls within the same async flow, just as with C# async methods from v7.2.800\n8.0.816 (Habu series release 2)\n• Move to Cake 1.0 as baseline for Cake support\n• [VISUALIZER] Support for LCov and Cobertura format reports\n• [VISUALIZER] For formats with only line-level information (e.g. LCov, Covertura or from coverlet), colour the whole line, and not just the line number gutter\n8.0.815 (Habu series release 1)\n• [BUGFIX] Issue 122 -- rework the method name tokenization for extracting the returnType (argumentList) signature values in the Cobertura output, fixing an off-by-one error that generated returnType argumentList) without the ( as well as the headline exception.\n• [NEW] Native JSON report formatting (--reportFormat=Json or equivalents), a superset of coverlet's JSON\n  ◦ AltCover classic mode -- just running the instrumented code and collecting results in the ProcessExit handler -- is not supported with --reportFormat=Json\n  ◦ ConvertFrom-CoverageJson cmdlet to convert from coverlet or AltCover JSON to a miminal OpenCover format\n  ◦ Preparing as Native JSON, to generate an LCov or Cobertura report at collection is supported\n• [VISUALIZER] Both versions will now consume and display from coverlet and AltCover JSON output\n• [BREAKING] the -x, --xmlReport argument or equivalent becomes just -r, --report since not all reports are XML\n• [BREAKING] the stop-gap --jsonReport collection option from v7.6 is withdrawn, and the related ConvertTo-CoverageJson cmdlet now produces the AltCover native JSON format\n• For both LCov and Cobertura output, coalesce cases of multiple sequence points per line into one entry per line\n• Extensions to coverlet's JSON format are as follows\n  ◦ Method has optional fields\n    ⁃ SeqPnts (array of SeqPnt)\n    ⁃ TId (integer tracking ID)\n    ⁃ Entry and\n    ⁃ Exit (arrays of timestamps)\n  ◦ BranchInfo has optional fields\n    ⁃ Id (integer unique ID)\n    ⁃ Times (array of timestamps) and\n    ⁃ Tracks (array of tracking IDs)\n  ◦ SeqPnt is VC (visit count), SL (start line), SC (start column), EL, EC (ditto for end), Offset, Id, all integers, and optional Times and Tracks as for BranchInfo\n  ◦ Because int64 doesn't fit as a double, tracking-related timestamps are represented as Base64Encoded strings of the ticks count as a network byte order quantity Convert.ToBase64String(BitConverter.GetBytes(IPAddresss.HostToNetworkOrder(ticks)))\n7.6.812 (Genbu series release 15)\n• [VISUALIZER] Move the global tool to the new 0.10 AvaloniaUI release\n• Monitor API\n  ◦ [BUGFIX] Harden the monitor API TryGetVisitTotals against race conditions in multi-threaded tests\n  ◦ Publish the AltCover.Monitor API as API (i.e. under lib/) in the main package altcover as well as in altcover.api (but not in altcover.global; global tools aren't library compatible to be accessed through a package add reference).  It's there next to the PowerShell assembly (per altcover ImportModule) if you want to manually link to it, though\n  ◦ Support writing unit tests involving the API back to net20 as well as netstandard2.0\n• Add --jsonReport option (and equivalents) to output the NCover or OpenCover data in a minified JSON format, like the existing --lcovReport option does for that format.  The JSON is a direct map of the XML, with values appropriately typed.\n• Add a ConvertTo-CoverageJson cmdlet and a ConvertToJson toolkit API to post-precess existing NCover/OpenCover reports\n7.5.809 (Genbu series release 14)\n• [NEW] AltCover.Monitor API to track current coverage from running unit tests.  Current implementation requires dotnet test, or other command-line testing with --defer set, in which the cumulative visit numbers are available, rather than everything having been dumped to file instead.\n• [BUGFIX] In OpenCover format output, only emit <File /> records relevant to the respective module, not for all source files encountered so far.\nFor previous releases (7.4.x and earlier) go here -- https://github.com/SteveGilham/altcover/blob/master/ReleaseNotes%20-%20Previously.md",
  "repository": "",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "AltCover (FAKE task helpers)",
  "verbatimVersion": "8.2.821",
  "version": "8.2.821",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#dependencygroup/fake.core.environment",
          "@type": "PackageDependency",
          "id": "Fake.Core.Environment",
          "range": "[5.18.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#dependencygroup/fake.dotnet.cli",
          "@type": "PackageDependency",
          "id": "Fake.DotNet.Cli",
          "range": "[5.18.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#dependencygroup/system.collections.immutable",
          "@type": "PackageDependency",
          "id": "System.Collections.Immutable",
          "range": "[1.6.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#altcover.fake.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3424,
      "fullName": "altcover.fake.nuspec",
      "length": 7599,
      "name": "altcover.fake.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.deps.json",
      "@type": "PackageEntry",
      "compressedLength": 15873,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.deps.json",
      "length": 101779,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.deps.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "@type": "PackageEntry",
      "compressedLength": 67784,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "length": 201728,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.pdb",
      "@type": "PackageEntry",
      "compressedLength": 10087,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.pdb",
      "length": 34596,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.xml",
      "@type": "PackageEntry",
      "compressedLength": 4171,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.xml",
      "length": 53893,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#lib/netstandard2.0/BlackFox.CommandLine.dll",
      "@type": "PackageEntry",
      "compressedLength": 21379,
      "fullName": "lib/netstandard2.0/BlackFox.CommandLine.dll",
      "length": 64000,
      "name": "BlackFox.CommandLine.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 4029,
      "fullName": "README.md",
      "length": 10248,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#README.html",
      "@type": "PackageEntry",
      "compressedLength": 2949,
      "fullName": "README.html",
      "length": 7178,
      "name": "README.html"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 628,
      "fullName": "LICENSE",
      "length": 1069,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#AltCover_128.png",
      "@type": "PackageEntry",
      "compressedLength": 2088,
      "fullName": "AltCover_128.png",
      "length": 2088,
      "name": "AltCover_128.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.27.17.10.42/altcover.fake.8.2.821.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "codecoverage",
    ".net",
    "Mono",
    ".netcore",
    "cross-platform",
    "FAKE",
    "build"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}