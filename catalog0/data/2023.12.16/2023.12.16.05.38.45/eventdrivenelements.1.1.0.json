{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.12.16.05.38.45/eventdrivenelements.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kyan Huo",
  "catalog:commitId": "b259de3c-7a8b-4d1d-8574-e685ea634879",
  "catalog:commitTimeStamp": "2023-12-16T05:38:45.0078586Z",
  "copyright": "personal copyright",
  "created": "2023-11-26T13:25:57.497Z",
  "description": "What probs it may solved: In MVVM design pattern, there may have a lot situations that an object container which holds and controls a bunch of sub-objects that need to also receive the status updates or whatever has happened in its holding sub-elements. If you are quite familiar with the schemes that happens among the View and ViewModel layer during MVVM design, you will find its quite easy and charming to apply this mechanism among Model layer and ViewModel layer.",
  "frameworkReferences": "",
  "id": "EventDrivenElements",
  "isPrerelease": false,
  "lastEdited": "2023-12-16T05:38:36.3Z",
  "licenseExpression": "Apache-2.0",
  "licenseUrl": "https://licenses.nuget.org/Apache-2.0",
  "listed": false,
  "packageHash": "lpAQnx4TjiEJzggMPRs9mCnKCdorGECVdemSCYhlmdR9VybwXYx6/Vi/sCWregs/TQREtOYZJNGC4xNq3phPQA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20061,
  "projectUrl": "https://github.com/KailangHuo/EventDrivenObject",
  "published": "1900-01-01T00:00:00Z",
  "readmeFile": "README.md",
  "title": "EventDrivenElements",
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.12.16.05.38.45/eventdrivenelements.1.1.0.json#dependencygroup/net6.0-windows7.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net6.0-windows7.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.12.16.05.38.45/eventdrivenelements.1.1.0.json#EventDrivenElements.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 718,
      "fullName": "EventDrivenElements.nuspec",
      "length": 1426,
      "name": "EventDrivenElements.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.12.16.05.38.45/eventdrivenelements.1.1.0.json#lib/net6.0-windows7.0/EventDrivenElements.dll",
      "@type": "PackageEntry",
      "compressedLength": 5080,
      "fullName": "lib/net6.0-windows7.0/EventDrivenElements.dll",
      "length": 11264,
      "name": "EventDrivenElements.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.12.16.05.38.45/eventdrivenelements.1.1.0.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 629,
      "fullName": "README.md",
      "length": 1218,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.12.16.05.38.45/eventdrivenelements.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11512,
      "fullName": ".signature.p7s",
      "length": 11512,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "MVVM",
    "DDD",
    "EDA",
    "Event",
    "Driven",
    "WPF",
    "Avalonia"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}