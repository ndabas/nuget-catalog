{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.12.08.11/iek.framework.datamapper.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Alfredo Rojas",
  "catalog:commitId": "04412359-319a-4ba1-8d60-3f6299e8c6dc",
  "catalog:commitTimeStamp": "2018-12-19T12:08:11.2643855Z",
  "copyright": "Copyright 2016",
  "created": "2016-10-04T01:10:43.427Z",
  "description": "DataMapper T4",
  "id": "iek.Framework.DataMapper",
  "isPrerelease": false,
  "lastEdited": "2018-12-19T12:07:54.42Z",
  "listed": true,
  "packageHash": "9rbtJ2HHrXMzi2w7gaMHwRgyC8HzIyVRtDEavVnLuRB0v2ePxM+HcOFUqTBBzsowVQhvidgwwE5LAU74Gi30rQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25369,
  "published": "2016-10-04T01:10:43.427Z",
  "releaseNotes": "This framework contains 2 classes\n\n1. T4 entities generator: Creates a connection with the db, selects all the tables and creates a entity for every table in C#\n\n   The T4 needs 2 appSettings\n\n   1. \"DataMapperEntityNamespace\" the namespace entities\n   2. \"DataMapperEntityPath\" the folder path to save the entities\n\n   And the connectionString\n\n   <add name=\"DataMapperConnectionString\" connectionString=\"Server=tcp:184.168.47.19;Database=MyDB;User ID=MyUser;Password=123;\" providerName=\"System.Data.SqlClient\" />\n\n   Use:\n   iek.DataMapper.T4.Instance().GenerateEntities(ConfigurationManager.AppSettings[\"DataMapperEntityPath\"]);\n\n\n2. ORM Generic Pattern Context: Is like a EntityFramework but with ADO.NET on generic reporistory pattern.\n\n   The Context needs one appSetting and the connectionString\n\n   1. \"DataMapperEntityNamespace\"\n   2. \"DataMapperConnectionString\"\n\n   Use:\n   \n   User user = DataMapper.Context.Instance().TAsync<User>(\"GetUserById\", new { IdUser = 1 }).Result;\n\n   TAsync<User>: This is a generic method, you can use List<User> or a single entity to return the result\n   GetUserById: name of you procedure in db\n   IdUser: name of parameter in storedProcedure, needs to be the same name and data type\n\n   \nDoubts: iekzaer@gmail.com\n\n\n",
  "requireLicenseAcceptance": false,
  "summary": "Please see Release Notes for framework description and use",
  "title": "iek.DataMapper",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.12.08.11/iek.framework.datamapper.1.0.0.json#iek.Framework.DataMapper.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 936,
      "fullName": "iek.Framework.DataMapper.nuspec",
      "length": 1970,
      "name": "iek.Framework.DataMapper.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.12.08.11/iek.framework.datamapper.1.0.0.json#lib/net45/iek.DataMapper.dll",
      "@type": "PackageEntry",
      "compressedLength": 13224,
      "fullName": "lib/net45/iek.DataMapper.dll",
      "length": 28160,
      "name": "iek.DataMapper.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.12.08.11/iek.framework.datamapper.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "iek",
    "framework",
    "datamapper",
    "t4",
    "pattern",
    "generic"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}