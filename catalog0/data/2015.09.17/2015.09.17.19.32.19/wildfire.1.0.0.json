{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.17.19.32.19/wildfire.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Riju",
  "catalog:commitId": "a9f931fd-c61e-462e-9bc0-7c7efabcad66",
  "catalog:commitTimeStamp": "2015-09-17T19:32:19.3665034Z",
  "created": "2015-09-17T19:31:16.187Z",
  "description": "A .Net Library for reusable code for data access from database , collections, and other utility classes.\n\nvar queryBuilder = new QueryBuilder();\n\n        //Add table from there you want to select.\n        var table = new FromTable(\"Table1\", \"t1\");\n\n        // Perform a join \n        table.JoinOn(\"Table2\", \"t2\", \"Column1\", \"Column2\", JoinType.Inner);\n\n        //add table\n\n        queryBuilder.AddFromTable(table.TableString);\n\n        //Create Where clauses using predicates query builder provides you methods to add predicate\n        //there are two ways you can add predicate  either by string or predicate object\n        var textMatchExpression = new Predicate(\"t1.[Column3] like 'Joe'\");\n\n        //AddPredicate also takes just string if you have only one where condition.\n        //add predicate  and specify the operation type supports and or and not\n        queryBuilder.AddPredicate(textMatchExpression, OperationType.And);\n\n\n        var datesExpressions1 = new List<string>();\n        datesExpressions1.Add(\"f.[Column5] >= '2015-09-01'\");//\n        datesExpressions1.Add(\"f.[Column6] <= '2015-12-31'\");\n\n        var dateExpressions2 = new List<string>();\n        dateExpressions2.Add(\"f.[Column7] >= '2015-10-01'\");\n        dateExpressions2.Add(\"f.[Column8] >= '2015-12-31'\");\n\n        //add groups of predicates\n        queryBuilder.AddPredicate(datesExpressions1, OperationType.And);\n        queryBuilder.AddPredicate(dateExpressions2, OperationType.Or);\n\n        queryBuilder.GenerateQuery();",
  "id": "WildFire",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/optimus4me/WildFire/blob/master/LICENSE",
  "listed": true,
  "packageHash": "HPj4ohfpZSg8wa1ipdMp8HWedhMuBSb3hRf1v0ydrqu2+93niKz+ObknPPbkExS3TbNuEopD4c2Nde0PCx7nJw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15342,
  "projectUrl": "https://github.com/optimus4me/WildFire",
  "published": "2015-09-17T19:31:16.187Z",
  "requireLicenseAcceptance": false,
  "summary": "A .Net Library for reusable code for data access from database , collections, and other utility classes.\n\nvar queryBuilder = new QueryBuilder();\n\n        //Add table from there you want to select.",
  "title": "WildFire",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}