{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.03.16.28.42/passwordpolicy.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nilesh",
  "catalog:commitId": "81d1512a-f898-40ba-b56d-4e82d126ed6c",
  "catalog:commitTimeStamp": "2020-07-03T16:28:42.9153905Z",
  "created": "2020-06-13T17:24:53.24Z",
  "description": "A .NET Standard library which Generates Random Password with using alphabets(Upper&Lower case), numbers, and special characters. \nas well as you can configure as per your password policy/requirement, like exclude and include numbers/special/alphabets characters.\n\nFuture \n1. Random Generate password as per your password policy \n2. Bind Password with a define property(also support Generic)\n3. Validate new generated password with your db and re-generate password\n4.  Validating  generated password using IsValid method \n5.  Define the number of unique character for generating a password",
  "id": "PasswordPolicy",
  "isPrerelease": false,
  "lastEdited": "2020-07-03T16:28:41.007Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": false,
  "packageHash": "5CdGnlWg0sxXpR1hy/jsvR8MlzJraJdOJ7qDCAFHBHz54hiegZl3L3dtluKSN5uL3rwCKXMTgYe6HKVNCOwLzw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21513,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "1. Random Generate password as per your password policy \n2. Bind Password with a define property(also support Generic)\n3. Validate new generated password with your db and re-generate password\n4. Password validate \n5.  Define the number of unique character for generating a password",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.03.16.28.42/passwordpolicy.1.1.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.03.16.28.42/passwordpolicy.1.1.0.json#PasswordPolicy.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 700,
      "fullName": "PasswordPolicy.nuspec",
      "length": 1692,
      "name": "PasswordPolicy.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.03.16.28.42/passwordpolicy.1.1.0.json#lib/netstandard2.0/PasswordGenerator.dll",
      "@type": "PackageEntry",
      "compressedLength": 8573,
      "fullName": "lib/netstandard2.0/PasswordGenerator.dll",
      "length": 20480,
      "name": "PasswordGenerator.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.03.16.28.42/passwordpolicy.1.1.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 635,
      "fullName": "LICENSE",
      "length": 1084,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.03.16.28.42/passwordpolicy.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Random",
    "Generate",
    "password",
    "PasswordPolicy",
    "unique",
    "Validaten",
    "Password",
    "GeneratePassword"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}