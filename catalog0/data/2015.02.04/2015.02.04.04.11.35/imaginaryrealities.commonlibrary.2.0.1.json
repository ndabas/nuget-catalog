{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.04.11.35/imaginaryrealities.commonlibrary.2.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "ImaginaryRealities, LLC",
  "catalog:commitId": "b76eea92-5baf-4760-8c36-189a463afe7a",
  "catalog:commitTimeStamp": "2015-02-04T04:11:35.1820277Z",
  "copyright": "Copyright 2013 ImaginaryRealities, LLC",
  "created": "2013-11-17T19:00:16.987Z",
  "description": "The Common Library contains classes and components that are reused often by ImaginaryRealities for developing our software products.",
  "id": "ImaginaryRealities.CommonLibrary",
  "isPrerelease": false,
  "language": "en-us",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://imaginaryrealities.github.com/CommonLibrary/license.html",
  "packageHash": "5vHMbjRIuwu1vmf9tGJh6onxWNTNMjRuiXvesxnQw064CvHqItPwUBlpkagw+U1YH2OSRbREZahL7qmI1xwNTw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 74140,
  "projectUrl": "http://imaginaryrealities.github.com/CommonLibrary",
  "published": "2013-11-17T19:00:16.987Z",
  "releaseNotes": "Version 2.0.1\n\n        I removed the strong naming key from the framework assemblies.\n        I reviewed the pros and cons of strong naming and decided that\n        it doesn't fit in with the intended use of the framework and\n        that the benefits to strong naming were non-existent.\n\n        I changed the implementation of the Process Monitor integration\n        code. The code now uses .NET safe handles instead of raw\n        handles which should lead to less risk of handle leaks\n        (although there was no evidence to suggest that there was a\n        problem before; I just decided it was a better practice). I\n        also fixed/updated some of the unit tests and increased code\n        coverage.\n\n        I created the ProcessMonitorException class. Exceptions that\n        are reported by the Process Monitor framework will throw this\n        exception instead of raw Exception objects.\n\n        I updated the SemanticVersionNumber class to use version 2.0.0\n        of the Semantic Versioning Specification. The big change here\n        is that the build number is no longer considered when comparing\n        version numbers. Also, the algorithm for comparing pre-release\n        version numbers was altered to match a change in the\n        specification. Pre-release identifiers that are numbers have a\n        lower precedence than alphanumeric identifiers.",
  "requireLicenseAcceptance": true,
  "summary": "Classes and components that implement common behavior.",
  "title": "ImaginaryRealities Common Library",
  "version": "2.0.1",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}