{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Alex Solovyov / Ivars Sudmalis",
  "catalog:commitId": "2fa1cfc7-cb52-403a-8ee4-cfc39697ebd3",
  "catalog:commitTimeStamp": "2018-11-16T03:20:58.2573356Z",
  "copyright": "Copyright Â© 2012  dbreeze.tiesky.com",
  "created": "2014-04-25T14:41:43.997Z",
  "description": "DBreeze features:\n\n- Fully managed code, platform independent and without reference to other libraries. \n- ACID compliant. \n- Multi-threaded, with a solution for deadlocks resolving/elimination, parallel reads and synchronized writes/reads. \n- No fixed scheme for table names (construction and access on the fly).\n- Tables can reside in mixed locations: different folders, hard drives, memory.\n- Database indexes (keys) never need to be defragmented. Speed of insert/update/remove operations doesn't grow up during the time.\n- Ability to access Key/Value pair of a table by physical link, what can economize time for joining necessary data structures.\n- No limits for database size (except \"long\" size for each table and physical resources constraints).\n- Low memory and physical space consumption, also while random inserts and updates. Updates reside the same physical space, if possible.\n- High performance of CRUD operations. When you need, unleash DBreeze power and get 500000 key/value pairs insert or 260K updates per second per core into sorted table on the hard drive of standard PC.\n- High speed of random keys batch insert and updates (batch must be sorted in memory ascending and non-overwrite flag must be set).\n- Range selects / Traversing (Forward, Backward, From/To, Skip, StartsWith etc). Remove keys, change keys.\n- Keys and values, on the low level, are always byte arrays. \n- Max. key size is 65KB, max. value size is 2GB. Value can be represented as a set of columns, where can be stored data types of fixed or dynamic length. Every dynamic datablock can be of size 2GB. \n- Rich set of conversion functions from/to between byte[] and other data types.\n- Nested / Fractal tables which can reside inside of master tables values.\n- Incremental backup/restore option.\n- DBreeze is a foundation for complex data storage solutions (graph/neuro, object, document, text search etc. data layers). Please, study documentation to understand all abilities of DBreeze.",
  "id": "DBreeze",
  "isPrerelease": false,
  "language": "es-US",
  "lastEdited": "2018-11-16T03:20:33.47Z",
  "licenseUrl": "https://dbreeze.codeplex.com/license",
  "listed": true,
  "packageHash": "w6kM63XuWM9MVzy1e3PZwbVm453S9EJNTdbG7CyvYMHaJtcoRoVruQkE35D7BDCkeVaiH/KLynX/FLp+pWfrIg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 408758,
  "projectUrl": "https://dbreeze.codeplex.com",
  "published": "2014-04-25T14:41:43.997Z",
  "requireLicenseAcceptance": false,
  "summary": "Professional, open-source, NoSql (embedded Key/Value storage), transactional, ACID-compliant, multi-threaded, object database management system for\n.NET 3.0> MONO",
  "title": "DBreeze database v. 01.062.20140425",
  "verbatimVersion": "1.62.0",
  "version": "1.62.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#DBreeze.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1527,
      "fullName": "DBreeze.nuspec",
      "length": 2989,
      "name": "DBreeze.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#lib/MonoAndroid/DBreeze.dll",
      "@type": "PackageEntry",
      "compressedLength": 104095,
      "fullName": "lib/MonoAndroid/DBreeze.dll",
      "length": 280576,
      "name": "DBreeze.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#lib/MonoAndroid/DBreeze.XML",
      "@type": "PackageEntry",
      "compressedLength": 26487,
      "fullName": "lib/MonoAndroid/DBreeze.XML",
      "length": 239801,
      "name": "DBreeze.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#lib/net30/DBreeze.dll",
      "@type": "PackageEntry",
      "compressedLength": 104280,
      "fullName": "lib/net30/DBreeze.dll",
      "length": 281088,
      "name": "DBreeze.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#lib/net30/DBreeze.XML",
      "@type": "PackageEntry",
      "compressedLength": 26561,
      "fullName": "lib/net30/DBreeze.XML",
      "length": 241792,
      "name": "DBreeze.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#lib/net45/DBreeze.dll",
      "@type": "PackageEntry",
      "compressedLength": 104460,
      "fullName": "lib/net45/DBreeze.dll",
      "length": 281600,
      "name": "DBreeze.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#lib/net45/DBreeze.XML",
      "@type": "PackageEntry",
      "compressedLength": 26561,
      "fullName": "lib/net45/DBreeze.XML",
      "length": 241792,
      "name": "DBreeze.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.03.20.58/dbreeze.1.62.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "DBreeze",
    "NoSQL",
    ".NET",
    "C#",
    "embedded",
    "key",
    "value",
    "ACID",
    "Liana",
    "trie"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}