{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.26.20.57.28/broadcast.0.2.0-rc06.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Christian Walpen",
  "catalog:commitId": "11d10475-8639-4cbd-ab3a-f40516a4eef7",
  "catalog:commitTimeStamp": "2015-02-26T20:57:28.199812Z",
  "created": "2015-02-26T20:56:07.627Z",
  "description": "A simple request/response and messaging commponent",
  "id": "Broadcast",
  "isPrerelease": true,
  "lastEdited": "2015-02-26T20:57:24.417Z",
  "licenseUrl": "https://github.com/WickedFlame/Broadcast/raw/master/License.txt",
  "packageHash": "VWgWfE+miWxFDz7BLzFfGQ+GY7XU162FokE09ucVHRjGFvrHVqQ/67dzFryFE7kxDovGWrV2+bNjL+URhcUPCQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15241,
  "projectUrl": "http://wicked-flame.blogspot.ch",
  "published": "2015-02-26T20:56:07.627Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "A simple fire and forget, request/response and messaging commponent.  \nBroadcast is a simple implementation for processing queued, synchronous and asynchronous tasks and notifications.  \nBroadcast helps implement patterns like Mediator and CQRS (Command- and Queryhandling).",
  "title": "Broadcast",
  "version": "0.2.0-RC06",
  "tags": [
    "Async",
    "Task",
    "processing",
    "Request",
    "Commands",
    "Notification",
    "Mediator",
    "CQRS",
    "Fire",
    "and",
    "forget"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}