{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.08.59/quickinputvalidation.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SachinKumarJain",
  "catalog:commitId": "4f857f10-1a24-47f4-896c-ba00d89ac1ae",
  "catalog:commitTimeStamp": "2018-12-18T14:08:59.6043826Z",
  "copyright": "Copyright Â©  2015",
  "created": "2015-09-08T18:50:43.313Z",
  "description": "Quick Custom Input Validation for Web API V1.0 ",
  "id": "QuickInputValidation",
  "isPrerelease": false,
  "lastEdited": "2018-12-18T14:08:33.893Z",
  "listed": true,
  "packageHash": "rEa3KjhfaDJa7j6+vL2CCiRNz3P2JrUA9SrzV1PN2Y+CFZF5G2LHgpEnhWv/jmYN6CmX3yLExY0zxwI5sXGztQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16675,
  "published": "2015-09-08T18:50:43.313Z",
  "releaseNotes": "Sample to code to use QuickValidation - \n\nstatic void Main(string[] args)\n        {\n            var customer = new Customer { Id = 0, LegalIdentifier = \"S12\" };\n            var customerValidationFor = new CustomerValidator { StopToContinue = true };\n            var result = customerValidationFor.Validate(customer);\n\n            if (!result.IsValid)\n            {\n                Console.WriteLine(result.ErrorMessage);\n                Console.ReadLine();\n                return;\n            };\n\n            Console.WriteLine(\"Validate successfully\");\n            Console.ReadLine();\n        }\n\npublic class CustomerValidator : BaseValidationFor<Customer>\n    {\n        public CustomerValidator()\n        {\n            ValidationFor()\n                .ShouldBe(item => item.Id > 0, item => string.Format(\"Customer id {0} should not valid\", item.Id))\n                .ShouldBe(item => item.LegalIdentifier.NotNull(), \"it should not be null\")\n                .ShouldBe(item => item.LegalIdentifier.NotEmpty())\n                .ShouldBe(item => item.Name.NotEmpty(), item => \"Customer name should not be empty.\")\n                .ShouldBe(item => item.LegalIdentifier.IsNumber(), item => string.Format(\"{0} should be a number\", item.LegalIdentifier))\n                .ShouldBe(item => item.LegalIdentifier.Length(2), item => string.Format(\"{0} should be 2 characters long\", item.LegalIdentifier));\n        }\n    }",
  "requireLicenseAcceptance": false,
  "summary": "Easy, Simple to use with light weight library\n\nfor detail to visit - sachinjain7.wordpress.com",
  "title": "Quick Input Validation for Web API",
  "verbatimVersion": "1.0.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.08.59/quickinputvalidation.1.0.0.json#QuickInputValidation.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 806,
      "fullName": "QuickInputValidation.nuspec",
      "length": 2167,
      "name": "QuickInputValidation.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.08.59/quickinputvalidation.1.0.0.json#lib/net45/QuickInputValidation.dll",
      "@type": "PackageEntry",
      "compressedLength": 3770,
      "fullName": "lib/net45/QuickInputValidation.dll",
      "length": 9216,
      "name": "QuickInputValidation.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.08.59/quickinputvalidation.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9472,
      "fullName": ".signature.p7s",
      "length": 9472,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}