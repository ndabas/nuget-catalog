{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.11.33.37/opentribe.memento.0.1.8.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Fred Morales",
  "catalog:commitId": "c4243bdd-3f44-4d0a-9948-091864298042",
  "catalog:commitTimeStamp": "2018-12-13T11:33:37.6829514Z",
  "copyright": "Copyright 2017",
  "created": "2017-11-25T09:31:10.857Z",
  "description": "Opentribe Memento is a C# open source library which provide all you need to manage Undo/Redo feature in your programs.\nThe memento pattern is a software design pattern that provides the ability to restore an object to the previous state. In its original form, discribed by the “Gang or four” in the book “Design patterns : Elements of reusable object-oriented software”, the memento design patters was implemented in three objects. It is not the case in this implementation. I can say that the Opentribe Memento library does not implement strictly the pattern designed by the “Gang of four”.\nFor Patrick Soquet, creator of Key language, Apple Media Tools authoring tool and iShell authoring tool, the architecture of a software is deeply influenced by the language.\nFollowong this idea, I created the Opentribe Memento library which doesn’t strictly follow the memento design pattern, but achieves the same target of the design pattern using elegants features of c# language.",
  "iconUrl": "https://bitbucket.org/FredMorales/gl/avatar/256/?ts=1509265877",
  "id": "Opentribe.Memento",
  "isPrerelease": false,
  "lastEdited": "2018-12-13T11:32:52.637Z",
  "licenseUrl": "https://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "2j56+RJBNHqsg02+xWgyfokej415wXdVHLiZTeUm2qEVcB7vlf7RB40DWO0RYSP7O+2XaiE6swDkmY9dM/NBRg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15951,
  "projectUrl": "http://opentribe.org/",
  "published": "2017-11-25T09:31:10.857Z",
  "releaseNotes": "First release.",
  "requireLicenseAcceptance": false,
  "summary": "Opentribe Memento is a C# open source library which provide all you need to manage Undo/Redo feature in your programs.",
  "title": "Opentribe Memento",
  "verbatimVersion": "0.1.8",
  "version": "0.1.8",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.11.33.37/opentribe.memento.0.1.8.json#Opentribe.Memento.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 890,
      "fullName": "Opentribe.Memento.nuspec",
      "length": 1934,
      "name": "Opentribe.Memento.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.11.33.37/opentribe.memento.0.1.8.json#lib/Memento.dll",
      "@type": "PackageEntry",
      "compressedLength": 3880,
      "fullName": "lib/Memento.dll",
      "length": 9216,
      "name": "Memento.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.11.33.37/opentribe.memento.0.1.8.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Undo",
    "Redo",
    "Memento",
    "C#",
    "dotnet",
    "dot.net",
    "Opentribe",
    "Fred",
    "Morales"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}