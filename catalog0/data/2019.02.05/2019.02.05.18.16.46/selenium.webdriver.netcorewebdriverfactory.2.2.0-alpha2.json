{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Alexander Dunn",
  "catalog:commitId": "de5b30b3-8f41-4e8e-9dbe-525198982eb3",
  "catalog:commitTimeStamp": "2019-02-05T18:16:46.5576092Z",
  "copyright": "Copyright 2019 Alexander Dunn",
  "created": "2019-02-05T18:12:02.33Z",
  "description": "A library to ease the creation of Selenium WebDriver instances in .net Core projects.\n\nUsage\nInstantiate a WebDriverFactory from a .NET Core project:\nIWebDriverFactory webDriverFactory =  new DefaultWebDriverFactory(Path.GetDirectoryName(Assembly.GetCallingAssembly().Location), {{yourGridUri}});\n\nUse the alternative Windows1803WebDriverFactory implementation for Windows 10 version 1803 and earlier.\nIWebDriverFactory webDriverFactory =  new Windows1803WebDriverFactory(Path.GetDirectoryName(Assembly.GetCallingAssembly().Location), {{yourGridUri}});\n\nThis is not intended for .NET Framework (as it is really not required) but if you would like to use it in a Framework project use:\nIWebDriverFactory webDriverFactory =  new FrameworkWebDriverFactory({{yourGridUri}});\n\nThen to use it\nIWebDriver localWebDriver = webDriverFactory.GetLocalWebDriver(Browser.xxxx);\nor \nIWebDriver remoteWebDriver = webDriverFactory.GetRemoteWebDriver(Browser.xxxx, PlatformType.xxxx);\n\nSupported Browsers:\nChrome\nFirefox\nEdge (Windows 10)\nInternet Explorer 11 (Windows Platforms)\nSafari (MacOS)\n\nPlatforms:\nWindows (PlatformType.Windows)\nLinux        (PlatformType.Linux)\nMacOS     (PlatformType.Mac)\n\nTested and working on Windows 10, Linux (Ubuntu 18.04) and MacOS Mojave\n\nThe repository at\nhttps://github.com/AlexanderOnTesting/NetCoreWebDriverFactory\ncontains test projects for Windows, Linux and MacOS. These can be used to test your setup and demonstrate the options available.",
  "id": "Selenium.WebDriver.NetCoreWebDriverFactory",
  "isPrerelease": true,
  "lastEdited": "2019-02-05T18:16:15.953Z",
  "licenseExpression": "Apache-2.0",
  "licenseUrl": "https://licenses.nuget.org/Apache-2.0",
  "listed": true,
  "packageHash": "xQF60qof17moKRSLzsHrcqDSG9hQbL2sD8E3UsMJw154GQn3n4FfLDFjeXnEUoD7RPZQtZMPAYzFB8zmJ40FXA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25968,
  "projectUrl": "https://github.com/AlexanderOnTesting/NetCoreWebDriverFactory",
  "published": "2019-02-05T18:12:02.33Z",
  "releaseNotes": "v2.2.0\nIntroduction of IWebDriverConfiguration and addition of iDisposable on instances.\n\nv2.1.0\nAddition of a generalised GetWebDriver method for both local and remote webdrivers.\nIWebDriver GetWebDriver(Browser browser, WindowSize windowSize = WindowSize.Hd, bool isLocal = true,\n            PlatformType platformType = PlatformType.Any, bool headless = false)\n\nAnd a WebDriverManager interface and implementation that uses it.\n\nv2.0.0 final\nSignificant refactoring from v1.0.1 for simplified usage:\n1) IWebDriverFactory:\n        IWebDriver GetRemoteWebDriver(Browser browser, PlatformType platformType = PlatformType.Any, WindowSize windowSize = WindowSize.Hd, bool headless = false);\n        IWebDriver GetRemoteWebDriver(DriverOptions options, WindowSize windowSize = WindowSize.Hd);\n\n        IWebDriver GetLocalWebDriver(Browser browser, WindowSize windowSize = WindowSize.Hd, bool headless = false);\n        IWebDriver GetLocalWebDriver(ChromeOptions options, WindowSize windowSize = WindowSize.Hd);\n        IWebDriver GetLocalWebDriver(FirefoxOptions options, WindowSize windowSize = WindowSize.Hd);\n        IWebDriver GetLocalWebDriver(EdgeOptions options, WindowSize windowSize = WindowSize.Hd);\n        IWebDriver GetLocalWebDriver(InternetExplorerOptions options, WindowSize windowSize = WindowSize.Hd);\n        IWebDriver GetLocalWebDriver(SafariOptions options, WindowSize windowSize = WindowSize.Hd);\n\nDefaultWebDriverFactory no longer has a default constructor and must be instantiated using\n        public DefaultWebDriverFactory(string installedDriverPath, Uri gridUri = null, IDriverOptionsFactory driverOptionsFactory = null)\n\n2) IDriverOptionsFactory:\n        T GetLocalDriverOptions<T>(bool headless = false) where T : DriverOptions;\n        T GetRemoteDriverOptions<T>(PlatformType platformType) where T : DriverOptions;\n\nIn addition, DefaultDriverOptionsFactory exposes a new constructor:\n       public DefaultDriverOptionsFactory(Dictionary<Type, DriverOptions> driverOptionsDictionary)\nto enable the use of your own standard DriverOptions choices.",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.2.0-alpha2",
  "version": "2.2.0-alpha2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json#dependencygroup/.netstandard2.0/selenium.webdriver",
          "@type": "PackageDependency",
          "id": "Selenium.WebDriver",
          "range": "[3.141.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json#Selenium.WebDriver.NetCoreWebDriverFactory.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1578,
      "fullName": "Selenium.WebDriver.NetCoreWebDriverFactory.nuspec",
      "length": 4653,
      "name": "Selenium.WebDriver.NetCoreWebDriverFactory.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json#lib/netstandard2.0/AlexanderOnTest.NetCoreWebDriverFactory.dll",
      "@type": "PackageEntry",
      "compressedLength": 9237,
      "fullName": "lib/netstandard2.0/AlexanderOnTest.NetCoreWebDriverFactory.dll",
      "length": 24064,
      "name": "AlexanderOnTest.NetCoreWebDriverFactory.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json#lib/netstandard2.0/AlexanderOnTest.NetCoreWebDriverFactory.xml",
      "@type": "PackageEntry",
      "compressedLength": 3013,
      "fullName": "lib/netstandard2.0/AlexanderOnTest.NetCoreWebDriverFactory.xml",
      "length": 44220,
      "name": "AlexanderOnTest.NetCoreWebDriverFactory.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.05.18.16.46/selenium.webdriver.netcorewebdriverfactory.2.2.0-alpha2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9472,
      "fullName": ".signature.p7s",
      "length": 9472,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Selenium",
    "WebDriverFactory",
    "WebDriver",
    "DotNet",
    "Core",
    ".net",
    "Core."
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}