{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sergey Odinokov",
  "catalog:commitId": "bb2ff513-0d76-4632-b184-40f1a957aeea",
  "catalog:commitTimeStamp": "2024-02-12T09:40:00.6896421Z",
  "copyright": "Copyright © 2013-2024 Hangfire OÜ",
  "created": "2024-02-12T09:37:12.627Z",
  "description": "An easy and reliable way to perform fire-and-forget, delayed and recurring, long-running, short-running, CPU or I/O intensive tasks inside ASP.NET applications. No Windows Service / Task Scheduler required. Even ASP.NET is not required.\nBacked by Redis, SQL Server, SQL Azure or MSMQ. This is a .NET alternative to Sidekiq, Resque and Celery.\nhttps://www.hangfire.io/",
  "id": "Hangfire",
  "isPrerelease": false,
  "lastEdited": "2024-02-12T09:39:44.58Z",
  "licenseUrl": "https://raw.github.com/HangfireIO/Hangfire/master/LICENSE.md",
  "listed": true,
  "packageHash": "FbX5n75Mi9XPi8GOBbBMUMgdYb3kORwygkoOEJX4PuXmvUzYv7a0rhHNB2CxCakhf7d7GbsKw2GFyVSdAHbXxg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34112,
  "projectUrl": "https://www.hangfire.io/",
  "published": "2024-02-12T09:37:12.627Z",
  "releaseNotes": "Release notes are available in our blog https://www.hangfire.io/blog/\nPlease see https://docs.hangfire.io/en/latest/upgrade-guides/upgrading-to-hangfire-1.8.html to learn how to upgrade.\n\n1.8.10\n\nHangfire.Core\n\n• Changed – Added Norwegian translations for new keys (by @khellang).\n• Changed – Update Brazilian Portuguese translation (by @HugoAlames).\n• Changed – Bump Cronos dependency to version 0.8.3.\n\nHangfire.AspNetCore\n\n• Fixed – Don't check `HasStarted` in `Response.WriteAsync` to avoid breaking dispatchers.\n\nHangfire.SqlServer\n\n• Changed – Bump Dapper for the `netstandard2.0` platform to version 2.1.28.\n• Changed – Bump Dapper for `net451` and `netstandard1.3` platforms to version 1.60.6.\n\nHangfire.Core, Hangfire.NetCore, Hangfire.AspNetCore, Hangfire.SqlServer, Hangfire.SqlServer.Msmq\n\n• Project – Enable NuGet package and DLL signing with a company certificate.\n• Project – Require NuGet package signature validation on restore for dependencies.\n• Project – Add `HangfireIO` as a package owner.\n\n1.8.9\n\nHangfire.Core\n\n• Changed – Use `Environment.MachineName` as a server name if other environment vars aren't available.\n• Changed – Bump the Cronos package version from 0.7.1 to 0.8.1.\n• Changed – Improve portuguese translations (by @filipe-silva).\n• Fixed – Possible `NullReferenceException` on the Deleted Jobs page (regression from 1.8.7).\n• Project – Enable full source link support with embedded symbols and repository-based sources.\n• Project – Enable repeatable package restore using a lock file.\n• Project – Run unit tests against the `net6.0` platform.\n• Project – Modernise the build system and clean up the build scripts.\n\nHangfire.SqlServer\n\n• Project – Enable full source link support with embedded symbols and repository-based sources.\n• Project – Enable repeatable package restore using a lock file.\n• Project – Run unit tests against the `net6.0` platform.\n\nHangfire.NetCore\n\n• Project – Enable full source link support with embedded symbols and repository-based sources.\n• Project – Enable repeatable package restore using a lock file.\n\nHangfire.AspNetCore\n\n• Fixed – Don't attempt to write response headers when response has already started (by @maliming).\n• Project – Enable full source link support with embedded symbols and repository-based sources.\n• Project – Enable repeatable package restore using a lock file.\n\n1.8.7\n\nHangfire.Core\n\n• Added – Allow using macro expressions like `@hourly` for recurring jobs (by @MuhamedAbdalla).\n• Added – Show storage time in page footer when supported by storage implementation.\n• Added – Show duration and latency columns separately on the Succeeded Jobs page when supported.\n• Added – Show the exception column on the Deleted Jobs page when available and supported by storage.\n• Changed – Reduce package size by stripping unnecessary locales in Moment.js.\n• Changed – Bump Microsoft.Owin package to version 4.2.2.\n• Changed – Log a warning message when a server listens to unsupported queue names (by @MuhamedAbdalla).\n• Changed – Use storage time, if available, to show delay warnings in the Dashboard UI.\n• Fixed – Proper rendering of generic arguments on the Job Details page (by @olivermue).\n• Fixed – Language inconsistency in the Dashboard UI related to date/time description.\n• Fixed – Big stack traces take too long time to be formatted.\n• Fixed – Don't throw `NullReferenceException` from the Scheduled Jobs page when there's a job with missing data.\n• Fixed – Don't throw `NullReferenceException` from the Processing Jobs page when there's a job with missing data.\n• Fixed – CSS for Enqueued and Deleted state cards in dark theme.\n• Fixed – Log errors instead of throwing an exception when a particular table can't be cleaned.\n• Fixed – Avoid logging fatal exceptions when stopping a faulting background process.\n• Fixed – Don't display checkboxes in the Dashboard UI when job details can not be fetched.\n• Fixed – Scrollbars in WebKit-based browsers are now dark in dark mode.\n• Project – Disable tests for `netcoreapp1.0` and `netcoreapp2.1` targets since they aren't supported in AppVeyor.\n• Project – Add a `net6.0` target for unit tests instead of the removed ones.\n• Project – Modernise projects and build environments to use the newest features.\n\nHangfire.SqlServer\n\n• Changed – Avoid throwing an exception when a connection string has duplicate property names.\n• Project – Disable tests for `netcoreapp1.0` and `netcoreapp2.1` targets since they aren't supported in AppVeyor.\n• Project – Add a `net6.0` target for unit tests instead of the removed ones.\n• Project – Modernise projects and build environments to use the newest features.\n\n1.8.6\n\n• Changed – Update jQuery library in Dashboard UI to version 3.7.1.\n• Changed – Mark all types in Hangfire.Annotations with `EditorBrowsableAttribute(Never)`.\n• Changed – Change state card colors for the Awaiting state to match the Scheduled state.\n• Fixed – Exception when deserializing an instance of the `AutomaticRetryAttribute` class from JSON.\n• Fixed – Add serialization-related constructors for all the exception classes.\n• Fixed – Use invariant culture or ordinal comparisons for internal strings.\n• Fixed – Use invariant culture when formatting key names for metrics.\n• Fixed – Use `CurrentCulture` instead of `CurrentUICulture` when displaying time.\n• Project – Enable running static analysis by Coverity Scan weekly.\n• Project – Enable mandatory static analysis by the Microsoft.CodeAnalysis.NetAnalyzers package.\n• Project – Change MSBuild path when building using newer .NET SDKs for Razor views.\n        \nHangfire.SqlServer\n\n• Fixed – Exception in Dashboard UI when schema version is not present in a database.\n• Fixed – `DbCommand` resource leak when releasing a lock detected by static analysis.\n• Fixed – Don't add SQL Server-related metrics multiple times in Dashboard UI.\n\nHangfire.NetCore\n\n• Fixed – Include assembly information to the Hangfire.NetCore assembly.\n\n1.8.5\n\nHangfire.Core\n\n• Added – Possibility to inform a `FaviconPath` on `DashboardOptions` (by @cezar-pimentel).\n• Fixed – Inability to restore a disabled recurring job, regression in version 1.8.3.\n• Fixed – Make it possible to serialize the `AutomaticRetryAttribute` filter to JSON.\n\nHangfire.SqlServer\n\n• Fixed – \"Query processor could not produce a query plan\" when removing expired counters in `Schema 5`.\n\n1.8.4\n\nHangfire.Core\n\n• Added – Pass server id from a worker to the `PerformContext.ServerId` property available in filters.\n• Fixed – Send heartbeats until full background processing server shutdown.\n      \nHangfire.NetCore\n\n• Changed – Send the stop signal earlier in the shutdown pipeline when hosting in .NET Core 3.1 or higher.\n• Changed – Set processing server to null in hosted service to avoid `ObjectDisposedException`.\n• Fixed – Other `IHostedService` implementations can block Hangfire server from being stopped.\n\n1.8.3\n\nHangfire.Core\n\n• Changed – Allow to configure `MaxLinesInStackTrace` for a particular `FailedState` instance.\n• Fixed – Remove job id from schedule when it's not in the Scheduled state for some reason.\n• Fixed – Missing invocations of recurring jobs when the new \"Ignorable\" option is used.\n• Fixed – Make `DisableConcurrentExecutionAttribute` and `LatencyTimeoutAttribute` serializable.\n\n1.8.2\n\nHangfire.Core\n\n• Changed – Disable transactional job creation feature appeared in 1.8.0.\n• Fixed – \"Can not start continuation XXX\" error when storage supports transactional job creation.\n\nHangfire.SqlServer\n\n• Fixed – `InvalidOperationException` with new dashboard metrics when a database has multiple data/log files.\n\n1.8.1\n      \nHangfire.Core\n\n• Added – `MisfireHandlingMode.Ignorable` to avoid scheduling recurring jobs on missed schedules.\n• Added – Support disabling dark mode via the `DashboardOptions.DarkModeEnabled` property.\n• Changed – Remove the 1-hour limitation for the `WithJobExpirationTimeout` configuration method.\n• Fixed – Add missing `UseDefaultCulture` configuration method overloads.\n• Fixed – Add missing `UseDashboardStylesheet` and `UseJobDetailsRenderer` configuration methods.\n• Fixed – Give even more space for identifiers on the Recurring Jobs page.\n• Fixed – `state-card-state-active` color is not very dark (by @coolhome).\n• Fixed – Slightly change chart proportions to fit 4K in Dashboard UI.\n\nHangfire.SqlServer\n\n• Fixed – Blocked workers regression since 1.7.33 when using multiple servers inside a process.\n• Fixed – Target schema version is less than the current schema version error.\n• Fixed – Implement database metrics without the need for additional permissions.\n• Fixed – Use the `forceseek` table hint whenever possible to avoid performance drops.\n      \nHangfire.NetCore\n\n• Fixed – Add `net461` target for Hangfire.NetCore package to avoid missing method exceptions.\n\n1.8.0\n\nHangfire.Core\n\n• Breaking – Dropped the `NET45` platform target in favor of the `NET451` target to support Visual Studio 2022.\n\n• Added – Introduce the `Job.Queue` property, so jobs now can have their own queue specified.\n• Added – Method overloads to create background jobs directly with a custom default queue.\n• Added – Method overloads to create recurring jobs directly with a custom default queue.\n• Added – `IBackgroundJobClient.Create` method overloads with the new `queue` parameter.\n• Added – Allow to filter exception types in `AutomaticRetryAttribute` by using the new `OnlyOn` property.\n• Added – `DeletedState` now has the persisted `Exception` property populated after a failure.\n• Added – `JobContinuationOptions.OnlyOnDeletedState` to create continuations after a failure.\n• Added – `Exception` job parameter is passed to continuation when `UseResultsInContinuations` method is used.\n• Added – `FromExceptionAttribute` to deal with an antecedent exception in a background job continuation.\n• Added – Make it possible to specify multiple `JobContinuationOptions` values for a continuation.\n• Added – `BackgroundJobServerOptions.IsLightweightServer` option to run a server with no storage processes.\n• Added – Ability to use custom formattable resource identifiers for the `DisableConcurrentExecution` filter.\n• Added – Pass `ServerId` to `FailedState` instances to simplify the debugging on different servers.\n• Added – Allow to pass job parameters when creating a job (by @brian-knoll-micronetonline).\n• Added – `MisfireHandlingMode.Strict` to create a job for each missed recurring job occurrence.\n• Added – Support for default culture and UI culture via the `UseDefaultCulture` configuration method.\n• Added – Introduce the `captureDefault` parameter in the `CaptureCulture` filter.\n• Added – `IGlobalConfiguration.UseFilterProvider` extension method to unify the configuration.\n• Added – Built-in `Remove` method for `JobFilterCollection` to remove global filters based on their type.\n• Added – `CompatibilityLevel.Version_180` flag to avoid storing culture parameters when they are the same as the default ones.\n• Changed – Create job atomically when `Transaction.CreateJob` feature is supported by the storage.\n• Changed – Query time from storage in recurring and delayed schedulers when supported by storage.\n• Changed – Move job to the `DeletedState` instead of `SucceededState` when its invocation was canceled by a filter.\n• Changed – Speedup delayed jobs when a custom default queue is specified by avoiding extra state transition.\n• Changed – Use UI culture from `CurrentCulture` parameter when `CurrentUICulture` one is missing.\n• Changed – Increase the default value for the `BackgroundJobServerOptions.StopTimeout` to 500 ms.\n• Deprecated – `AddOrUpdate` overloads with optional params defined in the `RecurringJobManagerExtensions` class.\n• Deprecated – `AddOrUpdate` overloads with optional parameters defined in the `RecurringJob` class.\n• Deprecated – `AddOrUpdate` method overloads with no `recurringJobId` parameter.\n• Deprecated – `RecurringJobOptions.QueueName` property, new methods should be used instead.\n• Breaking – Dropped `NET45` platform target in favor of `NET451` target to support Visual Studio 2022.\n\nDashboard UI\n• Added – Dark mode support for Dashboard UI depending on the system settings (by @danillewin).\n• Added – Dashboard UI now has a full-width layout to display more data (by @danillewin).\n• Added – Allow to add custom JavaScript and CSS files to the Dashboard UI via the `DashboardRoutes` class.\n• Added – `DefaultRecordsPerPage` property on the `DashboardOptions` class (by @PaulARoy).\n• Added – `IGlobalConfiguration.UseJobDetailsRenderer` method for custom renderers for the Job Details page.\n• Added – Display deleted jobs in the Realtime and History graphs when supported by storage.\n• Added – `IGlobalConfiguration.UseDashboardMetrics` extension method to pass multiple metrics at once.\n• Added – State renderer for the `DeletedState` to display its new exception property.\n• Added – Support for new `MonitoringApi` methods for the Awaiting Jobs page.\n• Changed – Make it possible to display methods of non-loaded jobs in the Dashboard UI when supported by storage.\n• Changed – Improved display of realtime chart with more accents on failed and deleted jobs.\n• Changed – Don't display the queue name in the state transition list when it's the `default` one.\n• Changed – Display scheduled job count when the enqueued count is zero on the main metric.\n\nExtensibility\n• Added – `Factory`, `StateMachine`, and `Performer` properties to context classes to avoid injecting services.\n• Added – Allow to pass custom data to `ApplyStateContext` and `ElectStateContext` instances.\n• Added – Preserve custom data dictionary between the entire filter chain.\n• Added – Allow to pass a transaction to background job state changer when new methods are implemented.\n• Changed – Ignore some members when serializing a `JobFilterAttribute` instance to decrease the payload size.\n\nStorage\n• Added – Virtual `JobStorage.GetReadOnlyConnection` method intended to return `JobStorageConnection` for replicas.\n• Added – Virtual `JobStorage.HasFeature` method for querying optional features.\n• Added – The `JobStorageFeatures` class to avoid using magic strings in storage features.\n• Added – Optional `GetSetCount`, `GetSetContains`, and `GetUtcDateTime` methods for the `JobStorageConnection` class.\n• Added – Optional `AcquireDistributedLock` and `RemoveFromQueue` methods for the `JobStorageTransaction` class.\n• Added – Optional `CreateJob` and `SetJobParameter` methods for the `JobStorageTransaction` class.\n• Added – Optional `ParametersSnapshot` property for `BackgroundJob` and `JobData` classes to minimize roundtrips in the future.\n• Added – Support for transactional acknowledgment using a new storage method for better handling some data loss scenarios.\n• Added – Fetch `Retries` and `Awaiting` metrics in `StatisticsDto` properties when supported by storage.\n• Added – The `JobStorageMonitor` class with more available methods for the new features.\n• Changed – Allow to query job parameters without additional roundtrip when supported by storage.\n• Changed – Expose state data dictionaries in list DTOs when supported by storage.\n• Changed – Rely on storage indexing with the `Monitoring.AwaitingJobs` feature.\n\nInternals\n• Added – `IBackgroundProcess.UseBackgroundPool` now allows to pass thread configuration logic.\n• Added – `BackgroundJobServerOptions.WorkerThreadConfigurationAction` option for custom thread configuration.\n• Changed – Allow changing queues on the fly with custom worker configuration.\n• Changed – Avoid storage roundtrip to query job data in worker, take data from previous state change.\n• Changed – `FromParameterAttribute`-based logic now always overwrites arguments, even with non-null values.\n• Changed – Turn the `JobContinuationOptions` enum into flags while still possible.\n• Changed – Re-implement `TaskExtensions.WaitOneAsync` only with the `RegisterWaitForSingleObject` method.\n• Changed – `ServerHeartbeatProcess` now uses `ThreadPriority.AboveNormal` to prioritize heartbeats.\n\nHangfire.NetCore\n\n• Added – `IApplicationBuilder.UseHangfireServer` that accepts custom factory for `IBackgroundProcessingServer`.\n• Added – `net451` and `netstandard1.3` targets for the package.\n• Changed – Use `netstandard2.1` target instead of `netcoreapp3.0` for the package.\n• Changed – Send the \"stop\" signal earlier when the host supports .NET Standard 2.1.\n• Changed – Don't throw `ObjectDisposedException` when hosted service is disposed twice.\n\nHangfire.AspNetCore\n\n• Breaking – Make the package to be dependent on Hangfire.NetCore and use the same types.\n• Added – `IApplicationBuilder.UseHangfireServer` that accepts custom factory for `IBackgroundProcessingServer`.\n \nHangfire.SqlServer\n\n• Breaking – Prioritise Microsoft.Data.SqlClient package over System.Data.SqlClient one.\n• Breaking – Dropped the `NET45` platform target in favor of the `NET451` target to support Visual Studio 2022.\n\n• Added – `Schema 8` migration with fixed `JobQueue.Id` column to use the `bigint` type.\n• Added – `Schema 9` migration that creates an index for the `State.CreatedAt` column.\n• Added – Automatic client package detection based on available types, preferring `System.Data.SqlClient` (by @0xced).\n• Added – `SqlServerStorageOptions.DbProviderFactory` option to use a custom provider factory.\n• Added – Clean up of old state entries of a non-finished job when `InactiveStateExpirationTimeout` is set.\n• Added – `TryAutoDetectSchemaDependentOptions` option to automatically enable options based on the schema.\n• Added – Optional experimental transactional acknowledge for SQL Server (`UseTransactionalAcknowledge` option).\n• Added – Implement the `Connection.GetUtcDateTime` feature to make work the new changes in schedulers.\n• Added – `SqlServerStorage.SchemaVersion` metric for Dashboard UI.\n• Added – `DefaultQueueProvider` option to specify a custom default queue provider.\n• Changed – Remove dependency on System.Data.SqlClient for Hangfire.SqlServer (by @0xced).\n• Changed – Set default value for the `QueuePollInterval` option to `TimeSpan.Zero`.\n• Changed – Polling delay when `QueuePollInterval` is set to zero now defaults to 200 ms.\n• Changed – Sliding invisibility timeout-based fetching method is now used by default with a 5-minute timeout.\n• Changed – Use command batching by default with a 5-minute maximum timeout.\n• Changed – Enable the `UseRecommendedIsolationLevel` option by default.\n• Changed – `GetJobData` now populates the `JobData.ParametersSnapshot` property to avoid additional roundtrips.\n• Changed – Display scheduled and processing jobs in ascending order in Dashboard UI.\n• Changed – Implement the `Transaction.AcquireDistributedLock` feature.\n• Changed – Implement the `GetSetCount.Limited feature`.\n• Changed – Implement the `GetSetContains feature`.\n• Changed – Bump the internal version of Dapper to 2.0.123.\n• Changed – Enable common metrics for SQL Server storage to be shown by default.\n• Changed – Enable the `Monitoring.AwaitingJobs` feature for SQL storage.\n• Deprecated – `UsePageLocksOnDequeue` option is now obsolete and doesn't affect anything.\n\nHangfire.SqlServer.Msmq\n\n• Breaking – Dropped the `NET45` platform target in favor of the `NET451` target to support Visual Studio 2022.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "summary": "An easy way to perform fire-and-forget, delayed and recurring tasks inside ASP.NET applications. No Windows Service required.",
  "title": "Hangfire",
  "verbatimVersion": "1.8.10",
  "version": "1.8.10",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netframework4.5.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netframework4.5.1/hangfire.core",
          "@type": "PackageDependency",
          "id": "Hangfire.Core",
          "range": "[1.8.10, 1.8.10]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netframework4.5.1/hangfire.sqlserver",
          "@type": "PackageDependency",
          "id": "Hangfire.SqlServer",
          "range": "[1.8.10, 1.8.10]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netframework4.5.1/microsoft.owin.host.systemweb",
          "@type": "PackageDependency",
          "id": "Microsoft.Owin.Host.SystemWeb",
          "range": "[3.0.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.5.1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard1.3",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard1.3/hangfire.core",
          "@type": "PackageDependency",
          "id": "Hangfire.Core",
          "range": "[1.8.10, 1.8.10]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard1.3/hangfire.sqlserver",
          "@type": "PackageDependency",
          "id": "Hangfire.SqlServer",
          "range": "[1.8.10, 1.8.10]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard1.3/hangfire.aspnetcore",
          "@type": "PackageDependency",
          "id": "Hangfire.AspNetCore",
          "range": "[1.8.10, 1.8.10]"
        }
      ],
      "targetFramework": ".NETStandard1.3"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard2.0/hangfire.core",
          "@type": "PackageDependency",
          "id": "Hangfire.Core",
          "range": "[1.8.10, 1.8.10]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard2.0/hangfire.sqlserver",
          "@type": "PackageDependency",
          "id": "Hangfire.SqlServer",
          "range": "[1.8.10, 1.8.10]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#dependencygroup/.netstandard2.0/hangfire.aspnetcore",
          "@type": "PackageDependency",
          "id": "Hangfire.AspNetCore",
          "range": "[1.8.10, 1.8.10]"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#Hangfire.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 7073,
      "fullName": "Hangfire.nuspec",
      "length": 22610,
      "name": "Hangfire.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 682,
      "fullName": "readme.txt",
      "length": 1846,
      "name": "readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.12.09.40.00/hangfire.1.8.10.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 24429,
      "fullName": ".signature.p7s",
      "length": 24429,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Hangfire",
    "AspNet",
    "MVC",
    "AspNetCore",
    "SqlServer",
    "Long-Running",
    "Background",
    "Fire-And-Forget",
    "Delayed",
    "Recurring",
    "Tasks",
    "Jobs",
    "Scheduler",
    "Threading",
    "Queues"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}