{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "CatLib",
  "catalog:commitId": "76e42743-32e1-4fe7-b63d-9363014e0a34",
  "catalog:commitTimeStamp": "2018-01-20T09:11:56.1526968Z",
  "copyright": "CatLib",
  "created": "2018-01-20T09:08:04.503Z",
  "description": "- CatLib是渐进式的框架，可以无缝和现有框架融合。无论您的项目处于哪个阶段您都可以轻易的接入CatLib。\n- CatLib提供的依赖注入方案，可以极大程度的帮助项目解耦。\n- CatLib提供了大量可靠，可持续的公共组件，帮助企业降低开发成本。\n- 基于MIT协议，企业可以通过CatLib的组件化方案建立私有的公共组件库，积攒公共组件。\n- 轻量级的框架，所有的组件都是可以被移除的，您可以只选择适合您的组件。\n- 中文文档完善，极低的学习成本。\n- 面向接口编程，底层组件无感知替换。",
  "iconUrl": "http://catlib.io/images/logo.png",
  "id": "CatLib.Core",
  "isPrerelease": false,
  "language": "zh-CN",
  "lastEdited": "2018-01-20T09:11:08.34Z",
  "licenseUrl": "https://github.com/CatLib/Core/blob/master/LICENSE",
  "listed": true,
  "packageHash": "ByNqj+oWgPAEk8LoMKn+KzDoCEkdAraFiQGEJYkTtsxjM2FD85C9T/RUsuEPS2BaFiYrQtrrz61j330ii7bZfQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 138457,
  "projectUrl": "https://github.com/CatLib/Core",
  "published": "2018-01-20T09:08:04.503Z",
  "releaseNotes": "### 新增内容\n- App类可以被继承。\n- 容器可以为实现 `IDisposable` 接口的对象，在 `Release` 时会自动触发接口。\n- 容器增加可变类型接口(`IVariant`)，允许将一个基础类型转为复杂类型。\n- 容器增加`Params`数据结构，允许容器进行参数名参数匹配。\n- 容器增加 `BindMethod` 方法允许向容器注册一个方法。\n- 容器增加 `OnRebound` 和 `Watch` 函数，该函数用于监听当已经解决的服务发生重定义时触发的事件，这个事件对实例绑定的服务也会有效。\n- Str辅助函数库增加了Method方法可以获取字符串中符合规则的函数名。\n- Arr增加了Flash函数，该函数可以处理只在片段时间内产生作用的内容。\n- 增加了字典辅助函数库（Dict）\n-- Filter函数可以过滤返回值为false的键值对\n-- Remove函数可以移除比较回掉返回为true的元素\n-- Modify函数可以直接修改键值对的值\n-- AddRange允许批量添加到字典\n-- Map函数将回调的返回值作为新的字典\n-- Keys函数可以获取字典的键名数组\n-- Values函数可以获取字典的值数组\n-- Get函数可以通过点状表达式访问深度字典\n-- Set函数可以通过点状表达式写入深度字典\n-- Remove函数可以通过点状表达式删除深度字典元素\n- Arr 增加了 `RemoveAt` 函数，可以通过数组下标移除元素，并且返回被移除的元素值。\n- `Container.Call` 支持直接为lambda表达式提供依赖注入。\n\n### 更新内容\n- 容器获得了更好的绑定(`Bind`)校验并及时的抛出异常。\n- Facade(门面)机制优化， 拥有了更好的访问性能。\n- 容器中`string`被认为是不可以被实例的对象。\n- 全局事件系统关联服务容器，这意味着所有的函数绑定事件不会再限制参数了，容器会选择最合适的参数自动注入。\n- 全局事件移除生命周期支持，因为全局事件的监听不应该频繁发生变化，生命周期功能会诱导开发者进行不正确的操作\n- 优化了注入算法，能够尽可能的推导出注入实例。\n- `OnResolving` 和 `OnRelease` 所加入的新的修饰器不会再处理已经生成的实例。实例的变化应该使用`Watch`来监控\n- 容器注入的策略被调整为必然注入成功（不为null）（以前是可以为null）（如果希望提供默认值必须显示的申明）否则将抛出一个不能解决的异常\n- 容器在无法解决注入时可以根据 `@变量名` 来推测类型了。\n- `BindIf` API 不再返回已绑定的api，而是返回bool来表示是否成功绑定，`IBindData` 将以out参数的形式返回。\n- 全局修饰器的策略调整为即时状态不会再为已经生成的对象进行修饰。因为旧的设计这会导致表达语意不明。\n- 对于基础类型的注入变得更加严格，不能在直接注入基础类型的默认值了例如：int的默认值为0，因为我们认为这可能会导致一些不被发现的错误。\n- 对容器进行了重构，使容器具备更加好的可拓展性及性能，同时也开放了大量可以直接更改容器行为的虚函数，这对于其他框架开发者或者高级定制的开发者可以更加轻松的修改容器行为。\n- 用户参数注入的检查由绝对顺序调整为相对顺序，这意味着参数顺序的要求将会更加松散。\n\n### Bug修复\n- 修复了一个bug这个bug导致在调用Instance时如果存在修饰器修改对象的情况，那么不能返回已经被修改的对象。\n- 修复了 `App.Trigger` 返回值不正确的bug。\n\n### 移除内容\n- 移除了LRUCache，理由是由于性能不过关。\n- 移除了Inject注入标记的Required选项，因为我们认为Required的存在使开发者不再注重对传入值的校验，这对于非catlib下使用组件是存在安全风险的。",
  "requireLicenseAcceptance": false,
  "summary": "CatLib 渐进式组件框架\nCatLib Component-Based Framework (Minimum available framework)",
  "title": "CatLib Core",
  "verbatimVersion": "1.2.0",
  "version": "1.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#dependencygroup/.netframework3.5",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework3.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#CatLib.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2875,
      "fullName": "CatLib.Core.nuspec",
      "length": 5642,
      "name": "CatLib.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#lib/net35/CatLib.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 39654,
      "fullName": "lib/net35/CatLib.Core.dll",
      "length": 91648,
      "name": "CatLib.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#lib/net35/CatLib.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 25901,
      "fullName": "lib/net35/CatLib.Core.xml",
      "length": 271879,
      "name": "CatLib.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#lib/netstandard2.0/CatLib.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 40695,
      "fullName": "lib/netstandard2.0/CatLib.Core.dll",
      "length": 93696,
      "name": "CatLib.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.20.09.11.56/catlib.core.1.2.0.json#lib/netstandard2.0/CatLib.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 25771,
      "fullName": "lib/netstandard2.0/CatLib.Core.xml",
      "length": 271879,
      "name": "CatLib.Core.xml"
    }
  ],
  "tags": [
    "CatLib",
    "Framework"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}