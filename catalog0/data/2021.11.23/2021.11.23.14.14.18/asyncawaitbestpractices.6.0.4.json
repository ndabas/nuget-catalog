{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brandon Minnick, John Thiriet",
  "catalog:commitId": "56670efd-c9b3-4dda-9c88-df25d6647b67",
  "catalog:commitTimeStamp": "2021-11-23T14:14:18.8940713Z",
  "copyright": "Â©Copyright 2021 Brandon Minnick. All rights reserved.",
  "created": "2021-11-23T14:11:16.033Z",
  "description": "Extensions for System.Threading.Tasks\n\n            Includes extension methods to safely fire-and-forget a Task and/or a ValueTask\n            Includes WeakEventManger which avoids memory leaks when events are not unsubscribed",
  "id": "AsyncAwaitBestPractices",
  "isPrerelease": false,
  "lastEdited": "2021-11-23T14:13:47.12Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "SQyiLLHSJ3DOZQ/8323oEzWy7GZOOKHbBIavL3FP0GhJC76sQDRqG+C9mkDXg1WYBiHDyptIVuTxB8ikplK0vQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 43609,
  "projectUrl": "https://github.com/brminnick/AsyncAwaitBestPractices",
  "published": "2021-11-23T14:11:16.033Z",
  "readmeFile": "README.md",
  "releaseNotes": "New In This Release:\n- Mark internal classes as abstract\n- Update AssemblyFileVersion\n- Add NuGet README\n- Improve Nullablitiy",
  "repository": "",
  "title": "Extensions for System.Threading.Tasks",
  "verbatimVersion": "6.0.4",
  "version": "6.0.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard1.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard1.0/system.reflection.emit.lightweight",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit.Lightweight",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard1.0/system.threading.tasks.extensions",
          "@type": "PackageDependency",
          "id": "System.Threading.Tasks.Extensions",
          "range": "[4.5.4, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard1.0/system.valuetuple",
          "@type": "PackageDependency",
          "id": "System.ValueTuple",
          "range": "[4.5.0, )"
        }
      ],
      "targetFramework": ".NETStandard1.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard2.0/system.reflection.emit.lightweight",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit.Lightweight",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard2.0/system.threading.tasks.extensions",
          "@type": "PackageDependency",
          "id": "System.Threading.Tasks.Extensions",
          "range": "[4.5.4, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#AsyncAwaitBestPractices.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 835,
      "fullName": "AsyncAwaitBestPractices.nuspec",
      "length": 2008,
      "name": "AsyncAwaitBestPractices.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#lib/netstandard1.0/AsyncAwaitBestPractices.dll",
      "@type": "PackageEntry",
      "compressedLength": 7965,
      "fullName": "lib/netstandard1.0/AsyncAwaitBestPractices.dll",
      "length": 18944,
      "name": "AsyncAwaitBestPractices.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#lib/netstandard1.0/AsyncAwaitBestPractices.xml",
      "@type": "PackageEntry",
      "compressedLength": 1572,
      "fullName": "lib/netstandard1.0/AsyncAwaitBestPractices.xml",
      "length": 19617,
      "name": "AsyncAwaitBestPractices.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#lib/netstandard2.0/AsyncAwaitBestPractices.dll",
      "@type": "PackageEntry",
      "compressedLength": 7868,
      "fullName": "lib/netstandard2.0/AsyncAwaitBestPractices.dll",
      "length": 18432,
      "name": "AsyncAwaitBestPractices.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#lib/netstandard2.0/AsyncAwaitBestPractices.xml",
      "@type": "PackageEntry",
      "compressedLength": 1572,
      "fullName": "lib/netstandard2.0/AsyncAwaitBestPractices.xml",
      "length": 19617,
      "name": "AsyncAwaitBestPractices.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#lib/netstandard2.1/AsyncAwaitBestPractices.dll",
      "@type": "PackageEntry",
      "compressedLength": 7893,
      "fullName": "lib/netstandard2.1/AsyncAwaitBestPractices.dll",
      "length": 18432,
      "name": "AsyncAwaitBestPractices.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#lib/netstandard2.1/AsyncAwaitBestPractices.xml",
      "@type": "PackageEntry",
      "compressedLength": 1572,
      "fullName": "lib/netstandard2.1/AsyncAwaitBestPractices.xml",
      "length": 19617,
      "name": "AsyncAwaitBestPractices.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 2004,
      "fullName": "README.md",
      "length": 7947,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.23.14.14.18/asyncawaitbestpractices.6.0.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "task",
    "fire",
    "and",
    "forget",
    "threading",
    "extensions",
    "system.threading.tasks",
    "async",
    "await"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}