{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.22.15.54.19/ether.outcomes.2.2.0-alpha.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brian MacKay,Kinetiq",
  "catalog:commitId": "3bad6422-9366-4daa-a81a-d7629957e0b1",
  "catalog:commitTimeStamp": "2015-06-22T15:54:19.3543349Z",
  "copyright": "2015",
  "created": "2015-06-22T15:53:38.607Z",
  "description": "Outcome.NET uses generics and a fluent interface to add metadata to your return value. It's a very expressive, clean  result wrapper.\n\nOutcome really shines when you're orchestrating complex logic, because the fluent interface makes it easy to roll up messages from multiple methods, and even from unusual sources like exceptions. The resulting code is very clean, and is great way to implement the Notification pattern.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.22.15.54.19/ether.outcomes.2.2.0-alpha.json#frameworkassemblygroup",
    "assembly": "System"
  },
  "id": "Ether.Outcomes",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://choosealicense.com/licenses/mit/",
  "minClientVersion": "2.8.1",
  "packageHash": "55S8ODpIALw9xL5Lh8y96ur7La3vMLZI9Nxe5cNfQphy3wUmh9IcTykE907rGDVMCLrXo+KtEC7UHEx3R5wlLw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11549,
  "projectUrl": "http://www.getkinetiq.com/outcome",
  "published": "2015-06-22T15:53:38.607Z",
  "releaseNotes": "Continued to refine the API based on real-world usage.\n - <experimental> Added IOutcome.Failure as an alternate and perhaps more expressive way to say If(!outcome.Success)\n - Removed a few method signatures that just seem to generate ugly code. There are better ways.\n - Added the ability for a failure to have a value. Turns out it happens sometimes.\n - Added some methods for rolling up outcomes that only appeared on failures previously. Sometimes you need them for successes too.",
  "requireLicenseAcceptance": false,
  "summary": "Never write a result wrapper again! Outcome.NET is a simple, powerful helper for methods that need to return a value, but sometimes also need to provide metadata such as error messages.",
  "title": "Outcome.NET",
  "version": "2.2.0-alpha",
  "tags": [
    "c#",
    "vb.net",
    ".net",
    "notification",
    "fluent",
    "response",
    "failure",
    "success"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}