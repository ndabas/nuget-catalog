{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Petabridge",
  "catalog:commitId": "d6f3e26a-f8d2-4713-a781-7d5ecb09496e",
  "catalog:commitTimeStamp": "2023-01-05T17:48:15.8981146Z",
  "copyright": "Copyright © 2015-2023 Petabridge®",
  "created": "2023-01-05T17:46:09.567Z",
  "description": "Package Description",
  "iconUrl": "https://petabridge.com/images/logo.png",
  "id": "Akka.HealthCheck.Hosting.Example.Client",
  "isPrerelease": true,
  "lastEdited": "2023-01-05T17:48:13.49Z",
  "licenseExpression": "Apache-2.0",
  "licenseUrl": "https://licenses.nuget.org/Apache-2.0",
  "listed": true,
  "packageHash": "a4Iazce0MTJlu4YY8qysoQtXowlaDAN4p1tIAaZz4jikRn03LyjhkOq3C7twgITaBGno/Nay2iuPhwVgbiw1Qw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 39996,
  "projectUrl": "https://github.com/petabridge/akkadotnet-healthcheck",
  "published": "2023-01-05T17:46:09.567Z",
  "releaseNotes": "This release is a beta release of the new `Akka.Hosting` API and the ASP.NET integration API. We would love to hear your input on these new APIs.\n[Bumped Akka version to 1.4.47](https://github.com/akkadotnet/akka.net/releases/tag/1.4.47)\n[Add multi probe provider support](https://github.com/petabridge/akkadotnet-healthcheck/pull/151)\n[Add `Akka.Hosting` support and ASP.NET IHealthCheck integration](https://github.com/petabridge/akkadotnet-healthcheck/pull/148)\n[Expanded persistence health check reporting](https://github.com/petabridge/akkadotnet-healthcheck/pull/154)\n[Bump Akka.Hosting from 0.5.1 to 1.0.0](https://github.com/petabridge/akkadotnet-healthcheck/pull/163)\n[Improve ASP.NET health check route configuration callback](https://github.com/petabridge/akkadotnet-healthcheck/pull/165)\n[Fix probe status reporting to account for all provider statuses](https://github.com/petabridge/akkadotnet-healthcheck/pull/171)\n[Add documentation](https://github.com/petabridge/akkadotnet-healthcheck/pull/173)\nNotable Changes From Previous Versions**\n> **NOTE**\n>\n> All these information can be read in the documentation [here](https://github.com/petabridge/akkadotnet-healthcheck/blob/dev/README.md)\n1. Improved Persistence Status Report**\nPersistence health check now returns a `PersistenceLivenessStatus` with a more comprehensive status report that also includes whether snapshots and journal events were successfully persisted, and any exceptions thrown during the probe execution.\n2. Multi-provider Support**\nBoth liveness and readiness endpoint can now host multiple health check probe providers. Note that both liveness and readiness endpoint will return unhealthy if any of these hosted probes reported that they are unhealthy.\nThe HOCON configuration for `Akka.HealthCheck` has been changed to accomodate this. Instead of settings a single provider, you can now pass in multiple providers at once:\n```hocon\nakka.healthcheck {\nliveness {\nproviders {\ndefault = \"Akka.HealthCheck.Liveness.DefaultLivenessProvider, Akka.HealthCheck\"\ncluster = \"Akka.HealthCheck.Cluster.ClusterLivenessProbeProvider, Akka.HealthCheck.Cluster\"\n}\n}\nreadiness {\nproviders {\ndefault = \"Akka.HealthCheck.Readiness.DefaultReadinessProvider, Akka.HealthCheck\"\ncustom = \"MyAssembly.CustomReadinessProvider, MyAssembly\"\n}\n}\n```\n3. `Akka.Hosting` integration**\nTo configure multi providers via `Akka.Hosting`, you can install the new `Akka.HealthCheck.Hosting` NuGet package and use the convenience method `AddProviders()` and provide the combination of providers you would like to run like so:\n```csharp\n// Add Akka.HealthCheck\nbuilder.WithHealthCheck(options =>\n{\n// Here we're adding all of the built-in providers\noptions.AddProviders(HealthCheckType.All);\n});\n```\n`HealthCheckType` is a bit flag enum that consists of these choices:\n```csharp\n[Flags]\npublic enum HealthCheckType\n{\nDefaultLiveness = 1,\nDefaultReadiness = 2,\nDefault = DefaultLiveness | DefaultReadiness,\nClusterLiveness = 4,\nClusterReadiness = 8,\nCluster = ClusterLiveness | ClusterReadiness,\nPersistenceLiveness = 16,\nPersistence = PersistenceLiveness,\nAll = Default | Cluster | Persistence\n}\n```\nDepending on your code style, You can also use the more verbose methods to add providers:\n```csharp\n// Add Akka.HealthCheck\nbuilder.WithHealthCheck(options =>\n{\n// Here we're adding all of the built-in providers one provider at a time\noptions\n.ClearAllProviders()\n.AddDefaultReadinessProvider()\n.AddClusterReadinessProvider()\n.AddDefaultLivenessProvider()\n.AddClusterLivenessProvider()\n.AddPersistenceLivenessProvider();\n});\n```\nCustom `IProbeProvider` can be added using these methods:\n```csharp\n// Add Akka.HealthCheck\nbuilder.WithHealthCheck(options =>\n{\n// Adding custom user IProbeProvider providers\noptions\n.AddReadinessProvider<MyReadinessProvider>(\"custom-readiness\")\n.AddLivenessProvider<MyLivenessProvider>(\"custom-liveness\");\n});\n```\n4. ASP.NET `IHealthCheck` Integration**\n`Akka.HealthCheck` can be integrated directly by installing the `Akka.HealthCheck.Hosting.Web` NuGet package. You can read the documentation [here](https://github.com/petabridge/akkadotnet-healthcheck/blob/dev/README.md#aspnet-integration)",
  "repository": "",
  "verbatimVersion": "1.0.0-beta1",
  "version": "1.0.0-beta1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json#dependencygroup/net6.0/microsoft.extensions.hosting",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Hosting",
          "range": "[7.0.0, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json#Akka.HealthCheck.Hosting.Example.Client.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1934,
      "fullName": "Akka.HealthCheck.Hosting.Example.Client.nuspec",
      "length": 5327,
      "name": "Akka.HealthCheck.Hosting.Example.Client.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json#lib/net6.0/Akka.HealthCheck.Hosting.Example.Client.dll",
      "@type": "PackageEntry",
      "compressedLength": 13096,
      "fullName": "lib/net6.0/Akka.HealthCheck.Hosting.Example.Client.dll",
      "length": 22640,
      "name": "Akka.HealthCheck.Hosting.Example.Client.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json#lib/net6.0/Akka.HealthCheck.Hosting.Example.Client.runtimeconfig.json",
      "@type": "PackageEntry",
      "compressedLength": 168,
      "fullName": "lib/net6.0/Akka.HealthCheck.Hosting.Example.Client.runtimeconfig.json",
      "length": 253,
      "name": "Akka.HealthCheck.Hosting.Example.Client.runtimeconfig.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.01.05.17.48.15/akka.healthcheck.hosting.example.client.1.0.0-beta1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 22765,
      "fullName": ".signature.p7s",
      "length": 22765,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}