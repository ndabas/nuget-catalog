{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.23.14.58.29/stringenum.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gerardo Grignoli",
  "catalog:commitId": "5e0a9d1e-2487-4ca0-9e30-999d9c0a8ab9",
  "catalog:commitTimeStamp": "2019-10-23T14:58:29.1138878Z",
  "copyright": "2019 Gerardo Grignoli",
  "created": "2019-10-23T14:54:17.533Z",
  "description": "StringEnum is a base class for creating string-valued enums in .NET.\n\nFeatures\n- Your StringEnum interface looks similar to a regular enum\n- Provides static Parse() and TryParse() methods and implicit cast to string.\n- Intellisense will suggest the enum name if the class is annotated with the xml comment `<completitionlist>`. (Works in both C# and VB)\n\nUsage:\n\n///<completionlist cref=\"HexColor\"/> \nclass HexColor : StringEnum<HexColor>\n{\n    public static readonly HexColor Blue = Create(\"#FF0000\");\n    public static readonly HexColor Green = Create(\"#00FF00\");\n    public static readonly HexColor Red = Create(\"#000FF\");\n}\n\n// Static Parse Method\nHexColor.Parse(\"#FF0000\") // => HexColor.Red\nHexColor.Parse(\"#ff0000\", caseSensitive: false) // => HexColor.Red\nHexColor.Parse(\"invalid\") // => throws InvalidOperationException\n\n// Static TryParse method.\nHexColor.TryParse(\"#FF0000\") // => HexColor.Red\nHexColor.TryParse(\"#ff0000\", caseSensitive: false) // => HexColor.Red\nHexColor.TryParse(\"invalid\") // => null\n\n// Conversion from your `StringEnum` to `string`\nstring myString1 = HexColor.Red.ToString(); // => \"#FF0000\"\nstring myString2 = HexColor.Red; // => \"#FF0000\" (implicit cast)",
  "id": "StringEnum",
  "isPrerelease": false,
  "lastEdited": "2019-10-23T14:58:28.277Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": false,
  "packageHash": "KRgBURzGRcpYuBI2qVGP+HRKs1Ser/KQvoSJ/raW5uskqp/qx8j0LlmbxvjcfKEqy9+MeQaJdqPW1RB+7AVoHg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16737,
  "projectUrl": "https://github.com/gerardog/StringEnum",
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "0.1.0",
  "version": "0.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.23.14.58.29/stringenum.0.1.0.json#dependencygroup/.netstandard1.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.23.14.58.29/stringenum.0.1.0.json#dependencygroup/.netstandard1.0/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        }
      ],
      "targetFramework": ".NETStandard1.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.23.14.58.29/stringenum.0.1.0.json#StringEnum.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 951,
      "fullName": "StringEnum.nuspec",
      "length": 2209,
      "name": "StringEnum.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.23.14.58.29/stringenum.0.1.0.json#lib/netstandard1.0/StringEnum.dll",
      "@type": "PackageEntry",
      "compressedLength": 4115,
      "fullName": "lib/netstandard1.0/StringEnum.dll",
      "length": 10240,
      "name": "StringEnum.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.23.14.58.29/stringenum.0.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9471,
      "fullName": ".signature.p7s",
      "length": 9471,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "string",
    "valued",
    "enum",
    "enumstring",
    "stringenum"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}