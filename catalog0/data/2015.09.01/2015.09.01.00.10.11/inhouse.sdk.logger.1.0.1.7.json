{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.01.00.10.11/inhouse.sdk.logger.1.0.1.7.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Yoav Rios",
  "catalog:commitId": "85fe4b32-08e5-4449-953e-e585cab61eb2",
  "catalog:commitTimeStamp": "2015-09-01T00:10:11.1005241Z",
  "copyright": "Copyright Â©  2014",
  "created": "2015-09-01T00:09:30.493Z",
  "description": "Logger SDK",
  "id": "Inhouse.Sdk.Logger",
  "isPrerelease": false,
  "language": "es-MX",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "0DnSwkfaOas1HjchGqqWGR7CVRdGAGFBDKrZGmQuCUmSZZoXiX0xQJV/ZTc+hyBxNQJIrbmYm4zlONLLEfjIPg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 13828,
  "published": "2015-09-01T00:09:30.493Z",
  "releaseNotes": "Inhouse.Sdk.Logger\n\nLogger to .Net Apps\n\nThis logger can log on Console, TextFiles, Documents(csv,tsv), Splunk via TCP\nlogger is singelton, you dont need create a instance only need wrtie\n \n <code> LogProviderManager.Logger.Log(LogType.info, \"Log FA!\") </code>\n \nParameters:\n  name = <string> name for reference the log.\n\n  type = Type Provider for the log \n    * Inhouse.Sdk.Logger.Providers.ConsoleLogProvider, Inhouse.Sdk.Logger <- Console\n    * Inhouse.Sdk.Logger.Providers.TextLogProvider, Inhouse.Sdk.Logger  <- Text\n  active = enable or disable\n    * true\n    * false\n  levelLog = filter for the log.\n    * debug\n    * info\n    * warning\n    * error\n    * fatal\n    * userdata\n    * appdata\n    * systemdata\n    * none\n  Tip: 1.- When you select the level the logger write the including level and the next forwards\n    2.- if you put \"*\" before the level the logger only write log for this level with out forwards\n    3.- You can arrange the level that you can write if only want debug to error you can put debug|error and the logger only write the\n     log event debug,info,warning and error.\n  \n  pattern = the pattern to write the event the keys are\n    * %TimeStamp \n    * %UtcTimeStamp \n    * %Application \n    * %HostName \n    * %Ip \n    * %ThreadId\n    * %ThreadName \n    * %ClassName \n    * %FunctionName \n    * %Level \n    * %Item \n    * %Message \n  \n  fileRolling = file=<nameFile.ext>;maxsize=<size with unit kb,mb,gb>;directory=<path of directory>\n       file rolling rename the log automatic.\n\n     Note: in automatic form the log make rotation for past one day.\n\nParameter used for providers:\n \n  Console\n   * type\n   * active\n   * levelLog\n   * pattern\n  Text\n   * type\n   * active\n   * levelLog\n   * pattern\n   * fileRolling\n\nUse:\n0) Add Library by NuGet\n1) Create App.config\n2) Configure Logs on app.config:\n  \n  <configSections>\n    <section name=\"LogProviders\" type=\"Inhouse.Sdk.Logger.LogProviderConfiguration, Inhouse.Sdk.Logger\" />\n  </configSections>\n\n  <LogProviders>\n    <providers>\n      <add name=\"Console\" \n           type=\"Inhouse.Sdk.Logger.Providers.ConsoleLogProvider, Inhouse.Sdk.Logger\" \n           active=\"true\" \n           levelLog=\"debug\" \n           pattern=\"%HostName %Ip %ClassName %FunctionName %Message\" />\n      <add name=\"text\" \n     type=\"Inhouse.Sdk.Logger.Providers.TextLogProvider, Inhouse.Sdk.Logger\" \n           active=\"false\" \n           levelLog=\"debug\" \n           pattern=\"%TimeStamp %UtcTimeStamp %Application %HostName %Ip [%ThreadId] %ThreadName %ClassName %FunctionName %Level %Item %Message\" \n           fileRolling=\"file=test.log;maxsize=0;directory=C:\\temp\" />\n    </providers>\n  </LogProviders>\n\n  Write Log in functions sample c#:\n   \n   static void FA()\n   {\n  LogProviderManager.Logger.Log(LogType.info, \"Log FA!\");\n   }\n\n\n   Change Log\n   *****************************\n   V 1.0.1.7\n   - add debug provider\n   - fix rotation file\n   - fixed bug on diagnostic event\n\n   *****************************\n   V 1.0.1.6\n   - Remove splunk provider and document provider\n   - write internal file to errors in the base of assembly directory.\n\n   *****************************\n   V 1.0.1.5\n   - Delete the even log write for security errors.\n\n   *****************************\n   V 1.0.1.4\n\n\n   *****************************\n   V 1.0.1.3\n\n\n   *****************************\n   V 1.0.1.2\n\n\n   *****************************\n   V 1.0.1.1\n\n   *****************************\n   V 1.0.1.0\n   - Initial Relase!",
  "requireLicenseAcceptance": false,
  "summary": "Sdk for logs",
  "title": "Sdk to Logger",
  "verbatimVersion": "1.0.1.7",
  "version": "1.0.1.7",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.01.00.10.11/inhouse.sdk.logger.1.0.1.7.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.01.00.10.11/inhouse.sdk.logger.1.0.1.7.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[7.0.1, )"
        }
      ]
    }
  ],
  "tags": [
    "ihct"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}