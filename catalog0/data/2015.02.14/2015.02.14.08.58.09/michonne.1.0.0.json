{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.14.08.58.09/michonne.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Cyrille Dupuydauby,Thomas Pierrain",
  "catalog:commitId": "41490d91-aeda-4d9a-a860-af72edff87ac",
  "catalog:commitTimeStamp": "2015-02-14T08:58:09.9147811Z",
  "copyright": "Â© C.Dupuydauby",
  "created": "2015-02-14T08:57:17.847Z",
  "description": "\"No lock... no deadlock!\" Michonne is a library that allows you to erradicate deadlocks within your applicative code by providing you composable behaviors for tasks/lambdas execution (i.e. dispatcher, sequencer, balking dispatcher, etc), in replacement of locks and raw TPL primitives that will lead you to deadlocks.",
  "developmentDependency": "true",
  "id": "Michonne",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "0IagiourOmyP2JbcPRYFTdiiQE50d5y6bxqrjbmO5/72qfbwk2K8ChNB+7+COlk7V3FiD0Z1WsPUkcOyl6S6gA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9384,
  "projectUrl": "http://dupdob.github.io/Michonne/",
  "published": "2015-02-14T08:57:17.847Z",
  "releaseNotes": "Alpha release. Contains main APIs but still early implementation.",
  "requireLicenseAcceptance": false,
  "summary": "The deadlock killer library. Michonne helps you write concurrent code without the need for locks",
  "title": "Michonne Library",
  "version": "1.0.0",
  "tags": [
    "Sequencer",
    "Threaded",
    "Concurrency"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}