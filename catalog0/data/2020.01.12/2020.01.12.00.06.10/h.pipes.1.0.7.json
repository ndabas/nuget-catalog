{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "havendv",
  "catalog:commitId": "0e0a75bc-a69b-4218-86b3-6d6d52ed8f46",
  "catalog:commitTimeStamp": "2020-01-12T00:06:10.2732243Z",
  "created": "2020-01-12T00:03:53.487Z",
  "description": "Features:\n- Create named pipe servers that can handle multiple client connections simultaneously.\n- Send strongly-typed messages between clients and servers: any serializable .NET object can be sent over a pipe and will be automatically serialized/deserialized, including cyclical references and complex object graphs.\n- Async\n- Requires .NET Standard 2.0\n- Supports large messages - up to 300 MiB.\n- Server restart automatically\n- Automatically wait for the release of the pipe for the server, if it is already in use\n- Automatically waiting for a server pipe creating when client connecting\n- Automatic reconnect with a given interval and at each `client.WriteAsync`, if necessary\n- Supports variable formatters, default - BinaryFormatter which uses System.Runtime.Serialization.BinaryFormatter inside\n- Also available ready formatters in separate nuget packages: H.Formatters.Json and H.Formatters.Wire\n- Supports `PipeAccessRule`'s(see `H.Pipes.AccessControl` nuget package) or more complex code to access using the `PipeServer.PipeStreamInitializeAction` property",
  "id": "H.Pipes",
  "isPrerelease": false,
  "lastEdited": "2020-01-12T00:05:59.44Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "NdKp8Yd2YtM77lROO7G1o+Y5NcDL4etLiyL020E0OQklZtRuyuq2XMDFWJGFSjOhjp/Pybx7eE0Vd/Ktn3RQaA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 68278,
  "projectUrl": "https://github.com/HavenDV/H.Pipes",
  "published": "2020-01-12T00:03:53.487Z",
  "releaseNotes": "Fixed CreatePipeStreamFunc bug.\nAdded server stopping after unexpected exception",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.7",
  "version": "1.0.7",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#dependencygroup/.netstandard2.0/h.formatters.binaryformatter",
          "@type": "PackageDependency",
          "id": "H.Formatters.BinaryFormatter",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#dependencygroup/.netstandard2.0/microsoft.bcl.asyncinterfaces",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.AsyncInterfaces",
          "range": "[1.1.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#dependencygroup/.netstandard2.1/h.formatters.binaryformatter",
          "@type": "PackageDependency",
          "id": "H.Formatters.BinaryFormatter",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#H.Pipes.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1064,
      "fullName": "H.Pipes.nuspec",
      "length": 2377,
      "name": "H.Pipes.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#lib/netstandard2.0/H.Pipes.dll",
      "@type": "PackageEntry",
      "compressedLength": 23920,
      "fullName": "lib/netstandard2.0/H.Pipes.dll",
      "length": 56320,
      "name": "H.Pipes.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#lib/netstandard2.0/H.Pipes.xml",
      "@type": "PackageEntry",
      "compressedLength": 3496,
      "fullName": "lib/netstandard2.0/H.Pipes.xml",
      "length": 28171,
      "name": "H.Pipes.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#lib/netstandard2.1/H.Pipes.dll",
      "@type": "PackageEntry",
      "compressedLength": 24202,
      "fullName": "lib/netstandard2.1/H.Pipes.dll",
      "length": 57344,
      "name": "H.Pipes.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#lib/netstandard2.1/H.Pipes.xml",
      "@type": "PackageEntry",
      "compressedLength": 3496,
      "fullName": "lib/netstandard2.1/H.Pipes.xml",
      "length": 28171,
      "name": "H.Pipes.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.12.00.06.10/h.pipes.1.0.7.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "pipes",
    "named",
    "async",
    "namedpipes"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}