{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.27.12.27.55/kinintech.sqlmapping.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kinin Roza",
  "catalog:commitId": "0bd9af95-b9e9-4b91-9d95-6616b96488cf",
  "catalog:commitTimeStamp": "2020-07-27T12:27:55.5839942Z",
  "copyright": "Kinin Roza, 2020",
  "created": "2020-07-27T12:24:55.093Z",
  "description": "Provide an easy way of mapping objects to SQL Server database table by using Attributes. If you want to query a database table but do not want to write complex and complicated SQL query, you can use this package. By just specifying some metadata on class and its property using attributes, you can start querying the table in no time.",
  "iconUrl": "https://cdn.icon-icons.com/icons2/1852/PNG/512/iconfinder-database-4417104_116643.png",
  "id": "KininTech.SqlMapping",
  "isPrerelease": false,
  "lastEdited": "2020-07-27T12:27:28.25Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "ApK24WHlOGRzDOQIPpIRJQgnntdKYOHrzk1bIPSGmjDijG86FyJ/zUyCXhuNeep8NnSD/lC8XmxacVV8FpOODw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30847,
  "published": "2020-07-27T12:24:55.093Z",
  "releaseNotes": "In this first major release of KininTech.SqlMapping, there are a lot of significant additions and changes made to the package. \n\nv.2.0.0 changes:\n\nThe new \"Key\" class:\n- A new class has been added in the main namespace, and it is called the 'Key' class which contains a single 'Value' property to store any .NET data type value.\n- The key class is used mainly for storing the primary key value of an entity to distinguish it from any other object parameter.\n\nConstructors and Methods:\n- The constructors of EntityTable class now checks whether the table exists in the database before go on to validate the model (class). If the table does not exist, an SqlMapping exception is thrown.\n- A new overloading of the indexer of EntityTable class has been added. This new indexer takes a params of indexes and return an array of entities at the specified indexes.\n- A new overloading of the indexer of EntityTable class has been added. This new indexer takes a \"Key\" parameter and return an entity with the specified key.\n- The Delete(object key) method is now marked as obsolete, and you should consider using its new overloading that use Key parameter instead.\n- The GetByKey(object key) method is now marked as obsolete, and you should consider using the new overloading of indexer that use Key parameter instead.\n- The Contains(object key) method is now marked as obsolete, and you should consider using its new overloading that use Key parameter instead.\n- A new overloading of the Insert method of EntityTable class has been added. This overloading Insert() method takes an IEnumerable of objects and insert them into the EntityTable.\n- A new method, Clear(), has been added to the EntityTable class to simply delete all the entities in the EntityTable. \n- A new method, IndexOf(object key) has been added to the EntityTable class to get the index of the entity with the specify key in the EntityTable or returns -1 if key cannot be found.\n- Sql Operation Methods like Insert(T obj), Insert(IEnumerable of objs), Update(T obj), Delete(T obj) now check whether the specified reference is null and throw NullReferenceException.\n\nProperty:\n- A new property, ConnectionString, has been added to get the connection string used by the EntityTable.\n\nEvents and EventArgs:\n- Four new events have been added including EntityInserted, EntityDeleted, EntityUpdated that give more functionalities to the EntityTable.\n- Four new EventArgs has alsp been added including EntityInsertedEventArgs, EntityDeletedEventArgs, EntityUpdatedEventArgs that are used with the three events above.\n- EntityInserted event is invoked whenever an entity is inserted successfully into the EntityTable. The inserted entity is passed at runtime by EntityInsertedEventArgs.\n- EntityUpdated event is invoked whenever an entity is updated successfully in the EntityTable. The old entity and the updated one are passed at runtime by EntityUpdatedEventArgs.\n- EntityDeleted event is invoked whenever an entity is deleted successfully from the EntityTable. The deleted entity can still be retrieved back and is passed at runtime by EntityDeletedEventArgs.\n\nExtension Methods:\n- A new extension method has been added, \"GetKey(T obj)\", which is used to get the primary key value of an entity and store it in the 'Value' property of the a Key object.\n\nMessage from the Author: \"I would like to express my deep thanks for all the support (60k+ downloads) for this package. I really appreciate every single person that uses this little product of mine regardless of its quality and capabilities. Please keep supporting my package, and I will continue to maintain it with all my strengths and passions.",
  "requireLicenseAcceptance": false,
  "title": "KininTech.SqlMapping",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.27.12.27.55/kinintech.sqlmapping.2.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.27.12.27.55/kinintech.sqlmapping.2.0.0.json#KininTech.SqlMapping.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1848,
      "fullName": "KininTech.SqlMapping.nuspec",
      "length": 4843,
      "name": "KininTech.SqlMapping.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.27.12.27.55/kinintech.sqlmapping.2.0.0.json#lib/net461/KininTech.SqlMapping.dll",
      "@type": "PackageEntry",
      "compressedLength": 17616,
      "fullName": "lib/net461/KininTech.SqlMapping.dll",
      "length": 46080,
      "name": "KininTech.SqlMapping.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.27.12.27.55/kinintech.sqlmapping.2.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Kinin",
    "KininTech",
    "Sql",
    "SqlServer",
    "SqlMapping",
    "Kinin-Roza"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}