{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Masoud Bahrami",
  "catalog:commitId": "44b51bb6-ee45-4f7c-994e-54e778f32d1b",
  "catalog:commitTimeStamp": "2019-01-03T08:02:52.9703019Z",
  "copyright": "Copyright 2018",
  "created": "2018-07-28T14:14:38.203Z",
  "description": "Chakad is a Library for use with the Clean and CQRS architectural styles for .NET. The Command Dispatcher pattern is an addition to the Command design pattern that decouples the dispatcher for a service from its execution. A Command Dispatcher component maps commands to handlers. A Command Processor pattern provides a  framework for handling orthogonal concerns such as logging, timeouts, or circuit breakers.\n\tChakad.Logging.File contains the implementations of the Chakad.Logging interfaces for logging in file.",
  "iconUrl": "http://icon_url_here_or_delete_this_line/",
  "id": "Chakad.Logging.File",
  "isPrerelease": false,
  "lastEdited": "2019-01-03T08:02:41.387Z",
  "licenseUrl": "http://license_url_here_or_delete_this_line/",
  "listed": true,
  "packageHash": "PKz7gn9gzMHeSYQOWKYF5h9yuptcrSteC3Viu6qr0N3BwVZwUq3YCNAaeKfbOMIPbT3eM0T48pwbzyOf489y/A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17598,
  "projectUrl": "http://refactor.ir/",
  "published": "2018-07-28T14:14:38.203Z",
  "releaseNotes": "Add IChakadContainer and implement Default Container.",
  "requireLicenseAcceptance": false,
  "title": "Chakad.Logging.File",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json#dependencygroup/chakad.core",
          "@type": "PackageDependency",
          "id": "Chakad.Core",
          "range": "[1.2.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json#dependencygroup/chakad.logging",
          "@type": "PackageDependency",
          "id": "Chakad.Logging",
          "range": "[1.0.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json#Chakad.Logging.File.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 732,
      "fullName": "Chakad.Logging.File.nuspec",
      "length": 1580,
      "name": "Chakad.Logging.File.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json#lib/net452/Chakad.Logging.File.dll",
      "@type": "PackageEntry",
      "compressedLength": 5376,
      "fullName": "lib/net452/Chakad.Logging.File.dll",
      "length": 11776,
      "name": "Chakad.Logging.File.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.08.02.52/chakad.logging.file.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Command",
    "CommandDispatcher",
    "CQRS",
    "Pipeline",
    "Query",
    "QueryDispatcher",
    "Clean",
    "CleanArchitecture",
    "Onion",
    "OnionArchitecture",
    "MessagePipeline",
    "logging"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}