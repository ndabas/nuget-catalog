{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.17.22.39/configutil.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Bashir Ansari",
  "catalog:commitId": "491029dd-c270-4de1-bda3-d1d283d63056",
  "catalog:commitTimeStamp": "2018-12-11T17:22:39.6937343Z",
  "copyright": "Copyright 2015",
  "created": "2015-03-09T13:08:08.253Z",
  "description": "Small utility for loading/saving properties of .Net classes as string values into app.config file or other sources(Json/XML,...)",
  "id": "ConfigUtil",
  "isPrerelease": false,
  "lastEdited": "2018-12-11T17:22:30.353Z",
  "listed": true,
  "packageHash": "NJt4nSrJBgteU3ju9Id2joIStOUjQc1zti2izMgHC4GtJecjCPX1lYFYMB8pmCEQrm/fdwYzreIYsh5uanx7Xg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22397,
  "projectUrl": "https://github.com/bashiransary/ConfigUtil",
  "published": "2015-03-09T13:08:08.253Z",
  "releaseNotes": "All you should do is to decorate you properties with ConfigProp attribute, you can specify default value and custom title for properties too, then you should call this.LoadConfiguration() method in class constructor any method. \n\npublic class ImageSlider\n{\n    [ConfigProp]\n    public string OverlayText { get; set; }\n\n    [ConfigProp(true)]//default value is true (in case of absence of this property value in app config true will be assigned)\n    public bool ShowOverlayText { get; set; }\n\n    [ConfigProp(5)]\n    public int ImageCount { get; set; }\n\n    [ConfigProp(\"Red\")]\n    public Color BgColor { get; set; }\n\n    [ConfigProp(\"10,10,10,10,10\")]\n    public List<int> ImagesDelay { get; set; }\n\n    [ConfigProp]\n    public DateTime CreateDate { get; set; }\n\n    [ConfigProp(Name = \"Delay\")]//Delay is the key to load value from app.config\n    public TimeSpan TransitionDelay { get; set; }\n\n\n    public ImageSlider(){\n       this.LoadConfiguration();//loads the configuration from app.config file (appSettings section)\n    }\n\n    public void SaveConfig(){\n       this.LoadConfiguration();//Writes properties values to the app.config file (appSettings section)\n    }\n\n    public void SaveDefaultConfig(){\n       this.SaveDefaultConfiguration();//Writes properties default values to the app.config file (appSettings section)\n    }\n}\n\nYou can use other sources instead of app.config too (https://github.com/bashiransary/ConfigUtil/wiki/Config-Sources)\nConfigUtil supports most of common data types (https://github.com/bashiransary/ConfigUtil/wiki/Supported-Datatypes)",
  "requireLicenseAcceptance": false,
  "summary": "Load properties values from app.config or any other sources like a Json string or file in best way. ConfigUtil can convert property values form/to string to load and store them in simple way.",
  "title": "ConfigUtil",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.17.22.39/configutil.1.0.1.json#ConfigUtil.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1000,
      "fullName": "ConfigUtil.nuspec",
      "length": 2572,
      "name": "ConfigUtil.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.17.22.39/configutil.1.0.1.json#lib/BAS.ConfigUtil.dll",
      "@type": "PackageEntry",
      "compressedLength": 9264,
      "fullName": "lib/BAS.ConfigUtil.dll",
      "length": 20480,
      "name": "BAS.ConfigUtil.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.17.22.39/configutil.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ConfigUtil",
    "Configuration",
    "appSettings",
    "Config",
    "Json"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}