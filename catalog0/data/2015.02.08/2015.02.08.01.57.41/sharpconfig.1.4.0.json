{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.01.57.41/sharpconfig.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Cemalettin Dervis",
  "catalog:commitId": "87a2fbaf-5ad3-4366-b9d2-afe44ee73f6f",
  "catalog:commitTimeStamp": "2015-02-08T01:57:41.7490976Z",
  "copyright": "Copyright Â© Cemalettin Dervis 2013-2014",
  "created": "2014-09-26T14:20:06.927Z",
  "description": "SharpConfig is an easy-to-use CFG/INI configuration library for .NET.",
  "iconUrl": "http://i.imgur.com/x6x7xiy.png",
  "id": "SharpConfig",
  "isPrerelease": false,
  "lastEdited": "2014-10-06T07:48:25.753Z",
  "packageHash": "7E1ESoPPBOuaAhpQ7MTUZWcKfqQ7LMEK91iGnVr3hTME1okJnVUjsSQGELbsNmKTxXWUkFKX1y63Z+uL8Tdoyw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 60463,
  "projectUrl": "https://github.com/cemdervis/SharpConfig",
  "published": "2014-09-26T14:20:06.927Z",
  "releaseNotes": "=============================================\n\nChangeLog for SharpConfig 1.4.\nLast version was 1.3.\nAuthor: Cemalettin Dervis\n\nPLEASE NOTE:\n    This release contains some significant API changes\n    and may break your existing API in terms of errors!\n\n=============================================\n\n\n1. General\n-----------------------\n\n-   Added assemblies for .NET 3.0, 3.5 and 4.5.\n-   Improved API documentation.\n-   Added a sample application.\n-   Internalized some methods that shouldn't be public.\n-   Comment now allows empty values.\n-   Improved section parsing in terms of performance and stability.\n-   SharpConfig now accepts multiple sections and settings\n    that have the same name (issue #5).\n-   Changed array bracket symbols from [] to {}.\n\n\n2. Fixes\n-----------------------\n\n-   Fixed a bug in the parsing process ( Configuration.Parse() ) that\n would not reset the temporary fields when the parsing failed.\n    \n-   Fixed a potential memory leak in Configuration.(De)SerializeBinary().\n\n\n3. API Changes\n-----------------------\n\n-   Changed Configuration and Section to be collections themselves.\n    It's now possible to iterate through Configuration and Section objects\n    directly instead of accessing their properties such as \"Section\" and\n    \"Settings\".\n    \n-   When a section is accessed used Configuration[string] and a section\n    with the specified name couldn't be found, the configuration will create\n    a new section, add it to itself and return that instead.\n    This eases the population of configurations.\n    Note: this functionality is also implemented in Section[string].\n\n-   New types:\n        -   ConfigurationElement class\n        \n-   Removed types:\n        -   CommentCollection class\n        -   SectionCollection class\n        -   SettingCollection class\n        \n        -   ParseFlags enum.\n            Parsing options can now be set via static properties of the Configuration class.\n            \n        -   CommentType enum.\n            Replaced by a char, accessible via the Comment.Symbol property.\n\n-   New methods:\n        -   Configuration.LoadFromText()\n        -   Setting.SetValue<T>()\n        \n-   Renamed methods:\n        -   Configuration.Load(filename)  -> Configuration.LoadFromFile()\n        -   Configuration.Load(stream) -> Configuration.LoadFromStream()\n        \n-   Added encoding overloads for Configuration.Load/Save methods (issue #1).\n\n-   Added new static properties to the Configuration class:\n        -   NumberFormat (issue #3)\n        -   IsCaseSensitive\n        -   ValidCommentChars (issue #4)\n        \n-   Changed the Comment struct to a class.\n-   Removed pre-comments.\n-   Changed the Configuration class to be non-sealed.\n-   Renamed the SettingCategory class to Section.\n-   Renamed the SettingCategoryCollection class to SectionCollection.\n-   Added a new property: Setting.ArraySize.\n\n-   Improved the Setting.GetValue methods.\n    You can now use GetValue() to obtain single and array objects.\n    GetValueArray() has been removed subsequently.\n    \n-   Added a new method: Section.CreateObject<T>().\n-   Renamed Section.AssignTo<T>() to MapTo<T>().\n\n-   Improved MapTo<T>() and added an overload that specifies\n    a value for case-sensitive property assignment.",
  "requireLicenseAcceptance": false,
  "summary": "SharpConfig is an easy-to-use CFG/INI configuration library for .NET.",
  "title": "SharpConfig",
  "version": "1.4.0",
  "tags": [
    "sharpconfig",
    "config",
    "c#",
    "csharp",
    "cfg",
    "ini",
    "configuration",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}