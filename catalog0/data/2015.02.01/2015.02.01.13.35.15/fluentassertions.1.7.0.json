{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.13.35.15/fluentassertions.1.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dennis Doomen, Martin Opdam",
  "catalog:commitId": "2386e523-ed9b-4e86-9906-5474d873f8e7",
  "catalog:commitTimeStamp": "2015-02-01T13:35:15.5694683Z",
  "copyright": "Copyright Dennis Doomen 2010-2012",
  "created": "2012-01-13T19:17:04.42Z",
  "description": "A very extensive set of extension methods for .NET 3.5, 4.0 and Silverlight 4.0 that allow you to more naturally specify the expected outcome of a TDD or BDD-style unit test.",
  "id": "FluentAssertions",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://fluentassertions.codeplex.com/license",
  "packageHash": "yRX///P6pZFqLpG5m7qYYE+dncmiX2UnPh4I9+E4alU3+GoYs8R3Z9Ia4z2eN0Ud38ijc+hnx98d6AgS97+sZA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1081929,
  "projectUrl": "http://fluentassertions.codeplex.com",
  "published": "2012-01-13T19:17:04.997Z",
  "releaseNotes": "- Added methods for asserting that a collection of types matching a predicate have specific methods that are virtual or marked with a specific attribute.\n      - Added methods for asserting XElements and Xattributes\n      - Added support for recursively comparing the properties of nested (collection of objects ). By default it will compare all properties of the expected object graph, unless SharedProperties is used.\n      - Added a fallback mechanism so that if FA cannot find any of the supported frameworks, it will fall back to using a custom AssertFailedException exception class rather than crashing.\n      - Added support for ComparisonMode.StartWith and ComparisonMode.StartWithEquivalent when asserting the message of an exception.\n      - For assertions that verify against a Type, the failure message will use the AssemblyQualifiedName rather than just the name of the type.\n      - Fixed a bug so that collection.Should().OnlyContain(lamba) now throws if the collection is empty. See this discussion for more details.\n      - Minor fix that ignores trailing blank characters when looking for the 'because' text in the reason of an assertion.\n      - Added better and deeper detection of cyclic references when recursively comparing properties or generating a string representation of a complex object graph.\n      - For long strings, the error message for string.Should().StartWith() places the actual and expected strings on seperate lines. This makes it easier to find the differences.",
  "requireLicenseAcceptance": false,
  "title": "Fluent Assertions",
  "version": "1.7.0",
  "tags": [
    "MSTest",
    "xUnit",
    "NUnit",
    "MSpec",
    "TDD",
    "BDD",
    "Fluent",
    "Silverlight"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}