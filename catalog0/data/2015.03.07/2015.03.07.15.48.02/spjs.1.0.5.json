{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.03.07.15.48.02/spjs.1.0.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "alex-randall",
  "catalog:commitId": "b5e6486a-5c91-4003-97e5-a21400abc9d2",
  "catalog:commitTimeStamp": "2015-03-07T15:48:02.6199907Z",
  "created": "2015-03-07T15:47:28.047Z",
  "description": "A set of reusable Office 365/SharePoint Online and SharePoint 2013 TypeScript functions that make client-side development much easier and safer.",
  "id": "spjs",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "9Zxj4t2w3LkMhPo21Q4SkbICiy0Mvu75UMG8hkXXRyUXaaqpT/1iq/fnNuXQ0h3lHAxKUVzteTMP4QjJuhoKFA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25962,
  "projectUrl": "https://github.com/alex-randall/spjs",
  "published": "2015-03-07T15:47:28.047Z",
  "releaseNotes": "1.0.5 - Removed spjs.local from  spjs.ready.ts, and refactored it out of existing functions, since var windowInstance = <any>window; can be used instead to same effect\n1.0.4 - Added spjs.local to spjs.ready.ts\n1.0.3 - Fixed NuGet package (didn't include files correctly.  Be patient, I'm learning NuGet packaging ;) )\n1.0.2 - Included accidently omitted spjs.ensureExternalScript.ts and spjs.ensureExternalScript.js files\n1.0.1 - Added .js files to the NuGet package so we don't have to rely on the TypeScript compiler working in the Visual Studio solution.\n1.0.0 - Initial release",
  "requireLicenseAcceptance": false,
  "version": "1.0.5",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}