{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.31.42/dapper.data.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Maxim Konstantinovski",
  "catalog:commitId": "89ad895a-fdee-4ec5-9848-ecbababd9ff9",
  "catalog:commitTimeStamp": "2015-02-02T17:31:42.788433Z",
  "copyright": "Copyright Maxim Konstantinovski 2012",
  "created": "2012-10-10T17:25:53.117Z",
  "description": "Trivial micro-orm implemented on Dapper, streamlines connection and transaction management while preserving flexibility and usability.\n***************************************\n// To create an instance of database context inherit DbContext\nclass TestDb : DbContext\n{\n\tprivate const string ConnectionName = \"DefaultConnection\";\n\n\tprivate TestDb()\n\t\t: base(ConnectionName)\n\t{ }\n}\n\n// execute multiple statatements using same connection\n// connection and transaction (if needed)\nvar db = new TestDb();\ndb.Batch(s =>\n{\n\ts.BeginTransaction();\n\ttry\n\t{\n\t\ts.Execute([Your query]);\n\t\ts.CommitTransaction();\n\t}\n\tcatch\n\t{\n\t\ts.RollbackTransaction();\n\t\tthrow;\n\t}\n});\n\n// using it with ninject\nkernel.Bind<IDbContext>().To<TestDb>().InSingletonScope();",
  "id": "Dapper.Data",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "eVahkjqzev1pWScBuzq36Gubuhh0vtLbkTG94eBeFzNx8MzUdyYQE0ilWyARhfP9wAbxKzZ2WXRyIXXpqIqGPg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9826,
  "projectUrl": "https://github.com/mkonstan/dapper-dot-net",
  "published": "2012-10-10T17:25:53.117Z",
  "releaseNotes": "* 1.0\n* Streamlined connection and transaction management\n* Batch query processing\n* Can use ninject\n* Thread safe\n* Connection can be defined in .config file\nSample:",
  "requireLicenseAcceptance": false,
  "summary": "Trivial micro-orm implemented on Dapper, streamlines connection and transaction management while preserving flexibility and usability.",
  "title": "Dapper.Data",
  "version": "1.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.31.42/dapper.data.1.2.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.31.42/dapper.data.1.2.0.json#dependencygroup/dapper",
          "@type": "PackageDependency",
          "id": "Dapper",
          "range": "[1.8.0, )"
        }
      ]
    }
  ],
  "tags": [
    "orm",
    "sql",
    "micro-orm",
    "ninject",
    "mvc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}