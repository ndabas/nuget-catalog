{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Zachnad0",
  "catalog:commitId": "1836f475-16dd-46c3-b170-9d01242028ab",
  "catalog:commitTimeStamp": "2024-04-12T06:17:53.9940866Z",
  "created": "2024-04-12T06:15:00.377Z",
  "description": "This is merely a perpetually WIP personal library intended only for personal use, though if one finds it useful, they may use it freely due to it being on a BSD 3-clause license.\nFeatures:\n- Essential generic utility methods, especially for 2D arrays/matrices!\n- Custom object-oriented algebra and calculus tool (WIP).\n- Experimental AI neural networks (general AND convolutional (v3+)) plus training utils.\n- ZMatrix class for more easily working with matrices (v3+).",
  "iconFile": "icon.png",
  "id": "Zachnad0.UtilLib",
  "isPrerelease": false,
  "lastEdited": "2024-04-12T06:17:32.17Z",
  "licenseFile": "LICENSE.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "iok5NYyqtYlBVS4Vhb5aJnA9BSxKQSE5dkMbLaOXDU2sH0gN5XuD701wOg/lzi617DGY+++ksyUthOnFpCDpCQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 247223,
  "published": "2024-04-12T06:15:00.377Z",
  "readmeFile": "README.md",
  "releaseNotes": "3.1.1:\n- ADDED uint[][] ColorMatrixTo32BitARGB(Color[][]) which is rather self explanatory.\n- ADDED (byte[][],byte[][],byte[][],byte[][]) SplitColorMatrix(Color[][]) which splits the single color channel into four: R,G,B,A.\n\n3.1.0:\n- ADDED PackagedConvNeuralNetwork to ZAI.Saving, which is a json-serializable data structure for saving the data of a convolutional neural network. Essential for actually saving models. Use this struct's constructor to package, and one of the neural net's constructors to un-pack the data.\n- RENAMED ConvolutionalNeuralNetworks class to ConvNeuralNetworks. Why did I make it so long initially?\n- FIXED some XML documentation.\n\n3.0.0: // This update is quite massive and took forever. That is why I skipped version 2.\n- ADDED convolutional neural networks...\n- ADDED 5 more activation functions.\n- ADDED byte[,].ToFloatMatrix() which converts a matrix of bytes into a matrix of floats.\n- ADDED float[,].NormalizeMatrix(bool) that returns a normalized float matrix.\n- ADDED float[].NormalizeArray(bool) that returns a normalized float array.\n- CHANGED namespace arrangement so that classic NNs are under ZAI.FFNeuralNetworks\n- ADDED namespace for convolutional neural networks under ZAI.ConvNeuralNetworks\n- CHANGED static class GraphStuff name to Equations\n- ADDED System.Random.NextMatrix(int, int, ?bool) that returns a random float matrix of given size.\n- ADDED System.Random.NextArray(int, ?bool) that returns a random float array of given size.\n- ADDED entire ZMatrix class which has some implicit conversion and operators and stuff for dealing with float matrices.\n- ADDED (T[,] OR T[][] OR T[]).Foreach<T>(Action<int, int, T> (just Action<int, T> for array)) that runs an action for each value, utilizing x, y, (i for array) and the value at that point of the matrix (or array).\n- ADDED T[,].SetEach<T>(Func<int, int, T, T>) that runs a func overwriting each value, utilizing x, y, and current value in the matrix. (Also available for T[][] and T[])\n- ADDED  ZUtils.LCM(double[]) for getting the lowest common multiple.\n- ADDED ZUtils.LinesToCharMatrix(string[]) for converting lines of strings into a char matrix.\n- ADDED A LOT MORE TO ZUtils, incl. to and from jagged matrix conversions (ridiculously convenient!!!), and accompanying useful stuff. I recommend checking source code for serious usage.\n\n1.3.4:\n- ADDED allow decimal number parameter for ZUtils.FilterNumbers.\n- FIXED README AI tutorial info to be actually up to date, and finally made it actually markdown instead of HTML.\n- FIXED ZAI.Training.NeuralNetTrainingOptions so that the fields LearningRate and MutateChance are changeable (because they should be).\n- FIXED ZAI.Training.NeuralNetTrainingOptions so that all of the fields are included for JSON serialization, and there is a JsonConstructor, therefore it is now serializable.\n\n1.3.3:\n- FIXED the fact that multithreading was LIMITED TO 1???\n- ADDED method for quickly deriving a generation based off an array of pre-existing neural networks.\n\n1.3.2:\n- ADDED Greek alphabet, because why not.\n\n1.3.1:\n- ADDED Neural network training async task, for training some/an initial network(s) or a new network, against  a provided multi-input and output target function.\n- FIXED Random network generation only generating positive initial weights and biases, so amplitude is actually treated as such.\n- FIXED Naming outputs (and inputs) is now entirely optional.\n- FIXED Calculation inputs are no longer limited between 1 and 0.",
  "repository": "",
  "title": "Zachnad0's Personal Utility Library",
  "verbatimVersion": "3.1.1",
  "version": "3.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#dependencygroup/.netstandard2.1/system.text.json",
          "@type": "PackageDependency",
          "id": "System.Text.Json",
          "range": "[7.0.3, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#Zachnad0.UtilLib.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2307,
      "fullName": "Zachnad0.UtilLib.nuspec",
      "length": 4987,
      "name": "Zachnad0.UtilLib.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#lib/netstandard2.1/ZUtilLib.dll",
      "@type": "PackageEntry",
      "compressedLength": 123346,
      "fullName": "lib/netstandard2.1/ZUtilLib.dll",
      "length": 167424,
      "name": "ZUtilLib.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#lib/netstandard2.1/ZUtilLib.xml",
      "@type": "PackageEntry",
      "compressedLength": 6206,
      "fullName": "lib/netstandard2.1/ZUtilLib.xml",
      "length": 33333,
      "name": "ZUtilLib.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#LICENSE.md",
      "@type": "PackageEntry",
      "compressedLength": 797,
      "fullName": "LICENSE.md",
      "length": 1523,
      "name": "LICENSE.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 1701,
      "fullName": "README.md",
      "length": 3618,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 97481,
      "fullName": "icon.png",
      "length": 112241,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.12.06.17.53/zachnad0.utillib.3.1.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12928,
      "fullName": ".signature.p7s",
      "length": 12928,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Zachnad0",
    "Utility",
    "Matrix-Utils",
    "AI",
    "Neural-Network",
    "Convolutional-Neural-Network"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}