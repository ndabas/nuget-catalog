{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.14.53.55/groupdocs-viewer-dotnet.1.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GroupDocs",
  "catalog:commitId": "2d1467c5-0351-4ed3-9d46-ab2627969f88",
  "catalog:commitTimeStamp": "2018-11-10T14:53:55.0490525Z",
  "created": "2013-12-25T12:43:26.84Z",
  "description": "GroupDocs.Viewer for .NET is a flexible library that enables you to display documents and images of more than 45 file formats from within your web & mobile applications. The library is 100% independent and doesn't require any 3rd-party software installation. This allows end users to, for example, view PDF documents from within your .NET applications without having to install Adobe Reader.\n\nWith GroupDocs' document viewer for .NET, your app's users can view documents and images of the following file formats:\n- Portable Document Format: PDF\n- Microsoft Word: DOC, DOCX, DOCM, DOT, DOTX, DOTM  \n- Microsoft Excel: XLS, XLSX, XLSM, XLSB, XML               \n- Microsoft PowerPoint: PPT, PPTX                \n- Microsoft Visio: VSD, VDX, VSS, VSX, VST, VTX, VSDX, VDW  \n- Microsoft Project: MPP, MPT                    \n- Microsoft Outlook: MSG, EML                               \n- OpenDocument Formats: ODT, OTT, ODS, ODP            \n- Rich Text Format: RTF                                     \n- Plain Text File: TXT                                   \n- Comma-Separated Values: CSV                               \n- HyperText Markup Language: HTM, HTML, MHT, MHTML    \n- XML Paper Specification: XPS                              \n- AutoCAD Drawing File Format: DXF                  \n- Image files: BMP, GIF, JPG, PNG, TIFF                     \n- Electronic publication: EPUB\n\nDocuments can be both rasterized and converted to SVG+HTML+CSS, delivering high-fidelity native text rendering.\n\nGroupDocs.Viewer for .NET comes with a convenient UI, which allows users to easily navigate documents when viewing them. For instance, users can scroll multi-page documents, turn pages with the Go Forward/Backward buttons, jump straight to a specified page, search for text within the document using keywords, preview pages with thumbnails, zoom, print and download documents right from a web-browser.\n\nFor more details on the GroupDocs.Viewer for .NET Library, please visit our website:               http://groupdocs.com/dot-net/document-viewer-library\n\nNote: this download contains a fully working version of the product, however without a license set it will run in evaluation mode with some limitations. To test GroupDocs' document viewer for .NET library without evaluation limitations, request a free 30-day temporary license.",
  "iconUrl": "http://i.imgur.com/WLajWUm.png",
  "id": "groupdocs-viewer-dotnet",
  "isPrerelease": false,
  "lastEdited": "2018-11-10T14:53:49.503Z",
  "listed": true,
  "packageHash": "z67huJ/FfQ44vitP9Wsous9EgK7nD1uR0nIISn32KI5ncSzo3i+gCedugWArPImOSQWo/DIpv1+NAdHKd9P7TA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 32375947,
  "projectUrl": "http://groupdocs.com/dot-net/document-viewer-library",
  "published": "2013-12-25T12:43:27.513Z",
  "releaseNotes": "New Features\n\nWEB-666   The SetBaseUrl method for the setting of a URL prefix\nWEB-682   The flowing of header controls onto new lines when narrowing the header\nWEB-611   A setting for the working/cache directory\nWEB-612   A setting for the width of the thumbnails container\nWEB-615   Error propagation to customer's code\nWEB-620   A setting for showing of the image width (for cache generation)\nWEB-621   Cross-domain detection\nWEB-623   Norwegian language support\nWEB-624   Resizing after creation\nWEB-625   Header less Viewer and control methods\nWEB-627   The concatenation of multiple streams into one document\nWEB-631   The use of images with one specified width for all smaller widths\nWEB-590   Cache control methods.\nWEB-592   Document printing in the same window.\nWEB-596   File list request disabling.\nWEB-600   A setting for the box-shadow of toolbar buttons.\nWEB-601   A setting for the background colour of the Thumbs tray.\nWEB-605   Settings for toolbar, toolbar buttons, and thumbnails container border colours.\nWEB-545   Text selection disabling.\nWEB-554   Installable Viewer localization.\nWEB-577   Partial word search.\nWEB-580   Download button click event triggering.\n\nImprovements\n\nWEB-681   An enumeration for locales supported by Viewer\nWEB-609   Rename GroupdocsViewer to Viewer\nWEB-613   Client error handling for GetPdf2JavaScript\nWEB-617   Display of file-download errors in a message box\nWEB-628   The support of variable heights of pages\nWEB-633   Use a file name and type from HTTP headers when opening a URL\nWEB-637   License checking for the DocumentCache class\nWEB-641   Separated the Viewer samples installer from the Viewer binary installer\nWEB-591   Use one working directory instead of three.\nWEB-597   Search placeholder localization.\nWEB-607   Disable more than 2 page images generation, if unlicensed.\nWEB-560   Installable Viewer jQuery 1.9 support.\nWEB-576   PDF to JavaScript conversion instead of PDF to XML.\n\nBugs Fixed\n\nWEB-610   Document type icons are not shown in the browser\nWEB-660   The \"Page loading..\" text is shifted to the left if scroll down when loading\nWEB-665   The header controls are protruding when resizing Viewer\nWEB-671   The thumbnails are shown under the pages in the book mode\nWEB-680   The memory consumption is too big for big documents\nWEB-683   Thumbnails are not loaded when scroll to them\nWEB-684   The filenames are incorrect when downloading files\nWEB-685   The print dialog only shows once\nWEB-532   Text selection is shifted for some documents\nWEB-539   Browser is not responding and \"Unresponsive script\" window appears after opening a large file\nWEB-616   The \"Uncaught TypeError: Object [object Object] has no method 'docViewerPageFlip'\" error when loading the Viewer\nWEB-618   The cases of initial letters of the LoadFileBrowserTreeData response field names are inconsistent\nWEB-622   2 to 3 views per hour are allowed in the unlicensed mode instead of 15\nWEB-629   The \"An assembly with strong name is required\" error when loading\nWEB-630   The thumbnail spinner is always visible for low wide pages\nWEB-632   An error appears when loading a document: \"can't load page_0.jpg\"\nWEB-635   Text selection rectangle is shifted for unlicensed users\nWEB-636   An error appears when navigating a document: \"Image is corrupt or truncated\"\nWEB-638   The thumbnails have an incorrect height when there are multiple Viewer instances on a page\nWEB-639   The pages are empty in the book mode after zooming\nWEB-642   Another clear search value cross appears in the search field in IE10\nWEB-643   Long search values overlap the clear button and the search field image in IE\nWEB-644   The search frame is visible when the search is disabled\nWEB-645   The text is being selected when turning pages in book mode\nWEB-647   Header controls flow to the second line when making the Viewer smaller\nWEB-541   An unfriendly message appears after opening a file with an unsupported file format.\nWEB-566   Installable Viewer page number is displaced.\nWEB-567   Installable Viewer: \"'rect' is null or not an object\" when trying to select outside of the page area.\nWEB-585   The localization causes the error \"Could not load type 'System.Runtime.CompilerServices.ExtensionAttribute' from assembly 'mscorlib, Version=4.0.0.0\".\nWEB-586   The search buttons are disabled incorrectly after loading a document.\nWEB-588   The error \"this.search.search() is not a function.\" appears when opening a document.\nWEB-589   The Viewer gets selected upon double-clicking Find Next/Find Prev.\nWEB-593   Black background is displayed for zoom and search controls.\nWEB-594   Embedded images are displayed incorrectly.\nWEB-595   The Print looks for the files in @x.Pdf instead of 100@x.Pdf.\nWEB-598   Loading icon is always visible for small images.\nWEB-599   Toolbar frames are visible when their buttons are hidden.\nWEB-603   The error \"Failed to load image from the storage\" appears when opening a document.\nWEB-604   The \"Parent folder\" button is not localized.\nWEB-606   Error messages are not shown when JSONP is used (in IE8).\nWEB-532   Text selection is shifted for some documents.\nWEB-533   “500 Internal Server Error\" while running Jmeter script using 20 threads.\nWEB-538   “500 Error\" occurs after opening any of the customer files.\nWEB-539   Browser is not responding and \"Unresponsive script\" window appears after opening a big file.\nWEB-541   An unfriendly message appears when opening a file with file format not supported.\nWEB-549   Installable Viewer fails to work in cross-domain scenario.\nWEB-550   Installable Viewer fails to work in a Sharepoint 2010 project on IE.\nWEB-553   The Sharepoint page header is broken when Viewer is displayed.\nWEB-555   The Installable Viewer CSS conflicts with Sharepoint.\nWEB-561   Installable Viewer disables the Sharepoint ribbon.\nWEB-564   Installable Viewer cannot load embedded images when hosted in IIS Classic mode.\nWEB-566   Installable Viewer page number is displaced.\nWEB-568   Sharepoint ribbon is disabled in IE8.\nWEB-569   Installable Viewer pdf2xml for images throws an exception.\nWEB-570   One page is visible when opening a document after an image.\nWEB-571   Installable Viewer pdf2xml in the JSONP mode fails for big documents.\nWEB-572   The Installable Viewer localization is not working.\nWEB-573   The Installable Viewer unlicensed use message is not being displayed.\nWEB-575   Installable Viewer uses 100% of CPU after it was removed.\nWEB-581   Installable Viewer does not support files with the \"tif\" extension.\nWEB-585   Installable Viewer: the localization causes the error \"Could not load type 'System.Runtime.CompilerServices.ExtensionAttribute' from assembly 'mscorlib,  Version= 4.0.0.0\".",
  "requireLicenseAcceptance": false,
  "summary": "GroupDocs.Viewer for .NET is a flexible library that enables you to display documents and images of more than 45 file formats from within your web & mobile applications. The library is 100% independent and doesn't require any 3rd-party software installation. This allows end users to, for example, view PDF documents from within your .NET applications without having to install Adobe Reader.",
  "title": "GroupDocs.Viewer for .NET",
  "verbatimVersion": "1.6.0",
  "version": "1.6.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.14.53.55/groupdocs-viewer-dotnet.1.6.0.json#groupdocs-viewer-dotnet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3820,
      "fullName": "groupdocs-viewer-dotnet.nuspec",
      "length": 10297,
      "name": "groupdocs-viewer-dotnet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.14.53.55/groupdocs-viewer-dotnet.1.6.0.json#lib/Groupdocs.Viewer.dll",
      "@type": "PackageEntry",
      "compressedLength": 32360182,
      "fullName": "lib/Groupdocs.Viewer.dll",
      "length": 75456512,
      "name": "Groupdocs.Viewer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.10.14.53.55/groupdocs-viewer-dotnet.1.6.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Document-Viewer",
    "Image-Viewer",
    "PDF",
    "Word",
    "Excel",
    "PowerPoint",
    "Visio",
    "AutoCad",
    "DOC",
    "DOCX",
    "XLS",
    "XLSX",
    "PPT",
    "PPTX",
    "VSD",
    "DXF",
    "TIFF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}