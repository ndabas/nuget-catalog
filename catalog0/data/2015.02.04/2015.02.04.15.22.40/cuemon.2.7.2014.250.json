{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.15.22.40/cuemon.2.7.2014.250.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Mortensen",
  "catalog:commitId": "ad9e8fc1-f94c-47b0-8d25-bc649435d3aa",
  "catalog:commitTimeStamp": "2015-02-04T15:22:40.4410998Z",
  "copyright": "Copyright Â© MuchMore 2009-2014. All rights reserved.",
  "created": "2014-01-26T20:16:22.333Z",
  "description": "Simple, intuitive and logical every-day-usage additions to the Microsoft .NET Framework 2.0 SP1 and newer. Follows the same namespace structure already found in the .NET Framework.",
  "iconUrl": "http://cdn.nblapi.net/themes/cuemon.net/img/128x128.png",
  "id": "Cuemon",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://creativecommons.org/licenses/by/3.0/",
  "packageHash": "VjKomnIazZhK4TPIWmnB50SV+go89oUg00KIsgLTVFZctZ6vQuWSLyRaTDwm43zgWJJqgFQppy0B186C138uLg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 571232,
  "projectUrl": "http://www.cuemon.net/",
  "published": "2014-01-26T20:16:22.333Z",
  "releaseNotes": "This is a major release with several improvements, bug fixes and breaking changes due to severe refactoring prior to version 2.5.2013.2800 (file version <= 2.6.2013.3330). This is the result of the fact that I am maturing the Cuemon family to go open source with version 3.0.2014.\nThe following work was completed for this release:\n\n- A new static class was introduced in the Cuemon namespace; ArrayUtility. This class was designed to make some array related operations easier to work with\n- A new class was introduced in the Cuemon.Annotations namespace; EmailAddressValidationAttribute. This class denotes one or more properties that validates an email address for an entity\n- A new class was introduced in the Cuemon.Annotations namespace; MaxLengthValidationAttribute. This class denotes one or more properties that specifies the maximum length of an array or string allowed for an entity\n- A new class was introduced in the Cuemon.Annotations namespace; MinLengthValidationAttribute. This class denotes one or more properties that specifies the minimum length of an array or string allowed for an entity\n- A new class was introduced in the Cuemon.Annotations namespace; RangeValidationAttribute. This class denotes one or more properties that specifies the numeric range constraints for an entity\n- A new static class was introduced in the Cuemon.Transactions namespace; TransactionUtility. This class was designed to make transaction related operations easier to work with\n- A new static class was introduced in the Cuemon.Data namespace; DataTransfer. This class provides a way to convert an IDataReader implementation to a table-like data transfer object\n- A new class was introduced in the Cuemon.Data namespace; DataTransferColumn. This class represents the column of a table-row in a database\n- A new class was introduced in the Cuemon.Data namespace; DataTransferColumnCollection. This class represents a collection of DataTransferColumn objects for a table in a database\n- A new class was introduced in the Cuemon.Data namespace; DataTransferRow. This class represents the row of a table in a database\n- A new class was introduced in the Cuemon.Data namespace; DataTransferRowCollection. This class represents a collection of DataTransferRow objects for a table in a database\n- A new abstract class was introduced in the Cuemon.Data.Entity namespace; Entity. This class holds the core logic of all Entity derived classes and has caused the removal of several similar interfaces (IBusinessEntity, IBusinessEntityCollection, IBusinessEntityDataMapped, IBusinessEntityRepository) (breaking)\n- A new class was introduced in the Cuemon.Data.Entity.SqlClient namespace; SqlDefaultAdapter. This class provides a default Microsoft SQL Server implementation of the SqlEntityDataAdapter class\n\n- The AsyncCall class was refactored so that it no longer implements the dispose pattern\n- The ConvertUtility class was extended with two new methods; FromByteArray and As\n- The ReflectionUtility class received a change in the DefaultSkipPropertiesCallback propery; this no longer evalutes true if a property references an implementation of IXmlSerializable\n- The StringUtility class was extended with a new static readonly field; WhiteSpaceCharacters and two new methods; TrimAll and Equals\n- The HttpRequestUtility class received a bug fix in the GetAcceptEncodingHeader method\n- The GlobalModule class was tweaked to include a new property; ParseCompressionHeaders to help fix a rare bug in the ParseHttpOutputStream and HandleHtmlRelatedContentParsing method. IsHtmlRelatedContent now returns false in case of ContentType not set. Also, the HandleCompression method was renamed to HandleCompressionHeaders (breaking)\n- The BusinessEntity class was refactored to comply with recent changes (breaking)\n- The BusinessEntityCollection class was refactored to comply with recent changes (breaking)\n- The BusinessEntityUtility class was refactored to comply with recent changes (breaking)\n- The IBusinessEntityDataAdapter class was renamed to IEntityDataAdapter and significantly refactored (breaking)\n- The BusinessEntityDataAdapter class was renamed to EntityDataAdapter and significantly refactored (breaking)\n- The MappingUtility class was extended with a new method; GetDataMappedEntitiesAssociations\n- The SqlBusinessEntityDataAdapter class was renamed to SqlEntityDataAdapter (breaking)\n- The SqlCeBusinessEntityDataAdapter class was renamed to SqlCeEntityDataAdapter (breaking)\n- The SqlDataManager class had the IsTransientFault method extended with new knowledge of transient fault detection and now supports reading InnerException of TargetInvocationException exceptions\n- The SqlQueryBuilder class now supports inserts with default values only\n- The XmlSerializationUtility class received some minor tweaks and a new default callback for determining what properties to serialize\n\n\nNote: this version has a breaking change from assembly version 2.5.2013.2800 to 2.7.2014.250. This was done because of the breaking changes since the 2.5.2013.2800 version.",
  "requireLicenseAcceptance": false,
  "summary": "Cuemon .NET Framework Additions is a free and flexible assembly package, built to extend and boost your codebelt - providing vast ways of possiblities for all breeds of coders, programmers, developers",
  "title": "Cuemon .NET Framework Additions",
  "version": "2.7.2014.250",
  "tags": [
    "xml",
    "xslt",
    "json",
    ".net",
    "framework",
    "additions",
    "businessentity",
    "caching",
    "manager",
    "datespan",
    "depedency",
    "watcher",
    "dataadapter",
    "datamanager",
    "sqlceclient",
    "sqlclient",
    "datadepedency",
    "netdepedency",
    "securitytoken",
    "hash",
    "aes",
    "utility",
    "classes",
    "xsltpage",
    "xsltmasterpage",
    "global",
    "module",
    "ihttpmodule",
    "cloud",
    "security",
    "wcf",
    "wmi",
    "threading",
    "async",
    "httppost",
    "httpput",
    "httpget",
    "httpdelete",
    "countdownevent",
    "processinfo",
    "instrumentation",
    "factory",
    "func",
    "action",
    "timemeasure",
    "performance",
    "counter",
    "transient",
    "failure",
    "fault",
    "recovery",
    "iis",
    "azure",
    "serialization",
    "serialize",
    "hierarchy",
    "loop",
    "crc32",
    "parallel",
    "while",
    "funcout",
    "spinner",
    "memoize",
    "routing",
    "mime",
    "cache",
    "validator",
    "dto",
    "data",
    "transfer",
    "object"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}