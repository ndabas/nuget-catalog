{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.03.12.45/functionalextensions.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Leif Battermann",
  "catalog:commitId": "f033256e-633b-488d-a934-285b1df3dcab",
  "catalog:commitTimeStamp": "2015-02-08T03:12:45.2778449Z",
  "copyright": "Webrunners GmbH Copyright 2015",
  "created": "2015-01-15T14:53:11.367Z",
  "description": "Functions and Types for C# adopted from FP e.g. Option, Choice",
  "id": "FunctionalExtensions",
  "isPrerelease": false,
  "lastEdited": "2015-01-15T20:26:51.36Z",
  "packageHash": "DF5dbu9mB+TlT6mmWvqpFHysbN3BIWSY63tgJ2Y7WyfMkSpUW4sa5A8JeAMvIJwbiYD3HGlgFOC8M/v9BwI8Qw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 117879,
  "projectUrl": "https://github.com/webrunners/FunctionalExtensions",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "This package includes types and higher-order functions adopted from functional programming. The Option<T> type encapsulates an optional value. It is usefull when the actual value (of type T) might not exist. Option is defined as a union type with two cases: Some and None. ",
  "title": "Functional Extensions for C#",
  "version": "1.0.1",
  "tags": [
    "FP",
    "Option",
    "Choice",
    "Maybe",
    "Either",
    "C#",
    ".Net",
    "Functional",
    "Monad"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}