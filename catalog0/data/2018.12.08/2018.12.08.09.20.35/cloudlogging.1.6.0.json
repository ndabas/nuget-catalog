{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "perpetualKid",
  "catalog:commitId": "347cb44c-892e-4dd2-aa78-660d3b30daed",
  "catalog:commitTimeStamp": "2018-12-08T09:20:35.72478Z",
  "created": "2012-06-12T21:48:23.96Z",
  "description": "Simple Trace Listener outputting trace data directly to Windows Azure Queue or Table Storage. \nUnlike the Windows Azure Diagnostics Listener (WAD), logging happens immediately and does not rely on (scheduled or manually triggered) Log Transfer mechanism.\nA simple Reader application shows how to read trace entries and can be used as is or as base for more advanced scenarios.",
  "id": "CloudLogging",
  "isPrerelease": false,
  "lastEdited": "2018-12-08T09:20:08.287Z",
  "licenseUrl": "http://cloudlogging.codeplex.com/license",
  "listed": false,
  "packageHash": "oT+ELkmanFV23tmlQfxhc2BHqCxrStoFkjmT07dHtyH7wvGevpR8a2xoqg6gCyNrxe7xQyo9uUt1vy8cKIVPqw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 33145,
  "projectUrl": "http://cloudlogging.codeplex.com/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Current version is tested with Azure SDK 1.6. and Azure SDK 1.7",
  "requireLicenseAcceptance": true,
  "summary": "Simple Trace Listener outputting trace data directly to Windows Azure Queue or Table Storage.",
  "title": "Azure Trace Listener",
  "verbatimVersion": "1.6",
  "version": "1.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json#dependencygroup/windowsazure.storage",
          "@type": "PackageDependency",
          "id": "WindowsAzure.Storage",
          "range": "[1.6.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json#CloudLogging.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 723,
      "fullName": "CloudLogging.nuspec",
      "length": 1216,
      "name": "CloudLogging.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json#lib/CloudTrace.dll",
      "@type": "PackageEntry",
      "compressedLength": 9420,
      "fullName": "lib/CloudTrace.dll",
      "length": 16384,
      "name": "CloudTrace.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json#lib/CloudTrace.pdb",
      "@type": "PackageEntry",
      "compressedLength": 10539,
      "fullName": "lib/CloudTrace.pdb",
      "length": 42496,
      "name": "CloudTrace.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.09.20.35/cloudlogging.1.6.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}