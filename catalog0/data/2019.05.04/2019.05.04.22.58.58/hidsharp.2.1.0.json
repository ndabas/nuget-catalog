{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "James F. Bellinger",
  "catalog:commitId": "b03ae7aa-ceeb-4800-aed1-142938431e41",
  "catalog:commitTimeStamp": "2019-05-04T22:58:58.3601836Z",
  "copyright": "Copyright 2010-2019 James Bellinger",
  "created": "2019-05-04T22:54:19.587Z",
  "description": "HIDSharp is a cross-platform .NET wrapper for Windows, MacOS, and Linux (hidraw) USB HID APIs.\n      \nIt can interface with arbitrary USB HID devices as well as read and write raw reports.\n\nIt also includes cross-platform serial port communications and supports interprocess communication for exclusion of HID devices between programs.",
  "id": "HidSharp",
  "isPrerelease": false,
  "lastEdited": "2019-05-04T22:58:30.9Z",
  "licenseUrl": "http://www.zer7.com/files/oss/hidsharp/LICENSE.txt",
  "listed": true,
  "packageHash": "lauHHTSRh3ZwxIKjC4ai/QckI1XQgmg8eWxZtHusIXvfx8aCiftUOBcVi07xZAwHaHraSWtEqjB/Rhnl3NuWhA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 919508,
  "projectUrl": "http://www.zer7.com/software/hidsharp",
  "published": "2019-05-04T22:54:19.587Z",
  "releaseNotes": "2.1.0 (May 4, 2019):\n  Added experimental Bluetooth Low Energy support on Windows. This part of the library may change in the future. Let me know how it works for you.\n  Fixed a race condition in the exclusivity layer.\n  Fixed a threading bug that cropped up on .NET Core on Linux.\n  Serial devices that use Windows's buggy usbser.sys driver are now compatible with HIDSharp, including the detection of connection and disconnection.\n  \n2.0.8 (January 21, 2019):\n  Added support in SerialStream for seven data bits and even/odd parity.\n  Fixed a bug on MacOS which caused HID devices without serial numbers to not show up.\n  \n2.0.6 (December 27, 2018):\n  Added support in SerialStream for two stop bits.\n\n2.0.5 (October 15, 2018):\n  HIDSharp is now compatible with .NET Core on Linux.\n  Fixed a garbage collector-related crash on MacOS.\n\n2.0.2 (May 5, 2018):\n  Fixed a bug on Linux which caused output reports to be sent incorrectly on devices which do not use a Report ID.\n  DeviceList GetSerialDeviceOrNull() will now match the filesystem name (COM1, /dev/ttyUSB, etc.) as well as DevicePath.\n  \n2.0.1 (April 11, 2018):\n  Fixed a bug on Windows where, in some cases, being unable to reconstruct a device's report descriptor could prevent that device from being opened at all.\n  HIDSharp now includes assemblies for both .NET Framework 3.5+ and .NET Standard 2.0+.\n  \n2.0 (April 9, 2018):\n  Vastly improved the report descriptor parsing functionality.\n  You can now decode (nearly) any HID device's reports, on all platforms!\n  \n  Added GetReportDescriptor support on MacOS version 10.8 and higher.\n  Added GetReportDescriptor support on Windows. This descriptor is a reconstruction as Windows does not provide a way to directly access this information.\n  Added an AreDriversBeingInstalled property on DeviceList. (Windows will sometimes close streams of composite HID devices opened while their drivers are being installed.)\n  Added a Changed event on DeviceList, for detecting device connect and disconnect.\n  Added a NativeImplementation property to Device.\n  Added an exclusivity layer, with the ability to request interruption. This is useful for interprocess cooperation, but must be enabled manually.\n  Added support for serial ports. This is still somewhat buggy on Linux, but on MacOS it works better than the Mono native implementation.\n  Added support for Linux libudev.so.1.\n  Exposed GetFileSystemName(). This can be used on Linux to check hidraw permissions.\n  Fixed max report lengths on MacOS for devices which do not use a Report ID.\n  Fixed Linux and MacOS not throwing IOException on HID Read() when the device is disconnected.\n  Fixed Linux support on recent Mono versions.\n  Fixed 32-bit Linux support (Raspberry Pi).\n  GetFeature() and SetFeature() now work on Linux.\n  HIDSharp now uses the Apache open-source license.\n  \n  Feedback on the new features is appreciated. Some code modifications will be needed to use this new version.\n\n1.5 (May 18, 2013):\n  Added the DevicePath property to HidDevice.\n  This is useful for differentiating devices with the same VID, PID, etc.\n\n1.4.0.1 (April 21, 2013):\n  Added missing XML documentation file to the archive.\n\n1.4 (April 20, 2013):\n  Documented the most important classes.\n  Fixed a problem with output reports on 64-bit Windows.\n  Fixed a timeout bug on Windows.\n  Parallelized device enumeration.\n  Reordered platform detection to prevent binary planting on Windows.\n\n1.3 (February 23, 2013):\n  Fixed Linux libudev reference to not require developer package symlinks.\n  \n1.2 (October 16, 2012):\n  Fixed MacOS support.\n\n1.1 (July 28, 2012):\n  Added experimental MacOS and Linux support.\n  Added experimental report descriptor parsing.\n  \n1.0 (August 28, 2010):\n  Initial release.",
  "requireLicenseAcceptance": true,
  "title": "HIDSharp",
  "verbatimVersion": "2.1.0",
  "version": "2.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#HidSharp.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2154,
      "fullName": "HidSharp.nuspec",
      "length": 4925,
      "name": "HidSharp.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#lib/net35/HidSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 107403,
      "fullName": "lib/net35/HidSharp.dll",
      "length": 242608,
      "name": "HidSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#lib/net35/HidSharp.pdb",
      "@type": "PackageEntry",
      "compressedLength": 141829,
      "fullName": "lib/net35/HidSharp.pdb",
      "length": 589312,
      "name": "HidSharp.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#lib/net35/HidSharp.XML",
      "@type": "PackageEntry",
      "compressedLength": 7089,
      "fullName": "lib/net35/HidSharp.XML",
      "length": 55484,
      "name": "HidSharp.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#lib/netstandard2.0/HidSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 104129,
      "fullName": "lib/netstandard2.0/HidSharp.dll",
      "length": 235952,
      "name": "HidSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#lib/netstandard2.0/HidSharp.pdb",
      "@type": "PackageEntry",
      "compressedLength": 36529,
      "fullName": "lib/netstandard2.0/HidSharp.pdb",
      "length": 78688,
      "name": "HidSharp.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#lib/netstandard2.0/HidSharp.XML",
      "@type": "PackageEntry",
      "compressedLength": 6996,
      "fullName": "lib/netstandard2.0/HidSharp.XML",
      "length": 55484,
      "name": "HidSharp.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#HidSharp.chm",
      "@type": "PackageEntry",
      "compressedLength": 501249,
      "fullName": "HidSharp.chm",
      "length": 523317,
      "name": "HidSharp.chm"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.04.22.58.58/hidsharp.2.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9471,
      "fullName": ".signature.p7s",
      "length": 9471,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "USB",
    "HID",
    "input",
    "Windows",
    "MacOS",
    "Linux",
    "Mono",
    "serial",
    "gamepad",
    "joystick",
    "Bluetooth",
    "BLE"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}