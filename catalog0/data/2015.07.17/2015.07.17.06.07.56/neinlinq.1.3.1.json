{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.17.06.07.56/neinlinq.1.3.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Axel Heer",
  "catalog:commitId": "40d933d7-88f9-4b85-9836-46b39803769b",
  "catalog:commitTimeStamp": "2015-07-17T06:07:56.7334979Z",
  "copyright": "Copyright (c) 2014-2015 Axel Heer",
  "created": "2015-07-17T06:06:55.127Z",
  "description": "NeinLinq provides helpful extensions for using LINQ providers supporting only a minor subset of .NET functions (like Entity Framework), reusing functions, rewriting queries (even making them null-safe), and building dynamic queries using (translatable) predicates / selectors.",
  "id": "NeinLinq",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/mit",
  "packageHash": "gqAtVJQ9ODVdsW7YzASoI73sE6w2atPlyXBdZekd+M4oMqKlY8Ez0aC/ERlnxOUHnWVQSFiLmTdRwyVE0T5tdA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15134,
  "projectUrl": "http://github.com/axelheer/nein-linq",
  "published": "2015-07-17T06:06:55.127Z",
  "releaseNotes": "Enhanced lambda injection for instance methods. (Use -ef6 build to run EF6 async queries.)",
  "requireLicenseAcceptance": false,
  "title": "NeinLinq",
  "version": "1.3.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.17.06.07.56/neinlinq.1.3.1.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "tags": [
    "LINQ",
    "EF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}