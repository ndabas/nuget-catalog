{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Iron Software https://IronPdf.com",
  "catalog:commitId": "0f65801a-66da-49e9-87fe-7e5a965d9439",
  "catalog:commitTimeStamp": "2019-10-02T07:14:06.8578909Z",
  "copyright": "Iron Software 2015-2019",
  "created": "2019-10-02T07:09:17.02Z",
  "description": "IronPDF for .Net Core 2 and above allows developers to create, edit and extract PDF content within .Net Core Applications & Websites.\n\nThe Iron PDF Core 2+ library takes the frustration out of generating PDF documents by not relying on proprietary APIs. \"Html-To-Pdf\" renders pixel-perfect PDFs from open standard document types: HTML, JS, CSS, JPG, PNG, GIF, and SVG. In short, it uses skills that developers already posses.  \n\nKey features include:\n* \"Html-To-Pdf\" creates PDF files from HTML, CSS, JavaScript, and Images.\n* \"Url-To-Pdf\" generates PDFs from existing html pages by simply providing their URL.\n* \"Image-To-PDF\" creates PDF documents from image files.\n* PDF to Image functionality can render PDF documents to image files. \n* Extract text and images from existing PDFs.\n* Create, Fill and read data from PDF forms.\n* Merge, Split and Manipulate PDFs to edit PDF structure and content.  \n* Add Page Numbers, Headers, Footers, Watermarks, Tables, Text and Image Assets.\n* Edit, Stamp and Watermark PDF files with text, images and HTML\n* Apply HTML or PDF backgrounds to PDF pages\n* Sign PDF files with digital certificates\n\nIronPDF can be used within ASP.NET projects, MVC, Web Services, Console & Desktop Applications.\n\nRequires .Net Core 2 or above on Windows, Linux, MacOS and Azure platforms.\n\nLicensing & Support available for commercial deployments.\n\nFor code examples, documentation & more visit http://ironpdf.com\n\nFor support please email us at developers@ironsoftware.com",
  "iconUrl": "http://ironsoftware.com/brand/iron-logo-128.png",
  "id": "PDF.Core",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2019-10-02T07:13:43.087Z",
  "licenseUrl": "http://ironpdf.com/license",
  "listed": true,
  "packageHash": "IrFrDcbJWxZkQN2/6mkDpRXIxxF7k3NX0lzVdHLAJxQ8YWzjf6K/MTEhMIiruuviPV0N9+Y+pw46wh0D6yg2Rg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 116213681,
  "projectUrl": "http://ironpdf.com/",
  "published": "2019-10-02T07:09:17.02Z",
  "releaseNotes": "* PDF digital certificate signing functionality added for .Net Core\n* PdfDocument.ExtractText method added for .Net Core\n* PdfDocument.StaticRenderHTMLFileAsPdf method added for .Net Core\n* PdfDocument.ExtractImages functionality added for .Net Core\n* PdfDocument.ToJpegImages  DPI setting issues resolved\n* PdfDocument.ToBitmap DPI setting issues resolved\n* HTML Forms rendering improved fro textfield and textarea\n* Adobe Reaeder PDF form data display issue resolved \n* PdfDocument.ToBitmap and ToImage support added to .Net Core\n* IronPDF.License.IsLicensed property added to check key installation\n* Support for license keys to be assigned via an appsetting.json file in .Net Core\n* Methods to verify digital signatures modified to allow developers to detect unsigned documents\n* HtmlToPdf.StaticRenderHtmlAsPdf(string, PdfPrintOptions) method added\n* HtmlToPdf.RenderUrlAsPdf stability improved for edge cases in .Net Core\n* Width and Heigh properties added to PdfDocument.Pages\n* Improved BasePath support for HtmlToPdf\n* Improved BasePath support for Html Headers\n* Improved BasePath support for Html Footers\n* Resolved margin control issues for Html Headers\n* Extended PDF opening and reading for more edge cases\n* Supported PDF reading of read-only PDFs\n* Extended PDF bookmark reading compatibility\n* Allow PDF bookmarks to be added to documents with no existing outline\n* Improved PDF Stamping methods\n* Improved PDF Text Extraction performance\n* Improved PDF Text Extraction support for VB\n* PdfDocument.MetaData.CreationDate now supports UTC Dates\n* Static Async PDF rendering method hanging issues resolved for .Net Core\n* Support for Reading PDF documents which start with empty or corrupt Bytes\n* Improved support for Azure Web Apps  \n* XML and online documentation Improvements",
  "requireLicenseAcceptance": false,
  "summary": "The .Net Core 2 PDF Library \n\nIronPDF uses HTML5, CSS and Javascript to generate PDF files.\n\nFeatures:\n- Url To Pdf\n- Html To Pdf\n- MVC view as Pdf\n- Pdf to Image\n- Forms\n- Edit, Merge & Extract Data",
  "title": "IronPDF Core - The .Net Core PDF Library",
  "verbatimVersion": "2019.7.0",
  "version": "2019.7.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#dependencygroup/.netstandard2.0/system.io.filesystem.primitives",
          "@type": "PackageDependency",
          "id": "System.IO.FileSystem.Primitives",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#dependencygroup/.netstandard2.0/system.drawing.common",
          "@type": "PackageDependency",
          "id": "System.Drawing.Common",
          "range": "[4.5.1, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#PDF.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2014,
      "fullName": "PDF.Core.nuspec",
      "length": 4708,
      "name": "PDF.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#lib/netstandard2.0/IronPdf.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 116167950,
      "fullName": "lib/netstandard2.0/IronPdf.Core.dll",
      "length": 128975872,
      "name": "IronPdf.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#lib/netstandard2.0/IronPdf.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 31305,
      "fullName": "lib/netstandard2.0/IronPdf.Core.xml",
      "length": 257801,
      "name": "IronPdf.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 210,
      "fullName": "readme.txt",
      "length": 289,
      "name": "readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.10.02.07.14.06/pdf.core.2019.7.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "PDF",
    "PDF.Core",
    "Core",
    "netstandard2.0",
    "reports",
    "Html-to-pdf"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}