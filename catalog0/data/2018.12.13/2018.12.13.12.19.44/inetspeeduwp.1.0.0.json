{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Charles Torre (Microsoft QED)",
  "catalog:commitId": "6027880e-61fb-4dec-b195-66086dadd0a5",
  "catalog:commitTimeStamp": "2018-12-13T12:19:44.5775966Z",
  "copyright": "Copyright 2015",
  "created": "2015-07-27T18:52:13.5Z",
  "description": "This is a convenient Windows 10 (10240) multi-language API for making Internet connection state decisions in real time, using the speed result to decide if/when to run your network-intensive code. The same code works across all Windows 10 devices as this is implemented as a Universal Windows Runtime component.\n\nThis API does not need to eat a bunch of network bandwidth to do it's job. \n\nThis API fills a small gap in the Windows platform networking APIs by providing developers with a very easy to use, simple abstraction to measure current Internet connection speed, which most apps today are not doing. When apps make connectivity state assumptions based only on the existence of an active Internet connection, a potentially poor experience may result for your customers. \n\nThis API will benefit the people using your app, who should always be shielded from network latency under all circumstances. Developers will also benefit as you can be confident that: \n\na) This easy-to-use API will return a result very quickly, as any API call should \n\nb) This API is accurate and reliable across Windows 10 devices.",
  "id": "InetSpeedUWP",
  "isPrerelease": false,
  "lastEdited": "2018-12-13T12:19:24.9Z",
  "listed": true,
  "packageHash": "w5Gc8FBVeq/J6pNsdQxf9Y4+KBgDpAdF7TDSrBn9967QXFAIlwI5NaSKVLvCdng0+6W4ZtWBvdAsFRF3xrI0Nw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 231558,
  "published": "2015-07-27T18:52:13.517Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/.json#gpref",
      "reference": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#gpref/ref/inetspeeduwparm.winmd",
          "file": "InetSpeedUWPARM.winmd"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#gpref/ref/inetspeeduwpx64.winmd",
          "file": "InetSpeedUWPx64.winmd"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#gpref/ref/inetspeeduwpx86.winmd",
          "file": "InetSpeedUWPx86.winmd"
        }
      ]
    }
  },
  "releaseNotes": "Internet Connection Speed API for Windows 10 UWP, Version 1.0\n\nThis is a convenient Windows multi-language API for making Internet connection state decisions in real time, using the speed result to decide if/when to run your network-intensive code. The same code works across all Windows 10 devices as this is implemented as a Universal Windows Runtime component.\n\nAPI\n\nnamespace InetSpeedUWP\n\nclass InternetConnectionState\n\nobject that contains the static members you use to determine Internet connection state (connection status and speed/latency/delay)\n\nProperties\n\nstatic bool Connected  \n\nReturns true if the current Internet connection for the device is active, else false.\n\nstatic double RawSpeed\n\nComputed speed, in seconds\n\nMethods\n\nstatic IAsyncOperation<ConnectionSpeed> GetInternetConnectionSpeed();\n\nAsynchronous method that will return a ConnectionSpeed (see below).\n\nstatic IAsyncOperation<ConnectionSpeed> GetInternetConnectionSpeedWithHostName(HostName hostName);\n\nAsynchronous method that will perform the speed/latency test on a supplied host target and returns a ConnectionSpeed. This is very useful to ensure the Internet resource you’re trying to reach is available at the speed level you require (generally, these would be High and Average…).\n\nenum class  ConnectionSpeed\n\nSpeed test results are returned as an enum value (For JavaScript consumers, you’ll need to build your own object mapping. See the JavaScript example).\n\nHigh: Device is currently attached to a high-speed, low-latency Internet connection.\n\nAverage: Device is currently attached to an average speed/latency Internet connection (LTE, 3G, etc…).\n\nLow: Device is currently attached to a low-speed, high-latency Internet connection.\n\nUnknown: The current Internet connection speed cannot be determined. Proceed carefully...\n\nExample (C# consumer):\n\nThis example tests for a highspeed network based on a provided HostName (this is the best way to use this API given you really want to know the status of the Internet connection as it pertains to where you need to put/grab data over the network in real time...). Note you should always test for Unknown and then react accordingly (don't proceed with network work. Unknown means you are connected to the Internet, but you can't do network work with acceptable latency.)\n\nHigh and Average are the two results you should test for before doing network work that involves either downloading or uploading data:\n\nC#\n    using InetSpeedUWP; \n \n            ... \n \n             if (InternetConnectionState.Connected)  \n             {  \n                 var speed =  \n                     await InternetConnectionState.GetInternetConnectionSpeedWithHostName(new HostName(\"targethost.com\"));  \n \n                 if (speed == ConnectionSpeed.High)  \n                 {  \n                     \\\\Current network speed is High, low latency  \n                 }  \n                 else if (speed == ConnectionSpeed.Average)  \n                 {  \n                     \\\\Current network speed is Average, average latency  \n                 }  \n                 else if (speed == ConnectionSpeed.Low)  \n                 {  \n                     \\\\Current network speed is Low, high latency  \n                 }  \n                 else  \n                 {  \n                     \\\\Current Network Speed is Unknown - use at your own risk...  \n                 }  \n             }  \n             else  \n             {  \n                 ResultsBox.Text = \"Not Connected to the Internet!\";  \n             }  \n         } \n\nExample (JavaScript consumer):\n\nThe JavaScript WinRT projection doesn't support C++ enum class named values. Instead, the enum integer values are passed along...\n\nThe following makes the code easier to read -> apply named values (JS objects) to numbers (the speed result integer) received from the native API...\n\n  JavaScript\n var ConnectionSpeed = { High: 0, Average: 1, Low: 2, Unknown: 3 };  \n \n   function getConnectionSpeed() {  \n       if (InetSpeedUWP.InternetConnectionState.connected) {  \n               InetSpeedUWP.InternetConnectionState.getInternetConnectionSpeedWithHostName(  \n                 new Windows.Networking.HostName(\"mytargethost.com\"))  \n                 .then(function (speed) {  \n                 if (speed === ConnectionSpeed.Unknown) return;  \n                 if (speed === ConnectionSpeed.High) {  \n                           //Highspeed, low latency Internet connection detected...  \n                 }  \n                 else if  (speed === ConnectionSpeed.Average){  \n                           //Average speed, average latency Internet connection detected...  \n                 }  \n                 else if (speed ===  ConnectionSpeed.Low) {  \n                           //High latency, low speed Internet connection detected...  \n                 }  \n           });  \n       }  \n       else {  \n                 //Not connected...  \n } \n\nExample (C++/CX consumer):\n\n  C++\n  if (InternetConnectionState::Connected) \n    { \n        auto connectionSpeedWithHost = InternetConnectionState::GetInternetConnectionSpeedWithHostName(ref new Windows::Networking::HostName(\"pinterest.com\")); \n        auto _speed = create_task(connectionSpeedWithHost); \n        _speed.then([this](ConnectionSpeed speed) \n        { \n            if (speed == ConnectionSpeed::Unknown) return; \n            TextBoxResults->Text += speed.ToString() + \"\\n\" + \"Raw Speed: \" + InternetConnectionState::RawSpeed + \"\\n\"; \n        }); \n    } \n    else \n    { \n        TextBoxResults->Text = \"Not connected...\"; \n    } \n \n\n\n\n",
  "requireLicenseAcceptance": false,
  "title": "Internet Connection Speed API for Windows 10",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#InetSpeedUWP.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2494,
      "fullName": "InetSpeedUWP.nuspec",
      "length": 7561,
      "name": "InetSpeedUWP.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#lib/InetSpeedUWPARM.winmd",
      "@type": "PackageEntry",
      "compressedLength": 1343,
      "fullName": "lib/InetSpeedUWPARM.winmd",
      "length": 3072,
      "name": "InetSpeedUWPARM.winmd"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#lib/InetSpeedUWPARM.dll",
      "@type": "PackageEntry",
      "compressedLength": 70048,
      "fullName": "lib/InetSpeedUWPARM.dll",
      "length": 182784,
      "name": "InetSpeedUWPARM.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#lib/InetSpeedUWPx64.winmd",
      "@type": "PackageEntry",
      "compressedLength": 1343,
      "fullName": "lib/InetSpeedUWPx64.winmd",
      "length": 3072,
      "name": "InetSpeedUWPx64.winmd"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#lib/InetSpeedUWPx64.dll",
      "@type": "PackageEntry",
      "compressedLength": 75268,
      "fullName": "lib/InetSpeedUWPx64.dll",
      "length": 228352,
      "name": "InetSpeedUWPx64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#lib/InetSpeedUWPx86.winmd",
      "@type": "PackageEntry",
      "compressedLength": 1347,
      "fullName": "lib/InetSpeedUWPx86.winmd",
      "length": 3072,
      "name": "InetSpeedUWPx86.winmd"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#lib/InetSpeedUWPx86.dll",
      "@type": "PackageEntry",
      "compressedLength": 66928,
      "fullName": "lib/InetSpeedUWPx86.dll",
      "length": 189952,
      "name": "InetSpeedUWPx86.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.12.19.44/inetspeeduwp.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}