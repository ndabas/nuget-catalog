{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.09.12.03.29/fakeiteasy.2.0.0-beta011.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Patrik HÃ¤gne, FakeItEasy contributors",
  "catalog:commitId": "682f0d02-25dd-47c9-bc9b-4c2f39876188",
  "catalog:commitTimeStamp": "2016-03-09T12:03:29.5009862Z",
  "copyright": "Copyright (c) FakeItEasy contributors. (fakeiteasyfx@gmail.com)",
  "created": "2016-01-26T20:17:23.753Z",
  "description": "It's faking amazing! The easy mocking framework for .NET that works great in C# and VB.NET alike. No need to know the difference between a stub, a mock or a spy, everything's a fake! The easy to use, refactoring friendly API makes faking a breeze.",
  "iconUrl": "http://fakeiteasy.github.io/img/fakeiteasy_logo_256_square_white.png",
  "id": "FakeItEasy",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "2016-03-09T12:03:15.667Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/FakeItEasy/FakeItEasy/blob/master/License.txt",
  "listed": false,
  "packageHash": "WISlQZrlTawJjj8UVFPLMMixiVwalRITfmvtWLoNfulTyqtGf9sB8drjM49KNGBlnDP7EsvnqPeC2vFtitUO5Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 577139,
  "projectUrl": "http://fakeiteasy.github.io/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "# 2.0.0-beta011\n\n* **Changed**: Removed `ConditionalWeakTable`, `InheritedExportAttribute`, `ImportManyAttribute`, and `Tuple` classes, as well as the\n`Zip` and `FirstFromEachKey` enumerable extension methods - #565\n* **Changed**: unconfigured get properties now return a Dummy, rather than trying to make a Fake first. This matches unconfigured methods' behaviour - #156\n* **Changed**: renamed `IFakeOptionsBuilder` to `IFakeOptions` - #520\n* **Changed**: replaced `IFakeConfigurator` with (new) `IFakeOptionsBuilder` for more powerful implicit configuration - #461\n* **New**: Redefining a rule's behavior throws an informative error - #534\n* **Fixed**: No longer attempting to load Bootstrapper from dynamic assemblies - #561 \n\nWith special thanks for contributions to this release from:\n\n* Igal Tabachnik - @hmemcpy \n\n# 2.0.0-beta010\n\n* **Changed**: fake creation options now have more predictable interactions - #467\n    * `WithAdditionalAttributes` stacks instead of overriding previous calls\n    * `Wrapping` overrides `CallsBaseMethods`, `Strict`, and `ConfigureFake`, on the principle of \"last incompatible action in wins\"\n* **Changed**: dropped Silverlight, Windows8, Windows8.1 support - #507\n* **New**: better threadsafety for `ArgumentValueFormatter ` - #500\n* **New**: explicit error message when `IFakeOptionsBuilder.Implements` is passed a non-interface - #462 \n* **Fixed**: [Out] method parameters treated like `out` parameters, so methods can't be configured (fixed relative earlier 2.0.0 betas, but aligns functionality with FakeItEasy 1.25.3) - #508\n\nWith special thanks for contributions to this release from:\n\n* Tim Lovell-Smith - @TimLovellSmith\n* Jimmy Headdon - @jimmyheaddon \n\n# 2.0.0-beta009\n\n* **New**: Better threadsafety when using `That.Matches` or `Ignored` argument constraints - #476\n* **Fixed**: NullReferenceException when trying to fake a non-virtual generic method method - #480\n\nWith special thanks for contributions to this release from:\n\n* Thomas Levesque - @thomaslevesque \n\n# 2.0.0-beta008\n\n* **Fixed**: auto-property get followed by another get returns different object when property type is not fakeable - #312\n* **New**: `Implements` now has a generic overload: `Implements<IAmAnInterface>()` - #470 \n\nWith special thanks for contributions to this release from:\n\n* Thomas Levesque - @thomaslevesque \n\n# 2.0.0-beta007\n\n* **Changed**: `IFakeOptionsBuilder.OnFakeCreated` is renamed to `ConfigureFake` - #454\n* **Changed**: methods on faked classes may be configured before fake construction, and whether configured or not, behave the same when called from the constructor or not - #371\n\nWith special thanks for contributions to this release from:\n\n* Ulich B - @ulrichb\n\n# 2.0.0-beta006\n\n* **Changed**: `IDummyDefinition` and `DummyDefinition<T>` have been replaced with `IDummyFactory` and `DummyFactory<T>` - #441 \n\n# 2.0.0-beta005\n\n* **Fixed**: Cannot fake types implementing `IDisposable` - #440\n\nWith special thanks for contributions to this release from:\n\n* @shortsn\n\n# 2.0.0-beta004\n\n* **Changed**: Removed FakeItEasy.ExtensionSyntax namespace, which provided fake.Configure().CallsTo(...), fake.CallsTo(...) - #410 \n* **Changed**: Removed IFakeObjectCallRuleWithDescription - #410 \n* **Changed**: Removed Equals and ReferenceEquals static methods from A and Fake - #425 \n* **Changed**: Removed ArgumentCollection's Empty method and made constructors internal - #428 \n* **Changed**: Made TypeCatalogue, ITypeCatalogue internal - #428 \n* **Changed**: Made FakeManager's constructor and Factory delegate internal - #428 \n* **Changed**: Made ICallCollectionAndCallMatcherAccessor, ICallMatcher, ICallMatcherAccessor internal - #428 \n* **Changed**: Made ProxyGeneratorResult internal - #428 \n* **Changed**: Moved ArgumentCollection, IRepeatSpecification, Raise<T> to FakeItEasy.Configuration namespace - #432  \n\n# 2.0.0-beta003\n\n* **Changed**: IDummyDefinition and IFakeConfgurator have more flexibility in creating/configuring subject types, and include new Priority property - #402\n\n# 2.0.0-beta002\n\n* **New**: Default support for Lazy<T> Dummies - #358 \n\nWith special thanks for contributions to this release from: \n\n* Christian Merat - @cmerat\n\n\n# 2.0.0-beta001\n* **New**: Can now raise events of arbitrary delegate type - #30 \n* **Fixed**: Bad exception thrown when fake's base's constructor fails - #367 \n* **Changed**: Now and Go, formerly used when raising events, have been removed - #30 \n* **Changed**: Raising custom event handler event requires typeparam - #30 \n* **Changed**: Passing null sender to Raise.With now raises event with null sender - #395 \n* **Changed**: Removed obsolete Any and Configure types - #408 \n\nWith special thanks for contributions to this release from: \n\n* Matthias Koch - @matkoch \n* Raph - @galaktor ",
  "requireLicenseAcceptance": false,
  "title": "FakeItEasy - Mocking made faking easy!",
  "verbatimVersion": "2.0.0-beta011",
  "version": "2.0.0-beta011",
  "tags": [
    "TDD",
    "unittesting",
    "mocks",
    "mocking",
    "fakes",
    "faking",
    "stubs",
    "stubbing",
    "spy",
    "spies",
    "doubles",
    "isolation",
    "substitutes",
    "substitution"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}