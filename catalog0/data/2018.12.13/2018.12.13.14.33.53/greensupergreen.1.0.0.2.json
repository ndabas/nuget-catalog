{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.14.33.53/greensupergreen.1.0.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "ipavlu",
  "catalog:commitId": "600bf291-b0de-47b5-b6fe-e4b2d87e75c8",
  "catalog:commitTimeStamp": "2018-12-13T14:33:53.8513025Z",
  "copyright": "Copyright Â© ipavlu 2017",
  "created": "2017-12-28T20:54:29.737Z",
  "description": "https://github.com/ipavlu/GreenSuperGreen\n\n\t\tGreenSuperGreen:\n\n\t\tUnified Concurrency The main mission is to unify usage of heterogeneous synchronization primitives with interface/pattern based Object Oriented approach. Switching between multiple synchronization primitives with one code line change! Agile Development ready solution to synchronization. Easy upgrade from general threading to async/await thanks to the pattern based design! Reduced code complexity. Easy correctness testing. Simplified performance optimization. Currently implemented synchronization primitives cover:\n\n\t\twrapper for the .Net SpinLock,\n\t\tTicketSpinLock,\n\t\tLock replacement of C# lock (Monitor),\n\t\twrapper around C# lock (monitor) benchmarking only,\n\t\tasync/await AsyncLock,\n\t\tasync/await AsyncSpinLock,\n\t\tasync/await AsyncTicketSpinLock.\n\t\tAsyncTesting: SequencerUC A strongly typed Sequencer is a powerful threading or async/await based unit testing tool to simplify and test correctness in asynchronous and/or parallel code. The Sequencer allows to simplify control/detection of one or many testing thread flows and allows to deterministically setup testing scenario from unit test method and optionally inject data into the tested code to ensure required state.\n\n\t\tMIT License\n\n\t\tCopyright (c) 2017 ipavlu\n\n\t\tPermission is hereby granted, free of charge, to any person obtaining a copy\n\t\tof this software and associated documentation files (the \"Software\"), to deal\n\t\tin the Software without restriction, including without limitation the rights\n\t\tto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t\tcopies of the Software, and to permit persons to whom the Software is\n\t\tfurnished to do so, subject to the following conditions:\n\n\t\tThe above copyright notice and this permission notice shall be included in all\n\t\tcopies or substantial portions of the Software.\n\n\t\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t\tIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t\tFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t\tAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t\tLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t\tOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t\tSOFTWARE.",
  "id": "GreenSuperGreen",
  "isPrerelease": false,
  "lastEdited": "2018-12-13T14:33:48.37Z",
  "licenseUrl": "https://github.com/ipavlu/GreenSuperGreen/blob/master/LICENSE",
  "listed": true,
  "packageHash": "Jffzu0/NJDaSiE8eld9TsBc48+Lbc3+X/FoA35suX6f+10L01MeFjRqD4SxXR646eM69w6zzsg9iSiM+xNeZBA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 44023,
  "published": "2017-12-28T20:54:29.737Z",
  "releaseNotes": "https://github.com/ipavlu/GreenSuperGreen&#x000D;&#x000A;&#x000D;&#x000A;GreenSuperGreen:&#x000D;&#x000A;&#x000D;&#x000A;Unified&#x0020;Concurrency&#x0020;The&#x0020;main&#x0020;mission&#x0020;is&#x0020;to&#x0020;unify&#x0020;usage&#x0020;of&#x0020;heterogeneous&#x0020;synchronization&#x0020;primitives&#x0020;with&#x0020;interface/pattern&#x0020;based&#x0020;Object&#x0020;Oriented&#x0020;approach.&#x0020;Switching&#x0020;between&#x0020;multiple&#x0020;synchronization&#x0020;primitives&#x0020;with&#x0020;one&#x0020;code&#x0020;line&#x0020;change!&#x0020;Agile&#x0020;Development&#x0020;ready&#x0020;solution&#x0020;to&#x0020;synchronization.&#x0020;Easy&#x0020;upgrade&#x0020;from&#x0020;general&#x0020;threading&#x0020;to&#x0020;async/await&#x0020;thanks&#x0020;to&#x0020;the&#x0020;pattern&#x0020;based&#x0020;design!&#x0020;Reduced&#x0020;code&#x0020;complexity.&#x0020;Easy&#x0020;correctness&#x0020;testing.&#x0020;Simplified&#x0020;performance&#x0020;optimization.&#x0020;Currently&#x0020;implemented&#x0020;synchronization&#x0020;primitives&#x0020;cover:&#x000D;&#x000A;&#x000D;&#x000A;wrapper&#x0020;for&#x0020;the&#x0020;.Net&#x0020;SpinLock,&#x000D;&#x000A;TicketSpinLock,&#x000D;&#x000A;Lock&#x0020;replacement&#x0020;of&#x0020;C#&#x0020;lock&#x0020;(Monitor),&#x000D;&#x000A;wrapper&#x0020;around&#x0020;C#&#x0020;lock&#x0020;(monitor)&#x0020;benchmarking&#x0020;only,&#x000D;&#x000A;async/await&#x0020;AsyncLock,&#x000D;&#x000A;async/await&#x0020;AsyncSpinLock,&#x000D;&#x000A;async/await&#x0020;AsyncTicketSpinLock.&#x000D;&#x000A;AsyncTesting:&#x0020;SequencerUC&#x0020;A&#x0020;strongly&#x0020;typed&#x0020;Sequencer&#x0020;is&#x0020;a&#x0020;powerful&#x0020;threading&#x0020;or&#x0020;async/await&#x0020;based&#x0020;unit&#x0020;testing&#x0020;tool&#x0020;to&#x0020;simplify&#x0020;and&#x0020;test&#x0020;correctness&#x0020;in&#x0020;asynchronous&#x0020;and/or&#x0020;parallel&#x0020;code.&#x0020;The&#x0020;Sequencer&#x0020;allows&#x0020;to&#x0020;simplify&#x0020;control/detection&#x0020;of&#x0020;one&#x0020;or&#x0020;many&#x0020;testing&#x0020;thread&#x0020;flows&#x0020;and&#x0020;allows&#x0020;to&#x0020;deterministically&#x0020;setup&#x0020;testing&#x0020;scenario&#x0020;from&#x0020;unit&#x0020;test&#x0020;method&#x0020;and&#x0020;optionally&#x0020;inject&#x0020;data&#x0020;into&#x0020;the&#x0020;tested&#x0020;code&#x0020;to&#x0020;ensure&#x0020;required&#x0020;state.&#x000D;&#x000A;&#x000D;&#x000A;MIT&#x0020;License&#x000D;&#x000A;&#x000D;&#x000A;Copyright&#x0020;(c)&#x0020;2017&#x0020;ipavlu&#x000D;&#x000A;&#x000D;&#x000A;Permission&#x0020;is&#x0020;hereby&#x0020;granted,&#x0020;free&#x0020;of&#x0020;charge,&#x0020;to&#x0020;any&#x0020;person&#x0020;obtaining&#x0020;a&#x0020;copy&#x000D;&#x000A;of&#x0020;this&#x0020;software&#x0020;and&#x0020;associated&#x0020;documentation&#x0020;files&#x0020;(the&#x0020;\"Software\"),&#x0020;to&#x0020;deal&#x000D;&#x000A;in&#x0020;the&#x0020;Software&#x0020;without&#x0020;restriction,&#x0020;including&#x0020;without&#x0020;limitation&#x0020;the&#x0020;rights&#x000D;&#x000A;to&#x0020;use,&#x0020;copy,&#x0020;modify,&#x0020;merge,&#x0020;publish,&#x0020;distribute,&#x0020;sublicense,&#x0020;and/or&#x0020;sell&#x000D;&#x000A;copies&#x0020;of&#x0020;the&#x0020;Software,&#x0020;and&#x0020;to&#x0020;permit&#x0020;persons&#x0020;to&#x0020;whom&#x0020;the&#x0020;Software&#x0020;is&#x000D;&#x000A;furnished&#x0020;to&#x0020;do&#x0020;so,&#x0020;subject&#x0020;to&#x0020;the&#x0020;following&#x0020;conditions:&#x000D;&#x000A;&#x000D;&#x000A;The&#x0020;above&#x0020;copyright&#x0020;notice&#x0020;and&#x0020;this&#x0020;permission&#x0020;notice&#x0020;shall&#x0020;be&#x0020;included&#x0020;in&#x0020;all&#x000D;&#x000A;copies&#x0020;or&#x0020;substantial&#x0020;portions&#x0020;of&#x0020;the&#x0020;Software.&#x000D;&#x000A;&#x000D;&#x000A;THE&#x0020;SOFTWARE&#x0020;IS&#x0020;PROVIDED&#x0020;\"AS&#x0020;IS\",&#x0020;WITHOUT&#x0020;WARRANTY&#x0020;OF&#x0020;ANY&#x0020;KIND,&#x0020;EXPRESS&#x0020;OR&#x000D;&#x000A;IMPLIED,&#x0020;INCLUDING&#x0020;BUT&#x0020;NOT&#x0020;LIMITED&#x0020;TO&#x0020;THE&#x0020;WARRANTIES&#x0020;OF&#x0020;MERCHANTABILITY,&#x000D;&#x000A;FITNESS&#x0020;FOR&#x0020;A&#x0020;PARTICULAR&#x0020;PURPOSE&#x0020;AND&#x0020;NONINFRINGEMENT.&#x0020;IN&#x0020;NO&#x0020;EVENT&#x0020;SHALL&#x0020;THE&#x000D;&#x000A;AUTHORS&#x0020;OR&#x0020;COPYRIGHT&#x0020;HOLDERS&#x0020;BE&#x0020;LIABLE&#x0020;FOR&#x0020;ANY&#x0020;CLAIM,&#x0020;DAMAGES&#x0020;OR&#x0020;OTHER&#x000D;&#x000A;LIABILITY,&#x0020;WHETHER&#x0020;IN&#x0020;AN&#x0020;ACTION&#x0020;OF&#x0020;CONTRACT,&#x0020;TORT&#x0020;OR&#x0020;OTHERWISE,&#x0020;ARISING&#x0020;FROM,&#x000D;&#x000A;OUT&#x0020;OF&#x0020;OR&#x0020;IN&#x0020;CONNECTION&#x0020;WITH&#x0020;THE&#x0020;SOFTWARE&#x0020;OR&#x0020;THE&#x0020;USE&#x0020;OR&#x0020;OTHER&#x0020;DEALINGS&#x0020;IN&#x0020;THE&#x000D;&#x000A;SOFTWARE.&#x000D;&#x000A;",
  "requireLicenseAcceptance": false,
  "title": "GreenSuperGreen",
  "verbatimVersion": "1.0.0.2",
  "version": "1.0.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.14.33.53/greensupergreen.1.0.0.2.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.14.33.53/greensupergreen.1.0.0.2.json#GreenSuperGreen.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2584,
      "fullName": "GreenSuperGreen.nuspec",
      "length": 9315,
      "name": "GreenSuperGreen.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.14.33.53/greensupergreen.1.0.0.2.json#lib/net46/GreenSuperGreen.dll",
      "@type": "PackageEntry",
      "compressedLength": 28559,
      "fullName": "lib/net46/GreenSuperGreen.dll",
      "length": 65536,
      "name": "GreenSuperGreen.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.14.33.53/greensupergreen.1.0.0.2.json#content/UnifiedConcurrency/ISimpleLockUC/SpinLockUC/ReadMe.txt",
      "@type": "PackageEntry",
      "compressedLength": 331,
      "fullName": "content/UnifiedConcurrency/ISimpleLockUC/SpinLockUC/ReadMe.txt",
      "length": 1118,
      "name": "ReadMe.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.14.33.53/greensupergreen.1.0.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}