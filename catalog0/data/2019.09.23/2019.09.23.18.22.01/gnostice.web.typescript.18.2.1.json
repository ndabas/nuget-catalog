{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.23.18.22.01/gnostice.web.typescript.18.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gnostice Information Technologies",
  "catalog:commitId": "4504e662-fb66-4ade-b08c-bf3c2276376c",
  "catalog:commitTimeStamp": "2019-09-23T18:22:01.4304001Z",
  "copyright": "© 2002-2018 Gnostice Information Technologies Private Limited. All rights reserved.",
  "created": "2018-10-25T05:22:05.943Z",
  "description": "Gnostice XtremeDocumentStudio .NET Multi-format ASP.NET Document Viewer is the next-generation multi-format document-viewing technology for .NET developers. The DocumentViewer control supports viewing, form-filling, text searching (with OCR support) and printing PDF, DOCX, DOC, TXT, BMP, JPEG, PNG, WMF, EMF, and single-page and multi-page TIFF. It works on both desktop(Windows 7, Windows 8.1, Windows 10, Linux, Mac OS X) and mobile browsers (IOS, Android, Windows Phone).",
  "iconUrl": "http://www.gnostice.com/images/ICON_xtremedocumentstudio_dot_net.png",
  "id": "Gnostice.Web.TypeScript",
  "isPrerelease": false,
  "lastEdited": "2019-09-23T18:21:56.273Z",
  "licenseUrl": "http://www.gnostice.com/XtremeDocumentStudio_dot_NET.asp?show=licenses",
  "listed": false,
  "packageHash": "cBIw/qAjSxTlKsos/1kz9L9WdrlA9ACfwmRUOzce27WX+NY7xPGfmhGjLnoCORe3OmdrQncwPV1EDnfCYhHeAA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26249,
  "projectUrl": "http://www.gnostice.com/XtremeDocumentStudio_dot_NET.asp",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Version 2018 R2 - September 24, 2018\n====================================\nEnhanced\n~~~~~~~~\n- ASP.NET Document Viewer\n\t- Removed dependency of Quartz .NET.\n\t- Support for viewing encrypted PDF files.\n\t- Added password entry dialog box.\n\t- Support for honoring document security restrictions. \n\t- Introduced ‘Document Info’ toolbar control to show document description and security details.\n\t- Server-side APIs:\n\t\t- Introduced overloaded method for LoadDocument which takes document password.\n\t\t- Introduced “ServerEventsHandler” abstract class to provide server side document operations.\n\t\t\t- OnServerStart\n\t\t\t- BeforeDocumentLoad\n\t\t\t- NeedUsername\n\t\t\t- AfterDocumentSave\n\t\t- Introduced ‘‘ViewerPreferences.Interactivity’ API for setting interactivity preferences.\n\t\t\t- ViewerPreferences.Interactivity.AllowFormFilling\n\t\t\t- ViewerPreferences.Interactivity.AllowAnnotations\n\t\t- Introduced ‘ViewerPreferences.FileOperations’ API for setting \trestrictions on file operations .\n\t\t\t- ViewerPreferences.FileOperations.AllowUpload\n\t\t\t- ViewerPreferences.FileOperations.AllowDownload\n\t\t\t- ViewerPreferences.FileOperations.AllowDownloadAs\n\t\t\t- ViewerPreferences.FileOperations.AllowSave\n\t\t\t- ViewerPreferences.FileOperations.AllowPrinting\n\t\t- Introduced ‘ViewerPreferences.Rendering’ API for setting rendering and printing DPI.\n\t\t\t- ViewerPreferences.Rendering.ViewingDPI\n\t\t\t- ViewerPreferences.Rendering.PrintingDPI\n\t\t- Introduced ‘ViewerPreferences.Digitization’ API for setting digitization preferences.\n\t\t\t- ViewerPreferences.Digitization.Enabled\n\t\t\t- ViewerPreferences.Digitization.RecognizeLanguages\n\t\t- Introduced ‘ViewerPreferences.Security.ForceFullUserPermissions’’ API to enforce full permissions to the user. \n\t- Client-side APIs:\n\t\t- Introduced “documentViewer.View.getCurrentPageNumber()” method to get current viewing page number in the viewer.\n\t\t- Introduced “documentViewer.View.refresh()” method to re-render the document viewer.\n\t\t- Introduced “propertiesInfo” property on “Preferences.VisibleFileOperationControls” to specify whether \"Properties Info\" control needs to be displayed.\n\t\t- Introduced “enablePasswordDialog” property on “Preferences.Security” to specify whether the password dialog box needs to be shown.\n\t\t- Introduced “maxNumberOfPasswordRetries” property on “Preferences.Security” to specifies the maximum number of attempts for entering the password.  \n\t\t- Introduced overloaded method for loadDocument which takes document password.\n\t- Events\n\t\t- Introduced “needDocumentPassword” event which fires when the document is password protected and when the correct password has not been provided via the loadDocument method.\n\t- API refactoring:\n\t\t- Renamed the following client side APIs.\n\t\t\t- Preferences.viewSettings to Preferences.initialView\n\t\t\t- Preferences.securitySettings to Preferences.security\n\t\t\t- Preferences.interactiveElements.formFields to Preferences.interactiveElements.form\n\t\t- Moved the following client side APIs to server side.\n\t\t\t- preferences.renderingDpi\n\t\t\t- preferences.printingDpi\n\t\t\t- preferences.interactiveElements.formFields.enableFormFilling\n\t\t\t- preferences.interactiveElements.annotations.enableAnnotations\n\t\t\t- preferences.digitizerSettings\n\t\t\t- preferences.userIdentity.name\n- WinForms Document Viewer\n\t- Support for interactivity with link annotations for Go-to, Named and URL action types.\n\t- Support for interactivity with Pop Up annotations.\n- Document Manager\n\t- Added GetFileInfo methods in DocumentManager to get file information such as MIME type, size, whether open password is required to open the document.\n\nFixed\n~~~~~\n- ASP.NET Document Viewer\n\t- Delay in updating of page count indicator.\n\t- Page count indicator animation continues to show even after all pages are loaded for flow documents.\n- Document Converter\n\t- XPS to PNG conversion fails.\n\t- Converter hangs for text files since the DocumentManager is not loading the text file after creating the default engine (TXT).\n\t- Throws PDFException \"Parameter is not valid\" while converting from DOCX to PDF when the source DOCX contains JPEG images of Colorspace type CMYK.\n- PDF Engine\n\t- JavaScript actions are not read for annotations and form fields when the JavaScript value is specified as non-String object i.e., Indirect Reference or Stream object in the action dictionary.\n\t- Javascript actions represented as Indirect reference or PDFStream are not parsed resulting in NULL return value.\n\t- Text and shapes are not rendered at correct location when cm transformations and shapes rendering occur between BT (BeginText) and ET (EndText) operations.\n\t- Issue in storing and restoring negative font size resulting in incorrect rotation of the rendered text.\n\t- Multiple text extraction issues related to Type0 and Type3 fonts which is producing incorrect output while converting from PDF to text.\n\t- Trial mark is not shown correctly in thumbnail images as the font size adjustment is not done according to the scale value of the transformation.\n\t- Throws PDFException \"Unsupported action\" while reading annotations having non-standard Named action types.\n\t- Text elements written with individual glyph positioning values are not rendered at the correct position when the glyph positioning value is not specified for any of the characters.\n\t- While saving encrypted documents the empty string values are not encrypted causing the document to have loading issue when the saved document is loaded.\n\t- Throws \"Generic GDI+ error\" while rendering PDF pages having MediaBox value that are not mentioned in the order [left bottom right top].\n\t- Form field values are always rendered using Helvetica font ignoring the font specified in the /DA entry of form field dictionary.\n\t- For Text form fields, the new value set is not updated in the Normal appearance stream of the field only when the old value is empty in the appearance stream.\n\t- Appearance stream of the form fields are always created using the properties of Parent field ignoring the properties of its own.\n\t- The value for /AS entry of Text form field is always written as String type instead of Name type causing the generated document not conforming the PDF standard.\n\t- While saving existing loaded documents the /Metadata and /StructTreeRoot entries referenced in the /Catalog dictionary are mapped to incorrect objects.\n- Word Engine\n\t- Incorrect positioning of text boxes that overflow page bounds.\n\t- Borders being for text boxes which don’t have a border.\n\t- Text boxes present in headers and footers are not rendered.\n\t- Text boxes with “no-fill” are being rendered opaque thereby hiding the content behind them.\n\t- Information about the exact portion of the image to be displayed is not processed resulting in rendered image not being cropped.\n\t- Relative position of floating tables not being handled resulting in improper positioning.\n\t- Para borders not rendering correctly for paras with indents.\n\t- Incorrect positioning of images when it is not inline and its width is more than the display region. \n- Spreadsheets Engine\n\t- Engine hangs when other format (ex: Text) files are attempted to be loaded.\n\t- XLS parsing issue where header is parsed incorrectly resulting in failure of many files.\n- Image Engine\n\t- Rendering issue with Tiff where some data is lost.\n- Text Engine\n\t- LoadDocument method taking a stream end up closing the stream.\n\t- Inconsistent output when rendering TXT files or converting to PDF.",
  "requireLicenseAcceptance": true,
  "summary": "TypeScript Definitions (d.ts) Gnostice XtremeDocumentStudio .NET ASP.NET Document Viewer",
  "title": "Gnostice.Web.TypeScript.Declarations",
  "verbatimVersion": "18.2.1",
  "version": "18.2.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.23.18.22.01/gnostice.web.typescript.18.2.1.json#Gnostice.Web.TypeScript.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3485,
      "fullName": "Gnostice.Web.TypeScript.nuspec",
      "length": 9390,
      "name": "Gnostice.Web.TypeScript.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.23.18.22.01/gnostice.web.typescript.18.2.1.json#Content/Scripts/typings/gnostice.xtremedocumentstudio/documentviewer.d.ts",
      "@type": "PackageEntry",
      "compressedLength": 11112,
      "fullName": "Content/Scripts/typings/gnostice.xtremedocumentstudio/documentviewer.d.ts",
      "length": 75269,
      "name": "documentviewer.d.ts"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.23.18.22.01/gnostice.web.typescript.18.2.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9480,
      "fullName": ".signature.p7s",
      "length": 9480,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ASP.NET",
    "Web-PDFViewer",
    "ASP.NET-PDF-Viewer",
    "Web-document-Viewer",
    "pdfviewer",
    "documentviewer",
    "asp.netpdfviewer",
    "asp.net-mvc-viewer",
    "htmlpdfviewer",
    "Document",
    "Viewer",
    "PDF",
    "DOCX",
    "DOC",
    "TIFF",
    "JPG",
    "BMP",
    "PNG",
    "image",
    "viewer",
    "Printer",
    "tiffviewer",
    "docxviewer",
    "docviewer",
    "imageviewer",
    "OCR",
    "Search",
    "FormFilling"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}