{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.23.16.37/google.datatable.net.wrapper.3.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Zoran Maksimovic",
  "catalog:commitId": "cb251ceb-bdc6-4ebf-b622-c828decbf317",
  "catalog:commitTimeStamp": "2015-02-02T23:16:37.0054581Z",
  "copyright": "Zoran Maksimovic (c) www.agile-code.com",
  "created": "2013-01-08T01:11:27.56Z",
  "description": "This library enables the end users to create a lightweight representation of the  google.visualization.DataTable object directly in Microsoft.NET and the creation of the necessary JSON as needed by the Google Chart Tools Javascript library.",
  "id": "Google.DataTable.Net.Wrapper",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "YVmCEeo05Qvrm/9IcsMBdIhSbAE48puzO0zvoDDuyJ4PIWxNECgvCcmd1HF2ZdTnnF6tVq/Cjfxe/5FIG2mieQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27285,
  "projectUrl": "http://googledatatablelib.codeplex.com/",
  "published": "2013-01-08T01:11:27.56Z",
  "releaseNotes": "Version 3.0.0.0 mainly brings an unified way of managing custom properties that previously was managed by a simple string where the developer had to format the properties directly as a string. Now, the so called PropertyMap brings a Name-Value list that simplifies the management and serialization itself of the object.\n\nTo note as well is the introduction of the System.Data.DataTable converter into the Google.DataTable.Net.Wrapper.DataTable format. \n\nBREAKING CHANGES\n\n- Attribute \"Properties\" removed from the Column object. Use the new PropertyMap attribute instead.\n- Attribute \"Properties\" removed from the Cell object. Use the new PropertyMap attribute instead.\n\nIf the above two attributes haven't been used directly in the code, no changes to the source code is needed.\n\nIMPROVEMENTS\n\n- ntroduced new type SystemDataTableConverter which contains code that converts a ADO:NET System.Data.DataTable into the project's DataTable. This gives a possibility to return a Json string from a widely known System.Data.DataTable.\n\n- Added Role attribute to the Column. It gets serialized as... cols\":[{\"p\":{\"role\":\"....}]\n\n- Added management for default Column.Id names if not specified.\n\n- Added PropertyMap attributes to Cell, Row and Column objects. This gives an unified way of handling custom assigned properties to objects.\n\nBUG FIXES\n\n- Removed a trailing comma in the JSON string when a Cell (p tag) is serialized. This was causing an invalid JSON string.\n\n- Changed the way of how the Date object get's serialized in the JSON string. Now the object is returned quoted. \"new Date...\"\nChange the way of how the Date() format is handled in the Json output. Removed the keyword \"new\" that was apparently causing some troubles.",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "Google.DataTable.Net.Wrapper",
  "version": "3.0.0",
  "tags": [
    "Google.Visualization",
    "DataTable",
    "Microsoft.NET",
    "JSON",
    "Javascript",
    "charts"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}