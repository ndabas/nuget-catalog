{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.01.20.56.22/enough.lifecycle.1.2.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Robert Virkus, Enough Software",
  "catalog:commitId": "411c7d31-befa-4816-abc1-7a8d954be580",
  "catalog:commitTimeStamp": "2015-07-01T20:56:22.172527Z",
  "created": "2015-06-09T13:28:28.367Z",
  "description": "MVVM classes for universal Windows apps that take the lifecyle of such apps into account.",
  "iconUrl": "http://download.enough.de/nuget/Enough_Lifecycle.png",
  "id": "Enough.Lifecycle",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://lifecycle.codeplex.com/license",
  "listed": true,
  "packageHash": "jioQ0pNdKLZDO/CpE5McoqYhd8dgo3+QSGg6H51W+K9duOU+oxk2ocUqcGF8KuTh4KMhxv6hQV45n32/PaT1HA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 108792,
  "projectUrl": "http://lifecycle.codeplex.com",
  "published": "2015-06-09T13:28:28.367Z",
  "releaseNotes": "Enough.Lifecycle manages the lifecycle of universal Windows MVVM apps. ObservableObject now implements the DataContract contract, so that subclasses can be serialized correctly.",
  "requireLicenseAcceptance": false,
  "title": "MVVM for universal Windows apps.",
  "version": "1.2.4",
  "tags": [
    "MVVM",
    "Universal",
    "Lifecycle",
    "Resume",
    "Enough",
    "EnoughSoftware"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}