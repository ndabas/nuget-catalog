{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.06.42.02/microsoft.odata.client.6.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Microsoft Corporation",
  "catalog:commitId": "b19aabc0-b846-4b41-a0d5-ee6ec58da4f1",
  "catalog:commitTimeStamp": "2015-02-06T06:42:02.9260081Z",
  "created": "2014-08-29T10:28:53.527Z",
  "description": "LINQ-enabled client API for issuing OData queries and consuming OData JSON payloads. Supports OData v4 only. Targets .NET 4.0, and .NET Portable Lib with support for .NET 4.5, Win Phone 8, Win Phone 8.1, and Win 8. Localized for CHS, CHT, DEU, ESN, FRA, ITA, JPN, KOR and RUS.\nOData .NET library is open source at http://odata.codeplex.com",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.06.42.02/microsoft.odata.client.6.7.0.json#frameworkassemblygroup/silverlight4.0",
    "assembly": [
      "System.Windows",
      "System.Xml.Linq"
    ],
    "targetFramework": "Silverlight4.0"
  },
  "iconUrl": "http://static.tumblr.com/hgchgxz/9ualgdf98/icon.png",
  "id": "Microsoft.OData.Client",
  "isPrerelease": false,
  "lastEdited": "2014-08-29T10:38:48.523Z",
  "licenseUrl": "http://go.microsoft.com/?linkid=9809688",
  "packageHash": "kTkp9BuXQwW5PNLfDe7Ln2+u2JqyjMZv+aBdfbFs/3SJSjOWEahb6X8M0fn5qrcQHzcS87bP0FGNjg215I3zuQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1263242,
  "projectUrl": "http://go.microsoft.com/fwlink/?LinkId=220868",
  "published": "2014-08-29T10:28:53.527Z",
  "releaseNotes": "Features: \n\n1. EdmLib supports a list of additional core vocabulary terms\n    -  IsLanguageDependent\n    -  RequiresType\n    -  ResourcePath\n    -  DereferenceableIDs\n    -  ConventionalIDs\n    -  Immutable\n    -  Computed\n    -  IsURL\n    -  AcceptableMediaTypes\n    -  MediaType\n    -  IsMediaType\n2. EdmLib supports adding metadata annotations to elements in Edm model.\n3. ODataLib supports computing Uri with KeyAsSegment convention for deserializing.\n4. ODataUriParser supports Enum value as an entity key\n5. ODataLib supports overriding default Uri parsing behavior, including:\n    -  Resolving property name\n    -  Resolving type name\n    -  Resolving navigation source name\n    -  Resolving operation import name\n    -  Resolving bound operation name\n    -  Resolving function parameters\n    -  Resolving entity set key\n    -  Resolving binary operator node elements\n\n     We have also provided built-in implementations to enable following scenarios:\n\n    1) Case insensitive for built in identifiers, including:\n        •  In path segment\n            $batch, $metadata, $count, $ref, $value\n        •  In query options\n            $id, $select, $expand(including nested query options), $levels, $filter, $orderby, $skip, $top, $count, $search, max, asc, desc, any, all, contains, startswith, endswith, length, indexof, substring, tolower, toupper, trim, concat, year, month, day, hour,  minute, second, fractionalseconds, totalseconds, totaloffsetminutes, mindatetime maxdatetime, now, and, or, eq, ne, lt, le, gt, ge, has, add, sub, mul, div, mod, not, round, floor, ceiling, isof, cast, geo.distance, geo.length, geo.intersects\n        •  $it, true, false, null, are not supported and should be case sensitive\n        •  AND, OR, NOT for $search are not supported and should be case sensitive\n\n    2) Case insensitive for user metadata, including :\n        •  EntitySet/Singleton Name\n        •  EntitySet key predicate name\n        •  Property Name\n        •  Type Name\n        •  FunctionImport name/parameter name\n        •  ActionImport name\n        •  Bound function name/parameter name\n        •  Bound action name\n\n    3) Unqualified function call, including:\n        •  Bound function call without namespace prefix\n        •  Bound action call without namespace prefix\n\n    4) Omitting Enum type name prefix for Enum value, including:\n        •  Omitting Enum type prefix in binary operator\n        •  Omitting Enum type prefix in entity set key value\n        •  Omitting Enum type prefix in function parameter\n                                \nBug fixes: \n\n1. Fixes a bug that DataServiceCollection<T> constructor runs into stack overflow when parameter T derives from a generic type of T.\n2. Fixes a bug that Edm validator doesn't correctly report error when the Edm model contains dupped key properties.",
  "requireLicenseAcceptance": true,
  "summary": "LINQ-enabled client API for issuing OData queries and consuming OData JSON payloads. Supports OData v4 only.",
  "title": "OData Client for .NET",
  "version": "6.7.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.06.42.02/microsoft.odata.client.6.7.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.06.42.02/microsoft.odata.client.6.7.0.json#dependencygroup/microsoft.odata.core",
          "@type": "PackageDependency",
          "id": "Microsoft.OData.Core",
          "range": "[6.7.0, 6.7.0]"
        }
      ]
    }
  ],
  "tags": [
    "wcf",
    "data",
    "services",
    "odata",
    "odatalib",
    "edmlib",
    "spatial",
    "ado.net",
    "ef",
    "entity",
    "framework",
    "open",
    "protocol",
    "wcfds",
    "wcfdataservices",
    "dataservices"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}