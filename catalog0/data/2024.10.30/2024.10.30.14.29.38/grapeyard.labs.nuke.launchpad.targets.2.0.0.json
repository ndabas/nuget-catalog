{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Steffen Grund",
  "catalog:commitId": "b5ff15fe-d147-4f1b-a097-43f17ab2f01b",
  "catalog:commitTimeStamp": "2024-10-30T14:29:38.6714937Z",
  "copyright": "Copyright (c) Steffen Grund",
  "created": "2024-10-30T14:27:33.803Z",
  "description": "Predefined build targets for the build automation tool NUKE for C# and .NET.",
  "iconFile": "icon.png",
  "id": "Grapeyard.Labs.Nuke.Launchpad.Targets",
  "isPrerelease": false,
  "lastEdited": "2024-10-30T14:29:36.547Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "GQLqgynMsZ5j6omszc9yJ375yCZkHuDyOmUS7fhzJxHotFGnytjckRDZiJmRdrrkbgbaJ5upfUmvxISGNzHcoA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 130778,
  "published": "2024-10-30T14:27:33.803Z",
  "readmeFile": "README.md",
  "releaseNotes": "Added\n\n• Integrated the central package management (CPM) feature of NuGet to manage dependency versions from a central file.\n• Added an optional Boolean logging parameter to the following methods, allowing to enable or disable logging of the publishing process:\n    ◦ Method PublishFileToDirectory of the ExtendedFileSystemTasks class.\n    ◦ Method PublishPackagesToLocalPackageRepositories of the IPublishToLocalPackageRepositories target base interface.\n• Added class ConditionalLog that contains wrapper methods which forward calls to the Serilog library based on runtime conditions.\n• Added configuration property ExtensiveLogging to the following target interfaces:\n    ◦ Target surrogate interface IFinalizeChangelogWithKeepAChangelogFormat. The property allows extensive logging to be enabled for read and write access to the changelog file during a target run.\n    ◦ Target surrogate interface IPublishToLocalPackageRepositoriesForDotNet. The property allows extensive logging to be enabled for the copying of NuGet packages to local package repositories during a target run.\n    ◦ Target surrogate interface IUpdateCopyrightYearsOfRepositoryLicenseToCurrent. The property allows extensive logging to be enabled for read and write access to the license file of the repository during a target run.\n\nChanged\n\n• Breaking: Generalized the names of the optional Boolean logging parameters of the following methods, made most of the parameters relevant to all local logging statements instead of just some and changed their default values to false to make them less intrusive:\n    ◦ Method UpdateStaticBadges of the BadgeProvider class. Renamed the parameter from logBadgeUpdate to logUpdate.\n    ◦ Methods UpdateStaticBuildStatusBadges, UpdateStaticTestResultsBadges and UpdateStaticVersionBadges of the BadgeProviderExtensions class. Renamed the parameters from logBadgeProvider to logUpdate.\n    ◦ Method UpdateVersionOfNuGetPackageReferences of the DocumentingTasks class. Renamed the parameter from logVersionUpdate to logUpdate.\n    ◦ Methods WriteAllLinesAtomically and ReadWriteAllLinesAtomically of the AbsolutePathExtensions class. Renamed the parameters from logTempFileCreation to logWriting and logReadingWriting.\n    ◦ Methods CreateTempFile, DeleteFile and DeleteDirectory and overloaded methods DeleteFiles and DeleteDirectories of the ExtendedFileSystemTasks class. Renamed the parameters from logFileCreation, logFileDeletion and logDirectoryDeletion to logCreation and logDeletion.\n    ◦ Overloaded method CreateTestReportFromLogFilesInDirectory of the VisualStudioTestFormatTasks class. Renamed the parameter from logTestLogFiles to logCreation.\n    ◦ Method UpdateStaticBadgesForBadgeProviders of the IUpdateStaticBadges target bundle interface. Renamed the parameter from logVerbosely to logUpdate.\n    ◦ Method DeleteSuperfluousThirdPartyLicenses of the IUpdateThirdPartyLicenses target bundle interface. Renamed the parameter from logFileDeletion to logDeletion.\n• Breaking: Renamed parameter interface IUsesVerboseLogging to IUsesExtensiveLogging and its build parameter --verbose-logging to --extensive-logging to better distinguish it from the default build parameter --verbosity of NUKE. Changed the build parameter's default value to true.\n• Breaking: Renamed the configuration properties concerning logging of the following target interfaces to ExtensiveLogging, thereby reflecting the name change of parameter interface IUsesVerboseLogging to IUsesExtensiveLogging, and changed their default values to true to activate extensive logging by default:\n    ◦ Properties VerboseLogging of the ICleanForDotNet, IUpdateStaticBadgesInMainReadmeForBadgeProviders, IUpdateDocumentedNuGetPackageReferencesOfProjectsToNewest and IUpdateThirdPartyLicensesFromWebLinks target surrogate interfaces.\n    ◦ Properties VerboseReportLogging of the IIntegrationTestWithDotNet and IUnitTestWithDotNet target surrogate interfaces.\n• Updated dependencies to NuGet package Nuke.Common from version 8.0.0 to 8.1.2.\n• Updated dependencies to NuGet package GitVersion.Tool from version 6.0.2 to 6.0.3.\n• Modified overloaded method ExtractReleaseNotesForNuGet of the KeepAChangelogFormatTasks class to remove the Markdown emphases for bold and bold-italic text using two and three asterisks from logged changes.\n• Modified build parameter --local-package-repository-dirs of the IHasLocalPackageRepositories parameter interface to accept both relative and absolute paths as input values.\n\nFull changelog at https://gitlab.com/grapeyard-labs/libs/nuke-launchpad/-/blob/2.0.0/CHANGELOG.md",
  "repository": "",
  "title": "Grapeyard.Labs.Nuke.Launchpad.Targets",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#dependencygroup/net8.0/grapeyard.labs.nuke.launchpad.common",
          "@type": "PackageDependency",
          "id": "Grapeyard.Labs.Nuke.Launchpad.Common",
          "range": "[2.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#dependencygroup/net8.0/grapeyard.labs.nuke.launchpad.parameters",
          "@type": "PackageDependency",
          "id": "Grapeyard.Labs.Nuke.Launchpad.Parameters",
          "range": "[2.0.0, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#Grapeyard.Labs.Nuke.Launchpad.Targets.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2102,
      "fullName": "Grapeyard.Labs.Nuke.Launchpad.Targets.nuspec",
      "length": 5897,
      "name": "Grapeyard.Labs.Nuke.Launchpad.Targets.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#lib/net8.0/Grapeyard.Labs.Nuke.Launchpad.Targets.dll",
      "@type": "PackageEntry",
      "compressedLength": 64316,
      "fullName": "lib/net8.0/Grapeyard.Labs.Nuke.Launchpad.Targets.dll",
      "length": 165888,
      "name": "Grapeyard.Labs.Nuke.Launchpad.Targets.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#lib/net8.0/Grapeyard.Labs.Nuke.Launchpad.Targets.xml",
      "@type": "PackageEntry",
      "compressedLength": 40982,
      "fullName": "lib/net8.0/Grapeyard.Labs.Nuke.Launchpad.Targets.xml",
      "length": 494671,
      "name": "Grapeyard.Labs.Nuke.Launchpad.Targets.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 6711,
      "fullName": "icon.png",
      "length": 6711,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 635,
      "fullName": "LICENSE",
      "length": 1065,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 708,
      "fullName": "README.md",
      "length": 1714,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.30.14.29.38/grapeyard.labs.nuke.launchpad.targets.2.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12923,
      "fullName": ".signature.p7s",
      "length": 12923,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "build",
    "automation",
    "continuous-integration",
    "tools",
    "orchestration",
    "nuke",
    "launchpad",
    "extensions",
    "quickstart"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}