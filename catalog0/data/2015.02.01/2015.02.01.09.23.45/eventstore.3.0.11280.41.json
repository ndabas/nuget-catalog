{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.09.23.45/eventstore.3.0.11280.41.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Simon Green, Jonathan Oliver",
  "catalog:commitId": "81cf3de2-425f-4a93-bb7a-1b0c30f9d1ac",
  "catalog:commitTimeStamp": "2015-02-01T09:23:45.8938923Z",
  "created": "2011-10-07T20:19:25.08Z",
  "description": "The purpose of the EventStore is to represent a series of events as a stream. Furthermore, it provides hooks whereby any events committed to the stream can be dispatched to interested parties.",
  "id": "EventStore",
  "isPrerelease": false,
  "language": "es-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "g56KoQiEqAtpGlrcacp/TiweIPU55ftMPBarh8JuAY/BE7GvsCpLZZi5QDbEY2TAyvj+tQNVzBeeH1aOLNpVBw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 395595,
  "projectUrl": "https://github.com/joliver/EventStore",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "The EventStore is a persistence library used to abstract different storage implementations when using event sourcing as storage mechanism. The primary use is most often associated with CQRS.",
  "title": "EventStore",
  "version": "3.0.11280.41",
  "tags": [
    "events",
    "event",
    "sourcing",
    "cqrs",
    "storage",
    "persistence",
    "database"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}