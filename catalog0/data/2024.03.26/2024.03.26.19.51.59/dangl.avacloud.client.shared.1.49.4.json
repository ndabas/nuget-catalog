{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Georg Dangl",
  "catalog:commitId": "270e3dd6-cf6b-47e5-8a66-062252098ab4",
  "catalog:commitTimeStamp": "2024-03-26T19:51:59.1200022Z",
  "copyright": "(c) 2024 Georg Dangl",
  "created": "2024-03-26T19:48:42.67Z",
  "description": "This is the .NET Client API for the AVACloud service. An online converter for\n      GAEB, Excel, Oenorm, REB DA11, custom formats and more around tendering & invoicing.\n      Find out more at www.dangl-it.com",
  "iconFile": "gd_icon_256.png",
  "id": "Dangl.AVACloud.Client.Shared",
  "isPrerelease": false,
  "lastEdited": "2024-03-26T19:51:46.777Z",
  "licenseUrl": "https://docs.dangl-it.com/Projects/AVACloud/latest/licence.html",
  "listed": true,
  "packageHash": "aUOjsyJnSkHvScdCaPujvoiUYHIXPg+UeUdhjcWwbeG3DP54HLCcjroZY1NX6zKBEopIlx/MzJSlhhyps9iWnw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 41486,
  "projectUrl": "https://docs.dangl-it.com/Projects/AVACloud",
  "published": "2024-03-26T19:48:42.67Z",
  "releaseNotes": "## v1.49.4:\n- `ARM` Docker images for the self-hosted version are now also tagged for stable releases\n\n## v1.49.1:\n- The **Dangl.AVACloud.Admin** app now offers some database maintenance insights and is runnign recurring jobs for general database maintenance (SQLServer only for now)\n\n## v1.49.0:\n- Text addition identifiers in GAEB 90 exports are now left- instead of right-padded\n- When exporting GAEB XML text additions that have an empty body, `<span>` element with a space character is added to the body. This is to prevent Xml schema validation to fail, since the body of a text addition can not be completely empty. When creating offer requests, it is recommended to fill the body with e.g. a placeholder text, such as `..........`\n- Bugfixes in UGL exports\n- The Excel dependency was updated. While functionally the same, the default implementation when deserializing Excel will no longer recalculate Excel formulas. This should not cause issues for real usage, but if Excel files are automatically generated with formulas that should be recalculated, this might cause issues.\n\n## v1.48.0:\n- Updated internal dependencies\n- Fixed an issue with publishing, previously version `2.0.0` of **AVACloud** was accidentally released\n\n## v1.47.0:\n- The new property `PriceInformation.HasUnsetTaxRate` now allows differentiating between projects that have a zero `0` and those that have a `null` tax rate set\n- Fixed some formula conversions in D11 and X31 files\n- Exporting totals in GAEB XML now uses correct rounding, outputs may now produce slightly different values due to that\n\n## v1.46.0:\n- The backend was updated to .NET 8\n- The On Premises variant is now also available as standalone Windows & Linux executables\n- Fixed a bug when importing X31 files with an index in position item numbers\n- Added a new controller called `FlatAvaConversionController`, which supports import and export of flat lists of elements. This is useful for scenarios where working with hierarchical structures is difficult\n- The Oenorm export will now try to export correct `ftnr` values for positions, if strict Xml export options are enabled. This can possibly result in different output than before, but is necessary to export correct files\n\n## v1.45.0:\n- When importing GAEB files, it's now possible to set the `AllowLumpSumItemsWithDifferingQuantities` query parameter to allow importing of lump sum positions that have a quantity different than one. Otherwise, **AVACloud** corrects such positions to have a quantity of exactly `1`\n\n## v1.44.0:\n- Added a new query parameter `IncludeArticleNumbers` when exporting Excel files. If this is set, then a new column with article numbers, read from `position.commerceProperties.articleNumber`, will be included in the output\n- When converting to `Sia`, **AVACloud** now also supports _Ifa18_ as target format. This is controlled via a new query parameter\n\n## v1.43.0:\n- Added support for `Position.PriceCatalogueData`, to transfer price estimation data in GAEB XML exchanges\n- Added `Catalogue.CatalogueTypeDetail` to preserve the actual catalogue type from GAEB XML. It is now possible to differentiate between e.g. versions for the DIN 276 catalogue type\n\n## v1.42.0:\n- Added support for _IDS Connect_ import and export\n\n## v1.14.8:\n- Clients that have passed the GAEB certification with **AVACloud** as their export tool can now export their GAEB files with the mark that the application is certified. This needs to be configured by Dangl**IT** staff, please contact us to enable this for your clients\n\n## v1.41.0:\n- Added support for converting between **Dangl.AVA** and the product data formats `DATANORM` and `UGL`\n- The Admin UI was updated to Angular v15\n- Added support for allowing uppercase item numbers when importing GAEB files\n\n## v1.40.0:\n- `DestinationRebType.X31GaebXmlV33` was added, to allow exporting to X31 files with GAEB XML V3.3 as the target format\n- Added `PostGaebSourceOptions.OutputHtmlAsXml` and `PostGaebSourceOptions.KeepEmptyHtmlText`  to be able to control how long texts in GAEB XML formats are imported\n- The Admin UI was updated to Angular v15\n\n## v1.39.0:\n- The database was updated to now aggregate and archive conversion stats for older conversions. While details about single conversions are no longer kept indefinitely, client total conversions will still be available\n\n## v1.38.0:\n- Added `ServiceSpecification.BidDate`\n- Added `ServiceSpecification.WarrantyBondPercentage`\n- Added `ServiceSpecification.ExecutionGuaranteePercentage`\n- Added `ProjectInformation.Requesters`\n- Added `ProjectInformation.NotificationSites`\n- Added `CommerceProperties.SubPositionIdentifier`\n\n## v1.37.0:\n- The option `RemoveUnprintableCharactersFromTexts` for XML based target formats (GAEB and ÖNorm) now defaults to `true`. If you want to serialize unprintable characters, it needs to be specifically enabled\n\n## v1.36.0:\n- Added `Position.GaebComplementingType` as a new enum property to transport information about GAEB markup / complementing types in positions. This means that in GAEB XML and GAEB 2000, the different markup types are now preserved. From a **Dangl.AVA** perspective, there are no changes required to implement on your side, but exports might now look different than before, meaning they more accurately preserve the data in the original GAEB file\n\n## v1.35.0:\n- The GAEB target for version 3.3 has been updated to now export GAEB XML V3.3 with version year `2021-05`. The original GAEB XML V3.3 with version year `2019-05` has been pulled back by GAEB. The original, older version may still be exported with the targets `GaebXml_V3_3_2019` or `GaebXml_V3_3_2019_Commerce`\n- AVACloud clients are now automatically published during AVACloud CI\n\n## v1.34.0:\n- On premise hostings of **AVACloud** can now run databaseless, please see the README for instructions how to configure this\n- On premise hostings of **AVACloud** can now run without authentication, please see the README for instructions how to configure this\n- **AVACloud** was updated to .NET 7\n\n## v1.32.4:\n- Docker images for AVACloud self hosted versions are now also available for ARM images, e.g. to run on Macs with Apple M1 chips\n\n## v1.32.0:\n- Added `Position.OenormProperties.OenormShortText` and `Position.OenormProperties.OenormShortTextAddition` to the **Dangl.AVA** data model\n\n## v1.31.1:\n- Added `SubDescriptionDto.UnitTag` as a new property\n\n## v1.31.0:\n- Added `ConsiderNullItemNumberSchemaAsInvalidForRebuildOperation` as a boolean query parameter when converting to GAEB targets. This defaults to false, but if enabled, can be used to instruct AVACloud to consider `null` values in `ItemNumberSchema`s as invalid schemas, and thus triggering a rebuild attempt for the schema\n\n## v1.30.0:\n- Endpoints that produce GAEB files now have an optional query parameter `ForceIncludeDescriptions` that, when set to `true`, will force include all description elements like `LongText` properties and `ExecutionDescription` elements. This is useful when exporting to GAEB 84 - Offer phases when you still want to keep the descriptions\n- All elements of type `IElementDto` now support catalogue references, meaning that it is now possible for users to use those in elements of type `NoteText` and `ExecutionDescription`. This is, however, not supported for exchanges into other formats and can only be used within the AVA project itself\n- A new validation endpoint was added, that allows users to validate AVA projects, GAEB & ÖNorm files\n\n## v1.29.0:\n- GAEB 2000 files now support images, both for import and export scenarios\n- Fixed an issue with the .NET clients, newly introduced enum values caused the deserialization of JSON responses to fail for older client libraries. Starting now, the clients libraries will assume the default enum values for unrecognized values\n- When converting to REB, it's now possible to also convert to X31 files\n\n## v1.28.0:\n- Added `CatalogueType.OenormB1801CostGroup`, which can be used in ÖNorm XML based exchanges to describe ÖNorm B 1801 cost groups attached to positions\n- Added `AbsoluteDeduction` to `ServiceSpecification` and `ServiceSpecificationGroup` elements, which is supported in GAEB 2000 and GAEB XML exchanges. This is available as a backwards compatible way, meaning that the `DeductionFactor` of those elements will still be present\n\n## v1.27.5:\n- Fixed a bug when importing GAEB 90 and GAEB 2000 files with skipped item number levels and top level positions that have an index defined\n\n## v1.27.0:\n- The **AVACloud** backend was updated to .NET 6\n- AVA dependencies were updated, `Position.HtmlLongText` now supports a bidder comment, wrapped in a `div` element with `class=\"bidder-comment\"` at the end of the text. Additionally, all description elements now have a new boolean property indicating if the used long text contains a bidder comment. Please see the documentation for **Dangl.AVA** for more details\n\n## v1.26.1:\n- The max size for file uploads was increased to 50 MB\n\n## v1.26.0:\n- When importing GAEB files, it is now possible to set the `supportSkippedItemNumberLevelsInPositions`. This defaults to false, but enables a new feature that properly supports skipped item number levels in GAEB files. For example, if an item number schema defines two group levels and one position level, but the position has is at the second level in the hierarchy, the item number may be displayed as `01.__.02` instead of `01.02.`. This is in accordance to the GAEB standard, but is currently specified as an opt-in behavior. Since this feature is still considered to be under testing, it might be updated or changed in future releases\n- Endpoints that take an AVA project now have an optional feature to automatically generate the `ItemNumberSchema` and individual `ItemNumbers` in case it's missing\n- Added feature to optionally remove unprintable characters when exporting to GAEB or ÖNorm, to ensure valid XML can be generated\n\n## v1.25.0:\n- Multiple bugfixes for handling ÖNorm B2063 files\n\n## v1.24.0:\n- Self-hosted instances can now be configured to allow `Http` scheme in the Swagger documentation instead of `Https`\n- The ÖNorm and SIA / Ifa dependencies were updated and include many bugfixes. The import and export results may be different than in previous versions. While the element structure was not changed, many fixes are related to how elements are mapped between **Dangl.AVA** and the Austrian and Swiss formats\n\n## v1.23.0:\n- The handling of ÖNorm B2063 file was improved. Among several bugfixes, **AVACloud** now supports missing optional group levels and handles them correctly. This means that internally, the project structure is not restored to a valid number of parent group levels, which means that importing ÖNorm B2063 files from now one might return different, but more correct results\n\n## v1.22.0:\n- The internal packages were updated, there's a new property `Position.AlternativeGroupIdentifier` available in the **Dangl.AVA** model that allows users to explicitly specify the group identifier used when exporting base and alternative positions\n\n## v1.21.0:\n- When converting to ÖNorm Xml based formats, **AVACloud** will now default to try outputting valid Xml files according to the schema. This means that required but missing properties will be filled with sensible defaults\n- Conversions that target ÖNorm can now set a new query parameter `SkipTryEnforceSchemaCompliantXmlOutput` to disable strict Xml output when creating ÖNorm files\n- Several smaller bugfixes when deserializing GAEB files have been added\n\n## v1.20.0:\n- **Dangl.AVACloud** now supports the new ÖNorm V2021 format for import and export\n\n## v1.19.0:\n- GAEB exports to GAEB XML can now optional export `QtyDeterm` items (Quantity Determination or Quantity Take Off), which can be used to export detailled quantity calculations via GAEB\n- The internal modules were updated to support more features, mostly for GAEB and ÖNorm\n- The SIA endpoint can now also deserialize `crbx` Ifa18 files\n- Subscriptions to AVACloud are now no longer handled by the service itself, but by the external identity provider\n- Responses on the public instances should now correctly compress, even those being served from the Cloudflare CDN endpoints. This saves around 90% of bandwidth for most request scenarios\n- **Dangl.AVACloud** was updated to .NET 5\n- For on premise or self hosting customers, **Dangl.AVACloud** can now be configured to use API key authentication, thus no full integration with **Dangl.Identity** is required\n- For on premise or self hosting customers, **Dangl.AVACloud** now supports _PostgeSQL_ in addition to _SQL Server_ and SqlAzure_ as database providers\n\n## v1.18.0:\n- Added support to export ÖNorm files to V2009\n\n## v1.17.0:\n- Added a new parameter `EnforceStrictOfferPhaseLongTextOutput` when converting to GAEB. This parameter is only applied when the conversion target is GAEB XML and the exchange phase is `Offer`. This leads to long text exports being strict, meaning that only text addition segments are exported and all other textx are removed from the export, even if the containing element is marked to contain a text addition\n- Added support for the old ÖNorm B2063 format in import and export scenarios. This is still in a preview state, no guarantee is given that the import and export is working correctly\n\n## v1.16.8:\n- Fixed a bug where embedded images in Excel files could cause the deserialization to fail. This was caused by missing native dependencies in the Docker images. This did not impact most Excel files, since images are not supported when importing Excel in **AVACloud**\n\n## v1.16.0:\n- All endpoints that accept the **Dangl.AVA** format now accept explicitly empty string values for Guids and enumerations. These empty values will resolve to their internal default values and should make it easier to implement clients\n- The Swagger specification now correctly describes the `application/problem+json` content type that may be returned for some Http status codes when client side errors occur\n\n## v1.15.4:\n- The Excel conversion controllers now internally abort the conversion if the client closes the connection to free up server ressources\n\n## v1.15.0:\n- **Dangl.AVACloud** now runs on ASP.NET Core 3.1 and uses the latest **Dangl.Identity** integrations\n\n## v1.14.2\n- When the source format is an AVA Project, it is now possible to set both `ProjectTaxRate` and `ProjectHourlyWage` directly on a `ServiceSpecification` when the `ServiceSpecification.PriceInformation` element is missing\n\n## v1.14.0:\n- Internal dependencies were updated to support additional properties in the AVA project model\n\n## v1.13.0:\n- When exporting to GAEB or ÖNorm, the `ProgName` value can now be controlled by the user. By default, the name of the OpenID client will be used. This can be configured by setting a special client claim. Please see the documentation for more details\n\n## v1.12.0:\n- The **Dangl.AVA** data model was updated and now supports `ProductData`\n- Import of REB and GAEB X31 files for quantity takeoff is now supported\n\n## v1.11.0:\n- Properties that represent `DateTime` are no longer marked as `required` by the Swagger definition endpoint. This is because the underlying .NET model uses non-nullable `DateTime` properties that are omitted from serialization if they have no actual value set\n\n## v1.10.0:\n- **AVACloud** now supports GAEB XML v3.3 files in import and export scenarios. This does not change the public interface but only introduces a new `DestinationGAEBType` value\n\n## v1.9.1:\n- Add `AvaToAva` conversion to regenerate calculated properties\n- Fix regression where properties with default values, e.g. `DateTime`, were not omitted from the output when `ProjectDto`s were returned\n\n## v1.9.0:\n- Add support for importing properietary `aslv` files\n\n## v1.8.1:\n- The interactive documentation was changed back to use Swagger 2.0 instead of OpenAPI 3.0, since most tools still have compatibility issues with the newer specification\n\n## v1.8.0:\n- The generated assemblies now have a strong name. This is a breaking change of the binary API and will require recompilation on all systems that consume this package. The strong name of the generated assembly allows compatibility with other, signed tools. Please note that this does not increase security or provide tamper-proof binaries, as the key is available in the source code per [Microsoft guidelines](https://msdn.microsoft.com/en-us/library/wd40t7ad(v=vs.110).aspx)\n\n## v1.7.21:\n- Add initial support for **GAEB XML Version 3.3**\n\n## v1.7.18:\n- Update of internal dependencies for latest bugfixes around GAEB imports\n\n## v1.7.9:\n- Significant performance increase for projects with tens of thousands of elements\n\n## v1.7.8:\n- The Swagger definitions were updated to include better formatted descriptions\n\n## v1.7.5:\n- The Swagger definitions for the API specification were updated to be better compatible with third party code generators\n\n## v1.7.4:\n- Update **Dangl.GAEB** and **Dangl.AVA.Converter** to be able to import GAEB XML files with an invalid exchange phase (`Award.DP` field)\n\n## v1.7.1:\n- Fix startup error that triggered for specific configuration in Azure App Services and prevented the app from starting\n\n## v1.7.0:\n- **AVACloud** can now export to ÖNorm 2063\n- **AVACloud** can now import and export the Swiss SIA 451 format\n\n## v1.6.2:\n- Fixed wrong return type in generated .NET client code\n- Include `AvaConversionClient` in client factory in public package\n\n## v1.6.0:\n- Introduced support for the German REB DA11 file format. This format is used for quantity takeoff and quantity calculations\n- The **Dangl.AVA**, **Dangl.GAEB** and **Dangl.AVA.Converter** dependencies were updated\n\n## v1.5.10:\n- Dependencies update for latest bugfixes with GAEB XML import and export\n\n## v1.5.6:\n- Dependencies were updated. **Dangl.AVACloud** now supports the overrides introduced with the latest **Dangl.AVA.IO** release for some properties\n- The public documentation was updated with information about the unified **Dangl.AVA** project model\n\n## v1.5.4:\n- The **Dangl.GAEB** dependency was updated\n\n## v1.5.3:\n- The **Dangl.AVA** and **Dangl.AVA.Converter** dependencies were updated to include the latest additions of properties\n\n## v1.5.2:\n- All parameters of type `IFormFile` are now checked to ensure their length is greater than zero. Otherwise, the request will return a `400 - Badrequest` status code without hitting the controller\n\n## v1.5.1:\n- Added `AvaProjectDtoValidationAttribute` to ensure that invalid AVA Projects sent as parameters lead directly to a 400 - Bad Request response and don't hit the conversion service at all\n- Updated **Dangl.GAEB** to `v1.6.7` for latest improvements to deserialize GAEB XML files with missing GAEBInfo declarations\n\n## v1.5.0:\n- The **Dangl.AVA** dependencies were updated to `v2.1.0`. This now also includes support for the new destination GAEB phases `SideOffer` and `CostEstimate`\n- When sending invalid AVA-projects via the API where elements of type `IElementDto` contain an invalid `ElementTypeDiscriminator` value, an error message is sent as response with the offending value\n\n## v1.4.6:\n- The **Dangl.GAEB** module was updated to make importing of malformed GAEB XML files more robust\n\n## v1.4.5:\n- GAEB exports now contain a `GAEBInfo.ProgName` to indicate their origin as coming from AVACloud\n\n## v1.4.3:\n- Update dependencies for latest bugfixes and performance improvements\n\n## v1.4.3:\n- Update dependencies. GAEB files which have no item numbers and no item number schema defined should now get automatically generated item numbers\n\n## v1.4.2:\n- Update dependencies\n\n## v1.4.1:\n- Fix some issues where the new ASP.NET Core 2.2 InProcess hosting model would sometimes fail to load the OS-dependant `System.Drawing.Common.dll` in Azure App Service environments\n- Fixed issue where the Swagger definition contained duplicated enum values\n\n## v1.4.0:\n- The **Dangl.AVA** & **Dangl.GAEB** dependencies were updated to the latest version `v2.0.0`\n- The server side was upgrade to ASP.NET Core 2.2\n\n## v1.3.3:\n- Update of dependencies to fix bugs related to empty tables in some GAEB XML Html long texts\n\n## v1.3.1:\n- Exports to GAEB 90 no longer include the branding comment, since this caused problems with some importing applications\n- The `DestinationGaebType` for GAEB 2000 Commerce was renamed from `GAEB2000Commerce` to `Gaeb2000Commerce`. The old value may still be used by clients\n\n## v1.3.0:\n- The public and internal Swagger endpoints were unified to a single one\n- The public client does now also include all operations with AVA models. It uses generated models instead of the **Dangl.AVA.IO** package\n\n## v1.2.4:\n- Bugfix: The .NET client had a bug around JSON deserialization of OAuth2 token responses\n\n## v1.2.3:\n- Update **Dangl.AVA** dependencies for latest bugfixes\n\n## v1.2.2:\n- The Admin Ui Dashboard can now optionally store and display options that were used during conversion processes\n\n## v1.2.1:\n- Update **Dangl.AVA.Converter.Excel** and **Dangl.Oenorm** for latest bugfixes and improvements\n\n## v1.2.0:\n- **Dangl.AVA** models were updated to indicate properties that are `readonly`. This should make integration with clients more straightforward\n\n## v1.1.2:\n- Bugfix where non-schema compliant GAEB XML files with invalid decimal values could not be read\n\n## v1.1.1:\n- Bugfix where GAEB 90 exports with very high absolute values for deductions failed\n\n## v1.1.0\n- The API now accepts Austrian OENorm 2063 files as input\n\n## v1.0.13:\n- Update **Dangl.AVA** dependencies for latest bugfixes\n\n## v1.0.12:\n- The app is now published with all dependencies. This results in slightly larger deployment sizes, but makes hosts no longer require to have the correct .NET Core runtime installed\n\n## v1.0.11:\n- Update **Dangl.GAEB** & **Dangl.AVA** dependencies for latest bugfixes\n- Prettify Admin UI Dashboard\n- Update to ASP.NET Core 2.1.3\n\n## v1.0.10:\n- Update Admin UI Dashboard to include more statistics\n\n## v1.0.9:\n- Update dependencies to be able to read `NoteText` elements from GAEB 2000 commerce exchange phase files\n\n## v1.0.8:\n- All `DateTime` Json response objects have now their timezone attached\n\n## v1.0.5:\n- Added AVACloud Admin UI Dashboard to monitor service health and metrics\n- Added option to normalize file names, so that when files are converted with their full path & filename, only the filename portion is used for the result\n\n## v1.0.4:\n- Add support for `GAEBXML_V3_1` destination type\n\n## v1.0.3:\n- When supplying an invalid `culture` to endpoints returning Excel, the culture will now default to `en`\n\n## v1.0.2:\n- Fix Swagger discriminator propeties not being correctly camelCased in the Swagger definitions\n\n## v1.0.1\n- Fix Swagger schema being set to only `http` when first hit by Azure App Service warmup via non-secure http route\n\n## v1.0.0\n- Initial Release",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "Dangl.AVACloud www.dangl-it.com",
  "verbatimVersion": "1.49.4",
  "version": "1.49.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#dependencygroup/.netstandard2.0/dangl.data.shared",
          "@type": "PackageDependency",
          "id": "Dangl.Data.Shared",
          "range": "[2.5.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#dependencygroup/.netstandard2.0/dangl.identity.client",
          "@type": "PackageDependency",
          "id": "Dangl.Identity.Client",
          "range": "[6.1.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#dependencygroup/.netstandard2.0/microsoft.extensions.dependencyinjection",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.DependencyInjection",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#Dangl.AVACloud.Client.Shared.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 8749,
      "fullName": "Dangl.AVACloud.Client.Shared.nuspec",
      "length": 24740,
      "name": "Dangl.AVACloud.Client.Shared.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#lib/netstandard2.0/Dangl.AVACloud.Client.Shared.dll",
      "@type": "PackageEntry",
      "compressedLength": 5716,
      "fullName": "lib/netstandard2.0/Dangl.AVACloud.Client.Shared.dll",
      "length": 13824,
      "name": "Dangl.AVACloud.Client.Shared.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#lib/netstandard2.0/Dangl.AVACloud.Client.Shared.xml",
      "@type": "PackageEntry",
      "compressedLength": 1478,
      "fullName": "lib/netstandard2.0/Dangl.AVACloud.Client.Shared.xml",
      "length": 7872,
      "name": "Dangl.AVACloud.Client.Shared.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#gd_icon_256.png",
      "@type": "PackageEntry",
      "compressedLength": 11795,
      "fullName": "gd_icon_256.png",
      "length": 12153,
      "name": "gd_icon_256.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.26.19.51.59/dangl.avacloud.client.shared.1.49.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11516,
      "fullName": ".signature.p7s",
      "length": 11516,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "GAEB",
    "Excel",
    "AVA",
    "Oenorm",
    "REB",
    "DA11",
    "Tendering"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}