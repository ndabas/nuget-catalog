{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dmitry Tarasov",
  "catalog:commitId": "9706da9a-edd5-42f5-9a2a-3bd91cfb7bf2",
  "catalog:commitTimeStamp": "2020-09-09T16:37:10.9686268Z",
  "copyright": "Copyright (C) Dmitry Tarasov, 2020",
  "created": "2020-09-09T16:34:28.233Z",
  "description": "A library for decoding MJPEG streams.",
  "iconFile": "Icon.png",
  "id": "MJPEG",
  "isPrerelease": false,
  "lastEdited": "2020-09-09T16:36:59.483Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "UUDkUvl44QzjtCUwJU3ccoIhm6Nlr4LX+7G+B0QRlQ1uH6QIIVRLhGcIPsX2bsmesAAYofAndG6lZelIlRKT0Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26079,
  "projectUrl": "https://github.com/4egod/MJPEG",
  "published": "2020-09-09T16:34:28.233Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.20.9.9",
  "version": "1.20.9.9",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#MJPEG.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 451,
      "fullName": "MJPEG.nuspec",
      "length": 884,
      "name": "MJPEG.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#lib/netstandard2.0/MJPEG.dll",
      "@type": "PackageEntry",
      "compressedLength": 4697,
      "fullName": "lib/netstandard2.0/MJPEG.dll",
      "length": 9216,
      "name": "MJPEG.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#lib/netstandard2.1/MJPEG.dll",
      "@type": "PackageEntry",
      "compressedLength": 6337,
      "fullName": "lib/netstandard2.1/MJPEG.dll",
      "length": 13824,
      "name": "MJPEG.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 2435,
      "fullName": "Icon.png",
      "length": 2430,
      "name": "Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 642,
      "fullName": "LICENSE",
      "length": 1092,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.09.16.37.10/mjpeg.1.20.9.9.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "mjpeg"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}