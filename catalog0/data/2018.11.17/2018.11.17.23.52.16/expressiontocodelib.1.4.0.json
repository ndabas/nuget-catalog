{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.23.52.16/expressiontocodelib.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eamon Nerbonne",
  "catalog:commitId": "6afe7e40-333a-4485-8dce-225171e71107",
  "catalog:commitTimeStamp": "2018-11-17T23:52:16.793124Z",
  "copyright": "Copyright 2013 Â© Eamon Nerbonne",
  "created": "2013-03-12T14:26:40.557Z",
  "description": "Generates valid, readable C# from an Expression Tree, and can annotate that code with runtime values.  This can be useful for code generation and for unit testing: ExpressionToCode detects NUnit, xUnit.NET and MSTest and uses their assertions if available, and a normal Exception otherwise (so it runs fine outside those specific unit testing frameworks too).\n\n\t\t\tExpressionToCode was inspired by Power Asssert.NET. It differs from PowerAssert.NET by supporting a much larger portion of the lambda syntax and to respect C#'s normal operator precedence, in addition to general polish.",
  "id": "ExpressionToCodeLib",
  "isPrerelease": false,
  "lastEdited": "2018-11-17T23:52:09.39Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "listed": true,
  "packageHash": "nELwsKpLNb7WCgYPV9P1uV8HEmEtoAmEKzYwHdqJyxj2hdEFNmtUpUtKMs6q3yywyWv0N43yyP0FAml/SLPxTg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36854,
  "projectUrl": "http://code.google.com/p/expressiontocode/",
  "published": "2013-03-12T14:26:40.557Z",
  "releaseNotes": "Better layout in the face of non-fixed-width rendering: Although fixed-width rendering is the only way to be sure the subexpression annotations line up with the actual expression, ExpressionToCode now uses a mixture of normal spaces and en spaces in the subexpression annotation so that the alignment is roughly OK in many cases even with variable width fonts.\n\t\t\tSupports inferring char constants in expressions such as \"someVar == 'b'\" (C# compiles these as integer constants, heuristics are used to identify those integers that were likely chars in the original code).",
  "requireLicenseAcceptance": false,
  "summary": "Create readable C# assertions (or other code) from an expression tree; can annotate subexpressions with their runtime value.  Integrates with xUnit.NET, NUnit and MSTest.",
  "title": "ExpressionToCodeLib",
  "verbatimVersion": "1.4.0.0",
  "version": "1.4.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.23.52.16/expressiontocodelib.1.4.0.json#ExpressionToCodeLib.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1016,
      "fullName": "ExpressionToCodeLib.nuspec",
      "length": 2088,
      "name": "ExpressionToCodeLib.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.23.52.16/expressiontocodelib.1.4.0.json#lib/net40-Client/ExpressionToCodeLib.dll",
      "@type": "PackageEntry",
      "compressedLength": 23279,
      "fullName": "lib/net40-Client/ExpressionToCodeLib.dll",
      "length": 54272,
      "name": "ExpressionToCodeLib.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.23.52.16/expressiontocodelib.1.4.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "NUnit",
    "xUnit.NET",
    "mstest",
    "expression-tree",
    "unit-test",
    "PowerAssert"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}