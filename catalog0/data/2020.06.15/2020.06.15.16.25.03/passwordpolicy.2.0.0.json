{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.15.16.25.03/passwordpolicy.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nilesh",
  "catalog:commitId": "5485af1e-09d8-4a07-a90c-3dbe9c72b0e4",
  "catalog:commitTimeStamp": "2020-06-15T16:25:03.4121386Z",
  "created": "2020-06-15T16:22:36.777Z",
  "description": "A .NET Standard library which Generates Random Password with using alphabets(Upper&Lower case), numbers, and special characters. \nas well as you can configure as per your password policy/requirement, like exclude and include numbers/special/alphabets characters.\n\nFuture \n1. Random Generate password as per your password policy \n2. Bind Password with a define property(also support Generic)\n3. Validate new generated password with your db and re-generate password\n4.  Validating  generated password using IsValid method \n5.  Define the number of unique character for generating a password\n6. Generat OTP",
  "id": "PasswordPolicy",
  "isPrerelease": false,
  "lastEdited": "2020-06-15T16:24:41.097Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "ycRiPIsJU0fLW16ZZ3g/EnBCs/UZeJu0e0RLBu23/4nYdl1vmyiKcGPwKfe7CHenB4mWYL80HmliwL7aiUOkmA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21609,
  "published": "2020-06-15T16:22:36.777Z",
  "releaseNotes": "1. Bug Fixes of validation\n2. Provide Default Policy\n3. Provide Policy of OTP Generate",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.15.16.25.03/passwordpolicy.2.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.15.16.25.03/passwordpolicy.2.0.0.json#PasswordPolicy.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 743,
      "fullName": "PasswordPolicy.nuspec",
      "length": 1515,
      "name": "PasswordPolicy.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.15.16.25.03/passwordpolicy.2.0.0.json#lib/netstandard2.0/PasswordGenerator.dll",
      "@type": "PackageEntry",
      "compressedLength": 8612,
      "fullName": "lib/netstandard2.0/PasswordGenerator.dll",
      "length": 20480,
      "name": "PasswordGenerator.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.15.16.25.03/passwordpolicy.2.0.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 635,
      "fullName": "LICENSE",
      "length": 1084,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.15.16.25.03/passwordpolicy.2.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Random",
    "Generate",
    "Password",
    "PasswordPolicy",
    "Unique",
    "Validate",
    "GeneratePassword",
    "OTP"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}