{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.07.19.03/mvvmeventbinding.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Andreas Kuntner (mobilemotion.eu)",
  "catalog:commitId": "2d6a8fe1-e30b-45d4-98b2-f1acff3f14c1",
  "catalog:commitTimeStamp": "2015-02-06T07:19:03.8302297Z",
  "copyright": "(c) Andreas Kuntner 2014",
  "created": "2014-09-02T16:26:11.363Z",
  "description": "Allows binding events directly to commands in XAML code. Works for both WPF and Silverlight applications.",
  "id": "MvvmEventBinding",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.html",
  "packageHash": "URFxL2P4s4Tuirwsve0CzxmH4Wv938BR+8a3ky8kfdwSExxuO+eoFky/CvrTfsTOyN4GQHLblcrIyT8GeV0qBw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8025,
  "projectUrl": "http://www.mobilemotion.eu/?page_id=1203&lang=en",
  "published": "2014-09-02T16:26:11.363Z",
  "requireLicenseAcceptance": true,
  "title": "MVVM EventBinding",
  "version": "1.0.0",
  "tags": [
    "MVVM",
    "EventToCommand",
    "Command",
    "Event",
    "Binding"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}