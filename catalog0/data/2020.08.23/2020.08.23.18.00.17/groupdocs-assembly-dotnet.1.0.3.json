{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.23.18.00.17/groupdocs-assembly-dotnet.1.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GroupDocs",
  "catalog:commitId": "c9f2b61c-caad-4efb-a123-ca4aab6b35e3",
  "catalog:commitTimeStamp": "2020-08-23T18:00:17.8531501Z",
  "created": "2014-07-10T05:55:01.36Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.23.18.00.17/groupdocs-assembly-dotnet.1.0.3.json#deprecation",
    "alternatePackage": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.23.18.00.17/groupdocs-assembly-dotnet.1.0.3.json#deprecation/alternatePackage",
      "id": "GroupDocs.Assembly",
      "range": "*"
    },
    "message": "GroupDocs.Assembly API has been moved to a new package \"GroupDocs.Assembly\" with new & improved feature set.",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "GroupDocs.Assembly for .NET is a flexible library that allows you to generate documents by filling out merge fields in PDF or Word templates with data obtained from a DB or user input. The library can be of great help if you need to generate lots of custom documents that have a standard template, but need to be filled out with unique data. These could be invoices, bills, order quotes, offer letters, NDAs, legal documents, insurance policies, etc.\n\nThe library comes with a web UI which allows end users to prepare templates and get the completed documents without any assistance from developers. Easy to follow wizards guide end users through the document assembly process, which includes the following steps:\n\n1. Upload a template in a PDF, DOC or DOCX format with merge fields that should be populated with data.\n\n2. Compose an online questionnaire associated with the merge fields in the template and publish it on the web.\n\n3. Invite users to complete the questionnaire.\n\nFor each completed questionnaire a new unique document is generated. The document looks exactly like the template but includes data populated into the merge fields.\n\nKey Features & Benefits:\n\nTemplates can be filled in with data obtained from web forms or a DB.\nSupport for different types of form fields: text box, check box, lists and combo, radio buttons, etc.\nAbility to set default values and rules for questions (for example set value range and limits for respond length).\nAbility to handle JavaScript events (for example onTemplateCreated, onTemplateMerge, etc.).\nDocuments are generated on-the-fly, each time a questionnaire is completed.\nConvenient UI allows end users to generate documents without any assistance from developers.\nFor more details on the library, please visit GroupDocs website at: \nhttp://groupdocs.com/dot-net/document-assembly-library\n\nNote: this download contains a fully working version of the product, however without a license set it will run in evaluation mode with some limitations. To test the GroupDocs.Assembly for .NET library without limitations, please request a free 30-day temporary license.",
  "iconUrl": "http://i.imgur.com/kECLq6A.png",
  "id": "groupdocs-assembly-dotnet",
  "isPrerelease": false,
  "lastEdited": "2020-08-23T18:00:05.737Z",
  "listed": true,
  "packageHash": "GfBPMWJgu9MCquV5IuNWXSyJcLiBOOyEIsjSqrXM6nwrKzxiwRgDXFOJegzytvN2QwtCeznZXo3jGEgToxV2Yg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 42278860,
  "projectUrl": "http://groupdocs.com/dot-net/document-assembly-library",
  "published": "2014-07-10T05:55:01.36Z",
  "releaseNotes": "#Bugs Fixed\n\nDA-440 - The main border around the document is not displayed in IE9\nDA-441 - Border corners for merge fields are too big in IE9\nDA-446 - Radio buttons are shifted on \"Questionnaire executor\" page in IE9\n\n#Improvements\n\nDA-449 - Change styles of the text boxes on Step 2 of assembly wizard",
  "requireLicenseAcceptance": false,
  "summary": "GroupDocs.Assembly for .NET is a flexible library that allows you to generate documents by filling out merge fields in PDF or Word templates with data obtained from a DB or user input. The library can be of great help if you need to generate lots of custom documents that have a standard template, but need to be filled out with unique data. These could be invoices, bills, order quotes, offer letters, NDAs, legal documents, insurance policies, etc.",
  "title": "GroupDocs.Assembly for .NET",
  "verbatimVersion": "1.0.3",
  "version": "1.0.3",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.23.18.00.17/groupdocs-assembly-dotnet.1.0.3.json#groupdocs-assembly-dotnet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1475,
      "fullName": "groupdocs-assembly-dotnet.nuspec",
      "length": 3643,
      "name": "groupdocs-assembly-dotnet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.23.18.00.17/groupdocs-assembly-dotnet.1.0.3.json#lib/Groupdocs.Web.UI.Assembly.dll",
      "@type": "PackageEntry",
      "compressedLength": 42265064,
      "fullName": "lib/Groupdocs.Web.UI.Assembly.dll",
      "length": 43239936,
      "name": "Groupdocs.Web.UI.Assembly.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.23.18.00.17/groupdocs-assembly-dotnet.1.0.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "assembly",
    "assemble",
    "generation",
    "generate",
    "document",
    "pdf",
    "word",
    "doc",
    "docx",
    "template",
    "mail",
    "merge",
    "fields"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}