{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.30.21.36.46/eventflow.eventstores.mssql.0.6.456.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "9a3985ed-8f59-4ac9-910a-7a37cecb26a6",
  "catalog:commitTimeStamp": "2016-10-30T21:36:46.9633282Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-05-18T18:41:39.97Z",
  "description": "MSSQL event store for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.EventStores.MsSql",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2016-10-30T21:36:43.403Z",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": false,
  "packageHash": "+ZWm91GmTyb15TWMr+eyBNAA17NXeTauTCwzP75k+MFbqIZgKTw9Bn+DETJfbbk/igHsmrMPfWeIcdnDUdIAaQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11154,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Breaking: Read models have been significantly improved as they can now\nsubscribe to events from multiple aggregates. Use a custom\n`IReadModelLocator` to define how read models are located. The supplied\n`ILocateByAggregateId` simply uses the aggregate ID. To subscribe\nto other events, simply implement `IAmReadModelFor<,,>` and make sure\nyou have supplied a proper read model locator.\n- `UseMssqlReadModel` signature changed, change to\n`.UseMssqlReadModel<MyReadModel, ILocateByAggregateId>()` in\norder to have the previous functionality\n- `UseInMemoryReadStoreFor` signature changed, change to\n`.UseInMemoryReadStoreFor<MyReadModel, ILocateByAggregateId>()` in\norder to have the previous functionality\nBreaking: A warning is no longer logged if you forgot to subscribe to\na aggregate event in your read model as read models are no longer\nstrongly coupled to a specific aggregate and its events\nBreaking: `ITransientFaultHandler` now takes the strategy as a generic\nargument instead of the `Use<>` method. If you want to configure the\nretry strategy, use `ConfigureRetryStrategy(...)` instead\nNew: You can now have multiple `IReadStoreManager` if you would like to\nimplement your own read model handling\nNew: `IEventStore` now has a `LoadEventsAsync` and `LoadEvents`\nthat loads `IDomainEvent`s based on global sequence number range\nNew: Its now possible to register generic services without them being\nconstructed generic types, i.e., register `typeof(IMyService<>)` as\n`typeof(MyService<>)`\nNew: Table names for MSSQL read models can be assigned using the\n`TableAttribute` from `System.ComponentModel.DataAnnotations`\nFixed: Subscribers are invoked _after_ read stores have been updated,\nwhich ensures that subscribers can use any read models that were\nupdated",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.EventStores.MsSql - MSSQL event store",
  "verbatimVersion": "0.6.456",
  "version": "0.6.456",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.30.21.36.46/eventflow.eventstores.mssql.0.6.456.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.30.21.36.46/eventflow.eventstores.mssql.0.6.456.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.6.456, 0.6.456]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.30.21.36.46/eventflow.eventstores.mssql.0.6.456.json#dependencygroup/eventflow.mssql",
          "@type": "PackageDependency",
          "id": "EventFlow.MsSql",
          "range": "[0.6.456, 0.6.456]"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.30.21.36.46/eventflow.eventstores.mssql.0.6.456.json#EventFlow.EventStores.MsSql.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1299,
      "fullName": "EventFlow.EventStores.MsSql.nuspec",
      "length": 2874,
      "name": "EventFlow.EventStores.MsSql.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.30.21.36.46/eventflow.eventstores.mssql.0.6.456.json#lib/net451/EventFlow.EventStores.MsSql.dll",
      "@type": "PackageEntry",
      "compressedLength": 7197,
      "fullName": "lib/net451/EventFlow.EventStores.MsSql.dll",
      "length": 18432,
      "name": "EventFlow.EventStores.MsSql.dll"
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "mssql",
    "eventstore"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}