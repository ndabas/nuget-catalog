{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.14.21.39/dynamicmapresolver.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TheHunter",
  "catalog:commitId": "0e938525-4ec7-4b34-a84a-a47720d09470",
  "catalog:commitTimeStamp": "2015-02-03T14:21:39.7332806Z",
  "created": "2013-07-11T21:44:41.987Z",
  "description": "This library is designed for transforming objects through an object Mapper / Merger, which contains a set of actions for mapping properties from source object into destination object.\nThis library can be useful when applications need to transform business data into DTO objects, or maybe in another complex context when (for example) applications need to set some properties, and this is possible by custom filters.",
  "id": "DynamicMapResolver",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.github.com/TheHunter/DynamicMapper/master/lgpl.txt",
  "packageHash": "nF9EfWm8aW3a7J2Sfz/kBHfq6uYO5FKINXXbIUY6n3k1IPgCsFI9s2kZuhmt3ZVKUxenkirnlsGnPEdnrPfApw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20136,
  "projectUrl": "https://github.com/TheHunter/DynamicMapper.git",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "DynamicMapResolver is a library used for transforming  input objects into custom output objects through  a set of actions which map properties from input  object type into output object type.",
  "version": "1.0.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}