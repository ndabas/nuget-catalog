{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.14.58.45/snap7.net.x86.1.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "albertospelta",
  "catalog:commitId": "cbad0d4f-04c4-4762-8bfe-73e9fd8a58d4",
  "catalog:commitTimeStamp": "2015-02-06T14:58:45.4059697Z",
  "created": "2014-10-08T14:53:09.427Z",
  "description": "Snap7 is an open source, 32/64 bit, multi-platform Ethernet communication suite for interfacing natively with Siemens S7 PLCs. The new CPUs 1200/1500, the old S7200, the small LOGO 0BA7 and SINAMICS Drives are also partially supported.  Although it has been designed to overcome the limitations of OPC servers when transferring large amounts of high speed data in industrial facilities, it scales well down to small Linux based arm boards such as Raspberry PI, BeagleBone Black, pcDuino, CubieBoard and UDOO.  Three specialized components, Client, Server and Partner, allow you to definitively integrate your PC based systems into a PLC automation chain.\n\nMain features\n- Native multi-architecture design (32/64 bit).\n- Platform independent, currently are supported Windows (from NT 4.0 up to Windows 8), Linux, BSD, Oracle Solaris 11, Apple OSX.\n- Fully scalable, starting from blade servers down to Raspberry PI board.\n- No dependence on any third-party libraries, no installation needed, zero configuration.\n- Three Different native thread models for performance optimization: Win32 threads/ Posix threads / Solaris 11 threads.\n- Two data transfer models: classic synchronous and asynchronous.\n- Two data flow models: polling and unsolicited (PLC transfers data when it wants to).\n- Two specialized ports : Settimino and Moka7 allow you to communicate with S7 PLC with Arduino or Android phones.",
  "iconUrl": "http://c.fsdn.com/allura/p/snap7/icon",
  "id": "snap7.net.x86",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.gnu.org/licenses/lgpl.html",
  "packageHash": "fFZBIQ9ZzDkYgC4Ri4y8NsCyKTVEKiDLEoa9nBTzYgKtz9CiZJuas53pC17GSQOHcyry+qFa3NiSM4dM9gxuqQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 110898,
  "projectUrl": "http://snap7.sourceforge.net",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Please visit http://snap7.sourceforge.net/HISTORY.txt to view the complete release notes.\n----------------------------------------------------------------------------------\n\n[changed]\n\n- Unix, now it's possible to specify the destination folder of the library using the optional param LibInstall=<NewPath> into the make command line. If not specified the default path is /usr/lib.\n(thanks to Gijs Molenaar)\n\n- Apple OSX, now the library suffix is .dylib instead of .so however it's possible override the suffix using the LibExt param (see doc.) \n(thanks to Gijs Molenaar)\n\n[fixed]\n\n- fixed a typo error into snap7.net.cs (Cli_GetPlcStatus)\n(thanks to Dabbadoeber for reporting)\n\n- fixed a bug into s7_micro_client.cpp into block download function.\n(thanks to Mark Konst for reporting)\n\n- fixed a bug into s7_partner.cpp (issues for transfers>PDU size)\n(thanks to Volker Sarnes)\n\n- fixed a bug into s7_server.cpp (wrong bit access)\n(thanks to Thomas Costa)\n\n- little modification to client.cs and ppartner.cs to be compiled with VS2008 which doesn't handle the constant (default) parameter in a method declaration.\n(thanks to Max Schaetzel for reporting)",
  "requireLicenseAcceptance": false,
  "summary": "x86 .NET wrapper for Snap7, an open source 32/64 bit multi-platform Ethernet communication suite for interfacing natively with Siemens S7 PLCs.",
  "title": "Siemens ethernet S7 PLC communication suite",
  "version": "1.2.1",
  "tags": [
    "siemens",
    "s7",
    "plc",
    "opc",
    "native",
    "x86"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}