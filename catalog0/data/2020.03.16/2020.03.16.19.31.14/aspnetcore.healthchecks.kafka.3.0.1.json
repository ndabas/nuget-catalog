{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Xabaril Contributors",
  "catalog:commitId": "9478c336-069e-4dfd-a997-767a99396752",
  "catalog:commitTimeStamp": "2020-03-16T19:31:14.8581954Z",
  "created": "2020-03-16T19:28:48.307Z",
  "description": "HealthChecks.Kafka is the health check package for Kafka.",
  "id": "AspNetCore.HealthChecks.Kafka",
  "isPrerelease": false,
  "lastEdited": "2020-03-16T19:30:50.483Z",
  "licenseUrl": "https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks/blob/master/LICENSE",
  "listed": true,
  "packageHash": "brpN8lALfBlUlHuEYnpjMzaG0Sk2OCxo3pr3myZnspIhcBNS69TOdnF7nnJLgYApdJTxUn8Wu+fljsOZ1r2zlw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15570,
  "projectUrl": "http://github.com/xabaril/AspNetCore.Diagnostics.HealthChecks",
  "published": "2020-03-16T19:28:48.307Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "3.0.1",
  "version": "3.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json#dependencygroup/.netstandard2.0/confluent.kafka",
          "@type": "PackageDependency",
          "id": "Confluent.Kafka",
          "range": "[1.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json#dependencygroup/.netstandard2.0/microsoft.extensions.diagnostics.healthchecks",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Diagnostics.HealthChecks",
          "range": "[3.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json#AspNetCore.HealthChecks.Kafka.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 506,
      "fullName": "AspNetCore.HealthChecks.Kafka.nuspec",
      "length": 1132,
      "name": "AspNetCore.HealthChecks.Kafka.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json#lib/netstandard2.0/HealthChecks.Kafka.dll",
      "@type": "PackageEntry",
      "compressedLength": 3791,
      "fullName": "lib/netstandard2.0/HealthChecks.Kafka.dll",
      "length": 8192,
      "name": "HealthChecks.Kafka.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.16.19.31.14/aspnetcore.healthchecks.kafka.3.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "HealthCheck",
    "Health",
    "Kafka",
    "Confluent"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}