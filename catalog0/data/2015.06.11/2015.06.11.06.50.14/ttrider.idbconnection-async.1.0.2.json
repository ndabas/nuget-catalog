{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.11.06.50.14/ttrider.idbconnection-async.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TTRider",
  "catalog:commitId": "89306239-022e-4e75-adb4-bee2b43b0aaf",
  "catalog:commitTimeStamp": "2015-06-11T06:50:14.5282914Z",
  "copyright": "Copyright (C) 2014-2015 TTRider, L.L.C.",
  "created": "2015-06-11T06:49:43.523Z",
  "description": "Shim over IDbConnection interface to allow access to Async methods, if they exist",
  "id": "TTRider.IDbConnection-Async",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/ttrider/IDbConnection-Async/blob/master/LICENSE",
  "packageHash": "5tyOkP8wyOur8q2ZZt+bDc+/h67kZC3h/MeVVY1wcK9RK0NdohPvWbbrEDzIgQXecYgOz/jK3Xhk6dwy0+HNuA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 32242,
  "projectUrl": "https://github.com/ttrider/IDbConnection-Async",
  "published": "2015-06-11T06:49:43.523Z",
  "releaseNotes": "1.0.0\n      --\n      * Initial Release\n      \n      Just reference this assembly, and you can call Async methods on IDbConnection/IDbCommand and IDataReader",
  "requireLicenseAcceptance": false,
  "version": "1.0.2",
  "tags": [
    "SQL",
    "IDbConnection",
    "IDbCommand",
    "IDataReader",
    "SqlConnection",
    "SqlCommand"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}