{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.26.02.37.08/cqlsharp.0.30.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Joost Reuzel",
  "catalog:commitId": "e256875b-3ccf-406e-9e16-7d8a06bcb892",
  "catalog:commitTimeStamp": "2018-11-26T02:37:08.444107Z",
  "copyright": "Copyright 2013 Joost Reuzel",
  "created": "2013-10-06T23:46:23.727Z",
  "description": "CqlSharp is a high performance, asynchronous Cassandra CQL binary protocol client implementing the ADO.NET data provider interfaces.\n\n      It's main features are:\n      * The API implements the ADO.NET interfaces. If you are familiar with SqlConnection, SqlCommand, and SqlReader, you should be able to use CqlSharp with no difficulty.\n      * CqlSharp is an implementation of the (new) CQL Binary Protocol and therefore requires Cassandra 1.2 and up\n      * CqlSharp supports all the binary protocol v2 features: batching, paging, bound query variables, result schema caching, check-and-set (CAS) statements, and sasl-authentication\n      * Supports fast mapping of objects to query parameters, or query results to objects. Mapping is tunable by decorating your classes via Table and Column attributes.\n      * CqlSharp allows for partition/token aware routing of queries. This allows queries to be directly sent to the Cassandra nodes that are the 'owner' of that data.\n      * Query timeouts and cancellation is supported\n      * Query tracing is supported.\n      * Provides an extendable logging infrastructure using MEF. Related log statements can be correlated through \"Activity GUIDs\"\n      * CqlSharp supports Snappy compression of queries and responses\n      * The API is predominately [asynchronous](http://msdn.microsoft.com/en-us/library/vstudio/hh191443.aspx), heavily relying on the System.Threading.Tasks namespace. Synchronous alternatives are available for convenience.\n      * Configuration is done through connection strings. The simultaneous use of multiple Cassandra clusters is supported.\n      * Most behavioral aspects of the CqlSharp are configurable: max number of connections, new connection threshold, discovery scope, max connection idle time, etc. etc.\n      * Relative Node Discovery: given the 'seed' nodes in your connection string, CqlSharp may find other nodes for you: all nodes in your cluster, nodes in the same data center, or the nodes in the same rack\n      * Load balanced connection management: you can give your queries a load 'factor' and the client will take that into account when picking connections to send queries over.\n      * Queries will be automatically retried when connections or nodes fail.\n      * Node monitoring: Node failure is automatically detected. Recovery checks occur using an exponential back-off algorithm\n      * CqlSharp listens to Cassandra events for node up, new node and node removed messages such that Cluster changes are automatically incorporated\n\n      See https://github.com/reuzel/CqlSharp/wiki/Features for an extensive feature list.",
  "iconUrl": "https://raw.github.com/reuzel/CqlSharp/master/logo.png",
  "id": "CqlSharp",
  "isPrerelease": false,
  "lastEdited": "2018-11-26T02:37:00.54Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "listed": true,
  "packageHash": "WWPXDp0bH6h5OHJii8HsDbz8TSofMl4eXV6HWlBQYLV4Ogenx30eYe8tsaGc/WCD8BrUZf9CCJ0h/5UQmI9A5w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 111571,
  "projectUrl": "https://github.com/reuzel/CqlSharp/wiki",
  "published": "2013-10-06T23:46:23.727Z",
  "releaseNotes": "Version 0.30.0 - Binary Protocol V2 support\n\n      * Allowing default database to be set via connectionstring, regardless of connectionstrategy in use\n      * Sasl Authentication support. PasswordAuthenticator is supported out-of-the-box. Extendable via MEF by providing IAuthenticator and IAuthenticatorFactory implementations.\n      * Batch support via CqlBatchTransaction. Assign the command to the CqlBatchTransaction and executes will be buffered. When CqlBatchTransaction is committed it will create and submit a batch statement.\n      * Paging support. CqlCommand can be given a page size: when iterating over a query result, the data will be fetched in \"chunks\" of the given page size\n      * Use of bound parameters with non-prepared queries\n      * Support for Serial_Local for CompareAndSet (CAS) statements\n      * Added CqlConnection.Shutdown methods to close all connections to Cassandra\n      * Performance: when using Cql protocol v2, cached result metadata will be used, reducing network overhead\n      * Performance: Prepare() better utilizes caching, less Task creation overhead\n      * Fix: ChangeDatabase function uses correct use syntax\n      * Fix: ConnectionStratagies are better aware of existing connections on startup.\n\n      See https://github.com/reuzel/CqlSharp/blob/master/ChangeLog.md for the full changelog.",
  "requireLicenseAcceptance": false,
  "summary": "CqlSharp is a high performance, asynchronous Cassandra CQL binary protocol client implementing the ADO.NET data provider interfaces. \n    \n      See https://github.com/reuzel/CqlSharp/wiki/Features for an extensive feature list.",
  "title": "CQLSharp - An ADO.NET Data Provider for Cassandra",
  "verbatimVersion": "0.30.0.0",
  "version": "0.30.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.26.02.37.08/cqlsharp.0.30.0.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.26.02.37.08/cqlsharp.0.30.0.json#CqlSharp.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2169,
      "fullName": "CqlSharp.nuspec",
      "length": 5089,
      "name": "CqlSharp.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.26.02.37.08/cqlsharp.0.30.0.json#lib/net45/CqlSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 94235,
      "fullName": "lib/net45/CqlSharp.dll",
      "length": 226816,
      "name": "CqlSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.26.02.37.08/cqlsharp.0.30.0.json#content/Properties/logo.ico",
      "@type": "PackageEntry",
      "compressedLength": 376,
      "fullName": "content/Properties/logo.ico",
      "length": 2238,
      "name": "logo.ico"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.26.02.37.08/cqlsharp.0.30.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Cassandra",
    "CQL",
    "ADO.NET",
    "client",
    "database",
    "provider",
    "driver",
    "nosql",
    "net45",
    "TPL",
    "async",
    "high-performance"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}