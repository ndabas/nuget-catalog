{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.17.23.01.39/haljsondeserializer.1.1.5.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mamadou Samba DIALLO",
  "catalog:commitId": "f59e7078-5517-4ccd-b9fa-ef9504ce052c",
  "catalog:commitTimeStamp": "2016-03-17T23:01:39.7443251Z",
  "created": "2016-03-17T22:37:07.193Z",
  "description": "This package can deserialize any String, Stream, or StreamReader provide by a web api response. \nParticularity is done on the HAL+JSON response. \nInstallation:\nOn the package console run :\nInstall-Package HALJSonDeserializer\nUsage:\nAfter installation you must include the namespace of the package where you will use it:\nusing haljson;\nSo now: suppose that you want to call a web api via \"http://localhost:8080/customer\" in your c# code and to parse it into your custom type called \"Customer\". This can be done simply as follows:\n Customer theCustomer =  HALJSonDeserializer .GetAndParse<Customer>(\"http://localhost:8080/customer\");\nFor async call you can do this:\n Customer theCustomer =  HALJSonDeserializer .GetAndParseAsync<Customer>(\"http://localhost:8080/customer\");\nIf you just want to deserialize a Stream, a StreamReader or a string, their are three extrension methods for those type. You can do that as follows:\nCustomer  theCustomer = myStream.ToObject<Customer>();  //For a Stream\nCustomer  theCustomer = myStreamReader.ToObject<Customer>();  //For a StreamReader\nCustomer  theCustomer = myString.ToObject<Customer>(); //For a string",
  "id": "HALJSonDeserializer",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2016-03-17T22:41:52.503Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "TTS26nsdqDkpLavKyK2OhF7lhlYcbXdAQ7Zi6TLkMJQLhvd9aVeDeF+Ty4MYTDwqvJOAnMY4F7lSst6PENrAyg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 254485,
  "published": "2016-03-17T22:37:07.193Z",
  "requireLicenseAcceptance": false,
  "summary": "Parckage for deserializing HAL+JSon response datas",
  "title": "HALJSonDeserializer",
  "verbatimVersion": "1.1.5.2",
  "version": "1.1.5.2",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}