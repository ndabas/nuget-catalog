{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.21.27.11/tfsindexer.1.2.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eduardo Sousa",
  "catalog:commitId": "f28d6e14-756e-4edd-95ca-945902ac6b93",
  "catalog:commitTimeStamp": "2015-02-05T21:27:11.7926069Z",
  "copyright": "Eduardo Sousa",
  "created": "2014-07-17T17:51:55.253Z",
  "description": "Indexes source code from a .pdb files to a TFS Server",
  "id": "TfsIndexer",
  "isPrerelease": false,
  "language": "en-us",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://tfsindexer.codeplex.com/license",
  "packageHash": "lWkD1ggVHHjSy2hac9waL5XiFuxSsf0eFylzJp5711M2IRS6lsnAgj0vxaEx3UnLDxNze3addDpLZ0TQIQtwKA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1131760,
  "projectUrl": "https://tfsindexer.codeplex.com/",
  "published": "2014-07-17T17:51:55.253Z",
  "releaseNotes": "Intended to work with Visual Studio 2012 or 2013. Debugging a assembly with indexed PDB, AND \"Enable Source Server support\" option enabled will give Visual Studio the ability to download missing source code from version control server.\n\nFor information on debugging with indexed symbols, see documentation on project site.\n\nIt will require connection to TFS Server during build (and will generate error otherwise).\n\nChecked out files will NOT be indexed!\n\nThis version has moved TfsIndexer targets file to NuGet build folder, so it will take care of adding target file to project. As result, it will not be replicated on all projects, add will not be added as content file.\n      \nUsing this approach has a downside: when you open Visual Studio without TfsIndexer package on packages folders, and build it without prior restoring packges, NuGet will try to restore packages. But in this case, even when packages are successfully restored, TfsIndexer targets will not be included during building. For C# projects, it will be included on next build attempt. For VB.NET and F#, it will require you to restart Visual Studio.\n\nBecause of that, TfsIndexer will include on your project file a test on BeforeBuild target that will check whether TfsIndexer targets have been included on build, and will throw an error otherwise, describing what you will have to do to get it working based on your project type.\n\nVersion 1.2.2:\n - Included a new property, 'TfsIndexerTools', which allows to points TfsIndexer to use its tools from another path. Important if are using TFS Build, in order to prevent Tasks assemblies from being locked on build workspace by TFS Build Service Host process.\n - Correct an issue on Workspace grouping which will improve indexing performance.\n\nVersion 1.2.3:\n - Included Engine for TFS 2010 (will be used only if configured by property below).\n - Created new property (\"TfsEngine\") which will allow TFS version selection (allowed values: \"2010\", \"2012\", \"2013\").\n\nVersion 1.2.4:\n - Fix to not display error message when running Publish.",
  "requireLicenseAcceptance": false,
  "summary": "Include msbuild target in project that creates index in PDB file pointing checked in itens to its location in Team Foudation Server version control.",
  "title": "TFS Indexer for .pdb files",
  "version": "1.2.4",
  "tags": [
    "pdb",
    "tfs",
    "index"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}