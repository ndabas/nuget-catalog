{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "BBernard / CajunCoding",
  "catalog:commitId": "521bcdbd-93ad-49e1-a49f-deb201122154",
  "catalog:commitTimeStamp": "2022-10-11T03:01:46.1529176Z",
  "copyright": "Copyright (c) 2018",
  "created": "2022-10-11T02:58:49.287Z",
  "description": "Library for leveraging the power of the Lazy class to enable high performance caching at all layers of an application. It provides support for both Sync and Async Lazy caching operations in an extremely lightweight and simple footprint -- with passive cache coding style using Lambdas to maximize server utilization and performance with a blocking, or self-populating, cache implementation!",
  "id": "LazyCacheHelpers",
  "isPrerelease": false,
  "lastEdited": "2022-10-11T03:01:20.76Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "y5PLkSecM32x0QlyQhpgUfhQ2WuVHT0DaHP9Ku7Hvjde8POsIOoj8XhiqDOT51eykOHdaN3P5TLnz495FEfrug==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27944,
  "projectUrl": "https://github.com/cajuncoding/LazyCacheHelpers",
  "published": "2022-10-11T02:58:49.287Z",
  "releaseNotes": "- Add support for Self Expiring cache results that return the CachePolicy/Cache TTL/etc. along with the Cache Result; ideal when the cache TTL is not\n\t\t\tknown ahead of time in use cases such as external API results that also return a lifespan for the data such as Auth API Tokens, etc.\n\t\t\t- This should not be a breaking change as this support was now added via net new interfaces ILazyCacheHandlerSelfExpiring and ILazySelfExpiringCacheResult.\n\t\t\t- Added support to now easily inject/bootstrap the DefaultLazyCache static implementation with your own ILazyCacheRepository, eliminating the need to have your own\n\t\t\tStatic implementaiton if you don't want to duplicate it; though encapsulating in your own static facade is usually a good idea.\n\t\t\t- Implemented IDisposable support for existing LazyCacheHandler and LazyCacheRepositories to support better cleanup of resources\n\n\t\t\tPrior Release Notes:\n\t\t\t- Add support for Clearing the Lazy Static In-memory Cache (wrapper for Lazy caching pattern for sync or async results based on the underlying ConcurrentDictionary<Lazy<T>>).\n\t\t\t- Add support for Clearing the Cache and for getting the Cache Count; implemented for DefaultLazyCache as well as the Static In-memory caches.\n\t\t\t- Restored LazyCacheConfig class capabilities for reading values dynamically from Configuration.\n\t\t\t- Added support for Bootstrapping a Configuration Reader Func (Delegate) so that all reading of config values from the keys is completely dynamic now.\n\t\t\t- Added new LazyStaticInMemoryCache<> class to make it significantly easier to implement in-memory caching of data that rarely or never changes with the lazy loading, blocking cache, pattern; great for minimizing the runtime impact of expensive Reflection or I/O Async logic for data that rarely or never changes.\n\t\t\t- Refactored as .Net Standard v2.0 compatible Library for greater compatibility\n\t\t\t- Removed dependency on System.ConfigurationManagement; breaking change if a couple helper overloads were used. The helpers can be restored by adding LazyCacheHelpers.ConfigurationManagement extension package and renaming all calls to LazyCachePolicy static helper to now use LazyCachePolicyFromConfig static helper.\n\t\t\t- Now fully supported as a .Net Standard 2.0 library (sans Configuration reader helpers) whereby you can specify the timespan directly for Cache Policy initialization.\n\t\t\t- Initial nuget release for .Net Framework.",
  "repository": "",
  "verbatimVersion": "1.3.0",
  "version": "1.3.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json#dependencygroup/.netstandard2.0/nito.asyncex.coordination",
          "@type": "PackageDependency",
          "id": "Nito.AsyncEx.Coordination",
          "range": "[5.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json#dependencygroup/.netstandard2.0/system.runtime.caching",
          "@type": "PackageDependency",
          "id": "System.Runtime.Caching",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json#LazyCacheHelpers.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1787,
      "fullName": "LazyCacheHelpers.nuspec",
      "length": 3953,
      "name": "LazyCacheHelpers.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json#lib/netstandard2.0/LazyCacheHelpers.dll",
      "@type": "PackageEntry",
      "compressedLength": 12630,
      "fullName": "lib/netstandard2.0/LazyCacheHelpers.dll",
      "length": 28672,
      "name": "LazyCacheHelpers.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.10.11.03.01.46/lazycachehelpers.1.3.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11526,
      "fullName": ".signature.p7s",
      "length": 11526,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "cache",
    "caching",
    "memory",
    "memorycache",
    "in-memory",
    "lazy",
    "loading",
    "load",
    "self",
    "populate",
    "populating",
    "abstraction",
    "abstract",
    "thread",
    "threadsafe",
    "thread-safe",
    "safe",
    "performance",
    "optimization",
    "optimize",
    "server",
    "utilization"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}