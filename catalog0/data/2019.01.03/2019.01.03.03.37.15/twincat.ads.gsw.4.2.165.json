{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ralf Heitmann",
  "catalog:commitId": "b5ecd9d0-45d0-4f88-a92f-c399f51b006e",
  "catalog:commitTimeStamp": "2019-01-03T03:37:15.1223896Z",
  "copyright": "Beckhoff Automation GmbH 2017",
  "created": "2018-04-09T09:27:02.677Z",
  "description": "TwinCAT ADS API is a .NET Assembly enables to develop own applications (e.g. visualization, scientific automation),\n\t\t\t\twhich can communicate with TwinCAT devices (e.g. PLC, NC or IO-devices).",
  "iconUrl": "http://nuget.beckhoff.com/image/TwinCATPackageGSW.png",
  "id": "TwinCAT.Ads.GSW",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2019-01-03T03:36:52.28Z",
  "licenseUrl": "https://infosys.beckhoff.com/content/1033/tcadsnet/html/note.htm?id=3760898644881269554",
  "listed": false,
  "packageHash": "dKOsdWiVm3qNZ6lt691YwOZE46E3MVpn4Bye5shu7NKcFlc1JlPOSbIleJgi1CI4HL9vFpqdiS0U6L+FH/yxgg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1392468,
  "projectUrl": "https://infosys.beckhoff.com/content/1033/tcadsnet/html/twincat.ads.intro.html?id=4040355287648343334",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Release Notes::\n===============\n\n4.2.165.0\n=========\nFix: ReadValue of primitive Reference Types in VirtualTreeMode\n\n4.2.164.0\n=========\nFix: End Notification Thread before TcAdsClient.Dispose has finished.\n\n4.2.163.0\n=========\nFix: Symbol binding for multi-level VirtualStructInstances.\n\n4.2.162.0\n=========\nFix: Fixing one minor error in ValueAccessor for CustomValueAccessor support.\n\n4.2.161.0\n=========\nFix: TcAdsClient.InvokeRpcMethod raise marshall exception if more then two parameters are used (WI 55838)\n\n4.2.160.0\n=========\nFix: Comments on Struct / POU fields (Plc) are not available on MemberInstance.Comment Property in SymbolsBrowser. (WI 55717)\nFix: Resolution from String-Values to primitive types within TcAdsClient.WriteSymbol (WI 55809)\nEnh: TcAdsClient AdsNotification Documentation: Sample 03_ADS.NET_EventReading included.\n\n4.2.159.0\n=========\nFix: Reactivation of TcAdsClient.ClientCycle (WI 55333)\nFix: Fixing issue in Symbol Renaming in reaction of name clashes in Symbol.OnSetInstanceName\nFix: Removing ambiguous Members from VirtualStructInstances\nFix: Support multilevel in VirtualStructs\nEnh: Added SessionSettings.FastWriteThrough\n\n4.2.158.0\n=========\nEnh: Automatic Reconnection in AdsAccessor (via class AdsConnectionRestore).\n\n4.2.157.0\n=========\nEnh: IConnection now supports Disconnect and (Re)Connect, IConnection.Connect() and IConnection.Disconnect() added to interface. Connections can now be reused.\nBreakingChange: Custom Connections that implement this IConnection interfaces must be extended with IConnection.Connect() and IConnection.Disconnect().\n\n4.2.156.0\n=========\nFix: Support of Attributes on Struct members (SymbolLoader2)\nFix: Hide ITcAdsDataType.Flags from Documentation\n\n4.2.155.0\n=========\nFix: Support of ULINT und LWORD DataTypes enhanced (WI54355)\nFix: Error propagation on dereferencing NULL Pointers.\nEnh: AdsStream.WritePlcAnsiStringFixedLength AdsStream.WritePlcUnicodeStringFixedLength added to support Struct Marshalling scenarios (WI 54408)\nBreakingChange/Fix: Behavior of AdsStream.WritePlcUnicodeString streamlined to AdsStream.WritePlcAnsiString\nBreakingChange/Fix: TwinCAT.AdsDatatypeNotSupportedException moved back from namespace TwinCAT to TwinCAT.Ads (Bug since 4.2.121)\n\n4.2.154.0\n=========\nFix: ObjectDisposedException / RaceCondition Disposing TcAdsClient from Different threads and concurrently receiving Notifications.\n\n4.2.153.0\n=========\nEnh: Supporting ULINT Type for AdsNotificationEx (WI 53546)\n\n4.2.152.0\n=========\nEnh: Hiding some interfaces that should be not accessible for the Customer (ITcAdsRpcInvoke, IAdsAnyAccess, IAdsHandleAccess, IAdsNotifications, IAdsReadWriteAccess, IAdsReadWriteTimeoutAccess, IAdsStateControl, IAdsStateControlTimeout, IAdsSymbolicAccess, IAdsSymbolLoaderFactory)\nFix: Within TwinCAT.TypeSystem.SymbolNavigator now the PathSeperator is correctly set (Constructor)\n\n4.2.151.0\n=========\nEnh: TwinCAt.Ads.AdsTimeoutSetter now public (excluded from Documentation)\n\n4.2.150.0\n=========\nEnh: TwinCAT.Ads.FailFastHandlerResetter implementation\nFix: NullReferenceException on remove TwinCAT.Ads.TcAdsClient.AdsSymbolVersionChanged handler before Client is connected\n\n4.2.149.0\n=========\nFix: Support of Arrays with Length of 0 (Dimension class constructor fixed).\nEnh: Extended error handling on DataType load errors (consuming exceptions on parsing single DataTypes)\n\n4.2.148.0\n=========\nFix: Support of Attributes on Struct members\nEnh: Support of TcEncoding attribute for value marshalling.\n\n4.2.147.0\n=========\nFix: NullReferenceException on calling TcAdsSymbolLoader.GetSymbols(bool) when STRING DataTypes are not fully resolved by DataType Upload (TC2) (WI 51054)\n\n4.2.146.0\n=========\nFix: Automatic conversion of Primitive DataTypes enhanced (ARRAY OF BOOL)\nFix: Refactored internal handling of Array dimensions.\n\n4.2.145.0\n=========\nFix: FindSymbol doesn't resolve ArrayIndices correctly in WindowsCE, CLR2 (WindowsCE, CLR2) WI 50511\n\n4.2.144.0\n=========\nFix: InvalidCastException in TcAdsSymbolLoader.GetSymbols (WindowsCE, CLR2)\n\n4.2.143.0\n=========\nFix: KeyNotFoundException in registering events to AdsStateChanged or AdsSymbolVersionChanged (WindowsCE, ClientCycle-Notifications) WI 50322\n\n4.2.142.0\n=========\nEnh: AdsClientSettings object as parameter for TcAdsClient class\nEnh: TransportProtocol can be selected by the AdsClientSettings.\nEnh: Documentation.\n\n4.2.140.0\n=========\nFix: Enabling AdsServer as part of TwinCAT.Ads.dll again.\nEnh: Refactoring of the Converter/Marshalling classes for optimizing internal code.\nUnitTest: Enhanced 03_DataAccess.cs\n\n4.2.139.0\n=========\nBreakingChange: Removing AdsServer from TwinCAT.Ads.dll\nBreakingChange: Setting Datatype and Instance derived Types as sealed.\nEnh: Taking internal fields out of documentation.\n\n4.2.138.0\n=========\nEnh: Reduction of internal AdsErrorExceptions (Interceptor.Guard)\n\n4.2.137.0\n=========\nFix: Value access of PLC Properties (Symbols marked with AdsDataTypeFlags.PropItem)\nFix: Detection of UnionType within Symbol Upload\nEnh: Support of Static Symbols. (IAdsSymbol5.IsStatic, Symbol.IsStatic and DynamicSymbol.IsStatic)\nBreakingChange: SyncWindow and TcAdsClient.Synchronized not supported for NET45 anymore\nBreakingChange: TcAdsClient.ClientCycle not supported for FullFramework and IOT anymore, Removed in IOT and NET45\n\nITcSymbolInfoTable implementation to decouple SymbolInfoTable from TcAdsClient\nIDataTypeInfoTable implementation for UnitTest Access\nFix: Dispose Pattern for SymbolInfoTable\nDecouple AdsValueAccessor from AdsClient (via IAdsConnection interface)\nDecouple SymbolInfoTable from AdsClient (via IAdsConnection interface)\nDecouple DataTypeTable from AdsClient (via IAdsConnection interface)\n\n4.2.136.0\n=========\nFix: NullReferenceException in SymbolLoaderV1 when DataTypes cannot be resolved (WI: Bug 48875 - Some variables cannot be found via ADS)\n\n4.2.135.0\n=========\nBreakingChange: Default Settings for Sessions are now Asynchronous. Synchronized property removed from IAdsSessionSettings\nEnh: Simplified Accessor Class\nEnh: SymbolUploadInfo and AdsSymbolLoader Build In types externally accessible.\nEnh: Support of Jagged Arrays in TcAdsSymbolInfoLoader.FindSymbol, TcAdsClient.ReadSymbol and DynamicSymbols (WI 48223)\nEnh: Support of Primitive Arrays in TcAdsClient.ReadSymbol\nFix: Error in PrimitiveTypeConverter.TryGetManagedType fixed.\n\n4.2.134.0\n=========\nEnh: Support of (managed) native arrays on reading values.\nFix: Minor fixes in supporting Primitive types in CustomSessionProviders.\n\n4.2.132.0\n=========\nFix: Support of Plc POU Properties in InvokeRpcMethod calls (primitive types only, WI 46959)\n\n4.2.131.0\n=========\nFix: Support Double attribute entries in TwinCAT.TypeSystem.TypeAttributeCollection.\nFix: Error on resurrect SyncClient on TcRestart. Used from an ADS Server running as a SystemService.\n\n4.2.130.0\n=========\nFix: Double entries in Symbol commentary attributes throw ArgumentException (Key already in list) --> Fixed\n\n4.2.129.0\n=========\nNew: SumCommand implementations (SumSymbolRead, SumSymbolWrite, SumAnyReadByHandle, SumAnyWriteByHandle, SumCreateHandles, SumReleaseHandles)\nEnh: Enhancements in Value conversion routines for PlcOpen DataTypes (DT,TOD,TIME,DATE)\nEnh: Enhanced Interfaces for IEnumType\n\n4.2.128.0\n=========\nFix: ArrayIndexIterator support with empty Array types\nFix: Exception on symbol load when double defined RpcMethods (overloaded methods from SymbolServer) are distributed via symbol server\nFix: Erranous reference counting in TcAdsClient.Connect(int srvPort) (WI 45604)\nFix: Ads: Wrong ClientPortNotOpen on connecting TcAdsClient before SystemService is fully available (WI 45605)\nEnh: Adding \"Parent\" parameter to SymbolFactory Methods.\nEnh: Adding RpcMethod marshalling interfaces and base implementations.\n\n4.2.127.0\n=========\nEnh: ReadAnyString added to IAdsAnyAccess Interface\n\n4.2.126.0\n=========\nFix: TcAdsClient doesn't call Finalizer by itself when connected and not disposed (no automatic Finalize) --> Fixed\nEnh: StringInstance Type for dynamic length strings.\nDoc: RPC Samples added in Documentation\n\n4.2.125.0\n=========\nFix: RpcMethod Calls throw ArgumentOutOfRangeException if its a method without parameters.\n\n4.2.124.0\n=========\nEnh: Optimization Memory Footprint with large amounts of ArrayElement instances in SymbolicInformation (SymbolLoaderV2).\n\n4.2.122.0\n=========\nFix: WI 44585 Opening Scope target browser for 851 need about 3GB of memory and the VS is not responding.\n\n4.2.121.0\n=========\nEnh: Documentation AdsSession Sample\n\n4.2.120.0\n=========\nFix: Extending DynamicSymbolFactory.DefaultInvalidChars by '-' and '.'.\n\n4.2.119.0\n=========\nFix: Some NullReferenceExceptions in combination with disposed Connections / TcAdsClient fixed.\n\n4.2.118.0\n=========\nFix: WI 43478 TcAdsClient SymbolLoader is not able to refresh anymore if OnlineChange is growing the size of the symbolic information\nEnh: Better Cmdlet Support of Sessions and Symbols\nEnh: Refactoring of SessionProviders\nBreaking Change: Changing fields of ValueCreationMode to support independant IEnumValue\nBreaking Change: Renaming ValueAccessMode.IndexGroupAndOffset to ValueAccessMode.IndexGroupOffset and IndexGroupAndOffsetPreferred to IndexGroupOffsetPreferred.\n\n4.2.117.0\n=========\nFix: Support of EnumTypes with specified baseType\nFix: AdsConnection.AdsNotification event\nFix: AdsSession.Connect doesn't recreated AdsConnection if already connected\nFix: Recursion detection of Symbols (IsRecursive) enhanced\nEnh: Reading of ENUM types enhanced\nEnh: Support of TIME, DATE_TIME, TIME_OF_DAY Datatypes usable in TcAdsClient.AdsNotificationEx event\nEnh: Support of UXINT BaseType in Default Types\nEnh: Support of Base DataTypes loaded from Device (if supported)\nEnh: Streamlined to TwinCAT NET API\nEnh: Id properties for AdsConnection and TcAdsClient added.\nUnitTests: EnumType checks added\nUnitTests: Session tests refactored\nUnitTests: Notification tests Refactored (T04_AddDeviceNotifications and T04_AddDeviceNotificationEx)\nBreaking Change: ITypeBinder Interfaces changed. ConnectionStateSupport for CustomSessions and Connections.\nBreaking Change: classes DATE, TIME,DT, TOD, PlcOpenDateConverter,PlcOpenDTConverter, PlcOpenTIMEConverter, PlcOpenTODConverter moved from TwinCAT.Ads.Internal to TwinCat.PlcOpen namespace\n\n4.2.116.0\n========\nFix: Correcting Symbol Size in AdsSymbolLoader(V2) Notifications (TwinCAT.Ads.TypeSystem.Symbol.ValueChanged event) (WI 41846)\nFix: NullReferenceException fixed in parameterless RpcMethods (WI 41617)\n\n4.2.114.0\n=========\nEnh: Customized ValueAccessors implemented\nEnh: MEF Support for SessionProviders\nEnh: DynamicValueAccessors now useable for CustomValueAccessors.\nTest: CustomSessionProvider Demo implementation.\n\n4.2.113.0\n=========\nFix: RpcMethod call fail if parameters on method are on same type (WI 40208)\nFix: RpcMethod call fails if method doesn't have a return type (WI 40211)\nFix / Enh: Support of Notification symbols > 64K in AdsSymbolLoaderV2 (WI 40265)\nEnh: Extending UnitTest for  RpcMethod calls.\n\n4.2.112.0\n=========\nEnhancements:\nUsing SymbolUploadInfo to support SymbolUpload Codepage information for Symbol/DataType strings.\n\n4.2.111.0\n=========\nFix: Access to POINTER and REFERENCE types fixed (AdsSymbolLoader(V2))\nEnh: Support of ITypeBinderEvents interface to observe generation and generationErrors (TypeGenerated and TypeResolveError).\nEnh: UnitTests extended Comparing V1 and V2 SymbolLoaders\nEnh: Recursion detection of Symbols (IsRecursive)\n\n4.2.110.0\n=========\nEnhancement: Memory footprint optimizations of the AdsSymbolLoader(V2)\nFix: (internal) Resolution of POINTER TO ARRAY Types fixed\n\n\n4.2.109.0\n=========\nFixes:\nPersistent variables of a FB won't be flagged as persistent by AdsSymbolLoader(V1) (WI 38096)\nFix for accessing MultiDimensionalArrays via FindSymbol (WI 39059)\nFix for ArgumentException in AdsSymbolLoader(V2) FlatMode\n\n4.2.108.0\n=========\nEnhancements:\nSupport for Alias Types (AliasType, AliasInstance, DynamicAliasInstance)\nSupport for Union Types (UnionType, UnionInstance, DynamicUnionInstance)\nSupport for Union Fields (Field, FieldCollection, ReadOnlyFieldCollection)\nSupport for Oversampling Terminals (OversampleArrayInstance and DynamicOversampleArrayInstance, IOversampleArrayInstance)\nUnit Tests for Alias, Union, OversampleArrayInstance\n\n4.2.106\n=======\nFix: Several Errors fixed to support oversampling terminals better in V2 Symbol Browser\nEnh: IDynamicSymbol.NormalizedName property for access to the dynamic normalized name. InstanceName and InstancePath now remain like supported from TwinCAT Symbol Browser \n\t\teven in dynamic mode.\n\n4.2.104\n=======\nEnhancements:\nImplementation of ISymbolLoader, ITypeBinder, ISymbolProvider to enable custom symbol providers. \nSeveral internal enhancements\nStreamlined Unit Tests for TwincAT 3.1.4020\n\nBreakingChanges:\nSome Interfaces moved from namespace TwinCAT.TypeSystem to TwinCAT.Ads.TypeSystem\nISymbol split to ISymbol and IAdsSymbol\n\n4.2.102\n=======\nFeature: Better Resurrection of TcAdsClient on Local System Service Restart\n\n4.2.100\n=======\nNew Features:\nFirst Implementation of AdsSession Class\nCommunicationInterceptors: FailFastHandler, CommunicationStateObserver\n\n4.1.22.0\n========\nFix: Access of ArrayElements and element Naming fixed (WI 36239)\nFix: Fixing size of Unicode Strings in TcAdsDataType (WI 36240)\nEnhancements: Support of arrays with more than 3 dimensions.\nBreaking Changes: NameChange AttributeCollection to TypeAttributeCollection because of Name clashes\nBreaking Changes: NameChange ReadOnlyAttributeCollection to ReadOnlyTypeAttributeCollection because of name clashes\n\n4.1.21.0\n========\nFix: Correction of InitializePrimitiveType (Type Conversion in ReadSymbol to compatible primitve types fixed)\nFix: Recognition of WSTRING types in AdsSymbolParser corrected\n\n4.1.20.0\n========\nFix: TcAdsClient.ReadSymbol don't work with structures (WI: 34853)\nEnhancements: Internal code optimizations in TcAdsClient.ReadSymbol\n\n4.1.19.0\n========\nFix: Unresolved ArrayElement types can now be browsed again. Enhanced failure tolerance.\nFix: CastException in PointerInstance.OnCreateSubSymbols\n\n4.1.18.0\n========\nFix: Inheritance on ContextMask ID on ArrayElement-Instances.\n\n4.1.17.0\n========\nEndless recursion with Recursive Pointer Data Structures (OutOfMemoryException) fixed.\n\n4.1.16.0\n========\nFix Issue Bug 31740: ImageBaseAddress is null for SubSymbols\nFix Issue Bug 31743: Symbolname for elements of arrays with negativ index are invalid\tResolve\n\n4.1.15.0\n========\nFix: Corrects breaking changes in classes TimeBase, TIME, TOD, DateBase, DATE, DT\nFix: BOOL built-in datatpye corrected to ADST_BIT (wrong typeid ADST_ULONG8 before)\n\n4.1.14.0\n========\nFix: TcAdsSymbolLoader.FindSymbol corrected\n\n4.1.13.0\n========\nFeature: UINT64 Support for ReadAny\nFeature: ITcAdsSymbol5 interface for accessing DataType of Symbol\nFix: Comment forwarding for TcAdsDataType (ArrayInstance fields)\n\n4.1.11.0\n========\nFeature: Enhanced Tracing\n\n4.1.10.0\n=======\nFeature: SymbolLoader Settings implementation\nFix: SubItems in InstanceCollections (V2 Symbol Loader)\n\n4.1.9.0\n=======\nFix: Support of InstanceName Duplicates (V2 Symbol Loader)\nEnhanced Common Error handling",
  "requireLicenseAcceptance": false,
  "summary": "TwinCAT ADS API for GrundlagenSoftware (for internal Use only)",
  "title": "TwinCAT ADS API (Software-Development GSW, internal use only)",
  "verbatimVersion": "4.2.165",
  "version": "4.2.165",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#TwinCAT.Ads.GSW.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 5946,
      "fullName": "TwinCAT.Ads.GSW.nuspec",
      "length": 16875,
      "name": "TwinCAT.Ads.GSW.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#content/ReleaseNotes/ReadMe_Ads.txt",
      "@type": "PackageEntry",
      "compressedLength": 5307,
      "fullName": "content/ReleaseNotes/ReadMe_Ads.txt",
      "length": 15561,
      "name": "ReadMe_Ads.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#lib/Net20/TwinCAT.Ads.dll",
      "@type": "PackageEntry",
      "compressedLength": 163089,
      "fullName": "lib/Net20/TwinCAT.Ads.dll",
      "length": 421888,
      "name": "TwinCAT.Ads.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#lib/Net20/TwinCAT.Ads.pdb",
      "@type": "PackageEntry",
      "compressedLength": 313631,
      "fullName": "lib/Net20/TwinCAT.Ads.pdb",
      "length": 1164800,
      "name": "TwinCAT.Ads.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#lib/Net20/TwinCAT.Ads.xml",
      "@type": "PackageEntry",
      "compressedLength": 116050,
      "fullName": "lib/Net20/TwinCAT.Ads.xml",
      "length": 1369567,
      "name": "TwinCAT.Ads.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#lib/Net40-full/TwinCAT.Ads.dll",
      "@type": "PackageEntry",
      "compressedLength": 201138,
      "fullName": "lib/Net40-full/TwinCAT.Ads.dll",
      "length": 528384,
      "name": "TwinCAT.Ads.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#lib/Net40-full/TwinCAT.Ads.pdb",
      "@type": "PackageEntry",
      "compressedLength": 424019,
      "fullName": "lib/Net40-full/TwinCAT.Ads.pdb",
      "length": 1525248,
      "name": "TwinCAT.Ads.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#lib/Net40-full/TwinCAT.Ads.xml",
      "@type": "PackageEntry",
      "compressedLength": 151078,
      "fullName": "lib/Net40-full/TwinCAT.Ads.xml",
      "length": 1794089,
      "name": "TwinCAT.Ads.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#tools/_._",
      "@type": "PackageEntry",
      "compressedLength": 0,
      "fullName": "tools/_._",
      "length": 0,
      "name": "_._"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.03.03.37.15/twincat.ads.gsw.4.2.165.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "TwinCAT",
    "ADS",
    "AdsSession",
    "TcAdsClient",
    "TcAdsServer"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}