{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dar√≠o Kondratiuk",
  "catalog:commitId": "0d4b9e87-1dab-4cd7-95c5-5c1d9262b992",
  "catalog:commitTimeStamp": "2018-10-28T16:04:45.1432485Z",
  "created": "2018-10-28T15:59:55.4Z",
  "description": "Headless Chrome .NET API",
  "id": "PuppeteerSharp",
  "isPrerelease": false,
  "lastEdited": "2018-10-28T16:04:13.877Z",
  "listed": true,
  "packageHash": "IK/UrtfXG2dUrihWVUxn3YKc4pMmbJ6h3Kcmoe5Sq/Ml9V8PL/W9I7hiQPWuhtVb1rD1Sf5nABkxTK7ohIb0mA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 203805,
  "projectUrl": "https://github.com/kblok/puppeteer-sharp",
  "published": "2018-10-28T15:59:55.4Z",
  "releaseNotes": "# New Features\n\n * Introducing Burst mode.\n\nvar screenShotOptions = new ScreenshotOptions\n{\n    FullPage = true,\n    BurstMode = true\n};\nawait page.GoToAsync(\"https://www.google.com\");\nfor(var x = 0; x < 100; x++)\n{\n    await page.ScreenshotBase64Async(screenShotOptions);\n}\nawait page.SetBurstModeOffAsync();\n\n\n# New APIs\n\n * ScreenshotOptions.BurstMode and Page.SetBurstModeOff.\n * Browser.Target.\n * ConnectOptions/LaunchOptions.Transport and ConnectionOptions/LaunchOptions.EnqueueTransportMessages.\n * Frame.GoToAsync\n\n# Breaking Changes\n\n## Evaluate changes\n\n`EvaluateFunctionAsync` and `EvaluateExpressionAsync` won't try to infer the output type when used without generics. It will return a ** JToken** instead.\n\nA piece of code like this:\n\nint x = page.EvaluateExpressionAsync(\"1\");\n\n\nWill need to be replaced by one of these two options:\n\nint x = page.EvaluateExpressionAsync<int>(\"1\");\nint x = page.EvaluateExpressionAsync(\"1\").ToObject<int>();\n\n# Changelog\n \n * Bump the version of chromium to 594312.\n * Add failing test for page.select.\n * Fixed windows fetching.\n * Fix description of SecurityDetails class.\n * Add zero width element test.\n * Add missing configure awaits.\n * Fix full page screenshot when defaultViewport is null.\n * Unify response tracking in page.goto and waitForNavigation.\n * Don't wait for Runtime.Evaluate.\n * Browser closing/disconnecting should abort navigations.\n * Expect Network.responseReceived event is never dispatched.\n * Set JPG background to white when omitBackground option is used.\n * Concurrency improvements.\n * Check if frame exists before creating a Request.",
  "requireLicenseAcceptance": false,
  "title": "PuppeteerSharp",
  "verbatimVersion": "1.9.0",
  "version": "1.9.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#dependencygroup/.netstandard2.0/microsoft.aspnetcore.webutilities",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.WebUtilities",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#dependencygroup/.netstandard2.0/microsoft.extensions.logging",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Logging",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#dependencygroup/.netstandard2.0/system.net.http",
          "@type": "PackageDependency",
          "id": "System.Net.Http",
          "range": "[4.3.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#dependencygroup/.netstandard2.0/system.threading.tasks.extensions",
          "@type": "PackageDependency",
          "id": "System.Threading.Tasks.Extensions",
          "range": "[4.5.1, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#PuppeteerSharp.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1332,
      "fullName": "PuppeteerSharp.nuspec",
      "length": 2880,
      "name": "PuppeteerSharp.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#lib/netstandard2.0/PuppeteerSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 150483,
      "fullName": "lib/netstandard2.0/PuppeteerSharp.dll",
      "length": 412672,
      "name": "PuppeteerSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#lib/netstandard2.0/PuppeteerSharp.xml",
      "@type": "PackageEntry",
      "compressedLength": 40636,
      "fullName": "lib/netstandard2.0/PuppeteerSharp.xml",
      "length": 325360,
      "name": "PuppeteerSharp.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.28.16.04.45/puppeteersharp.1.9.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "headless",
    "chrome",
    "puppeteer"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}