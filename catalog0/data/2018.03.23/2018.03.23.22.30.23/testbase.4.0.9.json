{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.03.23.22.30.23/testbase.4.0.9.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Chris F Carroll",
  "catalog:commitId": "668a4d61-6a05-4d30-9c43-a8a6dcd92ccd",
  "catalog:commitTimeStamp": "2018-03-23T22:30:23.3629419Z",
  "copyright": "(c) Chris F. Carroll, 2013-2018",
  "created": "2018-03-23T22:27:38.093Z",
  "description": "*TestBase* gives you a flying start with fluent assertions that\nare easy to extend and tools for testing with dependencies \non AspNetMvc, HttpClient, Ado.Net, Streams and Logging.\n\nChainable fluent assertions get you to the point concisely:\n```\n- ShouldEqualByValue() & ShouldEqualByValueExceptFor() \n  work with all kinds of object and collections, and \n  report what differed.\n- string.ShouldMatch().ShouldEqualIgnoringCase(), ...\n- numeric.ShouldBeBetween().ShouldEqualWithTolerance(), ...\n- IEnumerable.ShouldAll().ShouldContain().ShouldNotContain(), ...\n- Stream.ShouldHaveSameStreamContentAs(), Stream.ShouldContain()\n\nUnitUnderTest.Action()\n  .ShouldBeViewWithModel<TModel>()\n  .Payload\n    .ShouldEqualByValueExceptFor(new {Id=1, Payload1=expected}, ignoreFields)\n    .Payload2\n      .ShouldMatchIgnoringCase(\"I expected this\");\n```\n\nTestBase.HttpClient.Fake\n------------------------\n\n```\nvar uut = new FakeHttpClient()\n      .Setup(x=>x.RequestUri.PathAndQuery.StartsWith(\"/this\"))\n        .Returns(response)\n      .Setup(x=>x.Method==HttpMethod.Put)\n        .Returns(new HttpResponseMessage(HttpStatusCode.Accepted));\n```\n\nTestBase.FakeDb\n------------------\n`FakeDbConnection` \n\n```\n- db.SetupForQuery(…)\n- db.SetupForExecuteNonQuery(…)\n- db.ShouldHaveUpdated(\"tableName\", …)\n- db.ShouldHaveSelected(\"tableName\", …)\n- db.ShouldHaveDeleted(\"tableName\", …)\n- db.Verify( x=>x.CommandText.Matches(\"Insert [case] .*\") \n             && x.Parameters[\"id\"].Value==1 )\n- db\n    .ShouldHaveInvoked(cmd => predicate(cmd))\n    .ShouldHaveParameter(\"name\", value)\n```\n\nTestBase.Mvc\n------------\n\n```\nControllerUnderTest.Action()\n  .ShouldbeViewResult()\n  .ShouldHaveModel<TModel>()\n  .ShouldEqualByValue(expected)\nControllerUnderTest.Action()\n  .ShouldBeRedirectToRouteResult()\n  .ShouldHaveRouteValue(\"expectedKey\", [Optional] \"expectedValue\");\n\nShouldHaveViewDataContaining(), ShouldBeJsonResult() etc.\n```\n\nTestBase.Mvc for netstandard20 & AspNetCore Mvc\n---------------------------------------------------------\n\n- Test most controllers with zero setup using \n  `controllerUnderTest.WithControllerContext(actionUnderTest)`\n- Test more complex controller/application dependencies using \n  `HostedMvcTestFixtureBase` and specify your MVCApplications `Startup` class.\n\n```\n[TestCase(\"/dummy\")]\npublic async Task Put_Should_ReturnA(string url)\n{\n    var httpClient=GivenClientForRunningServer<Startup>();\n    GivenRequestHeaders(httpClient, \"CustomHeader\", \"HeaderValue1\");\n\n    var result = await httpClient.PutAsync(url, json);\n\n    result.ShouldBe_202Accepted();\n}\n```\n\nTestBase.Mvc Version 3 for Net4\n-------------------------------\n\nFake your http request &amp; context, and use the `RegisterRoutes` method \nof your actual application to setup `Controller.Url`\n\n```\nControllerUnderTest\n  .WithHttpContextAndRoutes(\n    RouteConfig.RegisterRoutes, \n    \"/incomingurl\"\n  );\n\nApiControllerUnderTest.WithWebApiHttpContext<T>(\n    httpMethod, \n    requestUri,\n    routeTemplate)\n```\n\nTestable Logging\n\n```\n// Extensions.Logging.ListOfString\nvar log = new List<String>();\nILogger       mslogger= new LoggerFactory().AddStringListLogger(log).CreateLogger(\"Test2\");\n\n// Serilog.Sinks.ListOfString\nSerilog.Logger slogger= new LoggerConfiguration().WriteTo.StringList(log).CreateLogger();\n```",
  "id": "TestBase",
  "isPrerelease": false,
  "lastEdited": "2018-03-23T22:29:45.77Z",
  "listed": true,
  "packageHash": "IaucmDBgc/fogeZU/5JESU45zEpJ5vQtd1ThZmWYUYH1Fg4J/NcrbJdZgT6jUPD7U9p5uiVEUYHa9jCj9Rde+A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 53946,
  "projectUrl": "http://github.com/chrisfcarroll/TestBase",
  "published": "2018-03-23T22:27:38.093Z",
  "releaseNotes": "ChangeLog\n---------\n4.0.9.0 Removed dependency on net4 version of Mono.Linq.Expressions\n4.0.8.0 Separated Serilog.Sinks.ListOfString and Extensions.Logging.StringListLogger\n4.0.7.0 Added TestBase.FakeHttpClient. Added Should(predicate,...) as synonym of ShouldHave(predicate,...)\n4.0.6.2 TestBase.Mvc can run controller actions on aspnetcore using controller.WithControllerContext()\n4.0.5.2 TestBase.Mvc partially ported to netstandard20 / AspNetCore\n4.0.4.1 StreamShoulds\n4.0.3.0 StringListLogger as MS Logger and as Serilogger\n4.0.1.0 Port to NetCore\n3.0.3.0 Improves FakeDb setup\n3.0.x.0 adds and/or corrects missing Shoulds()\n2.0.5.0 adds some intellisense and FakeDbConnection.Verify(..., message,args) overload",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "TestBase – Rich, fluent assertions and useful fakes for Mvc & AdoNet.",
  "verbatimVersion": "4.0.9",
  "version": "4.0.9",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.03.23.22.30.23/testbase.4.0.9.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.03.23.22.30.23/testbase.4.0.9.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[11.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.03.23.22.30.23/testbase.4.0.9.json#dependencygroup/.netstandard2.0/system.componentmodel.annotations",
          "@type": "PackageDependency",
          "id": "System.ComponentModel.Annotations",
          "range": "[4.4.1, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.03.23.22.30.23/testbase.4.0.9.json#TestBase.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2290,
      "fullName": "TestBase.nuspec",
      "length": 5325,
      "name": "TestBase.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.03.23.22.30.23/testbase.4.0.9.json#lib/netstandard2.0/TestBase.dll",
      "@type": "PackageEntry",
      "compressedLength": 48594,
      "fullName": "lib/netstandard2.0/TestBase.dll",
      "length": 127488,
      "name": "TestBase.dll"
    }
  ],
  "tags": [
    "nunit",
    "test",
    "unittest",
    "tdd",
    "fluent",
    "assertions",
    "mock",
    "ado.net",
    "mvc",
    "aspnetmvc",
    "aspnetcore",
    "aspnetcoremvc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}