{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "d8d5a28f-d8c0-4343-962a-5c552dfb3e85",
  "catalog:commitTimeStamp": "2022-07-14T11:03:36.6213306Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2017-10-18T11:52:23.383Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json#deprecation",
    "message": "DotNetBrowser 1.x is no longer officially supported by TeamDev:\nhttps://dotnetbrowser-support.teamdev.com/docs/guides/migration/v1-v2.html#how-long-will-dotnetbrowser-version-1x-be-supported",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2022-07-14T11:03:22.52Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "yMkNM3dZTIWc7YBsX+w7uWCh49WdXjP7kjyyu+YBHPX2+/TA6v4R0BZe1ZNc0nXDuoVSRr7rDdp4tBMce+XpJg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52903807,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2017-10-18T11:52:23.383Z",
  "releaseNotes": "This version of the library was extended with the features, allowing to intercept all the URL requests for both standard URL schemes (such as http, https, ftp, file), and custom schemes declared in your application. After registering a protocol handler for a scheme, all the URLs with the specified scheme loaded into the Browser will be handled by this handler.\n\nProtocol Handler\n\nImplementing a new custom protocol handler in DotNetBrowser is pretty simple:\n \nC#\npublic class HttpsHandler : IProtocolHandler\n    {\n        //This method should provide the response for the specified request\n        public IUrlResponse Handle(IUrlRequest request)\n        {\n            string htmlContent = \"Request Url: \" + request.Url + \"\\n\";\n            return new UrlResponse(Encoding.UTF8.GetBytes(htmlContent));\n        }\n    }\n\nThis custom protocol handler can then be installed for the particular BrowserContext:\n \nC#\nbrowser.Context.ProtocolService.Register(\"https\", new HttpsHandler());\n \nAfter the handler is installed, any URL having the https scheme will be handled by this custom handler.\n\nSee an example.\n\nBrowserPreferences.CrashDumpDir property\n\nThe BrowserPreferences.CrashDumpDir is a read-write static property which can be used to specify the directory for storing the generated Chromium crash dumps. This property should be specified before creating any Browser or BrowserView instance in your code.\n\nFixed issues:\nHeavyweight WPFBrowserView not shown properly when placed inside an Expander control. Before the fix, the BrowserView appeared to be misplaced after collapsing and restoring the Expander.\nHeavyweight WPFBrowserView disposed improperly for the case when the Window.Closing event was canceled for a parent window.\nThe focus issue when the FireMouseEventsEnabled property was set to true in the heavyweight WPFBrowserView. Now, the drop-downs on the web page are working properly on a mouse click when this option is enabled.\nCalculating the bounds in the heavyweight WPFBrowserView for the environments with the non-default DPI settings, causing incorrect positioning of the native window.\nDisplayHeaderFooter property for built-in PDF printing being ignored. In the previous implementation, the headers and footers were not printed even if the option was enabled.\nEvent handlers being specified through the designer. Before the fix, specifying the event handler in the designer led to ignoring the BrowserType and URL properties.\nImproper popup sizes provided to the PopupContainer in the environments with the non-default DPI settings.",
  "requireLicenseAcceptance": true,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser",
  "verbatimVersion": "1.13",
  "version": "1.13.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json#DotNetBrowser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1875,
      "fullName": "DotNetBrowser.nuspec",
      "length": 4254,
      "name": "DotNetBrowser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json#lib/DotNetBrowser.Chromium.dll",
      "@type": "PackageEntry",
      "compressedLength": 51718127,
      "fullName": "lib/DotNetBrowser.Chromium.dll",
      "length": 51821056,
      "name": "DotNetBrowser.Chromium.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json#lib/DotNetBrowser.dll",
      "@type": "PackageEntry",
      "compressedLength": 1079771,
      "fullName": "lib/DotNetBrowser.dll",
      "length": 2057216,
      "name": "DotNetBrowser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 91182,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 738640,
      "name": "DotNetBrowser.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.13.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}