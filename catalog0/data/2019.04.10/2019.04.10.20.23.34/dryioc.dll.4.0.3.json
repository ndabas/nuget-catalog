{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Maksim Volkau",
  "catalog:commitId": "2a829070-75eb-4a1a-814b-fe734f96fc80",
  "catalog:commitTimeStamp": "2019-04-10T20:23:34.1452701Z",
  "copyright": "Copyright Â© 2013-2019 Maksim Volkau",
  "created": "2019-04-10T20:19:17.64Z",
  "description": "DryIoc is fast, small, full-featured IoC Container for .NET",
  "iconUrl": "https://github.com/dadhi/DryIoc/blob/master/logo/logo128.png",
  "id": "DryIoc.dll",
  "isPrerelease": false,
  "lastEdited": "2019-04-10T20:23:27.183Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "uFIkfzmM1AoTboQbTT53l9xgvKyiyuxPk7UekHntS599FO3ooYaFwhx+uob5BR2IxfTqkhaCUgioCQ9qckRXhw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 469175,
  "projectUrl": "https://github.com/dadhi/DryIoc",
  "published": "2019-04-10T20:19:17.64Z",
  "releaseNotes": "## v4.0.3 Release notes\n\n- fixed: #109: Cannot inject a struct using a Func wrapper\n- fixed: #114: Resolve Action<T>\n\n## v4.0.2 Release notes\n\n- fixed: #100: ResolveMany with Meta does NOT work but collection with Meta does work\n\n## v4.0.1 Release notes\n\n- added: #95: Serializable ContainerException for supported targets\n- fixed: #97: Resolving last registration from multiple default services bug\n- fixed: #89: DryIoC.CommonServiceLocator.dll package out-of-date link\n\n## v4.0.0 Release notes\n\n### Highlights\n\n- DryIoc.dll and all extensions are strongly-signed.\n- Greatly improved performance and decreased memory allocations for bootstrapping and first-time resolution, as well as for the rest of operations. [The results](https://github.com/dadhi/DryIoc/issues/26#issuecomment-466460255) were measured on realistic mid-sized object graph with ~40 dependencies and mixed registration types.\n- `IResolver` is directly implementing (`IServiceProvider`)[https://docs.microsoft.com/en-us/dotnet/api/system.iserviceprovider?view=netframework-4.7.2] for supported platforms\n- `UseInstance` is split into `RegisterInstance` and `Use` methods #78\n- The docs now are generated from `.cs` files in _DryIoc.Docs_ project with up-to-date runnable examples using [CsToMd](https://github.com/dadhi/Cstomd) project.\n\n### Features\n\n- added: #4 Rule for Func and Lazy to be resolved even without requested service registered\n- added: #8 Parity of registration methods between IContainer and IRegistrator (RegisterMapping and RegisterPlaceholder are available in IRegistrator)\n- added: #9 RegisterMany should indicate if no registration was made\n- added: #11 Resolution root bound dependency expression de-duplication\n- added: #17 Rules.DefaultRegistrationServiceKey enhancement\n- added: #20 Enhance error message with current container Rules info\n- added: #32 Integrate MediatR like middleware directly to DryIoc #32\n- added: #39 For troubleshooting purposes add ability to opt-out FastExpressionCompiler \n- Added: #45 Consider expression interpretation to speed-up first time resolution\n- added: #78 Split UseInstance two roles into separate RegisterInstance and Use\n- added: DryIoc IResolver now directly implements IServiceProvider - no need for BuildServiceProvider anymore\n- added: DryIoc.Rules.Rules.MicrosoftDependencyInjectionRules - the set of rules for MS.DI available directly in DryIoc\n- added: FactoryInfo.Of(MemberInfo factoryMember, object factoryInstance)\n- added: Explicit Factory.RegistrationOrder and adapted its usage for open-generics\n- added: IRegistrator.GetRegisteredFactories\n- added: FactoryType to Registrator.RegisterMapping\n- added: AsyncExecutionFlowScopeContext.Default member\n- added: Support for FEC v2.0\n\n### Fixes\n\n- fixed: #6 Open generic singleton service registration that satisfies multiple interfaces\n- fixed: #7 Context-based injection\n- fixed: #16 AutoConcreteTypeResolution should not consider a primitive type\n- fixed: #25 Decorator with serviceKey throws exception which gives invalid advice on how to fix the issue for the most common reason to use the servicekey\n- fixed: #26 Speed Optimization for short living applications\n- fixed: #27 DryIoc cold start performance\n- fixed: #28 FastExpressionCompiler is not used in Net Standard 1.3, 2.0 packages and not used in .Net Core\n- fixed: #29 Resolve caches object[] args values\n- fixed: #33 Memory leak with ResolveManyBehavior.AzLazyEnumerable?\n- fixed: #41 ErrorCode: RegisteredFactoryMethodResultTypesIsNotAssignableToImplementationType\n- fixed: #46 Operation is not supported on this platform exception on Xamarin iOS\n- fixed: #61 Rules.SelectLastRegisteredFactory() does not account for OpenGenerics\n- fixed: #63 Func wrapper resolving #63\n- fixed: #75 Scoped call to Resolve() with args seems to leak memory\n- fixed: BB-593 Add auto-generated tag to PCL FEC\n- fixed: BB-594 Conflicting type is not working in .NET Core 2.1\n- fixed: BB-596 The problem was in non-public service type- fixed: RegisterMapping for open-generic service type\n- fixed: Using facadeKey in CreateFacade",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "DryIoc.dll",
  "verbatimVersion": "4.0.3",
  "version": "4.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework4.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#dependencygroup/.netstandard2.0/system.reflection.emit.lightweight",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit.Lightweight",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#DryIoc.dll.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2487,
      "fullName": "DryIoc.dll.nuspec",
      "length": 5488,
      "name": "DryIoc.dll.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#lib/net45/DryIoc.dll",
      "@type": "PackageEntry",
      "compressedLength": 182140,
      "fullName": "lib/net45/DryIoc.dll",
      "length": 375296,
      "name": "DryIoc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#lib/net45/DryIoc.xml",
      "@type": "PackageEntry",
      "compressedLength": 44717,
      "fullName": "lib/net45/DryIoc.xml",
      "length": 294183,
      "name": "DryIoc.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#lib/netstandard2.0/DryIoc.dll",
      "@type": "PackageEntry",
      "compressedLength": 182038,
      "fullName": "lib/netstandard2.0/DryIoc.dll",
      "length": 375296,
      "name": "DryIoc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#lib/netstandard2.0/DryIoc.xml",
      "@type": "PackageEntry",
      "compressedLength": 44717,
      "fullName": "lib/netstandard2.0/DryIoc.xml",
      "length": 294183,
      "name": "DryIoc.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 659,
      "fullName": "LICENSE.txt",
      "length": 1106,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#DryIoc.snk",
      "@type": "PackageEntry",
      "compressedLength": 601,
      "fullName": "DryIoc.snk",
      "length": 596,
      "name": "DryIoc.snk"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.10.20.23.34/dryioc.dll.4.0.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "IoC",
    "Container",
    "Inversion-of-Control",
    "DI",
    "Dependency-Injection",
    "DRY",
    "Service-Provider",
    "Factory",
    "FastExpressionCompiler",
    "ImTools"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}