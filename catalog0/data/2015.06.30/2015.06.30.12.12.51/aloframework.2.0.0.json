{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.30.12.12.51/aloframework.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "a.molcanovas@gmail.com",
  "catalog:commitId": "bd333f75-9dac-470c-b25e-40c659267a73",
  "catalog:commitTimeStamp": "2015-06-30T12:12:51.0865933Z",
  "created": "2015-06-21T18:15:08.07Z",
  "description": "AloFramework is an incredibly lightweight and flexible MVC framework for PHP 5.4+. It has a lot of built-in functionality including but not limited to:\n\n* Memcached wrapper\n* Database connection class\n* MySQL,Redis or Memcached-based session managers\n* HTML form validator\n* Code testing suite\n* Email sender\n* Crontab editor\n* Object-oriented cURL wrapper\n* Object-oriented file manager\n* Remote SFTP file manager\n* Code profiler\n* CLI tools\n* Localisation tools\n* File management utilities",
  "iconUrl": "https://cloud.githubusercontent.com/assets/4998038/7528096/370297ba-f51b-11e4-9c26-5d01ac66fc4d.png",
  "id": "AloFramework",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "2015-06-30T12:12:31.157Z",
  "licenseUrl": "https://github.com/Alorel/alo-framework/blob/master/LICENSE",
  "packageHash": "nTd8lSivAyDgYY+WjDt3SvUs6Us8ofbxWcIVG6Z3pmuEBb7HREq2jenKZnInrqTsaKS8KO7CV6HjfntBa5zX1g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 831753,
  "projectUrl": "https://github.com/Alorel/alo-framework",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "**Added features**\n\n* Localisation support added! See [README.md](README.md#Localisation)\n* LOG_LEVEL_WARNING is now defined in index.php and is the default logging level. Log::warning() method introduced.\n\n**Bugs fixed**\n\n* MemcachedWrapper->getAll() now returns correct results when running the Windows version of Memcache\n* AbstractDB can now reuse Alo::$cache instead of instantiating a new class\n\n**PSR-1 standards-compliant renames**\n\nCode review required:\n\n* Global functions\n   * server_is_windows() --> serverIsWindows()\n   * timestamp_precise() --> timestampPrecise()\n   * lite_debug() --> debugLite()\n   * escape_html5() --> escapeHTML()\n* AbstractController\n   * http_error() renamed to httpError()\n* Router\n   * Gettable variables renamed in camelCase (applies to getters too)\n   * is_cli_request() --> isCliRequest()\n   * is_ajax_request() --> isAjaxRequest()\n   * Config file\n      * $error_controller_class --> $errorControllerClass\n      * $default_controller --> $defaultController\n* Alo\n   * $form_validator --> $formValidator\n* Log\n   * log_level() --> logLevel()\n* IO\n   * echo_lines() --> echoLines()\n   * open_file_default() --> openFileDefault()\n* AbstractCache\n   * is_available() --> isAvailable()\n* Format\n   * is_ipv4_ip() --> isIpv4()\n* Email\n   * is_email() --> isEmailAddress()\n* Security\n   * un_xss() --> unXss()\n   * ascii_rand() --> asciiRand()\n* File\n   * convert_size() --> convertSize()\n   * get_extension() --> getExtensionStatically()\n* Curl\n   * setopt_array() --> setoptArray()\n* Profiler\n   * diff_on_key() --> diffOnKey()\n\nNo code review required:\n\n* Static constructors are now in camelCase - no implications as of PHP 5.6.9\n\n**Config constants**\n\n* ADDED | ALO_SESSION_SECURE: Determines whether the session cookie should only be sent via SSL.\n* ADDED | ALO_MYSQL_CHARSET: Determines the connection charset.\n* ADDED | ALO_SESSION_HANDLER: Determines which session handler will be used\n\n**Globals**\n\n* Global shorthands added for trigger_error():\n * phpError($msg)\n * phpWarning($msg)\n * phpNotice($msg)\n * phpDeprecated($msg)\n \n**Major functionality changes**\n\n* Sessions\n   * SQLSession, Alo::$session & Alo::loadSession() have been removed\n   * Sessions are now invoked via the handler's static init() method, e.g. to initialise a MySQL session you would call MySQLSession::init(). Any dependencies' instances, e.g. MySQL or RedisWrapper can be passed as a parameter or used from Alo::$db/Alo::$cache respectively\n   * The session handler to be used will is now defined in config/session.php with ALO_SESSION_HANDLER\n   * Sessions will now be used in the standard PHP way of $_SESSION. There is no need to do session_start(), only ::init().\n \n**Removed deprecated items**\n\n* Alo\\File\n* Testing suite\n* FileException\n \n**Misc Functionality/feature changes**\n\n* PDO now uses ERRMODE_EXCEPTION instead of ERRMODE_WARNING\n* Most classes now have self::$this so you can globally reference their last instances - useful for singletons.\n* SampleErrorController->error()'s $message parameter removed as it was unused\n* AbstractController->httpError() no longer has a die() statement to stop script execution once called. It only suppresses output now.\n* MemcachedSession, RedisSession and MySQLSession constructors now throw a LibraryException instead.\n\n**Other/Minor**\n\n* A plethora of code quality improvements with the help of SensioLabs Insights\n* Sample .htaccess file renamed to .htaccess.sample",
  "requireLicenseAcceptance": true,
  "summary": "AloFramework is an incredibly lightweight and flexible MVC framework for PHP 5.4+",
  "title": "AloFramework",
  "version": "2.0.0",
  "tags": [
    "php",
    "mvc",
    "framework",
    "lightweight",
    "5.4"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}