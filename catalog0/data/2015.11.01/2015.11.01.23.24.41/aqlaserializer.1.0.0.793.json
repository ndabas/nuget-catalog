{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.01.23.24.41/aqlaserializer.1.0.0.793.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Vladyslav Taranov",
  "catalog:commitId": "f6a82dfb-0d3a-4a84-9f07-469f3b752f9f",
  "catalog:commitTimeStamp": "2015-11-01T23:24:41.5699163Z",
  "copyright": "Vladyslav Taranov 2015, fork source from Marc Gravell 2015",
  "created": "2015-11-01T23:23:40.16Z",
  "description": "AqlaSerializer is intended to serialize objects, not just data. \n\nWhat the difference? Data serializers don't care much about language runtime specifics like references, inheritance, etc. In contrast, an object serializer should take such things into account.\n\nLike protobuf-net AqlaSerializer makes possible to store objects as a small in size binary data (far smaller than xml). And it's more CPU effective than BinaryFormatter and other core .NET serializers (which could be unavailable on your target platform). Its format is designed to be: small in size - efficient data storage (far smaller than xml) cheap to process - both at the client and server platform independent - portable between different programming architectures extensible - to add new data to old messages.\n\nAqlaSerializer project goal is not to make a Protocol Buffers compatible implementation but instead support all common .NET features. It is compatible with most of the .NET family, including .NET 2.0/3.0/3.5/4.0, Mono 2.x, Silverlight, etc. The code is heavily based on Marc Gravell's protobuf-net but there are a lot of improvements and fixes.\n\nThe original protobuf-net project contains many \"red\" unit tests but I managed to fix a lot of them.\n\nSome platforms may be not available through nuget, you can download their binaries manually from github.",
  "id": "aqlaserializer",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2015-11-01T23:24:27.993Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/AqlaSolutions/AqlaSerializer/blob/master/Licence.txt",
  "listed": true,
  "packageHash": "Bha20cy2JcceiuSBzZtwsHiMcQbA/CtFQxb50og13w1ozysZEVDo9pBFEt8+fBkVFqVz415jTRpxI5TrQHFBxg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 2573481,
  "projectUrl": "https://github.com/AqlaSolutions/AqlaSerializer",
  "published": "2015-11-01T23:23:40.207Z",
  "releaseNotes": "\n* 1.0.0.793: fixed AsReferenceDefault correct usage for legacy protobuf-net attributes\n* 1.0.0.776:\n- fixed issue when surrogated value was not correctly reference tracked\n- add method is recognized not only on IEnumerable<T> but also on its inheritors like IReadOnlyCollection<T>\n\n* 1.0.0.767 - improvements in list handling, merged changes from original protobuf-net \n\n* 1.0.0.58 - initial AqlaSerializer release\n    ",
  "summary": "Fork of well known protobuf-net, contains improved API, reference tracking, list handling and multiple fixes. It's a binary serializer designed for serializing **objects** on a wide range of .NET platforms.",
  "verbatimVersion": "1.0.0.793",
  "version": "1.0.0.793",
  "tags": [
    "binary",
    "serialization",
    "protocol",
    "buffers",
    "protobuf",
    "deserialization",
    "aqlaserializer",
    "aqla",
    "aqlasolutions"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}