{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Petabridge",
  "catalog:commitId": "a6c8a2c8-762b-4be3-b804-067f77b1160a",
  "catalog:commitTimeStamp": "2021-07-26T02:18:49.300407Z",
  "copyright": "Copyright Â© 2015-2021 Petabridge, LLC",
  "created": "2021-07-26T02:16:08.07Z",
  "description": "Akka.Remote Petabridge.Cmd palettes for connection and monitoring.",
  "iconUrl": "https://petabridge.com/images/logo.png",
  "id": "Petabridge.Cmd.Remote",
  "isPrerelease": false,
  "lastEdited": "2021-07-26T02:18:40.38Z",
  "licenseUrl": "https://cmd.petabridge.com/articles/install/license.html",
  "listed": true,
  "packageHash": "fnZnn/1GFKvezJaG/ki5Z6BFTRp3NtBYjpxkWg939vNxR/ZnVveTvqneCzkgR10kI0uFDaD8p9pwSpXrUwEJ6Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37645,
  "projectUrl": "https://cmd.petabridge.com/",
  "published": "2021-07-26T02:16:08.07Z",
  "releaseNotes": "Petabridge.Cmd v1.0.0 is a major release of Petabridge.Cmd that doesn't include any breaking changes for older clients.\nProgrammatic `IPbmClient` Support**\nIt is now possible to invoke Petabridge.Cmd programmatically, as of Petabridge.Cmd 1.0.0 - and this can be done in one of two ways:\n1. In-process, inside the same Akka.NET `ActorSystem` that is running the `PetabridgeCmd` host;\n2. Remotely, from an external process that connects to the `PetabridgeCmd` host using the same TCP port used by the `pbm` CLI clients.\nWe've added [extensive documentation to the Petabridge.Cmd website which documents how to use these new `IPbmClient` implementations](https://cmd.petabridge.com/articles/clients/index.html#ipbmclient-programmatic-client), but we've also included a small example here:\n```csharp\n// <configureHost>\n// create a Petabridge.Cmd host from our ActorSystem\n// host is configured to run on port 11555 via HOCON\nvar pbmHost = PetabridgeCmd.Get(Sys);\n// start the host\npbmHost.Start();\n// </configureHost>\n// <clientActorSystem>\n// create client ActorSystem\nusing ActorSystem clientSystem = ActorSystem.Create(\"ClientSystem\");\n// grab copy of the PetabridgeCmdClient extension (Petabridge.Cmd.Common NuGet package)\nvar clientExt = PetabridgeCmdClient.Get(clientSystem);\n// create IpEndPoint or DnsEndPoint for contacting remote host\n// either one of these would work\nvar ip = new IPEndPoint(IPAddress.Loopback, 11555);\nvar dns = new DnsEndPoint(\"localhost\", 11555);\n// start a new IPbmClient attached to one of these EndPoints\n// by default this operation will time out in 5 seconds.\n// you can extend that by passing in a custom CancellationToken\nIPbmClient remoteClient = await clientExt.StartRemoteClient(ip);\n// </clientActorSystem>\n// <runClient>\n// invoke a \"log peek\" command, just like you would on CLI\nCommandSession session = await remoteClient.ExecuteTextCommandAsync(\"log peek\");\n// grab a hold of the Akka.Streams materializer from ActorSystem\nvar materializer = Sys.Materializer();\n// pipe the Akka.Streams Source<CommandResponse> to a Sink<CommandResponse>\n// in this case, we're just going to send everything to a TestActor.\n//\n// This Akka.Streams \"graph\" can be materialized into a Task, which will\n// complete once the stream is marked as complete by the Petabridge.Cmd host.\nvar completionTask = session.Stream.RunForeach(rsp =>\n{\nTestActor.Tell(rsp);\n}, materializer);\n// a client can also cancel the stream using the KillSwitch included\n// inside the CommandSession object\nsession.KillSwitch.Shutdown();\n// once either of those two events occur, the Task returned earlier\n// will be complete\nawait completionTask;\n// and we can validate that the TestActor received at least one CommandResponse\nvar response = ExpectMsg<CommandResponse>();\n// </runClient>\n```\nMultiple Concurrent Client Sessions**\nAnother major architectural change we've introduced to Petabridge.Cmd in order to support programmatic clients is the notion of multiple client-facing sessions all originating from the same connection. Petabridge.Cmd now effectively supports command multi-plexing on the server and client side.\nIn effect, a single `IPbmClient` can now run multiple streaming commands at once - such as `log tail`, `cluster tail`, and `remote tail`, all over the same TCP connection.\nThis is a minor breaking change to some command palettes - all of the official Petabridge ones will be updated shortly to support this, but user-defined `CommandPalette`s may also need to be updated in order to support this. We will update our \"[Creating Custom Commands](https://cmd.petabridge.com/articles/commands/custom-commands.html)\" documentation shortly to help developers implement these changes successfully - the changes required are minor.",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#dependencygroup/.netstandard2.0/petabridge.cmd.common",
          "@type": "PackageDependency",
          "id": "Petabridge.Cmd.Common",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#dependencygroup/.netstandard2.0/petabridge.cmd.host",
          "@type": "PackageDependency",
          "id": "Petabridge.Cmd.Host",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#dependencygroup/.netstandard2.0/akka.remote",
          "@type": "PackageDependency",
          "id": "Akka.Remote",
          "range": "[1.4.21, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#Petabridge.Cmd.Remote.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2091,
      "fullName": "Petabridge.Cmd.Remote.nuspec",
      "length": 4901,
      "name": "Petabridge.Cmd.Remote.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#lib/netstandard2.0/Petabridge.Cmd.Remote.dll",
      "@type": "PackageEntry",
      "compressedLength": 14990,
      "fullName": "lib/netstandard2.0/Petabridge.Cmd.Remote.dll",
      "length": 30424,
      "name": "Petabridge.Cmd.Remote.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#lib/netstandard2.0/Petabridge.Cmd.Remote.xml",
      "@type": "PackageEntry",
      "compressedLength": 421,
      "fullName": "lib/netstandard2.0/Petabridge.Cmd.Remote.xml",
      "length": 1371,
      "name": "Petabridge.Cmd.Remote.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.26.02.18.49/petabridge.cmd.remote.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 18221,
      "fullName": ".signature.p7s",
      "length": 18221,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}