{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.05.19.36.44/fakeloader.1.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Juan Alvarez",
  "catalog:commitId": "24dd92c1-e0c6-4076-bb29-daa5009af61c",
  "catalog:commitTimeStamp": "2019-06-05T19:36:44.2257723Z",
  "copyright": "Copyright Juan Alvarez Â© 2016",
  "created": "2016-05-11T04:50:48.72Z",
  "description": "Deprecation notice:\n\nI found same approach can be applied in other areas. I strongly suggest you to use file2objects package I created. It shares same constructs FakeLoader uses, but it comes with fixes and more features.",
  "id": "FakeLoader",
  "isPrerelease": false,
  "lastEdited": "2019-06-05T19:36:24.6Z",
  "listed": false,
  "packageHash": "Th2pFynsMgiklfBYXpILCF61dufhVZsPQPnUcoDI5RaiJTN7SoC18mmgxE54srTQIfFSt7o4SmtG5xm+DcTxng==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19959,
  "projectUrl": "https://github.com/asjuan/fakeloader",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "A new configuration object was introduced to pass in parameters to the List a user wants to resolve. That can take in a Custom Mapper property see project home page and check documentation.",
  "requireLicenseAcceptance": false,
  "summary": "Data Entities can be retrieved from both hardcoded objects and serialized structures (XML or JSON). There are pros and cons in both cases. But to enforce the DRY principle, this utility will retrieve data stored as plain text. Text files are easy to deal with, and this lib handles both maping and data retrieval so developers can focus on creating tests about the problem at hand.",
  "title": "FakeLoader",
  "verbatimVersion": "1.0.4",
  "version": "1.0.4",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.05.19.36.44/fakeloader.1.0.4.json#FakeLoader.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 802,
      "fullName": "FakeLoader.nuspec",
      "length": 1434,
      "name": "FakeLoader.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.05.19.36.44/fakeloader.1.0.4.json#lib/net45/FakeLoader.dll",
      "@type": "PackageEntry",
      "compressedLength": 5989,
      "fullName": "lib/net45/FakeLoader.dll",
      "length": 13824,
      "name": "FakeLoader.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.05.19.36.44/fakeloader.1.0.4.json#content/Licence.txt",
      "@type": "PackageEntry",
      "compressedLength": 1014,
      "fullName": "content/Licence.txt",
      "length": 2665,
      "name": "Licence.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.05.19.36.44/fakeloader.1.0.4.json#content/Readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 776,
      "fullName": "content/Readme.txt",
      "length": 1390,
      "name": "Readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.05.19.36.44/fakeloader.1.0.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "TDD",
    "DDD",
    "Test",
    "Utility",
    "File",
    "I/O"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}