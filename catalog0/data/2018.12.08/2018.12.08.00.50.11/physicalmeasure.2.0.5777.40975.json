{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.00.50.11/physicalmeasure.2.0.5777.40975.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kilo Bravo",
  "catalog:commitId": "7de653cb-2853-4c47-b046-ee999d8db19f",
  "catalog:commitTimeStamp": "2018-12-08T00:50:11.5203449Z",
  "copyright": "Copyright Â© 2010-2015 Kilo Bravo",
  "created": "2015-10-26T22:00:53.707Z",
  "description": "Physical Unit System Framework. PhysicalMeasure is a C# library for handling physical quantities by specifying value and unit. Scaling of units and conversions between multiple unit systems are supported.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.00.50.11/physicalmeasure.2.0.5777.40975.json#frameworkassemblygroup/.netframework4.6",
    "assembly": "System",
    "targetFramework": ".NETFramework4.6"
  },
  "iconUrl": "http://physicalmeasure.codeplex.com/SourceControl/latest#PhysMeasure/PhysicalMeasure/PhysicalMeasure.png",
  "id": "PhysicalMeasure",
  "isPrerelease": false,
  "lastEdited": "2018-12-08T00:49:31.06Z",
  "licenseUrl": "http://physicalmeasure.codeplex.com/license",
  "listed": false,
  "packageHash": "mciQJSW1MRWV4I1lC6YGUGQkNZ2s3TzJM/CEGlYnKWNdRQs4raOihT6of5iW0jUtJZasQx4ODADE8Tqbi7BJlQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 51057,
  "projectUrl": "http://physicalmeasure.codeplex.com/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "2015-10-26 Release of PhysicalMeasure 2.0.5777.40975.",
  "requireLicenseAcceptance": false,
  "summary": "Physical Unit System Framework. PhysicalMeasure is a C# library for handling physical quantities by specifying value and unit. Scaling of units and conversions between multiple unit systems are supported.",
  "title": "PhysicalMeasure",
  "verbatimVersion": "2.0.5777.40975",
  "version": "2.0.5777.40975",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.00.50.11/physicalmeasure.2.0.5777.40975.json#PhysicalMeasure.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 601,
      "fullName": "PhysicalMeasure.nuspec",
      "length": 1570,
      "name": "PhysicalMeasure.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.00.50.11/physicalmeasure.2.0.5777.40975.json#content/PhysicalMeasureExamples.cs",
      "@type": "PackageEntry",
      "compressedLength": 694,
      "fullName": "content/PhysicalMeasureExamples.cs",
      "length": 1982,
      "name": "PhysicalMeasureExamples.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.00.50.11/physicalmeasure.2.0.5777.40975.json#lib/net46/PhysicalMeasure.dll",
      "@type": "PackageEntry",
      "compressedLength": 37345,
      "fullName": "lib/net46/PhysicalMeasure.dll",
      "length": 92672,
      "name": "PhysicalMeasure.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.00.50.11/physicalmeasure.2.0.5777.40975.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Physical",
    "measure",
    "unit",
    "engineering",
    "SI",
    "system",
    "conversion"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}