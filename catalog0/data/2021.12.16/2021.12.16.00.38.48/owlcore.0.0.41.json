{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Arlo Godfrey",
  "catalog:commitId": "0ee26b49-e197-42a8-9032-5305d35aefbc",
  "catalog:commitTimeStamp": "2021-12-16T00:38:48.0315556Z",
  "created": "2021-12-16T00:36:33.153Z",
  "description": "Have you ever seen an owl do a barrel roll? Me neither.\n\nOwlCore is in a rapid development cycle and is constantly being improved upon. Until a stable release, breaking changes can happen any time. Comprehensive changelogs included with every release.\n\nOur favorite features:\n- .NET Standard 2.0 - Battle-tested on Uno Platform and UWP, for both hobby and enterprise-level applications.\n- OwlCore.Remoting - Painlessly sync member changes in C# with an external source via magic (reflection + IL weaving).\n- AbstractUI - Abstracts simple UI elements as pure data. Send over a network, store on disk, share between platforms, etc. Make something else worry about rendering and interacting. (Optional OwlCore.Remoting integration)\n- AbstractStorage - Abstract away your storage needs for easy implementation switching and unit test mocking. Based on the Windows StorageFile APIs, designed to be completely agnostic of any underlying platform or protocol.\n- Flow.Debouncer - For when something fires repeatedly. but you only care about when it stops.\n- Flow.EventAsTask - Wait for an EventHandler to fire (with cancellation).\n- Flow.EasySemaphore - Use a \"using\" statement with your semaphores instead of manually calling WaitAsync and Release.\n- Threading.PrimaryContext -  Use a \"using\" statement to execute on your main thread. No dispatcher, callbacks or cleanup needed.\n- Threading.OnPrimaryThread - Easily invoke a callback on your primary thread.\n- CachedHttpClientHandler - Cache http requests to disk and return them as needed. Supports chaining.\n- RateLimitedHttpClientHandler - Limit the number of requests within a window of time. Supports chaining.\n- Countless extension methods. PruneNull, Shuffle and Unshuffle, InParallel, ChangeDate, HashMD5Fast, DistinctBy, InsertOrAdd, InsertOrReplace, and MUCH more.",
  "iconFile": "logo.png",
  "id": "OwlCore",
  "isPrerelease": false,
  "lastEdited": "2021-12-16T00:38:36.233Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "LfsvbdTrfhhgHO88TWb9e3WQi+lCrtFQb/YWdb+FoWr4Uar9J5CUAJjdJCCJDkMbTJiuPslxYXsVPzq4qlhxJA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 169185,
  "published": "2021-12-16T00:36:33.153Z",
  "releaseNotes": "--- 0.0.41 ---\n[Improvements]\nFlow.Catch now has overloads to catch up to 4 exceptions.\n\n[Breaking changes]\nThe type parameter order on Flow.Catch{TException, TResult}(Func{TResult}) has been swapped to {TException, TResult}. This allows for more natural usage when catching more than 1 exception.\n\t\t\t\n--- 0.0.40 ---\n[Improvements]\nShuffle extension method is now O(n) using fisher-yates.\nShuffle extension method now returns a \"shuffle map\" that can be used to map items to their original positions and unshuffle the collection.\nAdded IList{T} overload to Shuffle extension method.\nAdded unit tests to Shuffle extension methods.\n\n[New]\nAdded Unshuffle extension method for T[] and List{T}. Pass a \"shuffle map\" returned by the Shuffle extension method to return a list to its' original order using a (probably) original algorithm inspired by fisher-yates with O(n) time and space complexity.\n\n--- 0.0.39 ---\n[New]\nAdded NavigationFailed event to AbstractFolderExplorer.\nFlow.Catch now has an overload that catches all exception with no return value.\n\n[Fixes]\nFixed a potential memory leak in Flow.WhenCancelled.\n\n[Improvements]\nMade selfCancellationToken parameter optional on CancellationToken.WhenCancelled() extension method.\nFlow.Catch now properly returns default values when an exception is caught.\n\n[Breaking changes]\nFlow.TryOrSkip was renamed to Flow.Catch\n\n--- 0.0.38 ---\n[New]\nAdded Flow.WhenCancelled(cancellationToken) and unit tests. Returns a Task that completes when the given cancellation token is cancelled.\nAdded CancellationToken.WhenCancelled() extension method to OwlCore.Extensions and unit tests. Same behavior as Flow.WhenCancelled, but as an extension method.\n\n[Breaking changes]\nDeque was removed from OwlCore.Collections.Generic. For a maintained version, see https://github.com/Avid29/MoreCollections/blob/main/src/Generic/Deque.cs\nSynchronizedObservableCollection was moved to OwlCore.Collections.ObjectModel.\nOwlCore.Validation.Ensure was made internal. This is only used by SynchronizedObservableCollection, which may be removed in a future release.\nInvokeOnUI from OwlCore.Extensions has a fatal flaw and was removed.\nOwlCore.Exceptions.UIElementNotFoundException was removed.\nOwlCore.Exceptions was removed.\n\t\t\t\n--- 0.0.37 ---\n[Fixes]\nFixed an issue where updating OwlCore in existing apps could result in the error \"error CS1705: Assembly 'OwlCore' with identity 'OwlCore, Version=0.0.36.0, Culture=neutral, PublicKeyToken=null' uses 'System.Runtime, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' which has a higher version than referenced assembly 'System.Runtime' with identity 'System.Runtime, Version=4.2.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n\n--- 0.0.36 ---\n[Fixes]\nFixed issues with the RemoteLock extension methods for MemberRemote. Added Unit Tests.\nFixed an issue where DataProxy extension methods would not scope to the given member remote. Added Unit Tests.\nFixed an issue where DataProxy was unable to send null values. Added Unit Tests for null, primitives, structs and objects.\n\t\t\t\n--- 0.0.35 ---\n[Fixes]\nFixed several issues with EnumerableExtensions.ChangeCollection, and added unit tests around it.\n\n--- 0.0.34 ---\n[New]\nNew logo!\n\n[Improvements]\nMade MemberRemote.IsAllowedRemotingDirection public. Given the current mode, it checks if the given memberInfo allows data to flow in a certain direction.\nFixed docs on RemoteDataMessage.TargetMemberSignature.\nAdded Unit Tests to the DataProxy extension methods for MemberRemote.\n\n[Fixes]\nFixed an issue where the MemberRemote.PublishDataAsync extension method used the signature scope from the MemberRemote for data, instead of AssemblyQualifiedName.\nFixed an issue where MemberRemote.PublishDataAsync returned always nullable.\n\n[Breaking changes]\nThe PublishDataAsync extension method for MemberRemote now takes the call token as the first parameter instead of the second.\n\n--- 0.0.33 ---\n[Improvements]\nCompositeHttpClientHandler, CompositeHttpClientHandlerActionBase, RateLimitedHttpClientHandlerAction, and CachedHttpClientHandlerAction will be deprecated and removed in a future version.\nCachedHttpClientHandler now supports proper chaining as a System.Net.Http.DelegatingHandler.\nRateLimitedHttpClientHandler now supports proper chaining as a System.Net.Http.DelegatingHandler.\n\n[Breaking changes]\nRemoved dependency on Nito.AsyncEx.Coordination. If you were using this as a transitive dependency, install this package in your projects directly.\n\n[Fixes]\nFixed an issue where MemberRemote wasn't fully disposed until the finalizer was called.\n\n--- 0.0.32 ---\n[New]\nAdded Flow.EasySemaphore() and unit tests. Provides syntactic sugar for releasing a SemaphoreSlim when execution leaves a using statement.\n\n[Improvements]\nIRemoteMessageHandler is now only initialized once while maintianing proper concurrency.\nBetter docs for SetPrimarySynchronizationContext and SetPrimaryThreadInvokeHandler.\n\n--- 0.0.31 ---\n[New]\nAdded OwlCore.Provisos.ILauncher for delegating the launch of Urls and more.\n\n[Improvements]\nAdded Unit Testing to OwlCore.Remoting.MemberRemote - about 5,520 possible usage combinations (~30% coverage).\nAdded Unit Testing to OwlCore.Remoting.Transfer.MessageConverters.NewtonsoftRemoteMessageConverter - about 150 combinations (~70% coverage).\n\n[Breaking changes]\nTo keep things clean for devs, classes in OwlCore.Remoting.Attributes and OwlCore.Remoting.EventArgs have been moved to OwlCore.Remoting.\n\n--- 0.0.30 ---\n[New]\nAdded ReplaceOrAdd extension method for IList{T}. Behaves the same as InsertOrAdd, but replaces at the given index if it exists.\nAdded Pop extension method for IList{T}. Removes and returns the last item in the list.\n\n[Breaking changes]\nInsertOrAdd and InsertOrAddRange now properly throw ArgumentOutOfRangeException when index is less than -1.\n\n[Improvements]\nWe've started adding unit tests to OwlCore behind the scenes. Development of [New] features is now test driven and existing code will get tests added over time.\n\n--- 0.0.29 ---\n[New]\nAdded InsertOrAddRange extension method. Behaves the same as InsertOrAdd, but allows an adding or inserting an enumerable at a specific index.\n\n[Improvements]\nAdded CachedRequestFound and CachedRequestSaving relay from CachedHttpClientHandlerAction to CachedHttpClientHandler.\nNotNullIfNotNullAttribute and NotNullAttribute are now transitive dependencies from Microsoft.Toolkit.Mvvm\n\n[Improvements, Breaking changes]\nAdded MemberSignatureScope to OwlCore.Remoting.Transfer.IRemoteMessageHandler to allow sending/receiving member changes in different assemblies, namespaces, or class names. Previously restricted to 1:1 matches of assembly, namespace and class name.\nAdded AssemblyQualifiedName property to RemotePropertyChangeMessage and adjusted constructor signature, as TargetMemberSignature is no longer guaranteed to match AssemblyQualifiedName.\nDue to the MemberSignatureScope changes, if you've saved any values for IRemoteMemberMessage.TargetMemberSignature, they may not match values generated by this version.\nThe static method MemberRemote.CreateMemberSignature() now requires a second parameter specifying MemberSignatureScope. Previous default behavior was MemberSignatureScope.AssemblyQualifiedName.\nOwlCore.Services.IInstanceCacheRepository.HasId() was added for checking if a specific instance Id exists in the repository.\nOwlCore.AbstractStorage.IFileData.GetThumbnailAsync added for getting the thumbnail images from a file according to specified settings.\nOwlCore.Remoting.Transfer.IRemoteMessageHandler.MessageConverter is now nullable.\n\n[Fixes]\nFixed an issue with OwlCore.Remoting where non-primitive property changes and method parameters were treated as primitive during internal type conversion and throwing.\nFixed an issue where placing RemoteMethod on a class would attempt to remote calls to the Add and Remove methods for events.\n\n--- 0.0.28 ---\n[Fixes]\nNo code changes. Fixed release notes for a previous versions.\n\n--- 0.0.27 ---\n[Fixes]\nFixed a major issue with OwlCore.Remoting.MemberRemote where ignoring an invalid remoting direction resulted in the next message causing a throw.\n\n--- 0.0.26 ---\n[Breaking changes]\nOwlCore.AbstractStorage.IFileScanner was moved to the namespace OwlCore.AbstractStorage.Scanners.\nOwlCore.AbstractStorage.IFileScanner.ScanFolder was renamed to ScanFolderAsync\nOwlCore.AbstractStorage.IFileScanner.ScanFolder's IFolderData parameter was redundant and removed. Implementors should pass this into the class constructor.\nOwlCore.AbstractStorage.DepthFirstFileScanner was moved to the namespace OwlCore.AbstractStorage.Scanners.\nOwlCore.AbstractStorage.FileScanStateEventArgs was unused and has been removed.\n\n[Improvements]\nEmbedded PBD information to help with debugging.\nAdded examples and improved documentation for Flow.EventAsTask.\nAdded optional Id to IFolderData, same as the Id for IFileData.\nOwlCore.Remoting.RemoteProperty can now be used on fields (weaving fields was previously supported)\nAdded setup and help documentation for OwlCore.Remoting (MemberRemote, RemoteMethodAttribute, RemotePropertyAttribute).\n\t\t\t\n--- 0.0.25 ---\n[Breaking changes]\nOwlCore.Remoting.RemoteOptionsAttribute can no longer be used on Events (was never supported by MemberRemote).\nOwlCore.Remoting.Transfer.MessageConverters.MessagePackRemoteMessageConverter was removed as it was untested and compatibility is uncertain.\n\n[Improvements]\nOwlCore.Remoting.Transfer.MessageConverter.NewtonsoftRemoteMessageConverter is MASSIVELY improved. This version has all primitives, common structs and several classes unit tested with property changes and method call messages.\nOwlCore.Remoting.RemoteOptionsAttribute can now be used on fields. [RemoteProperty] applies to fields when put on a class, and [RemoteOptions] now lets you disable specific fields.\nUse explicit cast in OwlCore.Extensions.Cast{T}();\n\n[Fixes]\nFixed an issue where StreamExtensions.ToBytes() and StreamExtensions.ToBytesAsync() would return an empty byte array when stream isn't seeked to beginning.\n\n--- 0.0.24 ---\n[New]\nAdded AbstractFolderExplorer in OwlCore.AbstractUI.Components. This is an AbstractUICollection that acts as a standalone, inbox component. A Folder explorer that interops with OwlCore.AbstractStorage to browse and select subfolders from an IFolderData.\n\n[Breaking changes]\nRemoved cancellation token overload from InParallel. For cancellation, pass the token to the inner tasks.\nSwapped enum value order for OwlCore.AbstractUI.Models.PreferredOrientation so Vertical is first and default.\n\n[Fixes]\nFixed issue where \"isIndeterminate\" parameter of AbstractProgressIndicator wasn't being set from the ctor.\nFixed an issue where AbstractUICollectionViewModel wasn't relaying underlying item to the public Items property.\nFixed an issue where setting state in AbstractBooleanViewModel caused a StackOverflow.\n\n--- 0.0.23 ---\n[Breaking changes]\nRenamed OwlCore.AbstractUI.Models.AbstractProgress to OwlCore.AbstractUI.Models.AbstractProgressIndicator.\nRenamed OwlCore.AbstractUI.Models.AbstractProgressViewModel to OwlCore.AbstractUI.Models.AbstractProgressIndictatorViewModel.\n\n--- 0.0.22 ---\n[Breaking changes]\nMoved EventAsTask from Threading to Flow.\nRemoved ExclusiveSynchronizationContext.\nRemoved \"UIElement\" from class names of all AbstractUI elements and ViewModels.\nRenamed AbstractUIElementGroup to AbstractUICollection.\nRefactored CachedHttpClientHandler to use events instead of Action callbacks in the constructor. Added CachedRequestFound and CachedRequestSaving events. Set e.Handled on these instead of returning true or false.\n\n[Improvements]\nAbstractUI now works with OwlCore.Remoting when you pass an instance to a MemberRemote.\nAbstractUICollection now implements ICollection{AbstractUIElement}.\nAdded CancellationToken parameter to EventAsTask.\n\n[Fixes]\nFixed potential memory leak in OwlCore.Remoting when RemoteMessageReceivingEventArgs.Handled is set to true.\nFixed an issue where an instance with an overriden == operator handed to MemberRemote could interfere with instance reference checks.\n\n--- 0.0.21 ---\n[Fixes]\nFixed a crash in OwlCore.Remoting.MemberRemote when the library catches and prepares to send an exception.\n\n--- 0.0.20 ---\n[Fixes]\nFixed threading issue with OwlCore.Remoting introduced in 0.0.19.\n\n--- 0.0.19 ---\n[Fixes]\nFixed a crash with OwlCore.Remoting when compiled with optimizations.\n\n--- 0.0.18 ---\n[Fixes]\nFixed an issue where remote member change messages were not scoping to specific MemberRemote instances without manually implementing IRemoteMemberMessage.\n\n--- 0.0.17 ---\n[Fixes]\nRe-release of 0.0.16 to fix freezing visual studio when building.\n\n--- 0.0.16 ---\n[Improvements]\nHardened the fix introduced in 0.0.15.\n\n--- 0.0.15 ---\n[Fixes]\nFixed an issue where bidirectional remoting causes a loop for method calls and property changes.\n\n--- 0.0.14 ---\n[Improvements]\nAdded empty constructors to classes in OwlCore.Remoting.Transfer.Messages for deserializers.\n\n--- 0.0.13 ---\n[Fixes]\nFixed and improved type handling for NewtonsoftRemoteMessageConverter.\n\n[Improvements]\nAdded additional checks, exceptions and instructions for mismatched data types in remote properties and method parameters.\nExposed a new SerializerSettings property for NewtonsoftRemoteMessageConverter.",
  "repository": "",
  "verbatimVersion": "0.0.41",
  "version": "0.0.41",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/cauldron.basicinterceptors",
          "@type": "PackageDependency",
          "id": "Cauldron.BasicInterceptors",
          "range": "[3.2.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/cauldron.interception.fody",
          "@type": "PackageDependency",
          "id": "Cauldron.Interception.Fody",
          "range": "[3.2.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/messagepack",
          "@type": "PackageDependency",
          "id": "MessagePack",
          "range": "[2.3.85, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/microsoft.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CSharp",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/microsoft.extensions.dependencyinjection",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.DependencyInjection",
          "range": "[5.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/microsoft.toolkit",
          "@type": "PackageDependency",
          "id": "Microsoft.Toolkit",
          "range": "[7.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/microsoft.toolkit.diagnostics",
          "@type": "PackageDependency",
          "id": "Microsoft.Toolkit.Diagnostics",
          "range": "[7.1.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/microsoft.toolkit.mvvm",
          "@type": "PackageDependency",
          "id": "Microsoft.Toolkit.Mvvm",
          "range": "[7.1.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/system.text.json",
          "@type": "PackageDependency",
          "id": "System.Text.Json",
          "range": "[5.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#dependencygroup/.netstandard2.0/system.threading.tasks.dataflow",
          "@type": "PackageDependency",
          "id": "System.Threading.Tasks.Dataflow",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#OwlCore.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 5858,
      "fullName": "OwlCore.nuspec",
      "length": 17107,
      "name": "OwlCore.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#lib/netstandard2.0/OwlCore.dll",
      "@type": "PackageEntry",
      "compressedLength": 113108,
      "fullName": "lib/netstandard2.0/OwlCore.dll",
      "length": 240640,
      "name": "OwlCore.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#lib/netstandard2.0/OwlCore.xml",
      "@type": "PackageEntry",
      "compressedLength": 25664,
      "fullName": "lib/netstandard2.0/OwlCore.xml",
      "length": 234811,
      "name": "OwlCore.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#logo.png",
      "@type": "PackageEntry",
      "compressedLength": 11396,
      "fullName": "logo.png",
      "length": 13506,
      "name": "logo.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 705,
      "fullName": "LICENSE.txt",
      "length": 1152,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.00.38.48/owlcore.0.0.41.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}