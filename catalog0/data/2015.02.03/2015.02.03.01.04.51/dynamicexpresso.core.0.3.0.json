{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.01.04.51/dynamicexpresso.core.0.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Davide Icardi",
  "catalog:commitId": "fcf8fe33-8de4-4e35-b061-de5d4980b9bb",
  "catalog:commitTimeStamp": "2015-02-03T01:04:51.2723725Z",
  "created": "2013-01-28T01:57:44.297Z",
  "description": "Dynamic Expresso is an expression interpreter for simple C# statements.\n      Dynamic Expresso embeds it's own parsing logic, and really interprets the statements by converting it to .NET delegates that can be invoked.\n      It doesn't generate assembly but it creates LambdaExpression on the fly.",
  "id": "DynamicExpresso.Core",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "gUWcmtmgX2KkXKoOsXyKMwWv1rzPrl5JQepa3lsEvgOAfxAJW4c7cj/s7pcK8Ar2GqGMa75p5jyh42u4lnO1nQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20100,
  "projectUrl": "https://github.com/davideicardi/dynamicexpresso",
  "published": "2013-01-28T01:57:44.297Z",
  "requireLicenseAcceptance": false,
  "summary": "C# expression evaluator",
  "version": "0.3.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}