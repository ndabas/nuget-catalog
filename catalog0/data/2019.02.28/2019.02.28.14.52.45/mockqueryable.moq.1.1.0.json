{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Roman Titov",
  "catalog:commitId": "2d78b53b-9e92-4dd0-b4e9-f117ffc759bd",
  "catalog:commitTimeStamp": "2019-02-28T14:52:45.7500131Z",
  "created": "2019-02-28T14:48:27.327Z",
  "description": "Extension for mocking Entity Framework Core operations such ToListAsync, FirstOrDefaultAsync etc. by Moq\nWhen writing tests for your application it is often desirable to avoid hitting the database. The extension allows you to achieve this by creating a context – with behavior defined by your tests – that makes use of in-memory data.",
  "id": "MockQueryable.Moq",
  "isPrerelease": false,
  "lastEdited": "2019-02-28T14:52:36.217Z",
  "licenseUrl": "https://github.com/romantitov/MockQueryable/blob/master/LICENSE",
  "listed": true,
  "packageHash": "QLxm+vrFVvPutmGL86gujwoS0OY7T2+j4+VVUImye0lyQGZruxkgErxi6ZxYmOaY415HY84qlX+4MlRqN6zN1A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15493,
  "projectUrl": "https://github.com/romantitov/MockQueryable",
  "published": "2019-02-28T14:48:27.327Z",
  "releaseNotes": "DbQuery support\nMicrosoft.EntityFrameworkCore (>=2.2.2) is required",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json#dependencygroup/.netstandard2.0/mockqueryable.core",
          "@type": "PackageDependency",
          "id": "MockQueryable.Core",
          "range": "[1.1.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json#dependencygroup/.netstandard2.0/moq",
          "@type": "PackageDependency",
          "id": "Moq",
          "range": "[4.8.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json#MockQueryable.Moq.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 695,
      "fullName": "MockQueryable.Moq.nuspec",
      "length": 1411,
      "name": "MockQueryable.Moq.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json#lib/netstandard2.0/MockQueryable.Moq.dll",
      "@type": "PackageEntry",
      "compressedLength": 3377,
      "fullName": "lib/netstandard2.0/MockQueryable.Moq.dll",
      "length": 9216,
      "name": "MockQueryable.Moq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.28.14.52.45/mockqueryable.moq.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Moq",
    "EntityFrameworkCore",
    "Queryable",
    "mock",
    "EF",
    "UnitTests"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}