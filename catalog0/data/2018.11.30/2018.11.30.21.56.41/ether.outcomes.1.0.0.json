{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.30.21.56.41/ether.outcomes.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brian MacKay,Kinetiq",
  "catalog:commitId": "b0fa3ce7-d533-4924-b697-f89abf057d69",
  "catalog:commitTimeStamp": "2018-11-30T21:56:41.643146Z",
  "copyright": "2014",
  "created": "2014-06-17T15:42:16.163Z",
  "description": "Fluent wrapper for times when function needs to be able to return either the normal result or a failure state. \n\nFor instance, if you have a method that calls out to a web service, you would probably love to just be able to return the expected result, but you end up writing wrappers - essentially plumbing - to handle cases where the web service is down or does something erratic. Outcome.NET is a simple fluent wrapper for these situations.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.30.21.56.41/ether.outcomes.1.0.0.json#frameworkassemblygroup",
    "assembly": [
      "Microsoft.CSharp",
      "System.Core",
      "System"
    ]
  },
  "id": "Ether.Outcomes",
  "isPrerelease": false,
  "lastEdited": "2018-11-30T21:56:24.823Z",
  "licenseUrl": "http://choosealicense.com/licenses/mit/",
  "listed": true,
  "minClientVersion": "2.8.1",
  "packageHash": "FgEu1rZhsDU32AS9Hp4QomXPvBNgSBrfT8SOtiOc9LHi8e41wVIUTWXto79hPysVbOOSGS3YE4Y72UvoP1azSg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16204,
  "projectUrl": "https://github.com/kinetiq/Ether.Outcomes",
  "published": "2014-06-17T15:42:16.163Z",
  "requireLicenseAcceptance": false,
  "summary": "Fluent wrapper for times when function needs to be able to return either the normal result or a failure state.",
  "title": "Outcome.NET",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.30.21.56.41/ether.outcomes.1.0.0.json#Ether.Outcomes.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 689,
      "fullName": "Ether.Outcomes.nuspec",
      "length": 1626,
      "name": "Ether.Outcomes.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.30.21.56.41/ether.outcomes.1.0.0.json#lib/Ether.Outcomes.dll",
      "@type": "PackageEntry",
      "compressedLength": 3123,
      "fullName": "lib/Ether.Outcomes.dll",
      "length": 7680,
      "name": "Ether.Outcomes.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.30.21.56.41/ether.outcomes.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "c#",
    "vb.net",
    ".net",
    "fluent",
    "wrapper",
    "failure",
    "success"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}