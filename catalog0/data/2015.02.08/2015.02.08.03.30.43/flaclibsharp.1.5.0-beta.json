{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.03.30.43/flaclibsharp.1.5.0-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aaron Lenoir",
  "catalog:commitId": "60dc0ae3-3fb0-4b64-a9e6-442a591dfcfe",
  "catalog:commitTimeStamp": "2015-02-08T03:30:43.3452059Z",
  "copyright": "Copyright 2015",
  "created": "2015-01-27T23:15:40.873Z",
  "description": "A .NET library for reading and writing FLAC metadata.",
  "id": "FlacLibSharp",
  "isPrerelease": true,
  "lastEdited": "2015-01-27T23:45:31.843Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.txt",
  "packageHash": "caOZo3L6KcKrur64ssJtSOg+hRzeF6I3AKC4T09PRPfXJ62tYGZzKrd3NmPiw6Oa9u//Xs2eH+WZZ+yUJjK/1g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23613,
  "projectUrl": "https://github.com/AaronLenoir/flaclibsharp",
  "published": "2015-01-27T23:15:40.873Z",
  "releaseNotes": "This is a beta release. Writing of metadata has not been tested extensively in the real-world (only the automated tests). Please don't use it on files you do not have backed up. Please log any issues on github.",
  "requireLicenseAcceptance": false,
  "summary": "This library allows you to read and write metadata in FLAC files.",
  "title": "FlacLibSharp 1.5.0.0 beta",
  "version": "1.5.0-beta",
  "tags": [
    "flac",
    "metadata"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}