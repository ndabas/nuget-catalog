{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.10.53.50/monkeyorm.mysql.0.4.10.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sinbadsoft",
  "catalog:commitId": "80819d80-a3b4-4e61-95f5-df793edbd7bc",
  "catalog:commitTimeStamp": "2015-02-05T10:53:50.2554551Z",
  "copyright": "Copyright (c) Sinbadsoft 2010-2014. Licensed under the Apache License, Version 2.0",
  "created": "2014-05-22T11:50:04.303Z",
  "description": "MonkeyOrm is a small, powerful SQL-based ORM for .NET.\nWebsite: http://www.monkeyorm.com .\nSource code: https://github.com/Sinbadsoft/MonkeyOrm.\nSome of MonkeyOrm features and design choices:\n* Doesn’t pollute your code: no base classes to inherit from, no attributes and no xml config.\n* Easy to adopt, easy to get rid of: No lock-in, it’s just your POCOs and plain old SQL.\n* Stateless, no caching.\n* Built-in CRUD: Create, Read, Update, Delete and Create-or-Update (aka Upsert).\n* Transactions.\n* Objects slicing on insertion and update with a black list or a white list.\n* Bulk-fetching.\n* Data streaming.\n* Batch insertion, with fine-grained control on number of inserted objects per query.\n* Blobbing.",
  "id": "MonkeyOrm.MySql",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "sETUIB5vXjPmFzQ0IMHAx+D50Lv2MsLQLZ1rj//I15YgYm8wNW5hoeuzBPsjrpD0iL8cLrF8utoPKvugBnSsWA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19949,
  "projectUrl": "http://www.monkeyorm.com",
  "published": "2014-05-22T11:50:04.303Z",
  "releaseNotes": "* Fixed auto generated inserted id error on some mysql server/driver combinations.",
  "requireLicenseAcceptance": true,
  "summary": "MonkeyOrm is a small, powerful SQL-based ORM for .NET.\nWebsite: http://www.monkeyorm.com .\nSource code: https://github.com/Sinbadsoft/MonkeyOrm.\nSome of MonkeyOrm features and design choices:\n* Doesn’t pollute your code: no base classes to inherit from, no attributes and no xml config.\n* Easy to adopt, easy to get rid of: No lock-in, it’s just your POCOs and plain old SQL.\n* Stateless, no caching.\n* Built-in CRUD: Create, Read, Update, Delete and Create-or-Update (aka Upsert).\n* Transactions.\n* Objects slicing on insertion and update with a black list or a white list.\n* Bulk-fetching.\n* Data streaming.\n* Batch insertion, with fine-grained control on number of inserted objects per query.\n* Blobbing.",
  "title": "MonkeyOrm.MySql",
  "version": "0.4.10",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.10.53.50/monkeyorm.mysql.0.4.10.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.10.53.50/monkeyorm.mysql.0.4.10.json#dependencygroup/sinbadsoft.lib.model",
          "@type": "PackageDependency",
          "id": "Sinbadsoft.Lib.Model",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.10.53.50/monkeyorm.mysql.0.4.10.json#dependencygroup/mysql.data",
          "@type": "PackageDependency",
          "id": "MySql.Data",
          "range": "[6.6.4, )"
        }
      ]
    }
  ],
  "tags": [
    "orm",
    "dal",
    "database",
    "mysql"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}