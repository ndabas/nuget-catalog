{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.12.31.07.58.34/imagine.rest.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nguyen Pham",
  "catalog:commitId": "e226a4dd-d3ea-4a5f-9efd-c2e7759d879f",
  "catalog:commitTimeStamp": "2016-12-31T07:58:34.7801164Z",
  "copyright": "Copyright 2016 by Nguyen Pham",
  "created": "2016-12-31T07:42:29.913Z",
  "description": "Rest Client for Universal Windows Platform",
  "iconUrl": "http://i943.photobucket.com/albums/ad274/phamnguyenit/Rest_zpsqxxxcrki.png",
  "id": "Imagine.Rest",
  "isPrerelease": false,
  "lastEdited": "2016-12-31T07:57:34.693Z",
  "licenseUrl": "https://github.com/PhamNguyen/RestUWP/blob/master/README.md",
  "listed": true,
  "packageHash": "wehkCtm3bl5D3qLnZmDRdZovcW0V/Klp5X888GTXPmSeUysfVCjMONUSvePcNZKVZm57hlygXmV1WbUFPVZVjA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11815,
  "projectUrl": "https://github.com/PhamNguyen/RestUWP",
  "published": "2016-12-31T07:42:29.913Z",
  "releaseNotes": "Rest Client for Universal Windows Platform\n\nIntrodution\n\nRestUWP is open sources library for Universal Windows Platform to work with Rest API.\n\nInstall via Nuget\n\nInstall-Package Imagine.Rest\nLibraries:\n\nIRestClientBuilder.cs\nRestClientBuilder\nRestClient.cs\nUsing RestUWP\n\nTo use RestClient you have to provide required in formation:\n\nScheme: http or https\nDomain: yourdomain.com\nex:\n\nstring scheme = \"http\";\nstring domain = \"yourdomain.com\";\n\nRestClient client = new RestClientBuilder().\n               SetScheme(scheme).\n               SetHost(domain).\n               Build();\n\nstring result = await client.RequestStringAsync();\nRestClientBuilder\n\nIt's use to create RestClient instance. You have to provide required information or extends request information via RestClientBuilder's methos before Build:\n\nex:\n\nstring scheme = \"http\";\nstring domain = \"harvard.com\";\nstring path = \"people/student\"\nstring code = \"123\";\n\nRestClient client = new RestClientBuilder().\n               SetScheme(scheme).\n               SetHost(domain).\n               SetHost(path).\n               AddQuery(code).\n               Build();\n\nstring result = await client.RequestStringAsync();\n\n// It's will return result from : http://harvard.com/people/student/123\nRestClientBuilder's Methods\n\nIt's implement the methods from IRestClientBuilder interface\n\nSetHost(String host): Your domain\nSetScheme(String Scheme): http or https\nSetPath(String path): your api path ex: School/Student/\nSetMethod(HttpMethod method): HttpMethod.Get, HttpMethod.Post.....\nSetHeaders(Dictionary headers): set request headers\nSetContents(Dictionary contents): set request parameters\nAddParameter(String key, object value): add a parameter\nAddParameters(Dictionary parameters): add dictionary parameters\nAddQuery(object parameter): add slat (\"/\") + path parameter ex: /123\nAddQueries(IEnumerable queries);\nSetQuery(params object[] queries);\nAddHeader(String key, object value): add a request header\nRestClient Build(): Build RestClient with provided information\nex:\n\n// Post Method\nstring scheme = \"http\";\nstring domain = \"harvard.com\";\nstring path = \"people/student/create\"\nHttpMethod method = HttpMethod.Post;\nstring code = \"student_code_123\";\nstring name = \"Nguyen Pham\";\nstring country = \"Vietnam\";\n\nRestClient client = new RestClientBuilder().\n               SetScheme(scheme).\n               SetHost(domain).\n               SetHost(path).\n               SetMethod(method).\n               SetParameter(\"name\", name).\n               SetParameter(\"code\", code).\n               SetParameter(\"country\", country).\n               Build();\n\nvar student = await client.ExcuteAsync<Student>();\n\n// It's will return result from : http://harvard.com/people/student/create with provided infomations and then deserialize json result to Student object\nRestClient\n\nContructor:\n\npublic RestClient(Uri uri)\n\npublic RestClient(HttpScheme scheme, String host, String path)\n\npublic RestClient(HttpScheme scheme, String host, String path, params object[] queries)\n\npublic RestClient(HttpScheme scheme, String host, String path, HttpMethod method)\nUse to execute an request to Rest API\n\nRestClient's Method\n\npublic async Task ExecuteAsync(Action callBack = null)\n\nExecute an request and parse json result to an object. To use it you have to provide class which you want to deserialize\n\nex:\n\n// Get User Method\nstring scheme = \"http\";\nstring domain = \"harvard.com\";\nstring path = \"people/student\"\nstring query = \"user\"\nHttpMethod method = HttpMethod.Get;\nstring code = \"student_code_123\";\n\nRestClient client = new RestClientBuilder().\n               SetScheme(scheme).\n               SetHost(domain).\n               SetHost(path).\n               SetMethod(method).\n               AddQuery(userPath).\n               SetParameter(\"code\", code).\n               Build();\n\nvar student = await client.ExcuteAsync<Student>();\n\n// It's will return json result from : http://harvard.com/people/student/user?code=student_code_123 and deserialize json result to Student object\nOthers request methods:\n\npublic async Task RequestStringAsync(Action callBack = null)\n\npublic async Task RequestBytesAsync(Action callBack = null)\n\npublic async Task RequestStreamAsync(Action callBack = null)\n\nIt's very easy to use. If you have any question please contact me via pham.nguyen@hotmail.com\n\nLicence\n\nThe MIT License\n\nCopyright (c) 2017 by Nguyen Pham\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "requireLicenseAcceptance": false,
  "summary": "Rest Client for Universal Windows Platform\n",
  "title": "Rest Client for Universal Windows Platform",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.12.31.07.58.34/imagine.rest.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.12.31.07.58.34/imagine.rest.1.0.1.json#dependencygroup/sampledependency",
          "@type": "PackageDependency",
          "id": "SampleDependency",
          "range": "[1.0.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.12.31.07.58.34/imagine.rest.1.0.1.json#Imagine.Rest.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2256,
      "fullName": "Imagine.Rest.nuspec",
      "length": 6614,
      "name": "Imagine.Rest.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.12.31.07.58.34/imagine.rest.1.0.1.json#Users/PhamNguyen/Projects/Github/RestUWP/RestUWP/nuget/lib/Imagine.Uwp.Rest.dll",
      "@type": "PackageEntry",
      "compressedLength": 7845,
      "fullName": "Users/PhamNguyen/Projects/Github/RestUWP/RestUWP/nuget/lib/Imagine.Uwp.Rest.dll",
      "length": 19968,
      "name": "Imagine.Uwp.Rest.dll"
    }
  ],
  "tags": [
    "Rest",
    "RestUWP",
    "Rest.NET",
    "ImagineRest"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}