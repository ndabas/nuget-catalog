{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.11.56.51/ch.siphash.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Clifford Hammerschmidt",
  "catalog:commitId": "7b822aaf-0b5a-454d-96bc-fae825f88f62",
  "catalog:commitTimeStamp": "2015-02-03T11:56:51.43259Z",
  "created": "2013-06-19T18:25:03.06Z",
  "description": "C# implementation of SipHash (using unsafe and net45 aggressive inline for speed)",
  "id": "CH.SipHash",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.html",
  "packageHash": "VMzKvCGc9K2KHfP9tjYuZ1ubgQQdVRWwlgjywi6zKPF0k55rhhVisvkbORNHv+MdxkeQInvliVT3YW+WZ3XwMg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5873,
  "projectUrl": "https://github.com/tanglebones/ch-siphash",
  "published": "2013-06-19T18:25:03.06Z",
  "requireLicenseAcceptance": false,
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.11.56.51/ch.siphash.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "tags": [
    "SipHash"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}