{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "EventuallyNet",
  "catalog:commitId": "f7643bed-9969-4a0b-beef-11a7b605cfcb",
  "catalog:commitTimeStamp": "2018-12-19T22:15:50.4163943Z",
  "copyright": "2017 Pravo.ru",
  "created": "2017-08-17T08:40:33.14Z",
  "description": "Integration tests are tests when sometime you need to wait some event. Sometime you need to wait alot. For example selenium tests mainly consists of waiting. Scalatest eventually is the most useful library it that case and the porpose of this project is to port is to dotnet.",
  "id": "EventuallyNet",
  "isPrerelease": false,
  "lastEdited": "2018-12-19T22:15:31.52Z",
  "licenseUrl": "https://github.com/Pravoru/EventuallyNet/blob/master/License.md",
  "listed": true,
  "packageHash": "0+1SWaitlwvm54ApZyUCA9pIciI1URrE1sY5SqqYkTFUoQ0XKq1w5sZa5I9HvYzRtCPqM/GAhJXTemzXdp+l5g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15580,
  "projectUrl": "https://github.com/Pravoru/EventuallyNet",
  "published": "2017-08-17T08:40:33.14Z",
  "requireLicenseAcceptance": false,
  "title": "Eventually is a library for integration tests inspired by Scalatest Eventually",
  "verbatimVersion": "0.1.0",
  "version": "0.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json#dependencygroup/.netstandard1.6",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json#dependencygroup/.netstandard1.6/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json#dependencygroup/.netstandard1.6/polly",
          "@type": "PackageDependency",
          "id": "Polly",
          "range": "[5.3.1, )"
        }
      ],
      "targetFramework": ".NETStandard1.6"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json#EventuallyNet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 601,
      "fullName": "EventuallyNet.nuspec",
      "length": 1279,
      "name": "EventuallyNet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json#lib/netstandard1.6/EventuallyNet.dll",
      "@type": "PackageEntry",
      "compressedLength": 3694,
      "fullName": "lib/netstandard1.6/EventuallyNet.dll",
      "length": 8704,
      "name": "EventuallyNet.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.22.15.50/eventuallynet.0.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "integration-testing",
    "waiting",
    "eventually"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}