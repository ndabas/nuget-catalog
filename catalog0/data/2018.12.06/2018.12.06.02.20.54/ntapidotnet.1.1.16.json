{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.06.02.20.54/ntapidotnet.1.1.16.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "James Forshaw",
  "catalog:commitId": "c21be28a-a813-4be5-b752-681331940873",
  "catalog:commitTimeStamp": "2018-12-06T02:20:54.6107478Z",
  "copyright": "Copyright Google Inc. 2017",
  "created": "2018-08-01T10:21:47.723Z",
  "description": "A .NET class library to access native NT API system calls",
  "id": "NtApiDotNet",
  "isPrerelease": false,
  "lastEdited": "2018-12-06T02:20:44.527Z",
  "licenseUrl": "https://www.apache.org/licenses/LICENSE-2.0",
  "listed": true,
  "packageHash": "UZYP7IDzK3jKUXXz2+lpCNt5ebjH1J3KJItCc6tYNnAdNVsZHzZ1wcjyhgCv19+X+UtxNYVEXBxbbXC8uXSgBQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 367598,
  "projectUrl": "https://github.com/google/sandbox-attacksurface-analysis-tools",
  "published": "2018-08-01T10:21:47.723Z",
  "releaseNotes": "1.1.16\n------\n* Added Get-NtFilePathType function.\n* Added Add-NtSecurityDescriptorDaclAce function.\n* Added Path support to Get-NtSecurityDescriptor and Set-NtSecurityDescriptor.\n* Added parameter to only return a specific set of IIDs from a COM proxy definition.\n* Added support for extracting RPC servers from a DLL.\n* Added support for enumerating registered RPC endpoints with Get-RpcEndpoint.\n* Added support for enumerating running service information with Get-RunningService.\n* Added Get-NtAlpcServer function.\n* Reworked OpenWithType to support bruteforce of the object type.\n* Added Win32Utils method to parse command line and extract image path.\n* Fix DepStatus On Windows Server 2K12 / 2K16 from Rosalie.\n* Added option to Get-NtProcess and Get-NtThread to only return system information.\n* Added basic transaction support to registry keys.\n\n1.1.15\n------\n* Convert access exceptions during NDR parsing into an NdrParser exception rather than crashing the process.\n* Added function to enumerate running services with PIDs.\n* Added methods to load module into a symbol resolver after creation.\n* Added basic support for WNF registrations including a Get-NtWnf cmdlet.\n* Expose all parameters for section mapping.\n* Added a Get-NtMappedSection cmdlet.\n* Various fixes to NDR decoding.\n* Added method to create an anonymous named pipe pair.\n* Rework of cached signing level, including unpacked EA data based on information provided by Alex Ionescu.\n* Added protection level to the base New-Win32Process function.\n* Added access rights for process creation.\n\n1.1.14\n------\n* Added basic support for transaction objects.\n* Minor fixes for ALPC support.\n* Implemented OOP NDR parsing.\n* Added NDR parsing and formatting powershell functions such as New-NdrParser and Format-NdrComProxy\n* Fix for display of NDR arrays from 1orenz0.\n* Print NDR correlation descriptors during formatting.\n* Added support to read out COM proxies.\n\n1.1.13\n------\n* Fixed bug in Get-NtToken for sandboxed tokens.\n* Extended support for Job objects.\n* Added Set-NtFileReparsePoint cmdlet.\n* Added support for viewing a file with Show-NtSection\n* Added support for DuplicateTo methods from rosalie.lecart.\n* Improved support for Win32 Desktop and WindowStation objects.\n* ScriptBlock support for the $_ argument.\n* Added SID -> Name cache to improve performance.\n* Fixed user marshallers in NDR for Windows 7.\n* Added internal security descriptor viewer control.\n\n1.1.12\n------\n* Added basic NDR parser.\n* Added basic symbol resolver.\n* Added method to read a security descriptor from another process.\n* Improved process memory read and writing methods.\n* Added virtual memory cmdlets to allocate, release and modify memory.\n* Added Get-EmbeddedAuthenticodeSignature function.\n* Added Get and Set NtSecurityDescriptor functions.\n* Added ProcessTrustLabel to basic security information set.\n* Added Get-NtFileChild cmdlet.\n* Added Get-NtKeyChild cmdlet.\n* Added Get-NtDirectoryChild cmdlet.\n* Added name lookup to NtIoControlCode.\n* Added NtNamedPipeFile type with implementations of basic pipe functions.\n* Added ADd-DosDevice and Remove-DosDevice cmdlets.\n* Added file directory and stream visitors.\n* Merged Get-NtLowBoxToken and Get-NtFilteredToken into Get-NtToken.\n* Modified Show-NtSection to also display an arbitrary byte array.\n* Added an Invoke-NtToken cmdlet to run a script block under impersonation.\n* Added Remove-NtFile cmdlet.\n* Added case sensitive property for RS4.\n* Added flags for NtCreateDirectoryObjectEx.\n* Added pseudo option to Get-NtToken.\n* Improved conditional ACE support.\n\n1.1.11\n------\n* Improved New-NtToken including adding missing IL\n* Added new NTSTATUS codes from 1709\n* Changes to native process creation\n* Added OverrideChildProcessCreation for Win32 process\n* Added display of process trust labels from tokens.\n* Fixed IsChildProcessRestricted on 1709 and above (changed structure)\n* Fixed named pipe server in TokenViewer\n* Added -All parameter to Show-NtToken to display list of tokens.\n\n1.1.10\n------\n* Added support for extended handle information to allow for PIDs > 64k.\n* Added basic New-NtToken cmdlet and system call.\n* Added Resolve-NtObjectAdddress cmdlet to resolve the addresses of a list of objects.\n* Added generic object ReOpen method.\n* Added vistor method to object directories to enumerate recursively with a callback.\n* Added display of process trust labels.\n\n1.1.9\n-----\n* Fix for bug when querying extended process information on Windows 7/8.\n* Add OneDrive file attributes from thierry.franzetti.\n* Added support for displaying child AppContainer names.\n* Various improvements to section editor including integer data inspectors.\n\n1.1.8\n-----\n* Better support for relative paths in the cmdlets including supporting ones based on the current directory.\n* RenameEx and DispositionEx support from fllombard.\n* Added Key value deletion and fixes from rsiestrunck.\n* Fixed bug in NtOpenSession prototype.\n* Added support for adding additional groups to a token in Get-NtToken if user has SeTcbPrivilege.\n* Added Show-NtToken to display a token in the GUI, renamed old whois style token viewer to Show-NtTokenEffective.\n* Added PowerShell functions to get and create execution alias reparse points.\n* Added section viewer and editor with Show-NtSection function.\n\n1.1.7\n-----\n* Added projects to build NtObjectManager for PowerShell Core 6.0\n* Added additional techniques to open process tokens in access checking cmdlets.\n* Fixed issues with Add-NtKey and added Remove-NtKey cmdlets.\n* Minor fixes from fllombard\n* Added change notify key with asynchronous support\n* Added kernel LUID allocation\n\n1.1.6\n-----\n* Added support for child process policy and desktop app policy to Win32ProcessConfig.\n* Added new mitigation options from Win10 1709.\n* Fix a couple of crashes.\n\n1.1.5\n-----\n* Fixed crash on 32 bit Windows when enumerating NT types.\n* Merged ManagedHandleUtils assembly into main NtApiDotNet under the Win32 namespace.\n\n1.1.4\n-----\n* Added Show-NtSecurityDescriptor function.\n* Added support for modifying security descriptors in the UI.\n* Cleanup of access mask when being displayed in the UI.\n* Added opaque reparse buffer.\n\n1.1.3\n-----\n* Added Show-NtToken function.\n* Added basic version checking for certain functions which can't be accessed on Windows 7.\n* Fixed referenced System.Management.Automation assembly version to run properly with no PS2.\n* Fixed some bugs in token structures which preventing being used with multiple values.\n* Added support to Win32Process for LPAC.\n\n1.1.2\n-----\n* Added Get-AccessibleHandle cmdlet.\n* Support for oplock levels.\n* Added support to set inherit and protect on close flags to objects.\n* Added Get-NtFilePath function.\n\n1.1.1\n-----\n* Fix to native protected process creation.\n* Added functions to create native NT processes.\n\n1.1.0\n-----\n* Removed check tools, excluding CheckNetworkAccess.\n* Added basic Job object cmdlets.\n* Added creation of protected processes in Win32Process.\n* Added service access checking cmdlet.\n* Added get executable manifest cmdlet.\n\n1.0.9\n-----\n* Made New-Win32Process more generic and added support for Win32k filter enable.\n* Added function to capture token from a process using impersonation.\n* Added basic support for Desktop and WindowStation objects using Win32u.dll exports.\n* Added file locking implementation including async.\n* Added hardlink enumeration.\n* Added NTFS stream enumeration.\n* Deprecated most of the old standalone utilities in favour of PS cmdlets.\n\n1.0.8\n-----\n* Added cmdlets to create a kernel memory dump, system environment and licensing.\n* Additional system calls implemented.\n* Added access to secure boot policies and code integrity policies.\n* Made Win32 Process creation more generic and added cmdlet.\n* Added access check by type including SELF SID.\n\n1.0.7\n-----\n* Added new cmdlets to do access checking. Many of the old standalone utilities are now deprecated.\n* Added cmdlets to create lowbox tokens\n* Added list of known capability SIDs and resolve them during name lookup\n* Added cmdlet to get a SID\n* Added cmdlet to do a standalone access checking\n* Reworked the APIs to include non-throwing versions of many of the core Open/Create methods.\n* Made NtType more inspectable, includes access enumeration and rationalizes the opening methods.\n* Various additional properties such as extended process flags, checking for LPAC\n* Rework of access mask handling. Now all low-level APIs use an AccessMask structure which has\n  conversion operators to and from other enumerations.\n* Various other bug fixes.\n\n1.0.6\n-----\n* Added cmdlet to filter a Token object.\n* Cleanups to various components to make them easier to use from PS\n\n1.0.5\n-----\n* Added additional Known SIDs\n* Unified the variant Get-NtToken* cmdlets into one.\n* Added additional token cmdlets such as Logon and Clipboard.\n* Added initial support for IO Completion Ports\n* Added object creation time property\n* Added support to set a process device map\n* Added top level CanSynchronize property to NtObject\n* Bugs fixes from Rustam Agametov\n* Made process list in token viewer a list rather than a tree and made a separate handle tab.\n\n1.0.4\n-----\n* First NUGET release.",
  "requireLicenseAcceptance": false,
  "title": "NtApiDotNet",
  "verbatimVersion": "1.1.16",
  "version": "1.1.16",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.06.02.20.54/ntapidotnet.1.1.16.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.06.02.20.54/ntapidotnet.1.1.16.json#NtApiDotNet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3854,
      "fullName": "NtApiDotNet.nuspec",
      "length": 10208,
      "name": "NtApiDotNet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.06.02.20.54/ntapidotnet.1.1.16.json#lib/net45/NtApiDotNet.dll",
      "@type": "PackageEntry",
      "compressedLength": 296396,
      "fullName": "lib/net45/NtApiDotNet.dll",
      "length": 798720,
      "name": "NtApiDotNet.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.06.02.20.54/ntapidotnet.1.1.16.json#lib/net45/NtApiDotNet.XML",
      "@type": "PackageEntry",
      "compressedLength": 56035,
      "fullName": "lib/net45/NtApiDotNet.XML",
      "length": 613939,
      "name": "NtApiDotNet.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.06.02.20.54/ntapidotnet.1.1.16.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "syscalls"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}