{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.08.43.09/netfx-system.linq.expressions.expressioncombiner.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "meek, Daniel Cazzulino, kzu, Clarius",
  "catalog:commitId": "4e2922e9-e8d1-4dfa-848c-3a658b6f377c",
  "catalog:commitTimeStamp": "2018-11-29T08:43:09.2213407Z",
  "created": "2011-06-28T13:56:57.91Z",
  "description": "Allows combining linq expressions using logic operators And, AndAlso, Or and OrElse. Compatible with Entity Framework, NHibernate and Linq to SQL query providers.\n\nSee http://kzu.to/iT3X73 for more information.",
  "iconUrl": "http://download.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=netfx&DownloadId=199201",
  "id": "netfx-System.Linq.Expressions.ExpressionCombiner",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-29T08:42:52.16Z",
  "licenseUrl": "http://netfx.codeplex.com/license",
  "listed": true,
  "packageHash": "3ggdH5NU6+NpgW/U6noAfVBHW7Vpz4ezxAiTeyJQxW305ogOhKXF8aBJFX7OdIIPM8P7dcIRFo5KjuZ1TH67Yg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16807,
  "projectUrl": "http://netfx.codeplex.com",
  "published": "2011-06-28T13:56:59.563Z",
  "requireLicenseAcceptance": false,
  "title": "NETFx Linq Expression Combiner",
  "verbatimVersion": "1.0.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.08.43.09/netfx-system.linq.expressions.expressioncombiner.1.0.0.json#netfx-System.Linq.Expressions.ExpressionCombiner.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 684,
      "fullName": "netfx-System.Linq.Expressions.ExpressionCombiner.nuspec",
      "length": 1074,
      "name": "netfx-System.Linq.Expressions.ExpressionCombiner.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.08.43.09/netfx-system.linq.expressions.expressioncombiner.1.0.0.json#License.txt",
      "@type": "PackageEntry",
      "compressedLength": 1025,
      "fullName": "License.txt",
      "length": 1523,
      "name": "License.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.08.43.09/netfx-system.linq.expressions.expressioncombiner.1.0.0.json#content/netfx/System/Linq/Expressions/ExpressionCombiner.cs",
      "@type": "PackageEntry",
      "compressedLength": 1841,
      "fullName": "content/netfx/System/Linq/Expressions/ExpressionCombiner.cs",
      "length": 3865,
      "name": "ExpressionCombiner.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.08.43.09/netfx-system.linq.expressions.expressioncombiner.1.0.0.json#lib/netfx-System.Linq.Expressions.ExpressionCombiner.xml",
      "@type": "PackageEntry",
      "compressedLength": 442,
      "fullName": "lib/netfx-System.Linq.Expressions.ExpressionCombiner.xml",
      "length": 641,
      "name": "netfx-System.Linq.Expressions.ExpressionCombiner.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.08.43.09/netfx-system.linq.expressions.expressioncombiner.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "netfx",
    "linq",
    "expressions",
    "iqueryable",
    "entityframework",
    "ef",
    "nhibernate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}