{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.00.00.00/fpr.1.9.1.39105.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "eric_swann",
  "catalog:commitId": "246833ae-30bf-4ee0-a124-06c393296033",
  "catalog:commitTimeStamp": "2015-02-06T00:00:00.3063105Z",
  "copyright": "Copyright 2014 Eric Swann, et. al. - All rights reserved.",
  "created": "2014-07-31T03:43:57.4Z",
  "description": "A fast, fun and stimulating object to object mapper.  Kind of like AutoMapper, just simpler and way, way faster.",
  "iconUrl": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/Paddleball.svg/202px-Paddleball.svg.png",
  "id": "Fpr",
  "isPrerelease": false,
  "language": "",
  "lastEdited": "2014-07-31T17:19:39.34Z",
  "packageHash": "JZBM+nzrHng3V19cT1p/hCyJZpE8XbHtHiv+rWhhPbDHnu5+R/1HzouRkT4mrOmZYSAhSUughXisy6B6SJA0/w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 64120,
  "projectUrl": "https://github.com/eswann/Fpr",
  "published": "2014-07-31T03:43:57.4Z",
  "releaseNotes": "Expanded implicit mapping inheritance:\nImplicit TSource and TDestination Mapping Inheritance\nIn some cases you may wish to derive a mapping based on both the source and destination types.  In such a case,\nsetting the global configuration AllowImplicitDestinationInheritance setting to true will allow inheritance of a mapping\nbased on both the source and destination types.  The source class hierarchy is traversed in an inside loop and the \ndestination class hierarchy is traversed in an outside loop until a match is found. \n\n    public class SimplePoco\n    {\n        public Guid Id { get; set; }\n        public string Name { get; set; }\n    }\n\n    public class DerivedPoco : SimplePoco\n    {...}\n\n    public class SimpleDto\n    {\n        public Guid Id { get; set; }\n        public string Name { get; set; }\n    }\n\n    public class DerivedDto : DerivedDto\n    {...}\n\nThe following mapping will be used for any permutation of Simple/Derived Poco to Simple/Derived Dto\nunless overridden by a specific configuration. \n\n    TypeAdapterConfig.GlobalSettings.AllowImplicitDestinationInheritance = true;\n    TypeAdapterConfig<SimplePoco, SimpleDto>.NewConfig()\n        .Map(dest => dest.Name, src => src.Name + \"_Suffix\");\n\nIf you don't wish a specific permutation to use the base mapping, just define a new configuration for that permutation.\n\n    TypeAdapterConfig<DerivedPoco, SimpleDto>.NewConfig();",
  "requireLicenseAcceptance": false,
  "summary": "A fast, fun and stimulating object to object mapper.  Kind of like AutoMapper, but simpler and way faster.",
  "title": "Fpr Mapper",
  "version": "1.9.1.39105",
  "tags": [
    "Mapper",
    "AutoMapper",
    "Fast",
    "Mapping"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}