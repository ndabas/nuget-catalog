{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Efimster",
  "catalog:commitId": "cce474e1-0664-4a45-ada3-fc7ec18abc6a",
  "catalog:commitTimeStamp": "2018-12-09T03:00:26.7133835Z",
  "copyright": "Copyright 2014 (c) Efimster https://github.com/Efimster",
  "created": "2014-05-05T15:27:17.373Z",
  "description": "LINQtoSPARQL is specific LINQ to SPARQL. Dynamically scaffolds SPARQL queries by using LINQ style.\nBuilt on top of DynamicSPARQL project https://github.com/Efimster/DynamicSPARQL/wiki.\nPlease visit project wiki pages https://github.com/Efimster/LINQtoSPARQL/wiki .",
  "id": "LINQtoSPARQL",
  "isPrerelease": false,
  "lastEdited": "2018-12-09T03:00:14.55Z",
  "licenseUrl": "https://github.com/Efimster/LINQtoSPARQL/blob/master/MIT-LICENSE.txt",
  "listed": true,
  "packageHash": "EGuA/CXh2/lzzxdJ3kQUaZo6Q0cSbnYkbH1c/zsNXS/pMubXOxWpWP3GM/LhCY1oGo26ugKvRvha7dZPNsvV2w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 31245,
  "projectUrl": "https://github.com/Efimster/LINQtoSPARQL/",
  "published": "2014-05-05T15:27:17.373Z",
  "releaseNotes": "Modified according to DynamicSPARQL 1.0.2.1",
  "requireLicenseAcceptance": false,
  "title": "LINQtoSPARQL",
  "verbatimVersion": "1.0.2.1",
  "version": "1.0.2.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json#dependencygroup/dynamicsparql",
          "@type": "PackageDependency",
          "id": "DynamicSPARQL",
          "range": "[1.0.2.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json#LINQtoSPARQL.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 502,
      "fullName": "LINQtoSPARQL.nuspec",
      "length": 1160,
      "name": "LINQtoSPARQL.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json#lib/net45/LINQtoSPARQL.dll",
      "@type": "PackageEntry",
      "compressedLength": 18046,
      "fullName": "lib/net45/LINQtoSPARQL.dll",
      "length": 52224,
      "name": "LINQtoSPARQL.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json#content/readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 171,
      "fullName": "content/readme.txt",
      "length": 272,
      "name": "readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.03.00.26/linqtosparql.1.0.2.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "LINQtoSPARQL",
    "DynamicSPARQL",
    "LINQ",
    "SPARQL",
    "RDF",
    "dotNetRDF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}