{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.11.14/locker.1.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tom Jacques",
  "catalog:commitId": "ef17836d-5930-436f-a7e2-3f85d5ed0ae7",
  "catalog:commitTimeStamp": "2018-12-09T21:11:14.0990796Z",
  "copyright": "Copyright 2014",
  "created": "2014-01-31T15:38:46.627Z",
  "description": "Binaries for the Locker library.\n        Visit https://github.com/tejacques/Locker for an overview and usage examples.",
  "id": "Locker",
  "isPrerelease": false,
  "lastEdited": "2018-12-09T21:10:49.28Z",
  "licenseUrl": "https://github.com/tejacques/Locker/blob/master/LICENSE",
  "listed": true,
  "packageHash": "F/6UkwzUAYRdzd076gtQo9cC/ud2WS8s5bOSJ2LZRfdYKvfwp2LYLV2SAsFBF+czR/gIuQaI8pMsM4jlAPo4SA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15316,
  "projectUrl": "https://github.com/tejacques/Locker",
  "published": "2014-01-31T15:38:46.627Z",
  "releaseNotes": "Notes:\n\n        Version 1.1.1:\n         - Add source files to NuGet package\n\n        Version 1.1.0:\n         - Added the TryLock methods:\n         - Locker.TryReadLock(ReaderWriterLockSlim, rwlock, int timeout, Action whileReadLocked)\n         - Locker.TryReadLock(ReaderWriterLockSlim, rwlock, TimeSpan timeout, Action whileReadLocked)\n         - Locker.TryWriteLock(ReaderWriterLockSlim, rwlock, int timeout, Action whileWriteLocked)\n         - Locker.TryWriteLock(ReaderWriterLockSlim, rwlock, TimeSpan timeout, Action whileWriteLocked)\n         - Locker.TryUpgradeableReadLock(ReaderWriterLockSlim, rwlock, int timeout, Action whileUpgradeableReadLocked)\n         - Locker.TryUpgradeableReadLock(ReaderWriterLockSlim, rwlock, TimeSpan timeout, Action whileUpgradeableReadLocked)\n\n        Version 1.0.0:\n         - Locker.ReadLock(ReaderWriterLockSlim rwlock, Action whileReadLocked)\n         - Locker.WriteLock(ReaderWriterLockSlim rwlock, Action whileWriteLocked)\n         - Locker.UpgradeableReadLock(ReaderWriterLockSlim rwlock, Action whileUpgradeableReadLocked)",
  "requireLicenseAcceptance": false,
  "summary": "An open source helper library for simplifying and beautifying the use of ReaderWriterLockSlim by making the syntax more inline with the lock(obj) {} syntax.",
  "title": "Locker",
  "verbatimVersion": "1.1.1",
  "version": "1.1.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.11.14/locker.1.1.1.json#Locker.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 658,
      "fullName": "Locker.nuspec",
      "length": 2042,
      "name": "Locker.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.11.14/locker.1.1.1.json#lib/Net40/Locker.dll",
      "@type": "PackageEntry",
      "compressedLength": 1919,
      "fullName": "lib/Net40/Locker.dll",
      "length": 5632,
      "name": "Locker.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.11.14/locker.1.1.1.json#lib/Net40/Locker.XML",
      "@type": "PackageEntry",
      "compressedLength": 568,
      "fullName": "lib/Net40/Locker.XML",
      "length": 6412,
      "name": "Locker.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.11.14/locker.1.1.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Lock",
    "Locking",
    "ReadLock",
    "WriteLock",
    "DeadLock"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}