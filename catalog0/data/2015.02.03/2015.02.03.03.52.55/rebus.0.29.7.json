{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.03.52.55/rebus.0.29.7.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "mookid8000",
  "catalog:commitId": "55d8cad9-a5d5-4399-a52d-3b5eb79f5de0",
  "catalog:commitTimeStamp": "2015-02-03T03:52:55.8184889Z",
  "copyright": "Copyright 2012",
  "created": "2013-02-28T20:50:40.9Z",
  "description": "Rebus is a lean service bus implementation, similar in nature to NServiceBus, MassTransit, Rhino Service Bus etc.",
  "id": "Rebus",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "xKAgyLQr39SWTThd3CDxuvOpG3QymqPV4X050i2Y8eEbWgCEn8DAKq8CsOpiMOJ9kNipWwkbF3qFf/TanzVq8g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 265763,
  "projectUrl": "http://mookid.dk/oncode/rebus",
  "published": "2013-02-28T20:50:40.9Z",
  "requireLicenseAcceptance": false,
  "title": "Rebus",
  "version": "0.29.7",
  "tags": [
    "servicebus",
    "msmq",
    "rabbitmq",
    "cqrs",
    "publish",
    "subscribe",
    "reliable",
    "asynchronous",
    "messaging",
    "esb"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}