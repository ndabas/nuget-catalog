{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.08.07.18.43/perrypheralframework.cs.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eyal Perry",
  "catalog:commitId": "70aea733-5057-4b8b-bb96-f010f481a29a",
  "catalog:commitTimeStamp": "2015-05-08T07:18:43.4477402Z",
  "copyright": "Eyal Perry",
  "created": "2015-04-11T15:28:29.28Z",
  "description": "Facilitatates IoC, Event Aggregation, and provides tools for Meta Developers, such as Reflection Extension Methods and Attribute Interpretation Services.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.08.07.18.43/perrypheralframework.cs.1.4.0.json#frameworkassemblygroup",
    "assembly": [
      "System",
      "System.Core",
      "WindowsBase"
    ]
  },
  "id": "PerrypheralFramework.CS",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2015-05-08T07:18:33.87Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "listed": true,
  "packageHash": "k2Aw5VHTg8Su1Agkk7bt2owwh8f9KSBg9Tt+1vMp7UOtmtc57fQRmw1DGyOU2fHCYNksCGxKOlWi43tkbfwFgA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 188727,
  "projectUrl": "https://github.com/EyalPerry/perrypheralframework",
  "published": "2015-04-11T15:28:29.28Z",
  "releaseNotes": "Collection Injection (for both Dictionary<K,V> and List<T> annotated properties) is now supported.\nBe sure to check out the Mvvm-IoC section in the Wiki for the how to and examples.\n\n\nPerrypheralGC\n\nMemory leaks cleaned - weak reference model applied.\n\nEventAggregator\n\n1) A slight change in subscription admissibility\n\nAny instance can subscribe any of it's instance methods for the same message type as many times as required, per Token value.\nThis means that for class C, method M and token T there can exist only one entry in the Listener Queue of some message.\nThe null token (or using no token) counts as a token as well, for that manner.\n\n2) A Slight change in the semantics of Unsubscribe\n\nIt is quite possible that the same thread which is handling a publishing of a message is removing a subscribed method from the same message's queue.\nThis can cause missed deliveries in some instances.\n\nTo remedy this, semantic unsubscription has been introduced.\nMeaning that while the unsubscribed handler will effectively no longer be invoked, it is still present in the queue until Clean has been called on that queue's instance.\n\n3) Adding a semantically removed subscriber\n\nThis will semantically subscribe the instance, meaning that from that point onwards it will once more receive messages.\n\n3)Clean\n\nwill immediately return if a message is being published on the same method stack as the clean request.",
  "requireLicenseAcceptance": true,
  "summary": "A Multi purpose C# Class Library.",
  "title": "PerrypheralFramework.CS",
  "version": "1.4.0",
  "tags": [
    "IoC",
    "PerrypheralFramework",
    "Utilities",
    "PF",
    "Perrypheral",
    "Attribute",
    "Reflection",
    "Meta"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}