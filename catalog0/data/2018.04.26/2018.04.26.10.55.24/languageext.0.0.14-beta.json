{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Paul Louth",
  "catalog:commitId": "d2faf500-46ea-488c-b5c6-db24bd77cfa6",
  "catalog:commitTimeStamp": "2018-04-26T10:55:24.8038782Z",
  "created": "2015-02-04T01:35:45.19Z",
  "description": "Using and abusing the features of C# 6 to provide functions and types, which, if you squint, can look like extensions to the language itself. \n\nThis package brings functional helpers for classic C# problems:\n\nPoor tuple support\nNull reference problem\nLack of lambda and expression inference\nVoid isn't a real type\nMutable lists and dictionaries\nThe awful 'out' parameter.\n\nFeatures include:\nOption<T>\nOptionUnsafe<T>\nTryOption<T>\nEither<R,L>\nEitherUnsafe<R,L>\nList\nMap\nQueue\nSet\nMemoization\nTuple\nUnit\n\nAnd more...",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json#frameworkassemblygroup",
    "assembly": "System"
  },
  "iconUrl": "http://www.4four.org/images/lang-ext-logo.png",
  "id": "LanguageExt",
  "isPrerelease": true,
  "lastEdited": "2018-04-26T10:55:18.027Z",
  "licenseUrl": "https://github.com/louthy/language-ext/blob/master/LICENSE.md",
  "listed": false,
  "packageHash": "K+8S6nACujEXVvxj9EboWPDeq42kNiVMqQfmV/HfjHJ1jjNXNlAyVhnulfbIHpBTed3WU/Ecz9hoj+oNs5SdEw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 67987,
  "projectUrl": "https://github.com/louthy/language-ext",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "### Operators\n\n`None` and `Left` coalescing using the logical-or operator.\n\nThis means chaining of optional values with defaults:\n\n   Option<int> optional1 = None;\n   Option<int> optional2 = None;\n\n   var res = optional1 || optional2 || \"Default\";  \n   // Some(\"Default\")\n\nThis also means you can use them in LINQ expressions where `from` is logical-AND and `||` is logical-OR:\n\n    Option<int> optional1 = None;\n    Option<int> optional2 = Some(10);\n    Option<int> optional3 = Some(20);\n\n    var res = from x in optional1 || optional2\n              from y in optional3\n              select x + y;\n\n    // Some(30)\n\n`true` and `false` operators implemented for option and either types.\n\n    var optional = Some(123);\n    if( optional )\n    {\n       // true\n    }\n\n`==` and `!=` operators implemented for option and either types:\n\n    var optional = Some(123);\n    if( optional == 123 )\n    {\n       // true\n    }\n\n    Option<int> optional = None;\n    if( optional == None )\n    {\n       // true\n    }\n\n### With\n\n`with(Tuple,..)` and `With(Tuple,..)` are now `map(Tuple,..)` and `Map(Tuple,..)`.  They were poorly named, these are more consistent with their action.  The `with` functions that take up to 5 parameters are also renamed `map`.\n\nThe old `with` functions have been marked `[Obsolete]`\n\nThanks to @tomaszpolanski for the feedback\nhttps://github.com/louthy/language-ext/issues/15\n\n### Optional\n\nAdded `Optional`, it will take `T` or `null` and return a `Some(T)` or `None` respectively.  This is for where you want to be explicit about the conversion from `T` to `Some(T)|None`, and for when the type system complains at you (in the branches of a ternary operator for example):\n\n   string x = GetValueFromNonTrustedAPI();\n   return Optional(x);\n\nThanks to @tejacques for the feedback:\nhttps://github.com/louthy/language-ext/issues/12\n\n\n... and Various bug fixes",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "C# Functional Language Extensions",
  "verbatimVersion": "0.0.14-beta",
  "version": "0.0.14-beta",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json#dependencygroup/.netframework4.5/system.collections.immutable",
          "@type": "PackageDependency",
          "id": "System.Collections.Immutable",
          "range": "[1.1.32-beta, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json#LanguageExt.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1566,
      "fullName": "LanguageExt.nuspec",
      "length": 3680,
      "name": "LanguageExt.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json#content/_._",
      "@type": "PackageEntry",
      "compressedLength": 2,
      "fullName": "content/_._",
      "length": 0,
      "name": "_._"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.26.10.55.24/languageext.0.0.14-beta.json#lib/LanguageExt.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 63296,
      "fullName": "lib/LanguageExt.Core.dll",
      "length": 162304,
      "name": "LanguageExt.Core.dll"
    }
  ],
  "tags": [
    "C#",
    "Functional",
    "Language",
    "Extension"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}