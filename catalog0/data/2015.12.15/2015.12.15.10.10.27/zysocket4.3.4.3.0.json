{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.15.10.10.27/zysocket4.3.4.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "luyikk",
  "catalog:commitId": "9ac0a7fb-53c1-458c-be19-88402e5582b1",
  "catalog:commitTimeStamp": "2015-12-15T10:10:27.610238Z",
  "copyright": "Copyright luyikk 2014",
  "created": "2015-12-15T10:10:14.057Z",
  "description": "使用了 ZYNetRingBufferPool 代替 ZYNetBufferReadStream\n使用了 ZYNetRingBufferPoolV2 代替了 ZYNetBufferReadStreamV2\n\n这2个类是 线程安全的，测试代码 里面有。这2个类基于环形数据缓冲的，你懂的。不懂百度吧~\n\nZySocketSuper 添加了 public BinaryInputOffsetHandler BinaryOffsetInput { get; set; }\n\n你现在可以 使用偏移量 来把数据包输入到 缓冲池了。 对了 别忘了 把 IsOffsetInput 设置成true 详细看例1\n这样做的好处是可以 少一次copy\n\nZYSocket.share.ReadBytes and ZYSocket.share.ReadBytesV2 添加了 直接读取函数 比如 int i=read.readInt32() 为了方便嘛\n\n\nUDPService 嘛 目前测试阶段用的比较少。大家有空可以帮忙测测\n\n对了 所有例子 我都改成了 RingBufferPool.",
  "id": "ZYSocket4.3",
  "isPrerelease": false,
  "language": "zh-CN",
  "lastEdited": "2015-12-15T10:10:17.87Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://blog.csdn.net/luyikk/article/details/6099337",
  "listed": false,
  "packageHash": "DOqzOcSVGlBCgrwVYTGYX6NShQJLMhO/2AfqglIeOiHMbTW3cDQsaO+H00Q3dthPyZ2x4K+jCbUYBZS+E5Pqlw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 47808834,
  "projectUrl": "http://blog.csdn.net/luyikk/article/details/6099337",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "ZYSOCKET 4.3 Source And Example",
  "title": "ZYSOCKET 4.3 Source",
  "verbatimVersion": "4.3.0",
  "version": "4.3.0",
  "tags": [
    "ZYSocketFrame",
    "ZYSOCKETCode",
    "ZYSOCKET4.3"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}