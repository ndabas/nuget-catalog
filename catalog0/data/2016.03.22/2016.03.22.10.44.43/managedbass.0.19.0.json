{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.22.10.44.43/managedbass.0.19.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mathew Sachin",
  "catalog:commitId": "870c94c8-2c34-4b5a-b626-841b7ddca98a",
  "catalog:commitTimeStamp": "2016-03-22T10:44:43.1923324Z",
  "copyright": "(c) 2016 Mathew Sachin",
  "created": "2016-03-22T10:44:34.933Z",
  "description": "Free OpenSource .Net Wrapper around un4seen Bass and most of its addons.\nThis project is currently in development.\nYou can contribute to it on GitHub.\n\nSamples available on GitHub Repository\n\nThe Library is compiled for AnyCPU.\nBut the Bass dlls need to be checked for x64 or x86.\nPut the Bass dlls in the same folder as ManagedBass.dll.\nManagedBass does not need to be licensed for Commercial use, but bass and many of the addons have to be.\nCheck the below website for more details\nBass dlls are available at http://www.un4seen.com/bass\nBass and its Addons are trademarks of their respective owners.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.22.10.44.43/managedbass.0.19.0.json#frameworkassemblygroup",
    "assembly": "System"
  },
  "id": "ManagedBass",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://mit-license.org/",
  "listed": true,
  "packageHash": "GQv21kPheM9PRvkBJW8BMcFwk1bjvCbj2nxgeAcSJKNXiU1aitf5YNHBH2nwoznIadNipfG1olA4ZYnryb/lmQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 206771,
  "projectUrl": "https://github.com/MathewSachin/ManagedBass/",
  "published": "2016-03-22T10:44:34.933Z",
  "releaseNotes": "* More XML Documentation.\n\n* DROPPED BassException method wrapping.\n* REMOVED Extensions.ThrowOnError.\n* Removed Bass.RecordGetInputType.\n* Removed BassException.ExceptionPoint.\n* Obsolete: PeakEQEffect.\n\n* Added separate PeakEQ class.\n* Added Effect.Priority and Priority in effect constructors defaulted to 0.\n* Added BQFEffect.EffectType property.\n* Added InputFlags.None\n* Added more members to enum WMAEncodeFlags.\n* Added Bass.RecordGetInput no-volume overload.\n\n* Accounted for Unicode and Ansi in bass device info as per config: Bass.UnicodeDeviceInformation.\n* Changed Bass.RecordGetInput to out from ref.\n* DSP base class uses Bass 2.4.12 FXSetPriority.\n\nMediaPlayer\n-------------------------------\n* Effect and DSP persistence\n  Effects or DSP applied on a MediaPlayer are automatically applied on all the media it loads.\n  - Added Effect/DSP base MediaPlayer constructor.\n  - Implemented Effect/DSP base constructor on all Effects and DSPs.\n* Added Title, Artist and Album properties.\n\nBassAsio\n-------------------------------\n* More documentation.\n* Replaced SetUnicode method with bool Unicode property.\n* AddDevice and AsioDeviceInfo automatically account for Unicode and Ansi.\n\nBassCd\n-------------------------------\n* Added BassCd.GetSpeedMultiplier.\n* Added enum CDInterface.\n* BassCd.SetInterface uses enum CDInterface.\n* Renamed BassCd.GetDriveInfo to GetInfo.\n* Renamed BassCd.GetStreamTrack to StreamGetTrack.\n* Renamed BassCd.SetStreamTrack to StreamSetTrack.\n\nRename enum Errors' members (to help migrating from Bass.Net)\n----------------------------------\nDriverNotFound - Driver\nInvalidHandle - Handle\nUnsupportedSampleFormat - SampleFormat\nInvalidPlaybackPosition - Position\nNotInitialised - Init\nOutputNotStarted - Start\nNoCDinDrive - NoCD\nInvalidCDTrack - CDTrack\nNoFreeChannelAvailable - NoChannel\nIllegalType - Type\nIllegalParameter - Parameter\nIllegalDevice - Device\nIllegalSampleRate - SampleRate\nNotFileStream - NotFile\nNoHardwareVoicesAvailable - NoHW\nNoSequenceData - Empty\nNoInternetConnection - NoInternet\nFileCreate - Create\nEffectsNotAvailable - NoFX\nDecodingChannel - Decode\nConnectionTimedout - Timeout\nUnsupportedFileFormat - FileFormat\nSpeakerUnavailable - Speaker\nInvalidVersion - Version\nCodecNotAvailable - Codec\nDeviceBusy - Busy\nWmaCodecNotInstalled - WmaCodec\nWmaIndividualisationNeeded - WmaIndividual\nWasapiNotAvailable - Wasapi\n\nthrow BassException (only where -1, false or null can't be returned)\n----------------------------------\n* BassInfo Bass.Info\n* ChannelInfo Bass.ChannelGetInfo(int)\n* double Bass.Volume set\n* int Bass.CurrentDevice set\n* DeviceInfo Bass.GetDeviceInfo(int, bool)\n* int Bass.CurrentRecordingDevice set\n* DeviceInfo Bass.RecordGetDeviceInfo(int)\n* RecordInfo Bass.RecordInfo\n* SampleInfo Bass.SampleGetInfo(int)\n* int BassAsio.CurrentDevice set\n* AsioDeviceInfo BassAsio.GetDeviceInfo(int)\n* AsioInfo BassAsio.Info\n* double BassAsio.Rate set\n* bool BassAsio.Unicode set\n* AsioChannelInfo BassAsio.ChannelGetInfo(int)\n* CDInfo BassCd.GetInfo(int)\n* TOC BassCd.GetTOC(int, TOCMode)\n* MidiFontInfo BassMidi.FontGetInfo(int)\n* MidiDeviceInfo BassMidi.InGetDeviceInfo(int)\n* int BassWasapi.CurrentDevice set\n* WasapiDeviceInfo BassWasapi.GetDeviceInfo(int)\n* WasapiInfo BassWasapi.Info",
  "requireLicenseAcceptance": false,
  "summary": "Free OpenSource .Net Wrapper for Un4seen Bass.",
  "title": "ManagedBass",
  "verbatimVersion": "0.19.0",
  "version": "0.19.0",
  "tags": [
    "C#",
    "Bass",
    "Bass.Net",
    "ManagedBass",
    "wasapi",
    "asio",
    "mo3",
    "recording",
    "microphone",
    "loopback",
    "Audio",
    "music",
    "un4seen",
    "mix",
    "midi",
    "mixer",
    "aac",
    "ac3",
    "alac",
    "flac",
    "tta",
    "mp3",
    "wav",
    "adx",
    "aix",
    "ape",
    "mpc",
    "ofr",
    "opus",
    "spx",
    "wv",
    "free",
    "open",
    "source",
    "cd",
    "enc",
    "encode",
    "encoder",
    "decoder",
    "playback",
    "fx",
    "reverse",
    "tempo",
    "pitch",
    "frequency",
    "pan",
    "balance",
    "plugin",
    "wma",
    "effects",
    "reverb",
    "autowah",
    "bqf",
    "chorus",
    "compressor",
    "damp",
    "distortion",
    "dsp",
    "echo",
    "peak",
    "level",
    "phaser",
    "rotate",
    "ping",
    "pong",
    "tags",
    "id3",
    "mp4",
    "mod",
    "ogg",
    "mp2",
    "mp1",
    "aiff",
    "m2a",
    "mpa",
    "m1a",
    "mpg",
    "mpeg",
    "aif",
    "mp3pro",
    "bwf",
    "mus",
    "s3m",
    "xm",
    "it",
    "mtm",
    "umx",
    "mdz",
    "s3z",
    "float",
    "itz",
    "xmz",
    "cda",
    "disc",
    "url",
    "bpm",
    "eax",
    "winamp",
    "hls",
    "streaming",
    "live",
    "http"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}