{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Samuele Bartolucci",
  "catalog:commitId": "af424dcf-3d01-44ab-bd7f-2d24a14281d6",
  "catalog:commitTimeStamp": "2023-04-03T21:21:20.9576438Z",
  "created": "2023-04-03T21:18:56.87Z",
  "description": "Add new Linq style functionalities to help the develop process  \n# What's NEW 2.1.3\n- Added: `WhenIsTrue`,`WhenIsFalse`,`WhenAll`,`WhenAllAsync`,`WhenIsTrueAsync`,`WhenIsFalseAsync`,`ThenForAll`\n- Added: `T.TryTo(Action(T))` (without explicit error managemer)\n- Fixed: `Outcome.WhenSuccess`, `Outcome.WhenFailure`, `Optional<T>.OrOptn(Optional<T>, Func<T,T bool>)`\n\n\n# What's NEW 2.1.2\n- Added `SwitchOptn` and `OrOptn` \n- Added `IsNotNullOrEquivalent`, `IsNullOrEquivalent`\n- Added `WhenIsNullOrEquivalent`, `WhenIsNotNullOrEquivalent`, `WhenEqualsTo`, `WhenAny`, `WhenEmptyOrNull`\n- Added  `Outcome.WhenSuccess`, `Outcome.WhenFailure`\n\n# What's NEW 2.1.2\n- Added `SwitchOptn` and `OrOptn` \n- Added `IsNotNullOrEquivalent`, `IsNullOrEquivalent`\n- Added `WhenIsNullOrEquivalent`, `WhenIsNotNullOrEquivalent`, `WhenEqualsTo`, `WhenAny`, `WhenEmptyOrNull`\n\n# What's NEW 2.1.1\n- Added new types Optional<T> and Unit\n- Updated base extensions to manage Optional<T> (Do, Or, Outcome, When)\n- Updated Outcome wrong base class extension to remove .Subject field (never intended to be part of it)\n- Added implicit operators true/false/!\n- Renamed Context internal class to SubjectContext\n- Added RsultContext, SubjectContextReadonly,\n\n# What's NEW 2.1.0\n- Fixed `Outcome.Succes` typo\n- Fixed `FluentContext.IsSuccesful` typo. This change impacts: `TryCatch.IsSuccesful`, `When.IsSuccesful`, `Outcome.IsSuccesful`\n\n# What's NEW 2.0.1\n- Added DoWrap and DoWrapAsync to quickly manage value types\n- Added `Outcome<R,L>` to mimic the F# `Result<'T,'TFailure>` (with Map and Bind functionalities) [railway oriented programing (https://fsharpforfunandprofit.com/rop/]\n\n# What's NEW 2.0.0\n- Do now ALWAYS return the subject (even when called with a Func)\n- Removed the Do extension with a single Action/Func, left only the extension with params[] Action/Func\n- Added the DoAsync extension\n- Changed DoForAll into DoForEach, added DoForEachAsync\n- Changed DoForAllMap into MapForEach, added MapForEachAsync\n- Removed EqualsToAny and EqualsTo (with input a comparator) same as EquivalentTo or quivalentToAny\n- Added EqualsToAnyAsync (without input comparator)\n- Added MapAsync\n- Collapsed Switch and SwitchMap into Switch\n- Added SwitchAsync\n- Added TryAsync and TryToAsync\n- Collapsed Then(onSuccess, onFail) and ThenMap(onSuccess, onFail) into Then\n- Added WhenAnyAsync, WhenAsync",
  "id": "FluentCoding",
  "isPrerelease": false,
  "lastEdited": "2023-04-03T21:20:55.98Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "v8CVAI84dqfBo4YN1XFMxTMX7fqzXWqA6YdEttok4EWkYxKD13BLEoz2PaHK/EY7nAZhZ7AkCs/n+O4T4dEoXA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 180393,
  "projectUrl": "https://github.com/SamueleBartolucci/FluentCoding",
  "published": "2023-04-03T21:18:56.87Z",
  "readmeFile": "README.md",
  "releaseNotes": "# What's NEW 2.1.3\n- Added: `WhenIsTrue`,`WhenIsFalse`,`WhenAll`,`WhenAllAsync`,`WhenIsTrueAsync`,`WhenIsFalseAsync`,`ThenForAll`\n- Added: `T.TryTo(Action(T))` (without explicit error managemer)\n- Fixed: `Outcome.WhenSuccess`, `Outcome.WhenFailure`, `Optional<T>.OrOptn(Optional<T>, Func<T,T bool>)`\n\n# What's NEW 2.1.2\n- Added `SwitchOptn` and `OrOptn` \n- Added `IsNotNullOrEquivalent`, `IsNullOrEquivalent`\n- Added `WhenIsNullOrEquivalent`, `WhenIsNotNullOrEquivalent`, `WhenEqualsTo`, `WhenAny`, `WhenEmptyOrNull`\n- Added  `Outcome.WhenSuccess`, `Outcome.WhenFailure`\n\n# What's NEW 2.1.1\n- Added new types Optional<T> and Unit\n- Updated base extensions to manage Optional<T> (Do, Or, Outcome, When)\n- Updated Outcome wrong base class extension to remove .Subject field (never intended to be part of it)\n- Added implicit operators true/false/!\n- Renamed Context internal class to SubjectContext\n- Added RsultContext, SubjectContextReadonly,\n\n# What's NEW 2.1.0\n- Fixed `Outcome.Succes` typo\n- Fixed `FluentContext.IsSuccesful` typo. This change impacts: `TryCatch.IsSuccesful`, `When.IsSuccesful`, `Outcome.IsSuccesful`\n\n# What's NEW 2.0.1\n- Added DoWrap and DoWrapAsync to quickly manage value types\n- Added `Outcome<R,L>;` to mimic the F# `Result<'T,'TFailure>` (with Map and Bind functionalities) [railway oriented programing (https://fsharpforfunandprofit.com/rop/]\n\n# What's NEW 2.0.0\n- Do now ALWAYS return the subject (even when called with a Func)\n- Removed the Do extension with a single Action/Func, left only the extension with params[] Action/Func\n- Added the DoAsync extension\n- Changed DoForAll into DoForEach, added DoForEachAsync\n- Changed DoForAllMap into MapForEach, added MapForEachAsync\n- Removed EqualsToAny and EqualsTo (with input a comparator) same as EquivalentTo or quivalentToAny\n- Added EqualsToAnyAsync (without input comparator)\n- Added MapAsync\n- Collapsed Switch and SwitchMap into Switch\n- Added SwitchAsync\n- Added TryAsync and TryToAsync\n- Collapsed Then(onSuccess, onFail) and ThenMap(onSuccess, onFail) into Then\n- Added WhenAnyAsync, WhenAsync",
  "repository": "",
  "title": "Expand linq fluent methods with some useful constructs for developing code",
  "verbatimVersion": "2.1.3",
  "version": "2.1.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#dependencygroup/.netframework4.8",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework4.8"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net6.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#FluentCoding.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1398,
      "fullName": "FluentCoding.nuspec",
      "length": 5471,
      "name": "FluentCoding.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/net48/FluentCoding.dll",
      "@type": "PackageEntry",
      "compressedLength": 30337,
      "fullName": "lib/net48/FluentCoding.dll",
      "length": 82944,
      "name": "FluentCoding.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/net48/FluentCoding.xml",
      "@type": "PackageEntry",
      "compressedLength": 5383,
      "fullName": "lib/net48/FluentCoding.xml",
      "length": 96001,
      "name": "FluentCoding.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/net6.0/FluentCoding.dll",
      "@type": "PackageEntry",
      "compressedLength": 30336,
      "fullName": "lib/net6.0/FluentCoding.dll",
      "length": 82944,
      "name": "FluentCoding.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/net6.0/FluentCoding.xml",
      "@type": "PackageEntry",
      "compressedLength": 5383,
      "fullName": "lib/net6.0/FluentCoding.xml",
      "length": 96001,
      "name": "FluentCoding.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/netstandard2.0/FluentCoding.dll",
      "@type": "PackageEntry",
      "compressedLength": 30336,
      "fullName": "lib/netstandard2.0/FluentCoding.dll",
      "length": 82944,
      "name": "FluentCoding.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/netstandard2.0/FluentCoding.xml",
      "@type": "PackageEntry",
      "compressedLength": 5383,
      "fullName": "lib/netstandard2.0/FluentCoding.xml",
      "length": 96001,
      "name": "FluentCoding.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/netstandard2.1/FluentCoding.dll",
      "@type": "PackageEntry",
      "compressedLength": 30332,
      "fullName": "lib/netstandard2.1/FluentCoding.dll",
      "length": 82944,
      "name": "FluentCoding.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#lib/netstandard2.1/FluentCoding.xml",
      "@type": "PackageEntry",
      "compressedLength": 5383,
      "fullName": "lib/netstandard2.1/FluentCoding.xml",
      "length": 96001,
      "name": "FluentCoding.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 12112,
      "fullName": "LICENSE.txt",
      "length": 35149,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 8733,
      "fullName": "README.md",
      "length": 32203,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.03.21.21.20/fluentcoding.2.1.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11521,
      "fullName": ".signature.p7s",
      "length": 11521,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}