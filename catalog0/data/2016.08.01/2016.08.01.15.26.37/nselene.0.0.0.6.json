{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.15.26.37/nselene.0.0.0.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Iakiv Kramarenko",
  "catalog:commitId": "ac8762c8-ec54-4ced-96e8-e604c41455b8",
  "catalog:commitTimeStamp": "2016-08-01T15:26:37.3272953Z",
  "copyright": "Copyright (c) 2015-2016 Iakiv Kramarenko",
  "created": "2016-08-01T15:26:04.877Z",
  "description": "Concise API to Selenium for .Net (the port of Selene in python / Selenide in Java)",
  "id": "NSelene",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/yashaka/NSelene/blob/master/LICENSE",
  "listed": true,
  "packageHash": "dyAu1WWMUaCnYqvbfccgn7i6HWQckBnaTFrl9QCNG8paEU5eGe8wf60zxT8sBm/ZCohtJ4/kW2BFk/drrqccEw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16304,
  "projectUrl": "https://github.com/yashaka/NSelene",
  "published": "2016-08-01T15:26:04.877Z",
  "releaseNotes": "API changes \n\t\tShould not break anything in this version \n\t\t(because \"old names\" was just marked as deprecated and will be removed completely in next version):\n\t\t- renamed \n\t\t  - Config to Configuration\n\t\t  - Browser to SeleneDriver\n\t\t  - SElement to SeleneElement\n\t\t  - SCollection to SeleneCollection\n\t\t  - Utils to Selene\n\t\t    to be more \"selenide like\" (which has com.codeborn.selenide.Selenide class as a container for utility methods)\n\t\t    and make name more conceptual\n\t\t  - Selene.SActions() to Selene.Actions and make it property\n\t\t  - Be.InDOM to Be.InDom (according to standard naming convention)\n\t\t- closed access to (made private or internal)\n\t\t  - SElement#Actions\n\t\t  - SeleneElement and SeleneCollection constructors (internal) \n\t\t    In order to leave ability to rename classes, \n\t\t    if one day we extract SeleneElement or SeleneCollection as interfaces. \n\t\t    It's ok because we do not create their objects via constructors, but via Selene.S or Selene.SS, etc.\n\t\t- removed \n\t\t  - SElement#SLocator property\n\t\t  \n\t\tBreaking changes:\n\t\t- Left only the following aliasses: \n\t\t  - SeleneElement: Find, FindAll, Should, ShouldNot; \n\t\t  - SeleneCollection: Should, ShouldNot\n\t\t  - SeleneDriver: Find, FindAll\n\t\t  Everything else moved to NSelene.Support.Extensions, so to fix code: you have to add additional \"using\" statement\n\t\t  It is recommended though to use these extensions only as \"examples\", because there are too much of them. \n\t\t  The latter may lead to confusion in usage. Usually the user will need only some of them. \n\t\t  So better to \"copy and paste\" needed ones to user's project namespace.\n\t\t- changed Be.Blank() to Be.Blank (refactored to property);\n\n\t\tNew\n\t\t- enhanced interoperability with raw selenium. \n\t\t  Now implicit waits for visibility can be added to all PageFactory webelements just via decorating new SDriver(driver); \n\t\t  And all explicit driver calls for finding both IWebElement and IList of IWebElement will produce NSelene proxy alternatives \n\t\t  with both implicit waits for visibility and for indexed webelements of collections.\n\n\t\tRefactoring\n\t\t- refactored all \"static variable\" conditions to be \"static properties\", which should ensure stability for parallel testing\n\n\t\tLicense\n\t\t- Changed License to \"MIT License\"",
  "requireLicenseAcceptance": false,
  "title": "NSelene",
  "verbatimVersion": "0.0.0.6",
  "version": "0.0.0.6",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.15.26.37/nselene.0.0.0.6.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.15.26.37/nselene.0.0.0.6.json#dependencygroup/selenium.webdriver",
          "@type": "PackageDependency",
          "id": "Selenium.WebDriver",
          "range": "[2.53.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.15.26.37/nselene.0.0.0.6.json#dependencygroup/selenium.support",
          "@type": "PackageDependency",
          "id": "Selenium.Support",
          "range": "[2.53.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.15.26.37/nselene.0.0.0.6.json#NSelene.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1468,
      "fullName": "NSelene.nuspec",
      "length": 3199,
      "name": "NSelene.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.15.26.37/nselene.0.0.0.6.json#lib/NSelene.dll",
      "@type": "PackageEntry",
      "compressedLength": 12895,
      "fullName": "lib/NSelene.dll",
      "length": 34304,
      "name": "NSelene.dll"
    }
  ],
  "tags": [
    "Selenium",
    "Wrapper",
    "Web",
    "Automation"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}