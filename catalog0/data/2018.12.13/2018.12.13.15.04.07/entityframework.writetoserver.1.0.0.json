{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SmartBooks",
  "catalog:commitId": "fa4e50e5-f6cc-4e6d-a277-04f826b13b48",
  "catalog:commitTimeStamp": "2018-12-13T15:04:07.818098Z",
  "copyright": "http://www.cnblogs.com/gaochundong/p/entity_framework_bulk_insert_extension.html",
  "created": "2014-06-05T01:08:15.13Z",
  "description": "Microsoft SQL Server 提供一个称为 bcp 的流行的命令提示符实用工具，用于将数据从一个表移动到另一个表（表既可以在同一个服务器上，也可以在不同服务器上）。 SqlBulkCopy 类允许编写提供类似功能的托管代码解决方案。 还有其他将数据加载到 SQL Server 表的方法（例如 INSERT 语句），但相比之下 SqlBulkCopy 提供明显的性能优势。\n使用 SqlBulkCopy 类只能向 SQL Server 表写入数据。 但是，数据源不限于 SQL Server；可以使用任何数据源，只要数据可加载到 DataTable 实例或可使用 IDataReader 实例读取数据。\n使用方法：\nusing (DataTable dataTable = CreateDataTable(tableMapping, entities))\n      {\n        using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(transaction.Connection, options, transaction))\n        {\n          sqlBulkCopy.BatchSize = batchSize;\n          sqlBulkCopy.DestinationTableName = dataTable.TableName;\n          sqlBulkCopy.WriteToServer(dataTable);\n        }\n      }",
  "iconUrl": "http://pic.cnitblog.com/avatar/a314144.jpg?id=28084127",
  "id": "EntityFramework.WriteToServer",
  "isPrerelease": false,
  "language": "",
  "lastEdited": "2018-12-13T15:03:45.39Z",
  "licenseUrl": "http://www.cnblogs.com/gaochundong/",
  "listed": true,
  "packageHash": "07Fej8tCjTTXMRhJqsIdx/qkza8XWeulkqGl3ttYRUSG1V7yTPg7TgcyOilePo2fE7ktzO0xtW2mAd8IY9bkzw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30521,
  "projectUrl": "https://github.com/gaochundong/WhenEntityFrameworkMeetUnity/tree/master/17.WhenEntityFrameworkMeetUnity-BulkInsert",
  "published": "2014-06-05T01:08:15.13Z",
  "releaseNotes": "1.NET Framework >= 4.5。\n2.代码由SmartBooks整理自Dennis Gao而来，以方便使用。",
  "requireLicenseAcceptance": true,
  "summary": "解决EntityFramework批量插入数据的性能问题。",
  "title": "EntityFramework.WriteToServer",
  "verbatimVersion": "1.0.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json#dependencygroup/entityframework",
          "@type": "PackageDependency",
          "id": "EntityFramework",
          "range": "[6.1.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json#EntityFramework.WriteToServer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1210,
      "fullName": "EntityFramework.WriteToServer.nuspec",
      "length": 2341,
      "name": "EntityFramework.WriteToServer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json#lib/EntityFramework.WriteToServer.dll",
      "@type": "PackageEntry",
      "compressedLength": 8188,
      "fullName": "lib/EntityFramework.WriteToServer.dll",
      "length": 17920,
      "name": "EntityFramework.WriteToServer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json#lib/EntityFramework.WriteToServer.pdb",
      "@type": "PackageEntry",
      "compressedLength": 7797,
      "fullName": "lib/EntityFramework.WriteToServer.pdb",
      "length": 38400,
      "name": "EntityFramework.WriteToServer.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.15.04.07/entityframework.writetoserver.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "EntityFramework",
    "WriteToServer"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}