{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Myria Technologies",
  "catalog:commitId": "46115b9c-06c6-4620-8077-1f54fee37e05",
  "catalog:commitTimeStamp": "2018-12-10T01:27:36.4921243Z",
  "copyright": "Copyright Myria Technologies 2014",
  "created": "2014-09-04T01:14:49.163Z",
  "description": "A cross framework portable and lightweight MVVM library. vMvvm is portable MVVM library that works across .NET Framework 4.5, Windows 8, Windows Phone 8.1, Windows Phone Silverlight 8, Xamarin.Android, and Xamarin.iOS. Contains independent unobtrusive validator using validation attribute that can be extended to fit your purpose.",
  "iconUrl": "https://nuget.org/Content/Images/packageDefaultIcon-50x50.png",
  "id": "MyriaTechnologies.Public.Library.vMvvm",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-10T01:26:49.88Z",
  "licenseUrl": "http://opensource.org/licenses/Apache-2.0",
  "listed": true,
  "packageHash": "WKzoTJvyeOQwnT/4yyUoy7HdDkMFemESCu+W9/d+7poS+7Kjqq5ZznTsT+cJ3JCJp3Hoh+5iQSVIX13FDFjnsA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21735,
  "projectUrl": "https://www.nuget.org/packages/MyriaTechnologies.Public.Library.vMvvm/",
  "published": "2014-09-04T01:14:49.163Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "Cross framework portable and lightweight MVVM library. Independent from another library.",
  "title": "vMvvm",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json#MyriaTechnologies.Public.Library.vMvvm.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 593,
      "fullName": "MyriaTechnologies.Public.Library.vMvvm.nuspec",
      "length": 1247,
      "name": "MyriaTechnologies.Public.Library.vMvvm.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json#lib/MyriaTechnologies.vMvvm.dll",
      "@type": "PackageEntry",
      "compressedLength": 7652,
      "fullName": "lib/MyriaTechnologies.vMvvm.dll",
      "length": 18432,
      "name": "MyriaTechnologies.vMvvm.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json#tools/init.ps1",
      "@type": "PackageEntry",
      "compressedLength": 196,
      "fullName": "tools/init.ps1",
      "length": 411,
      "name": "init.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json#tools/install.ps1",
      "@type": "PackageEntry",
      "compressedLength": 175,
      "fullName": "tools/install.ps1",
      "length": 406,
      "name": "install.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json#tools/uninstall.ps1",
      "@type": "PackageEntry",
      "compressedLength": 173,
      "fullName": "tools/uninstall.ps1",
      "length": 395,
      "name": "uninstall.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.01.27.36/myriatechnologies.public.library.vmvvm.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9473,
      "fullName": ".signature.p7s",
      "length": 9473,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}