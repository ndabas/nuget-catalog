{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Quentin PARRA (Based of Guillaume Lacasa's work)",
  "catalog:commitId": "152cace1-d899-4f40-a390-263b9ea17a4f",
  "catalog:commitTimeStamp": "2021-12-16T09:42:02.4964377Z",
  "created": "2021-12-16T09:39:29.417Z",
  "description": "# DataExporter\n\nThis library is based of Guillaume Lacasa's work, updated for .NET 5\n\n## How to use\n\nThe data exported will be a file with column titles on the first line, and all your data on the following lines.\n\nTo export your data, you will need to define how it will be exported\n\n### Export using Attributes on your model\n\nAdd the attribute `ExportColumn` on the properties you want to export. The attributes contains 2 properties : `Title` (the name of the column) ans `Order` (tu sort your columns)\n```cs\n    public class SampleData\n    {\n        [ExportColumn(Title = \"Number\", Order = 1)]\n        public int IntData { get; set; }\n\n        [ExportColumn(Title = \"Text\", Order = 2)]\n        public string TextData { get; set; }\n    }\n```\n### Create your exporter\n\nYou can use either `CsvDataExporter` or `XlsxDataExporter` :\n```cs\n\tvar data = new List<SampleData>()\n\t{\n\t\tnew SampleData{ IntData=5, TextData=\"Hello\"},\n\t\tnew SampleData{ IntData=20, TextData=\"Yoo\"},\n\t\tnew SampleData{ IntData=10, TextData=\"This is some text\"},\n\t};\n\n\tvar csvExporter = new CsvDataExporter();\n\tvar csvResult = csvExporter.Export(data);\n\t\n\tvar xlsxExporter = new XlsxDataExporter();\n\tvar xlsxResult = xlsxExporter.Export(data);\n```\n### Create Xlsx file with several sheets\n\nWhile the csv exporter will only allow you to export one set of data, with the xlsx exporter you can create several sheets with different data on each.\n```cs\n\tvar xlsxExporter = new XlsxDataExporter();\n\txlsxExporter.AddSheet(data1, name=\"sheet title 1\");\n\txlsxExporter.AddSheet(data2, name=\"sheet title 2\");\n\tvar xlsxResult = xlsxExporter.GetFile();\n```\n### Export using SQL Data Reader\n\nIf you want to export a query result without binding it to a model, you can use an `SqlDataReader` :\n```cs\n\tusing (SqlConnection connection = new SqlConnection(connectionString))\n\t{\n\t\tSqlCommand command = new SqlCommand(\"SELECT OrderID, CustomerID FROM dbo.Orders\", connection);\n\t\tconnection.Open();\n\t\tSqlDataReader reader = command.ExecuteReader();\n\t\tvar xlsxExporter = new XlsxDataExporter();\n\t\tvar xlsxResult = xlsxExporter.Export(reader);\n\t}\n```\n### Result\n\nThe exporters will output a `MemoryStream`. You can directly save it to a file, or return it in a `FileResult` in an MVC website.",
  "id": "K4.DataExporter",
  "isPrerelease": false,
  "lastEdited": "2021-12-16T09:42:01.567Z",
  "listed": true,
  "packageHash": "bhy8Na8mgHTwRg3zqVwK0hohrxYqKJ6RBpW7trQnw5eesVbqRGSTWTx4NO3gJtGsbu12XWYRcbmKNg0bL+gQaw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26522,
  "published": "2021-12-16T09:39:29.417Z",
  "releaseNotes": "- Added Auto-resize (see dependencies)\n- Added more params, color, font name/size etc..",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json#dependencygroup/net5.0/documentformat.openxml",
          "@type": "PackageDependency",
          "id": "DocumentFormat.OpenXml",
          "range": "[2.14.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json#dependencygroup/net5.0/system.drawing.common",
          "@type": "PackageDependency",
          "id": "System.Drawing.Common",
          "range": "[6.0.0, )"
        }
      ],
      "targetFramework": "net5.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json#K4.DataExporter.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1309,
      "fullName": "K4.DataExporter.nuspec",
      "length": 3041,
      "name": "K4.DataExporter.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json#lib/net5.0/DataExporter.dll",
      "@type": "PackageEntry",
      "compressedLength": 13121,
      "fullName": "lib/net5.0/DataExporter.dll",
      "length": 30208,
      "name": "DataExporter.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.12.16.09.42.02/k4.dataexporter.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}