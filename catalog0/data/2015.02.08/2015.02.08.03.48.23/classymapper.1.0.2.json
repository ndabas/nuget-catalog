{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.03.48.23/classymapper.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dan Lorenz",
  "catalog:commitId": "22ccbffe-b5e1-4322-9cc0-e3b5a09a4dc7",
  "catalog:commitTimeStamp": "2015-02-08T03:48:23.4233034Z",
  "created": "2015-02-02T04:15:43.25Z",
  "description": "C# Property Mapper that utilizes attributes in order to perform the mapping.\n\nWhile I personally love auto mappers, I don't like being forced to configure \none type to another. In the end, I am just mapping one set of properties to\nanother set of properties. All I care about is that the names match\n(or I can tell it what name to look for) and the types are assignable.\nClassyMapper will do just that!",
  "iconUrl": "https://download-codeplex.sec.s-msft.com/Download?ProjectName=classymapper&DownloadId=1425664&Build=20959",
  "id": "ClassyMapper",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2015-02-02T04:47:10.27Z",
  "packageHash": "OYKGNSRsM8QEKHh3UfBPNkBJ4WUiuXjfo+KiEvMrJI68ZHiYAs62DqNDZOLSZrZIr2lzhGgU0LEnteFkFYoAVg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 47645,
  "projectUrl": "https://classymapper.codeplex.com/",
  "published": "2015-02-02T04:15:43.25Z",
  "releaseNotes": "- Added code to ensure the given Enum value was Defined.\n- Added ability to map an Enum from a string",
  "requireLicenseAcceptance": false,
  "summary": "C# Property Mapper via attributes.",
  "title": "ClassyMapper",
  "version": "1.0.2",
  "tags": [
    ".NET",
    "4.0",
    "property",
    "mapper"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}