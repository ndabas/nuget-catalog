{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.8.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "c4168257-838a-41f2-8f2d-f23cd760c1b2",
  "catalog:commitTimeStamp": "2018-11-17T10:32:51.827365Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2016-09-12T07:20:19.073Z",
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-17T10:32:45.463Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "1ESBsYvFLry1INdgjKLFsxVy+A28gPIHtGcKtnSN5zTHKDpC6fI7ZOEA1atZ5auSMLsEiDM2j8tQaWnKDKGq/g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52837694,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2016-09-12T07:20:19.073Z",
  "releaseNotes": "DotNetBrowser 1.8.1 comes with the following features and improvements:\n\n- DOM API update, which brings the possibility to modify DOM: create, append, insert, replace and remove DOM nodes.\n- Ability to get the DOM node at the particular location on the page.\n- Ability to emulate custom DOM events for the specific DOM elements.\n- Mute Audio API. This API allows to mute all audio output for the particular Browser instance. Also it is possible to determine if the browser is currently muted or playing audio.\n- Ability to customize the filename for the native process. Now it is possible to set the custom name for DotNetBrowser.Chromium.exe and all native process instances will be subsequently renamed.\n- Back-forward navigation history list support. Now it is possible to navigate to the particular entry in the back-forward navigation history and even remove some entries from the history.\n- Browser.Loading property which allows to determine whether browser is currently loading something.\n- Editor commands support. Editor commands are the commands for text manipulation when editing in a text field, text area or WYSIWYG editor. Also these commands include more common commands like Cut, Copy, Paste, SelectAll, Undo, Redo, which can be executed for the frame in the loaded web page.\n- Web storage API. Now it is possible to access local or session web storage and create, store, find and remove key/value pairs in it.\n- Ability to get selected text or HTML for the frame with a specific ID.\n- Ability to pause, resume and cancel downloads.\n- Password Manager update: now it is possible to be informed about the password update events (when the user enters a new password for the previously saved login).\n- Added RenderGone event. This event allows to detect unexpected render process termination and relaunch it by loading the same URL once more.\n\nAnd these issues have been fixed for the new version:\n\n- XPath iterator behavior. In the previous versions, If XPath request returned iterator, and then the nodes were modified, the iterator just stopped working. Now it throws a proper exception that informs that the document has been mutated since the result was returned.\n- Frame ID validation. In previous version, any operations related to a frame with a specific ID were able to accept an invalid frame ID. Now each operation checks if the frame with the specified ID exists.\n- Access violation exception on 64-bit platforms on creating Browser instance. This issue was reproducible in 64-bit environment only and appeared from time to time, now it is resolved.\n- Fixed a native process crash in multi-threaded environment.\n- Resolved possible crashes when selecting the first SSL certificate in the list or canceling selection in the DialogHandler.onSelectCertificate() method.\n",
  "requireLicenseAcceptance": true,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser",
  "verbatimVersion": "1.8.1",
  "version": "1.8.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.8.1.json#DotNetBrowser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1959,
      "fullName": "DotNetBrowser.nuspec",
      "length": 4457,
      "name": "DotNetBrowser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.8.1.json#lib/DotNetBrowser.Chromium.dll",
      "@type": "PackageEntry",
      "compressedLength": 51859103,
      "fullName": "lib/DotNetBrowser.Chromium.dll",
      "length": 51962880,
      "name": "DotNetBrowser.Chromium.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.8.1.json#lib/DotNetBrowser.dll",
      "@type": "PackageEntry",
      "compressedLength": 886491,
      "fullName": "lib/DotNetBrowser.dll",
      "length": 1597440,
      "name": "DotNetBrowser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.8.1.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 77288,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 615871,
      "name": "DotNetBrowser.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.51/dotnetbrowser.1.8.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}