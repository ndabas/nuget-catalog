{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.00.19.25/xbehave.0.11.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Adam Ralph",
  "catalog:commitId": "607ec44e-c4bd-422e-be42-0c9b9121d37c",
  "catalog:commitTimeStamp": "2015-02-02T00:19:25.75915Z",
  "copyright": "Copyright (c) 2011 - 2012 Adam Ralph (adam@adamralph.com)",
  "created": "2012-07-09T06:25:35.033Z",
  "description": "A BDD/TDD framework based on xUnit.net inspired by the Gherkin behaviour language. Dispenses with the need to map Gherkin feature files to code implementations by allowing the developer to bake the behaviours/specifications directly into code. Designed for use either from day one or as a seamless addition to an existing xUnit.net based workflow.",
  "id": "Xbehave",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://bitbucket.org/adamralph/xbehave.net/src/5b719723bcfe/license.txt",
  "packageHash": "F3dkIZvw1+9uA7F5IN9ya7PAKBZZJEYS7yxY+zRU8U3dwrOR0gMM0PP9DhYH1o7Ag0tccZEMu+cI0JRYLCztuw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 56429,
  "projectUrl": "https://bitbucket.org/adamralph/xbehave.net",
  "published": "2012-07-09T06:25:36.923Z",
  "releaseNotes": "(Enhancement) Support disposal of objects created within a failing step (https://bitbucket.org/adamralph/xbehave.net/issue/10).\n\n  - *** BREAKING CHANGES *** Removed (Func<IDisposable> body), (Func<IEnumerable<IDisposable>> body) and (Action body, Action dispose) step definition overloads. It is important to note that an IDisposable object returned from a step body declared as an expression will no longer be disposed. Instead, register the object for disposal with the Using() extension method. E.g. \"Given some disposable\".Given(() => someDisposable = new SomeDisposable().Using()); See http://adamralph.blogspot.com for more details.\n\n  - Added IDisposable.Using() extension method for registration of IDisposable objects.\n\n  - Added IStepDefinition.Teardown(Action teardown) for declaring a teardown action associated with objects created within a step.\n\n(Bug) The body of a step with a timeout is executed twice (https://bitbucket.org/adamralph/xbehave.net/issue/15)\n\n(Bug) Infinite loops in test runner when scenario method has params but no data provided (https://bitbucket.org/adamralph/xbehave.net/issue/12).\n\nOther\n\n  - Simplified test names to always include context number and test number in the format [{context}.{test}].\n\n  - Added compression of whitespace in step text.",
  "requireLicenseAcceptance": false,
  "title": "xBehave.net",
  "version": "0.11.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.00.19.25/xbehave.0.11.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.00.19.25/xbehave.0.11.0.json#dependencygroup/xunit",
          "@type": "PackageDependency",
          "id": "xunit",
          "range": "[1.9.1, 1.9.1]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.00.19.25/xbehave.0.11.0.json#dependencygroup/xunit.extensions",
          "@type": "PackageDependency",
          "id": "xunit.extensions",
          "range": "[1.9.1, 1.9.1]"
        }
      ]
    }
  ],
  "tags": [
    "xUnit.net",
    "BDD",
    "test",
    "TDD"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}