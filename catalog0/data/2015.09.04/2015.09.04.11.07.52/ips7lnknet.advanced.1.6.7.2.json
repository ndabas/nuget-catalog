{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.04.11.07.52/ips7lnknet.advanced.1.6.7.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Traeger Industry Components GmbH",
  "catalog:commitId": "40abd780-133b-4f37-9e54-e247ef878ae9",
  "catalog:commitTimeStamp": "2015-09-04T11:07:52.7300231Z",
  "copyright": "Traeger Industry Components GmbH",
  "created": "2015-09-04T10:42:28.107Z",
  "description": "Software driver to access Simatic S7 PLC data via TCP/IP under .NET. Very professional framework for quick and easy implementation in minutes. High performance access. No need for PLC know how. Phone and Email support by developer.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.04.11.07.52/ips7lnknet.advanced.1.6.7.2.json#frameworkassemblygroup/.netframework3.5",
    "assembly": "System",
    "targetFramework": ".NETFramework3.5"
  },
  "iconUrl": "http://www.traeger.de/pub/downloads/ips7lnknet-icon.png",
  "id": "IPS7LnkNet.Advanced",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2015-09-04T11:07:36.52Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://www.traeger.de/pub/downloads/license_ips7lnknet.advanced.pdf",
  "listed": true,
  "packageHash": "/ZagPOOH8BPwTrnMqF/9G7R5vkrIko97etY3wpZK7AGRD8M1CfaFFx+s0Hg+mobsV0e4FM4A3rPsC1j5qIoM4g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4344853,
  "projectUrl": "http://www.traeger.de/softwaretreiber-simatic-s7/s7-comm-framework-for-dotnet.html",
  "published": "2015-09-04T10:42:28.187Z",
  "releaseNotes": "= 04.03.2015 - V1.6.7.2 =\n* New       New product icon.\n\n= 03.03.2015 - V1.6.7.1 =\n* Fixed     InvalidCastException while reading a Bool[] using ReadBoolean.\n\n= 26.02.2015 - V1.6.7.0 =\n* New       Implemented SiemensChannelType enumeration on SiemensDevice to manage the type of\n            channel to use on a connection created by the SiemensDevice instead to manage\n            it via the generic PlcDeviceConnection using the PlcDeviceConnectionType.\n            In general a channel type is only relevant for the Siemens provider. Therefore the\n            PlcDeviceConnectionType will become obsolete in future releases.\n* New       Implemented IsDisposed property to internal indiciate, that a PlcDeviceConnection\n            is diposed of.\n* New       Improved GetInfo() method on SiemensDeviceConnection to not longer produce\n            re-occuring connection status changes and status evaluations.\n* Fixed     Wrong calculation of End Address of PlcType instances representing a Bool[].\n* New       Implemented check in PlcType to disallow the use of a different PlcAddress.RawType as\n            Bit for PlcType instances with PlcTypeCode.Bool.\n\n= 24.02.2015 - V1.6.6.1 =\n* New       Reworked implementation to better take use of the maximum string length property\n            (Length). Additionally care about the PlcString.MinLength and PlcString.MaxLength\n            and do not longer pad value with whitespaces.\n* Fixed     Issue with wrong type of buffer array (changed short buffer to float buffer).\n* New       Fixed issue with out dated return data from ReadValues and simplified some Read\n            methods to take more use of the EnumerableHelper.\n\n= 23.02.2015 - V1.6.6.0 =\n* New       Reworked PlcStatus to internally LatestXXX properties to directly get/set the current\n            status information without the need to end initialization to get the latest status\n            information while processing within a PLC operation context.\n* New       In case of Multi-Read (ReadValues) and Multi-Write (WriteValues) the connection does\n            not longer reflect data status codes. Data status codes are now stored on the\n            connection using the PlcType used and on each IPlcValue instance specific PlcStatus.\n\n=  19.02.2015 - V1.6.5.0 =\n* New       Improved Exception and Status information.\n* New       Improved Status and Value change handling in transactional way.\n* Fixed     Multi-Threaded problem in PlcType.Of(...)\n\n= 09.02.2015 - V1.6.4.0 =\n* New       Implemented new overloads for GetValue and SetValue. Additionally implemented\n            ValidateValue. Furthermore reworked mechanism to get and set the Value property and\n            the implementation of GetValue and SetValue to better integrate with new solutions and\n            provide more meaningful codeflows for deriving classes.\n* Fixed     Fixed issues with reading and writing char values.\n* New       Upgraded to IPS7LnkNet V1.0.74.0\n            * Fixed     Connection to PLC didn't repair itself automatically.\n            * Fixed     Using threads with connections: License expired appeard several times.\n* New       BETA: Implemented new beta features like PlcAttachedValue and PlcDelegateValue.\n\n= 15.12.2014 - V1.6.3.4 =\n* Fixed     Issue with duplicate PlcOperand instances in multi-threaded environments.\n\n= 09.12.2014 - V1.6.3.3 =\n* Fixed     Issue with reading reference data (array data) using ReadValues on a\n            PlcDeviceConnection instance which lead to overridden data on reading same address\n            areas by the same PlcType and to a reference to the internal data buffer. Furthermore\n            user specific reference data was overridden with a reference to the internal data\n            buffer.\n\n= 28.11.2014 - V1.6.3.2 =\n* Fixed     Issue with failed auto connect attempts then starting a communication while the\n            network device is disabled at start and enabled during further connect/access\n            attempts.\n* New       Updated IPS7LnkNet (V1.73): Logo/S7-200 license managment implemented.\n\n= 23.11.2014 - V1.6.2.1 =\n* Fixed     Issue with default values when reading data using ReadValues.\n\n= 07.11.2014 - V1.6.2.0 =\n* Fixed     Changed base class of PlcException from ExternalException to Exception, because upon\n            the unerlaying PLC layer does not longer belong to any External (unmanaged) API.\n            Furthermore this change does lead to a fully support of the use in Windows Store Apps.\n\n= 12.09.2014 - V1.6.1.0 =\n* New       Added new connection state Disconnected.\n* New       Extended global notitications with new event ConnectionDisconnected.\n* New       Extended abstract base class PlcDeviceConnection with new event Disconnected.\n* New       Reworked connection state handling to determine during each interaction with a\n            connection whether a connection is either in connected or disconnected state.\n\n= 28.08.2014 - V1.6.0.0 =\n* New       Added setter to generic IPlcValue<T> interface to also support setting the Value\n            property.\n* New       (Internal) Implemented PlcValueFactory which creates according IPlcValue/IPlcValue<T>\n            instances using PlcType information.\n* New       (Internal) Added PlcStatus.Changed handling using PlcNotifications in\n            PlcDeviceConnection through a general changed event handler instead of always\n            implementing PlcNotifications calls after updating the local PlcStatus object. This\n            ensures that on each update the PlcNotifications class is used to evaluate the new\n            status information.\n* New       New event ConnectionCreated on PlcNotifications which occurs always after a new\n            PlcDeviceConnection has been created.\n* New       New events Connecting and Connected on PlcDeviceConnection which inform about that a\n            connection to a device is about and has been fully established.\n* New       New event StateChanged on PlcDeviceConnection which informs about any change to the\n            State property of the PlcDeviceConnection.\n* New       New event ConnectionStateChanged on PlcNotifications which informs about any change to\n            the State property of any PlcDeviceConnection.\n* New       New property IsConnected on PlcDeviceConnection which indicates whether a connection to\n            a device has been fully established.\n* New       New method Connect() on PlcDeviceConnection to manually fully establish a connection to\n            a device.\n* Removed   State change to Faulted after a PlcDeviceConnection has been disposed of.\n* New       The data status cache of a PlcDeviceConnection does not always contain the same\n            PlcStatus instance. This allows to subscribe on status changes on PlcType specific\n            PlcStatus objects.\n* New       The PlcConnectionState enum does now define the new states Connecting and Connected.\n* New       The PlcConnectionStateChangedEventArgs class is used by the new StateChanged event on\n            PlcDeviceConnection and does provide OldState and NewState properties.\n* Changed   The previous PlcDeviceConnectionEventArgs class is now a subclass of PlcNotifications.\n            Because it is specific to the events provided by the PlcNotifications class and does\n            therefore on one hand provide the PlcDeviceConnection affected, because there is no\n            sender provided by the events and on the other hand it would conflict with the new\n            PlcDeviceConnectionEventArgs which does not provide the event source connection.\n* Changed   Renamed the ValidateStatusDelegate to EvaluateStatusDelegate to better match the\n            concept behind that the callback is used. Additionally added a bool as return type to\n            indicate that framework specific evaluation is to be performed.\n* New       (Internal) Implemented Referesh method on DataBuffer class used by the\n            SiemensDeviceConnection to update the internal buffer data after its internal\n            descriptor has been changed.\n* New       (Internal) Reduced API calls to GetSockErr() in SiemensDeviceConnection.\n* New       Implemented exception handling in VirtualDeviceConnection to ensure that all PlcDevice\n            provider implementations do behave in the same way.\n* New       Implemented exception handling in WebDeviceConnection to ensure that all PlcDevice\n            provider implementations do behvae in the same way. Additionally adjusted the existing\n            exception handling to match the expected behavior.\n* New       Implemented Exception property on PlcStatus which provides the according PlcException\n            instance initialized with the status information provided by a PlcStatus instance.\n* New       Implemented InnerException property on PlcStatus which provides the most recent\n            Exception instance thrown by an internal operation. This property is additionally\n            synchronized with the SocketCode property.\n* New       Implemented TimeStamp property on PlcStatus which does indicate the DateTime of the\n            most recent update of the status meta data provided by the PlcStatus.\n* New       Implemented Type property on PlcStatus which does provide the PlcType information of\n            the PlcType used by the most recent operation.\n* New       (Internal) Implemented Copy() method on PlcStatus to create a deep copy of a PlcStatus.\n* New       (Internal) Implemented additional overloads to the Update() method on PlcStatus to\n            also update the new status meta data (InnerException, Type).\n* New       (Internal) Reworked implementation of the Update() method on PlcStatus to always update\n            its whole status information and not only on different status data (as before). This\n            does now also include that a Changed event is always raised when ever Update() is\n            called.\n* New       All abstract Read/Write methods on PlcDeviceConnection are now called using at least\n            one PlcType. This instance does now obsolete previous parameters likes\n            address:PlcAddress, count:int or length:int.\n\n= 12.08.2014 - V1.5.8.2 =\n* New       Internal Changed event on PlcDeviceEndPoint which occurs on any changes made on an\n            endpoint.\n* Fixed     Reset cached connection in PlcDevice in case of any endpoint changes.\n* New       General exception handling on each API call to the Siemens provider.\n\n= 21.07.2014 - V1.5.8.1 =\n* Fixed     Wrong calculation of S5TIME values (cause: high and low byte had to be reversed).",
  "requireLicenseAcceptance": false,
  "summary": "Software driver to access Simatic S7 PLC data via TCP/IP under .NET",
  "title": "IPS7LnkNet.Advanced S7-Comm-Framework for .NET",
  "verbatimVersion": "1.6.7.2",
  "version": "1.6.7.2",
  "tags": [
    "IP-S7-LINK",
    "C#",
    "S7",
    "PLC",
    "VB.NET",
    "Windows",
    "RFC",
    "1006",
    "PC-S7-Connection",
    "over",
    "TCP/IP",
    "1500",
    "1200",
    "300",
    "400"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}