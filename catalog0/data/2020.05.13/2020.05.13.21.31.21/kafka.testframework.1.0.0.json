{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Fredrik Arvidsson",
  "catalog:commitId": "5aa45248-50e8-4960-9626-7aa4ea6ce1c7",
  "catalog:commitTimeStamp": "2020-05-13T21:31:21.1623321Z",
  "copyright": "Copyright ï¿½ 2019 Fredrik Arvidsson",
  "created": "2020-05-13T21:29:13.403Z",
  "description": "Framework for testing integrations with Kafka",
  "id": "Kafka.TestFramework",
  "isPrerelease": false,
  "lastEdited": "2020-05-13T21:31:15.413Z",
  "licenseUrl": "https://github.com/Fresa/Kafka.TestFramework/blob/master/LICENSE",
  "listed": true,
  "packageHash": "tdStukxoB0jmbEcDSZ3HV3b2MpwBYmnrzoVqoivVuYgupJn7SXP49ZE9bdJ80b2aqnlORM0o0eQJF3cXTZ6GPw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34487,
  "published": "2020-05-13T21:29:13.403Z",
  "releaseNotes": "-incorrect path when setting release notes\n-typo in info text when changing major version\n-reset patch to 0 when major or minor is bumped\n-set versioning strategy and update incorrect project path\n-update package information\n-update protocol references\n-setup CI/CD\n-update the build badges\n-move kafka test framework to separate repository\n-Initial commit",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json#dependencygroup/.netcoreapp3.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json#dependencygroup/.netcoreapp3.0/kafka.protocol",
          "@type": "PackageDependency",
          "id": "Kafka.Protocol",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json#Kafka.TestFramework.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 698,
      "fullName": "Kafka.TestFramework.nuspec",
      "length": 1368,
      "name": "Kafka.TestFramework.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json#lib/netcoreapp3.0/Kafka.TestFramework.pdb",
      "@type": "PackageEntry",
      "compressedLength": 5164,
      "fullName": "lib/netcoreapp3.0/Kafka.TestFramework.pdb",
      "length": 9260,
      "name": "Kafka.TestFramework.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json#lib/netcoreapp3.0/Kafka.TestFramework.dll",
      "@type": "PackageEntry",
      "compressedLength": 17235,
      "fullName": "lib/netcoreapp3.0/Kafka.TestFramework.dll",
      "length": 39424,
      "name": "Kafka.TestFramework.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.05.13.21.31.21/kafka.testframework.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "kafka",
    "protocol",
    "test"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}