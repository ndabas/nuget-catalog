{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.02.34.23/installmanager.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Baloghp",
  "catalog:commitId": "9c1badc3-1415-4306-9baa-47c594e83f68",
  "catalog:commitTimeStamp": "2015-02-02T02:34:23.3264895Z",
  "created": "2012-08-17T10:52:11.557Z",
  "description": "MSI Install Manager is an API that allows you to install an MSI within a .NET application. You can create a WPF install experience and drive the execution of the MSI within.\n(In fact you can use command line, Winforms, or any other .NET capable client )",
  "id": "InstallManager",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://msiinstallmanager.codeplex.com/license",
  "packageHash": "dAD07ADl812X17s8cjFWgWtWbAX2dGzdlmosWkL3WbsQynvNVQ6oB+irNUhDnXAqb8Rn1reo88VJ++bCt/sdGQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20205,
  "projectUrl": "http://msiinstallmanager.codeplex.com/",
  "published": "2012-08-17T10:52:11.557Z",
  "requireLicenseAcceptance": true,
  "summary": "Microsoft Public License (Ms-PL)\n\nThis license governs use of the accompanying software. If you use the software, you accept this license. If you do not accept the",
  "title": "InstallManager",
  "version": "1.1.0",
  "tags": [
    "Installation",
    "Installer",
    "MSI",
    "setup",
    "installer",
    "WPF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}