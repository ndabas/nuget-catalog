{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.18.05.03.34/jfp.2.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Chris Stead",
  "catalog:commitId": "4bd2d53b-c33d-4b8d-9dc9-52cd0c3b7ad2",
  "catalog:commitTimeStamp": "2015-11-18T05:03:34.9777448Z",
  "copyright": "Copyright 2015",
  "created": "2015-11-18T05:03:15.627Z",
  "description": "A language as a library borrowing concepts from Lisp and Haskell. JFP contains functions which allow for gentle adoption of functional programming ideas for developers who are new to the functional paradigm. JFP embraces the dynamic nature of Javascript while supporting safe data typing.",
  "id": "JFP",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://www.mozilla.org/MPL/",
  "listed": true,
  "packageHash": "TG3SW5y4IyNBefZCWZdO7u23xKwVwh1D4pzdfsps9Elo8cnJS1UUVTV9hbHtNq3mxe8G/LR53sbS+CuVepsIxw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26136,
  "projectUrl": "https://github.com/cmstead/JFP",
  "published": "2015-11-18T05:03:15.627Z",
  "releaseNotes": "- isTuple - predicate testing on if array is a tuple of n length &lt;int&gt;, &lt;array&gt; -&gt; &lt;boolean&gt;\n- isPair - special case isTuple representable by j('isTuple', 2) -- intentionally does NOT conform to scheme's pair? predicate\n- isSingle - special case isTuple representable by j('isTuple', 1)\n- isTriple - special case isTuple representable by j('isTuple', 3)\n- transform - transforms an object into a new object through an array of pairs-based transform definitions -- This ignores all non-pair values\n- getKeys - returns array of object keys returns empty array if value is not an object or if object has no keys\n- hasFirst - checks if array contains a first element, always returns false on non-array values\n- always - returns a function which always returns the same value -- similar to j.partial(j.identity, value)\n- empty - accepts type string, returns initialized, empty value of type specified by type string, with no string, empty returns null\n- isMultipleOf - verifies value is multiple of a number\n- composePredicate - takes a list of predicate functions and applies them to a value, returning a boolean, optional combinator allows for and/or combination behavior selection; default behavior is \"and\"\n- Assorted updates and enhancements\n    - Updated shortCircuit to act on an typeString\n    - Updated merge function to reduce verbosity and improve stability\n    - Added AMD/RequireJS module support",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.5.0",
  "version": "2.5.0",
  "tags": [
    "Functional",
    "Javascript",
    "Scheme",
    "Lisp",
    "Clojure"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}