{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.05.15/livewireuk.modelsearcher.2.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Livewire-UK",
  "catalog:commitId": "d01bbc95-f111-47ce-b366-7d20ca0a9b10",
  "catalog:commitTimeStamp": "2018-12-10T23:05:15.2271757Z",
  "copyright": "Copyright 2013",
  "created": "2013-07-25T22:24:48.797Z",
  "description": "Model Searcher is a simple tool I created for my own use to be able to perform a text based search across specific properties on my Models/ViewModels. I quickly realised that if I made it generic, this tool could be a great benefit to others. Then, after building a List of ISearchableModels you can call .Search(searchText) which will use Linq.Dynamic to build a search criteria based on all of the [Searchable] properties for that ISearchableModel and will perform the search, returning you the filtered List. You can also Target a particular Searchable Property on your model to search, by calling .Search(m => m.PropertyToSearch, searchText). This will then cause a search on the particular PropertyToSearch as long as it is attributed as Searchable. Currently this only searches across Properties that are either string/int/long. Other types to come soon! Source code and Wiki available at https://bitbucket.org/jonhoare/modelsearcher!",
  "id": "LivewireUK.ModelSearcher",
  "isPrerelease": false,
  "lastEdited": "2018-12-10T23:04:48.547Z",
  "listed": true,
  "packageHash": "IGxWyMzdxu+tU1Lm5NT4Kuq68zzr5aQ3TIc07+nNhJmcj13eh4ANHtRpQcenpwrO6e5Lo/rdC8/ZU2H7bIlg6Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18082,
  "projectUrl": "https://bitbucket.org/jonhoare/modelsearcher",
  "published": "2013-07-25T22:24:48.797Z",
  "releaseNotes": "Update the description of the package.",
  "requireLicenseAcceptance": false,
  "summary": "A simple Model Searcher Extension to perform text based searches of Searchable Properties in your Models/ViewModels",
  "title": "ModelSearcher",
  "verbatimVersion": "2.0.0.1",
  "version": "2.0.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.05.15/livewireuk.modelsearcher.2.0.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.05.15/livewireuk.modelsearcher.2.0.0.1.json#dependencygroup/system.linq.dynamic",
          "@type": "PackageDependency",
          "id": "System.Linq.Dynamic",
          "range": "[1.0.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.05.15/livewireuk.modelsearcher.2.0.0.1.json#LivewireUK.ModelSearcher.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 845,
      "fullName": "LivewireUK.ModelSearcher.nuspec",
      "length": 1789,
      "name": "LivewireUK.ModelSearcher.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.05.15/livewireuk.modelsearcher.2.0.0.1.json#lib/net45/LivewireUK.ModelSearcher.dll",
      "@type": "PackageEntry",
      "compressedLength": 4377,
      "fullName": "lib/net45/LivewireUK.ModelSearcher.dll",
      "length": 10752,
      "name": "LivewireUK.ModelSearcher.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.23.05.15/livewireuk.modelsearcher.2.0.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}