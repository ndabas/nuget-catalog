{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.22.18.49.05/documentultimate.2.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GleamTech",
  "catalog:commitId": "a7c69da5-eda4-47cb-9e88-4d1c221fbf2a",
  "catalog:commitTimeStamp": "2016-10-22T18:49:05.4385095Z",
  "copyright": "Copyright Â© 2016 GleamTech",
  "created": "2016-10-22T18:48:13.243Z",
  "description": "DocumentUltimate is an ASP.NET Document Viewer and Converter which supports both ASP.NET MVC and\n        ASP.NET WebForms web applications/web sites. DocumentUltimate can also be used with\n        .NET desktop applications for conversion between several document formats.",
  "iconUrl": "http://www.gleamtech.com/resources/images/documentultimate-nuget.png",
  "id": "DocumentUltimate",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "listed": true,
  "packageHash": "hZcbh1zQmS+WthhKyWTgGK/MmcAOzFIZI68d3LlKcANDdtDKCFhhbr03KxkNpD4l2TGQOKvySmm1Xw5AgrWd4g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 74750541,
  "projectUrl": "http://www.gleamtech.com/documentultimate",
  "published": "2016-10-22T18:48:13.243Z",
  "releaseNotes": "## Version 2.0.1 - October 22, 2016\n\n- **Fixed:** Possible wrong \"evaluation has expired\" error in DocumentViewer or DocumentConverter.\n\n- **Fixed:** TXT files were failing with the error: \"object reference not set to an instance of an object\"\n\n- **Added:** \"Watermarking pages\" sample to example projects for demonstrating new watermark features.\n\n## Version 2.0.0 - October 17, 2016\n\n- **Added:** Visual Studio Design View support. From now on, an image preview (placeholder) of DocumentViewer control \n  will be displayed in Design View. This preview is also resizable and it directly reflects Width and Height properties.\n\n- **Added:** New advanced document conversion API. All supported formats are now well defined in DocumentFormat enum.\n  For enumerating supported formats and getting information on them, DocumentFormatInfo and DocumentFormatGroupInfo \n  classes can be used. DocumentConverter is now mainly instance based, you initialize an instance with an input file\n  and call CanConvertTo or ConvertTo methods with a output format or file . There are 2 types of conversion engines: \n  native and managed, by default the best engine is selected automatically for a conversion task, however if you\n  do not like the result of a specific format to format conversion you can use DocumentEngineEnforcement options\n  to force a specific engine. The native document engine is usually faster but it supports a limited set of document \n  formats. The managed document engine supports wide range of document formats. Note that you do not need to think \n  about engine types because DocumentConverter.ConvertTo methods by default use DocumentEngineEnforcement.Auto option.\n  You can also now convert password protected input files by specifying the password in InputOptions class. There is \n  also PdfOutputOptions and XpzOutputOptions classes with specific options for those formats. For example, \n  PdfOutputOptions class allows you to specify text or image watermarks that will be added to the converted PDF file.\n\n- **Added:** Advanced watermarking support for DocumentViewer. You can now specify multiple text or image watermarks \n  with several options like layout, page range etc. for a document. Downloading as PDF will also include the same \n  watermarks.\n\n- **Improved:** Due to new document conversion API, conversions will be faster for DocumentViewer. Some formats\n  (e.g. common image formats and digital paper formats like XPS and EPUB) will be directly converted to PDF and \n  XPZ formats via native engine so these documents will be opened faster for first-time view. More formats can \n  be viewed with Document Viewer.\n\n- **Improved:** Single image files will now fit to the entire document page (no blank areas on right or bottom).\n\n- **Improved:** DocumentViewer.Document property can be left empty without any errors again (was broken in v1.9.0)\n  Also errors related to DocumentViewer.Document property (e.g. file not found) will not cause a ASP.NET YSOD screen,\n  instead DocumentViewer will be displayed in the page and the error message will be shown in a window.\n\n- **Added:** Password property to DocumentSource class. This way protected documents can be viewed. Note that in markup,\n  you should set the password with \"Document-Password\" property only after you set \"Document\" property like this:\n  <GleamTech:DocumentViewer ... Document=\"document.docx\" Document-Password=\"password\" />\n\n- **Improved:** Exposed GetCacheInfo method in DocumentCache class. This method can be used if you need to know \n  the cache keys beforehand without calling PreCacheDocument method. Also the PreCacheDocument method will from \n  now on return a DiskCacheItem instance for the cached XPZ file and this object contains information like cache \n  item key and path.\n\n- **Improved:** DocumentCache will now group cached files for the same inputs in subfolders. Also the subfolder name\n   will contain the original file name so it will be easier to locate the corresponding cached files for an input. \n   The old cached files will be arranged into the new structure automatically one by one when they are accessed so \n   no action is required for the developer.\n\n- **Fixed:** IE11 on touch laptops were detected as a mobile device so mobile viewer was activated. Improved mobile\n  device detection to prevent this kind of issues.\n\n- **Fixed:** Some large documents caused \"bad allocation\" error in DocumentViewer.",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "DocumentUltimate: ASP.NET Document Viewer and Converter",
  "verbatimVersion": "2.0.1",
  "version": "2.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.22.18.49.05/documentultimate.2.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.22.18.49.05/documentultimate.2.0.1.json#dependencygroup/gleamtech.core",
          "@type": "PackageDependency",
          "id": "GleamTech.Core",
          "range": "[1.5.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.22.18.49.05/documentultimate.2.0.1.json#DocumentUltimate.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2419,
      "fullName": "DocumentUltimate.nuspec",
      "length": 5789,
      "name": "DocumentUltimate.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.22.18.49.05/documentultimate.2.0.1.json#lib/net40/GleamTech.DocumentUltimate.dll",
      "@type": "PackageEntry",
      "compressedLength": 74735766,
      "fullName": "lib/net40/GleamTech.DocumentUltimate.dll",
      "length": 81107456,
      "name": "GleamTech.DocumentUltimate.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.22.18.49.05/documentultimate.2.0.1.json#lib/net40/GleamTech.DocumentUltimate.xml",
      "@type": "PackageEntry",
      "compressedLength": 10378,
      "fullName": "lib/net40/GleamTech.DocumentUltimate.xml",
      "length": 92408,
      "name": "GleamTech.DocumentUltimate.xml"
    }
  ],
  "tags": [
    "Document",
    "Viewer",
    "Converter",
    "Conversion",
    "Office",
    "Word",
    "Excel",
    "PowerPoint",
    "AutoCad",
    "pdf",
    "doc",
    "docx",
    "xls",
    "xlsx",
    "ppt",
    "pptx",
    "vsd",
    "vsdx",
    "odt",
    "ods",
    "odp",
    "xps",
    "dxf",
    "epub",
    "mpp",
    "ASP.NET",
    "WebForms",
    "MVC",
    ".net40"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}