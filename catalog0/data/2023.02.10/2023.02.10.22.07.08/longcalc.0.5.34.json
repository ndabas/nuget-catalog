{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "0da164be-3585-4732-9d1a-ba73330d84b0",
  "catalog:commitTimeStamp": "2023-02-10T22:07:08.5845884Z",
  "copyright": "Copyright Â© MarkKnows 2023",
  "created": "2023-02-10T22:04:38.463Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconFile": "images\\Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2023-02-10T22:06:40.2Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "Ttvj8YoQx0xIb7+FBiQZq139mD2nu4L3LRRc5kc6xEkhwvjE9uyLuhCU0EyuP9b3n8VM4/5u/bdUOFCaXcDTgQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 522470,
  "published": "2023-02-10T22:04:38.463Z",
  "releaseNotes": "Unsigned Assembly\n\nCorrected a long-standing problem in the initialization of a bf object from a string (new bf(double x)) in which\nthe precision of output was always 20 decimal digits rather than the expected precision of \nbf.GlobalPrecision + bf.Threshold. This problem could be avoided in earlier versions of this software by first\nconverting the input to a string, such as in: double x = 3.14; bf x2 = new bf(\"3.14\"); \nor: double x = 3.14; bf x2 = new bf(x.ToString()); \n\nIn the trigonometric functions, the exact value is now returned for the function evaluated exactly at some frequently-used angles measured in degrees or gradians. \nAs an example, if x is equal to exactly 30 degrees, x.Sin(Precision, AngleType.Degrees) now returns bf(1, -1) (or .5) exactly. \n\nIn the functions to initialize a bf value from a file (ie: bf(uint _base, string FilePath, long Base10Precision)) an exact value is now returned if the mantissa in the file text is encoded in a _base which is a power of 2.\nThis feature already existed when initializing a bf value from a string (ie:  bf(string x, int BaseIn, long Base10Precision)).\n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2021) and using Mpir.NET for the underlying integer math and requiring .NetFramework4.5, supplies a variety of math functions and utilities with precisions as large as 2,000,000 base 10 digits when running in x86 mode and much larger in x64 mode. The underlying objects are bf (for 'big float') real values comprised of an mpz_t extended integer part from Mpir.NET and a base 2 exponent, bcr (for complex numbers expressed in the rectangular coordinates) comprised of a bf real part and a bf imaginary part, and bcp (for complex numbers expressed in the polar coordinates) comprised of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ. The library also includes a 'bd' (for bigdecimal) object with fractional base 10 digits up to 20686000000. Use of the included Windows app LongCalcDemoApp.exe function assumes that the files LongCalcDemoApp.exe, LongCalc.dll, Mpir.NET.dll, xmpir32.dll, xmpir64.dll reside in a common folder/directory. LongCalc depends on package Mpir.NET and .Net framework 4.5.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.5.34",
  "version": "0.5.34",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1685,
      "fullName": "LongCalc.nuspec",
      "length": 3584,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 2659,
      "fullName": "LICENSE.txt",
      "length": 7814,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#LongCalcDemoApp.exe",
      "@type": "PackageEntry",
      "compressedLength": 20006,
      "fullName": "LongCalcDemoApp.exe",
      "length": 79872,
      "name": "LongCalcDemoApp.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#images/Logo50x50.png",
      "@type": "PackageEntry",
      "compressedLength": 2525,
      "fullName": "images/Logo50x50.png",
      "length": 2520,
      "name": "Logo50x50.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 65858,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 206848,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#lib/net45/LongCalc.xml",
      "@type": "PackageEntry",
      "compressedLength": 18404,
      "fullName": "lib/net45/LongCalc.xml",
      "length": 295967,
      "name": "LongCalc.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.02.10.22.07.08/longcalc.0.5.34.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11513,
      "fullName": ".signature.p7s",
      "length": 11513,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "bigdecimal",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}