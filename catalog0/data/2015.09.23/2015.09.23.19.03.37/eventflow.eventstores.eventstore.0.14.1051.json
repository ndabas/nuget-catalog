{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.23.19.03.37/eventflow.eventstores.eventstore.0.14.1051.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "ba15db1f-3096-4d76-912b-39388f63ac53",
  "catalog:commitTimeStamp": "2015-09-23T19:03:37.2957994Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-09-23T19:03:00.527Z",
  "description": "Event Store event store for EventFlow. Download it from https://geteventstore.com/.",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.EventStores.EventStore",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": true,
  "packageHash": "PD7meWYjGYNcYM5OZJtNgftsPsHFukeUAArjIoOoohAec6Ud1j9LlfYM+dGkB//vdwptQk5F4AkhrtNbbii3VQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11487,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-09-23T19:03:00.527Z",
  "releaseNotes": "Breaking: All `EventFlowOptions` extensions are now `IEventFlowOptions`\ninstead and `EventFlowOptions` implements this interface. If you have made\nyour own extensions, you will need to use the newly created interface\ninstead. Changed in order to make testing of extensions and classes\ndependent on the EventFlow options easier to test\nNew: You can now bundle your configuration of EventFlow into modules that\nimplement `IModule` and register these by calling\n`EventFlowOptions.RegisterModule(...)`\nNew: EventFlow now supports scheduled job execution via e.g. Hangfire. You\ncan create your own scheduler or install the new `EventFlow.Hangfire` NuGet\npackage. Read the jobs documentation for more details\nNew: Created the OWIN `CommandPublishMiddleware` middleware that can\nhandle publishing of commands by posting a JSON serialized command to\ne.g. `/commands/ping/1` in which `ping` is the command name and `1` its\nversion. Remember to add authentication\nNew: Created a new interface `ICommand<TAggregate,TIdentity,TSourceIdentity>`\nto allow developers to control the type of `ICommand.SourceId`. Using the\n`ICommand<TAggregate,TIdentity>` (or Command<TAggregate,TIdentity>)\nwill still yield the same result as before, i.e., `ICommand.SourceId` being\nof type `ISourceId`\nNew: The `AddDefaults(...)` now also adds the command type definition to the\nnew `ICommandDefinitonService`",
  "requireLicenseAcceptance": true,
  "title": "EventFlow - Event Store event store",
  "verbatimVersion": "0.14.1051",
  "version": "0.14.1051",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.23.19.03.37/eventflow.eventstores.eventstore.0.14.1051.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.23.19.03.37/eventflow.eventstores.eventstore.0.14.1051.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.14.1051, 0.14.1051]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.23.19.03.37/eventflow.eventstores.eventstore.0.14.1051.json#dependencygroup/eventstore.client",
          "@type": "PackageDependency",
          "id": "EventStore.Client",
          "range": "[3.0.2, )"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "store",
    "eventstore"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}