{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SceneGate",
  "catalog:commitId": "d572c26d-61ed-44b7-927b-dfcb22507f09",
  "catalog:commitTimeStamp": "2024-01-31T09:30:24.029541Z",
  "copyright": "Copyright (C) 2019 SceneGate",
  "created": "2024-01-31T09:27:42.44Z",
  "description": "Assembly scaning for file formats and converters implemented with Yarhl.",
  "iconFile": "icon.png",
  "id": "Yarhl.Plugins",
  "isPrerelease": false,
  "lastEdited": "2024-01-31T09:30:16.893Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "bZWvXaOF/1kbq2wRgqR14nsaxGdXIem1ust9IARm/BQhJIrrxxiZUQw8SSW+9h98ygM7xLi1ioQbSCg2tyYGlg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 67927,
  "projectUrl": "https://scenegate.github.io/Yarhl/",
  "published": "2024-01-31T09:27:42.44Z",
  "readmeFile": "README.md",
  "releaseNotes": "## v4.0.0 (January 31, 2024)\n\n\nNew stable release! 🚀 🎉\nThere are new features, bug fixes but also some architecture changes and **[a new documentation website](https://scenegate.github.io/Yarhl/)** 🤩\nThe core concept of the framework is the same but there are some breaking changes in APIs and technology replacements (plugins API). \n\nThese changes have been extensively tested in the new SceneGate projects (UI tool, Ekona, Lemon) and modding projects. Releasing v4.0 is a new milestone in SceneGate that allows us to start shipping the first versions of these projects.\n\n## Summary\n\n- 📚 Documentation! [checkout in the project site](https://scenegate.github.io/Yarhl/)\n- 🔢 Enhancements in the IO namespace bringing compatibility with the native .NET `Stream` type\n- ♻️ New converters API that allows initialization via standard class constructors\n- 📋 Cloneable formats\n- 📃 New simple base class for custom encoding implementations\n- 🔌 New native and safer plugin API. No longer based on MEF.\n- 🆕 .NET 6.0 and 8.0 support with nullable annotations. .NET Framework is not supported anymore.\n\n### Breaking changes\n\n- **Drop support of .NET Framework**\n- **Rename library Yarhl.Media to Yarhl.Media.Text**\n- **Remove APIs `ConvertTo`, `TransformTo` and `DataStream.ReadFormat&lt;T&gt;()`**\n- **Obsolete `IInitializer&lt;T&gt;`. Use the constructor instead.**\n- **`DataStream` does NOT throw `EndOfStreamException` when reading bytes.**\n  - `ReadByte` returns `-1` when it reaches the end instead of throwing an exception.\n  - `DataReader` keeps the behavior and it will throw `EndOfStreamException` when reading any data type.\n- Move `DataStream.Length` setter to its own method `SetLength(long)`.\n- Rename `TextReader` and `TextWriter` to `TextDataReader` and `TextDataWriter`.\n- Removed `IStream` interface in favor of `Stream`.\n- `TextDataReader` will not return `null` string if it starts reading from the end already. It will throw `EndOfStreamException`.\n- `DataStream.Seek` now requires a negative argument to go back positions when `origin` is `SeekOrigin.End`.\n- Binary object (de)serialization removed from `DataReader` and `DataWriter` and moved into new types `BinaryDeserializer` and `BinarySerializer`.\n  - The attribute `BinarySerializable` is no longer required and it&apos;s removed.\n  - The attribute `BinaryOrder` is mandatory for properties in projects running in .NET 6.0\n  - The attribute property `ReadAs` and `WriteAs` is now `UnderlyingType`\n  - The attribute for enums is optional. Its defined underlying type will be used.\n\nAs part of this release we had [49 issues](https://github.com/SceneGate/Yarhl/milestone/5?closed=1) closed.\n\n## What&apos;s Changed\n\n- **Formats and converters**\n  - ✨🔥 Implement new converter API by @pleonex in https://github.com/SceneGate/Yarhl/pull/191\n  - ✨ Implement ICloneableFormat by @Kaplas80 in https://github.com/SceneGate/Yarhl/pull/168\n  - ✨ Enhance debugging view by @pleonex in https://github.com/SceneGate/Yarhl/pull/209\n- **IO**\n  - ✨ Refactor and improvements in binary object (de)serialization by @pleonex in https://github.com/SceneGate/Yarhl/pull/208\n  - ✨ Implement DataStream inheritance with Stream and support of Readers and Writers with Stream by @pleonex in https://github.com/SceneGate/Yarhl/pull/161\n  - 👕 Rename TextReader and TextWriter to TextDataReader and TextDataWriter by @pleonex in https://github.com/SceneGate/Yarhl/pull/162\n  - ✨🔥 Add Stream argument constructor to DataStream and remove IStream interface by @pleonex in https://github.com/SceneGate/Yarhl/pull/170\n  - ✨ Implement slice for DataStream by @pleonex in https://github.com/SceneGate/Yarhl/pull/204\n  - ✨ Implement factories to create DataStreams and Nodes from array and standard streams by @pleonex in https://github.com/SceneGate/Yarhl/pull/173\n  - 🐎 Improve memory consumption of DataStream.WriteTo by @pleonex in https://github.com/SceneGate/Yarhl/pull/183\n  - ✨ Use DataStream type in Stream properties for readers and writers and explicitly set CanTimeout to false by @pleonex in https://github.com/SceneGate/Yarhl/pull/172\n  - ✨🐛 Stream overloads in BinaryFormat and NodeFactory and fix threading issue by @pleonex in https://github.com/SceneGate/Yarhl/pull/163\n  - ✨ Implement constructor to create BinaryFormat from a file by @pleonex in https://github.com/SceneGate/Yarhl/pull/205\n  - 🐛 Fix behavior of DataStream.Seek when SeekOrigin is End by @Kaplas80 in https://github.com/SceneGate/Yarhl/pull/177\n  - 🐛 Comparing stream to itself returns false by @pleonex in https://github.com/SceneGate/Yarhl/pull/199\n  - 🐛 WriteTo truncates output file by @pleonex in https://github.com/SceneGate/Yarhl/pull/203\n- **FileSystem**\n  - ✨ Implement node renaming by @pleonex in https://github.com/SceneGate/Yarhl/pull/200\n  - ✨ Implement extension methods to transform node collections by @pleonex in https://github.com/SceneGate/Yarhl/pull/201\n  - ✨ ChangeFormat fluent style returning itself by @pleonex in https://github.com/SceneGate/Yarhl/pull/202\n  - ✨ Advanced filter in FromDirectory by @Kaplas80 in https://github.com/SceneGate/Yarhl/pull/166\n  - ✨ Support opening nodes from Windows symlinks by @pleonex in https://github.com/SceneGate/Yarhl/pull/180\n  - 🐛 Set FileOpenMode at NodeFactory.FromFile by @Kaplas80 in https://github.com/SceneGate/Yarhl/pull/165\n  - 🐛 Fix NodeFactory.FromDirectory by @Kaplas80 in https://github.com/SceneGate/Yarhl/pull/188\n- **Media.Text**\n  - 👕 Rename Yarhl.Media to Yarhl.Media.Text by @pleonex in https://github.com/SceneGate/Yarhl/pull/187\n  - ✨ Implement simple base class for custom encoding implementations by @pleonex in https://github.com/SceneGate/Yarhl/pull/181\n  - 🐛 Fix Binary2Po converter not reading from the beginning of the stream by @Kaplas80 in https://github.com/SceneGate/Yarhl/pull/169\n- **Plugins**\n  - ❇️ Re-implementation of plugins API by @pleonex in https://github.com/SceneGate/Yarhl/pull/206\n- **Documentation**\n  - ✨📚 New documentation website and project name re-meaning by @pleonex in https://github.com/SceneGate/Yarhl/pull/192\n  - 🐛 Fix &quot;Yarhl in a nutshell&quot; link by @Timo654 in https://github.com/SceneGate/Yarhl/pull/182\n  - 🐛 Fixed a small error in the Docs by @priverop in https://github.com/SceneGate/Yarhl/pull/184\n- **Build system**\n  - ✨ Annotate API reference types for nullable awareness by @pleonex in https://github.com/SceneGate/Yarhl/pull/176\n  - 🔥 Deprecate .NET Framework by @pleonex in https://github.com/SceneGate/Yarhl/pull/178\n  - ✨ Support .NET 8.0 by @pleonex in https://github.com/SceneGate/Yarhl/pull/198\n  - ✨ Update build system to build and test for .NET 6 by @pleonex in https://github.com/SceneGate/Yarhl/pull/174\n  - ✨ New build system and warning clean-up by @pleonex in https://github.com/SceneGate/Yarhl/pull/197\n  - ⬆️ Bump build system and use Cake v2.1 by @pleonex in https://github.com/SceneGate/Yarhl/pull/179\n  - ⬆️ Migrate to Cake 3.0 and latest .NET SDK by @pleonex in https://github.com/SceneGate/Yarhl/pull/190\n  - ⬆️ Update dependencies and fix code coverage by @pleonex in https://github.com/SceneGate/Yarhl/pull/171\n  - 🔧 Update build system for Ubuntu 20.04 by @pleonex in https://github.com/SceneGate/Yarhl/pull/167\n  - 🔧 Disable auto-comment on release by @pleonex in https://github.com/SceneGate/Yarhl/pull/160\n\n**Full Changelog**: https://github.com/SceneGate/Yarhl/compare/v3.1.0...v4.0.0",
  "repository": "",
  "verbatimVersion": "4.0.0",
  "version": "4.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#dependencygroup/net6.0/yarhl",
          "@type": "PackageDependency",
          "id": "Yarhl",
          "range": "[4.0.0, )"
        }
      ],
      "targetFramework": "net6.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#dependencygroup/net8.0/yarhl",
          "@type": "PackageDependency",
          "id": "Yarhl",
          "range": "[4.0.0, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#Yarhl.Plugins.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2945,
      "fullName": "Yarhl.Plugins.nuspec",
      "length": 8718,
      "name": "Yarhl.Plugins.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#lib/net6.0/Yarhl.Plugins.dll",
      "@type": "PackageEntry",
      "compressedLength": 17522,
      "fullName": "lib/net6.0/Yarhl.Plugins.dll",
      "length": 28160,
      "name": "Yarhl.Plugins.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#lib/net6.0/Yarhl.Plugins.xml",
      "@type": "PackageEntry",
      "compressedLength": 1972,
      "fullName": "lib/net6.0/Yarhl.Plugins.xml",
      "length": 14300,
      "name": "Yarhl.Plugins.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#lib/net8.0/Yarhl.Plugins.dll",
      "@type": "PackageEntry",
      "compressedLength": 17476,
      "fullName": "lib/net8.0/Yarhl.Plugins.dll",
      "length": 27648,
      "name": "Yarhl.Plugins.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#lib/net8.0/Yarhl.Plugins.xml",
      "@type": "PackageEntry",
      "compressedLength": 1972,
      "fullName": "lib/net8.0/Yarhl.Plugins.xml",
      "length": 14300,
      "name": "Yarhl.Plugins.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 10532,
      "fullName": "icon.png",
      "length": 10527,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 1635,
      "fullName": "README.md",
      "length": 3876,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.31.09.30.24/yarhl.plugins.4.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11512,
      "fullName": ".signature.p7s",
      "length": 11512,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "binary",
    "encoding",
    "text",
    "translation",
    "localization",
    "reverse-engineering"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}