{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.21.45.30/schedulewidget.2.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "James Still,Dajo Hein,Kurt Mang",
  "catalog:commitId": "bd83d076-d4c8-4330-b200-58c773bd04c3",
  "catalog:commitTimeStamp": "2018-11-19T21:45:30.41953Z",
  "created": "2013-03-01T21:49:03.393Z",
  "description": "ScheduleWidget handles recurring events for calendars",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.21.45.30/schedulewidget.2.2.0.json#frameworkassemblygroup/.netframework4.5",
    "assembly": "System",
    "targetFramework": ".NETFramework4.5"
  },
  "id": "ScheduleWidget",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-19T21:45:24.263Z",
  "licenseUrl": "http://www.opensource.org/licenses/mit-license.php",
  "listed": true,
  "packageHash": "Hzhbur8yO5QlIQuwthfZhAJDr0L1PW22gDQv/t35ymUdnr6FjQwX8WNwKs2uo4mDC8DxCD9Ji4XUevAv3AQoXw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 38291,
  "projectUrl": "http://www.squarewidget.com/schedulewidget",
  "published": "2013-03-01T21:49:03.393Z",
  "releaseNotes": "Changes from v2.1:\n\nDajo Hein (https://github.com/dajohein) contributed recurring events for every nn weeks. To support weekly events (e.g., recur every 2 weeks on a Mon) an Event class now has the nullable DateTime property FirstDateTime. \n\nModified Schedule Occurrences method to default to the FirstDateTime date as a start date in the date range. If FirstDateTime is null then it uses the StartDateTime passed into the method.\n\nKurt Mang (https://github.com/shakinghand) contributed recurring quarterly events.\n\nJames Still added yearly events merely for the sake of completeness. :)\n\nFor sample usage see project site or unit tests at github (https://github.com/jamesstill/ScheduleWidget). Unit tests use NUnit 2.6.2. If you use TestDriven.NET then you'll have to upgrade to v.3.4 to run the unit tests. Otherwise you can always use NUnit normally.",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.2.0",
  "version": "2.2.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.21.45.30/schedulewidget.2.2.0.json#ScheduleWidget.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 857,
      "fullName": "ScheduleWidget.nuspec",
      "length": 1806,
      "name": "ScheduleWidget.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.21.45.30/schedulewidget.2.2.0.json#lib/NET45/ScheduleWidget.dll",
      "@type": "PackageEntry",
      "compressedLength": 10333,
      "fullName": "lib/NET45/ScheduleWidget.dll",
      "length": 24576,
      "name": "ScheduleWidget.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.21.45.30/schedulewidget.2.2.0.json#lib/NET45/ScheduleWidget.pdb",
      "@type": "PackageEntry",
      "compressedLength": 14856,
      "fullName": "lib/NET45/ScheduleWidget.pdb",
      "length": 85504,
      "name": "ScheduleWidget.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.21.45.30/schedulewidget.2.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    ".net45",
    "schedule",
    "recurring",
    "events",
    "calendars"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}