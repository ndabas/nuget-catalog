{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Attila Tamas Zimler",
  "catalog:commitId": "92753ed7-1ee6-4c95-a34c-dff92fd4e6cd",
  "catalog:commitTimeStamp": "2016-11-12T22:50:16.9601361Z",
  "copyright": "Copyright 2015",
  "created": "2016-11-12T22:50:01.45Z",
  "description": "Base library for MVVM architecture.",
  "id": "ATZ.MVVM",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.githubusercontent.com/atzimler/MVVM/master/LICENSE.txt",
  "listed": true,
  "packageHash": "KF4e4I9M//JsMS3cOe0XjJbnlomdYkrZXiN3e4E3MhZHTYPZXmCnRO+MuAHRLkdhQkbFOmfalmHC8B5mATNMGw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20012,
  "projectUrl": "https://github.com/atzimler/MVVM",
  "published": "2016-11-12T22:50:01.45Z",
  "releaseNotes": "3.1.0:\n- Added CollectionViewModelToModelConnector.Add(IView<TModel>).\n- Corrected assembly information that was either missing or otherwise incorrect (or in the case of my name,\n  could cause some problems on some systems for somebody).\n      \n3.0.0:\n- Support for multiple class hierarchies through interfaces. The hierarchy of the Models now can be mirrored\n  by the ViewModels and the Views without having problem with the single inheritance restriction of the\n  language.\n      \n2.2.1:\n- Further relaxing the requirements of the TView for CollectionViewToViewModelConnector, because specifying\n  UIElement did not allow to use IView<TViewModel> as TView. The fact that it should be a UIElement\n  was not used in the implementation of the class.\n      \n2.2.0:\n- Relaxing requirement of the View in CollectionViewToViewModelConnector to be required to have new().\n  This allows the usage of IView<TViewModel> as TView in case we don't want to specify it more exactly.\n  Of course in this case when the actual type cannot be resolved throw the DependencyResolver, it will fail\n  when have no new(), but the alternative in these failing resolution cases could be only to return null,\n  which has a risk of NullReferenceException. The previous safety action, which was to create a new TView\n  in case of failing resolution is still working when the type is exactly specified and has parameterless\n  constructor.\n      \n2.1.0:\n- Initial NuGet Packaging.",
  "requireLicenseAcceptance": true,
  "title": "ATZ.MVVM",
  "verbatimVersion": "3.1.0.17585",
  "version": "3.1.0.17585",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#dependencygroup/atz.reflection",
          "@type": "PackageDependency",
          "id": "ATZ.Reflection",
          "range": "[1.0.0, 2.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#dependencygroup/atz.dependencyinjection",
          "@type": "PackageDependency",
          "id": "ATZ.DependencyInjection",
          "range": "[1.2.0, 2.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#dependencygroup/atz.dependencyinjection.system",
          "@type": "PackageDependency",
          "id": "ATZ.DependencyInjection.System",
          "range": "[1.2.0, 2.0.0)"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#ATZ.MVVM.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1147,
      "fullName": "ATZ.MVVM.nuspec",
      "length": 2464,
      "name": "ATZ.MVVM.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#lib/net452/ATZ.MVVM.dll",
      "@type": "PackageEntry",
      "compressedLength": 1482,
      "fullName": "lib/net452/ATZ.MVVM.dll",
      "length": 4096,
      "name": "ATZ.MVVM.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#lib/net452/ATZ.MVVM.ViewModels.Utility.dll",
      "@type": "PackageEntry",
      "compressedLength": 6548,
      "fullName": "lib/net452/ATZ.MVVM.ViewModels.Utility.dll",
      "length": 15360,
      "name": "ATZ.MVVM.ViewModels.Utility.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#lib/net452/ATZ.MVVM.ViewModels.Utility.XML",
      "@type": "PackageEntry",
      "compressedLength": 2922,
      "fullName": "lib/net452/ATZ.MVVM.ViewModels.Utility.XML",
      "length": 22908,
      "name": "ATZ.MVVM.ViewModels.Utility.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#lib/net452/ATZ.MVVM.Views.Utility.dll",
      "@type": "PackageEntry",
      "compressedLength": 4230,
      "fullName": "lib/net452/ATZ.MVVM.Views.Utility.dll",
      "length": 10240,
      "name": "ATZ.MVVM.Views.Utility.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.22.50.16/atz.mvvm.3.1.0.17585.json#lib/net452/ATZ.MVVM.Views.Utility.XML",
      "@type": "PackageEntry",
      "compressedLength": 1464,
      "fullName": "lib/net452/ATZ.MVVM.Views.Utility.XML",
      "length": 11335,
      "name": "ATZ.MVVM.Views.Utility.XML"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}