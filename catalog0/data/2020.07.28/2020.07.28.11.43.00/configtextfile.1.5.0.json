{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael McBride",
  "catalog:commitId": "f604c424-b523-44b7-a16d-447e51fa3c43",
  "catalog:commitTimeStamp": "2020-07-28T11:43:00.3233693Z",
  "created": "2020-07-28T11:40:21.177Z",
  "description": "A .NET library which allows you to read and write plain-text configuration files",
  "iconFile": "icon.png",
  "id": "ConfigTextFile",
  "isPrerelease": false,
  "lastEdited": "2020-07-28T11:42:55.53Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "emZusbqFddpFTf9ww7uCz5p729Rpq9iOv5tNNYC1VFLNk/e5irVhB2JOxnRWsMvs7wX10ibpLtax5S3nkiCemQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 28381,
  "projectUrl": "https://github.com/Michmcb/ConfigTextFile",
  "published": "2020-07-28T11:40:21.177Z",
  "releaseNotes": "- When trying to get a string value by using array indexers e.g. ConfigSectionElement[\"key\"], this now throws an exception rather than returning null, if the key does not resolve to a ConfigStringElement. Prefer array indexers if you want exceptions, prefer methods if you don't.\n- Setting ConfigInvalidElement.Value throws an exception. Use ConfigInvalidElement.InvalidValue to set the default value which gets returned (Which is empty string by default)",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.5.0",
  "version": "1.5.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json#ConfigTextFile.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 699,
      "fullName": "ConfigTextFile.nuspec",
      "length": 1382,
      "name": "ConfigTextFile.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json#lib/netstandard2.0/ConfigTextFile.dll",
      "@type": "PackageEntry",
      "compressedLength": 13071,
      "fullName": "lib/netstandard2.0/ConfigTextFile.dll",
      "length": 31744,
      "name": "ConfigTextFile.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 637,
      "fullName": "LICENSE",
      "length": 1085,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 2516,
      "fullName": "icon.png",
      "length": 2672,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.28.11.43.00/configtextfile.1.5.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "config",
    "text",
    "fluent"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}