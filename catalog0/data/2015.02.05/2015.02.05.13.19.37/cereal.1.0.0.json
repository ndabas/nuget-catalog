{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.13.19.37/cereal.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "USCiLab",
  "catalog:commitId": "ecf4c5a3-770c-4cc2-b45e-cfc4a3f9e6cb",
  "catalog:commitTimeStamp": "2015-02-05T13:19:37.2504933Z",
  "copyright": "Copyright 2014",
  "created": "2014-06-06T20:05:23.82Z",
  "description": "cereal is a header-only C++11 serialization library. cereal takes arbitrary data types and reversibly turns them into different representations, such as compact binary encodings, XML, or JSON. cereal was designed to be fast, light-weight, and easy to extend - it has no external dependencies and can be easily bundled with other code or used standalone.",
  "iconUrl": "http://uscilab.github.io/cereal/assets/img/cerealboxside.png",
  "id": "cereal",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/BSD-3-Clause",
  "packageHash": "2D4x8asM/5TQ9KhvDOOWLnjbBrk4orT4QhldszzJPkznLYgVPIorNxuYkuIWauCSbCKm/8ohAt+7iyyj2QouqQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 178357,
  "projectUrl": "http://uscilab.github.io/cereal/",
  "published": "2014-06-06T20:05:23.837Z",
  "releaseNotes": "This is a major feature release for cereal. Notable changes include:\n\n- Support for Visual Studio 2013 (#11)\n- Support for out of order loading in text (XML/JSON) archives (#13, #14)\n- Full API compatibility with Boost serialization (#8)\n- Support for class versioning (#8)\n- New API for types with no default constructor (#43, #44, #59)\n- New minimal serialization functions (#23)\n- Compliance with the compiler flags -Wextra, -Wshadow, and -pedantic (#17)\n- Fixes related to libc++ compliance, especially on OSX (#49, #51, #72)\n- Support for std::enable_shared_from_this (cereal hall of fame for most annoying standard library feature to support) (#47)\n- Miscellaneous bug fixes, documentation updates, small improvements, and code refactoring\n\nSee the closed issues for more information.\n\ncereal is not designed to be inherently backwards compatible across significant releases. There are a few changes in this release that may break some existing use cases:\n\n- The constructors for XML and JSON archives accept options in a different manner (#64)\n- Types with no default constructor have a new API and new names for required functions\n- Some built in types may have had their serialization format changed, especially in regards to text archives using name-value-pairs.\n- Enums use the new minimal serialization (#23)\n- JSON archives now serialize large types in base 10 instead of base 64 (#72)\n\nhttps://github.com/USCiLab/cereal/releases/tag/v1.0.0",
  "requireLicenseAcceptance": false,
  "summary": "A C++11 library for serialization",
  "title": "cereal",
  "version": "1.0.0",
  "tags": [
    "serialization",
    "serialize",
    "xml",
    "json",
    "native",
    "nativepackage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}