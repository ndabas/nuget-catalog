{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rasmus Mikkelsen",
  "catalog:commitId": "92db4277-dc97-46da-844c-e35186531205",
  "catalog:commitTimeStamp": "2018-11-28T07:06:10.8485572Z",
  "copyright": "Copyright (c) Rasmus Mikkelsen 2015 - 2017",
  "created": "2017-10-21T17:56:41.03Z",
  "description": "RabbitMQ integration for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/eventflow/EventFlow/develop/icon-128.png",
  "id": "EventFlow.RabbitMQ",
  "isPrerelease": false,
  "lastEdited": "2018-11-28T07:06:09.27Z",
  "licenseUrl": "https://raw.githubusercontent.com/eventflow/EventFlow/develop/LICENSE",
  "listed": true,
  "packageHash": "/9ntArBDuaMvSAs6AXNFYo/eKUYc1CjGaxEo1gGuZdcpdwkn6kSM3XJCwpgsMyg+/4fV4VjNT9W6/X+iA4ccPg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 40086,
  "projectUrl": "http://docs.geteventflow.net/",
  "published": "2017-10-21T17:56:41.03Z",
  "releaseNotes": "New: While EventFlow tries to limit the about of painful API changes, the\nintroduction of execution/command results are considered a necessary step\ntowards as better API.\nCommands and command handlers have been updated to support execution\nresults. Execution results is meant to be an alternative to throwing domain\nexceptions to do application flow. In short, before you were required to\nthrow an exception if you wanted to abort execution and \"return\" a failure\nmessage.\nThe introduction of execution results changes this, as it allows\nreturning a failed result that is passed all the way back to the command\npublisher. Execution results are generic and can thus contain e.g. any\nvalidation results that a UI might need. The `ICommandBus.PublishAsync`\nsignature has changed to reflect this.\nfrom\n```csharp\nTask<ISourceId> PublishAsync<TAggregate, TIdentity, TSourceIdentity>(\nICommand<TAggregate, TIdentity, TSourceIdentity> command)\nwhere TAggregate : IAggregateRoot<TIdentity>\nwhere TIdentity : IIdentity\nwhere TSourceIdentity : ISourceId\n```\nto\n```csharp\nTask<TExecutionResult> PublishAsync<TAggregate, TIdentity, TExecutionResult>(\nICommand<TAggregate, TIdentity, TExecutionResult> command,\nCancellationToken cancellationToken)\nwhere TAggregate : IAggregateRoot<TIdentity>\nwhere TIdentity : IIdentity\nwhere TExecutionResult : IExecutionResult\n```\nCommand handler signature has changed from\n```csharp\nTask ExecuteAsync(\nTAggregate aggregate,\nTCommand command,\nCancellationToken cancellationToken);\n```\nto\n```csharp\nTask<TExecutionResult> ExecuteCommandAsync(\nTAggregate aggregate,\nTCommand command,\nCancellationToken cancellationToken)\n```\nMigrating to the new structure should be seamless if your current code base\ninherits its command handlers from the provided `CommandHandler<,,>` base\nclass.\nBreaking: Source IDs on commands have been reworked to \"make room\" for\nexecution results on commands. The generic parameter from `ICommand<,,>`\nand `ICommandHandler<,,,>` has been removed in favor of the new execution\nresults. `ICommand.SourceId` is now of type `ISourceId` instead of using\nthe generic type and the `ICommandBus.PublishAsync` no longer returns\n`Task<ISourceId>`\nTo get code that behaves similar to the previous version, simply take the\n`ISourceId` from the command, i.e., instead of this\n```csharp\nvar sourceId = await commandBus.PublishAsync(command);\n```\nwrite this\n```csharp\nawait commandBus.PublishAsync(command);\nvar sourceId = command.SourceId;\n```\n(`CancellationToken` and `.ConfigureAwait(false)` omitted fromt he above)\nBreaking: Upgraded NuGet dependency on `RabbitMQ.Client` from `>= 4.1.3`\nto `>= 5.0.1`",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.RabbitMQ",
  "verbatimVersion": "0.50.3124",
  "version": "0.50.3124",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netframework4.5.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netframework4.5.1/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.50.3124, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netframework4.5.1/rabbitmq.client",
          "@type": "PackageDependency",
          "id": "RabbitMQ.Client",
          "range": "[5.0.1, )"
        }
      ],
      "targetFramework": ".NETFramework4.5.1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netstandard1.6",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netstandard1.6/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.50.3124, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netstandard1.6/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#dependencygroup/.netstandard1.6/rabbitmq.client",
          "@type": "PackageDependency",
          "id": "RabbitMQ.Client",
          "range": "[5.0.1, )"
        }
      ],
      "targetFramework": ".NETStandard1.6"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#EventFlow.RabbitMQ.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1634,
      "fullName": "EventFlow.RabbitMQ.nuspec",
      "length": 4358,
      "name": "EventFlow.RabbitMQ.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#lib/net451/EventFlow.RabbitMQ.dll",
      "@type": "PackageEntry",
      "compressedLength": 13496,
      "fullName": "lib/net451/EventFlow.RabbitMQ.dll",
      "length": 25088,
      "name": "EventFlow.RabbitMQ.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#lib/netstandard1.6/EventFlow.RabbitMQ.dll",
      "@type": "PackageEntry",
      "compressedLength": 13587,
      "fullName": "lib/netstandard1.6/EventFlow.RabbitMQ.dll",
      "length": 25600,
      "name": "EventFlow.RabbitMQ.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.28.07.06.10/eventflow.rabbitmq.0.50.3124.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourcing",
    "RabbitMQ"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}