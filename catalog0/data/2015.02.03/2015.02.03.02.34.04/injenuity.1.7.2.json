{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.02.34.04/injenuity.1.7.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "thoersch",
  "catalog:commitId": "b5377216-b525-4122-b7fb-2d5ff0735ed3",
  "catalog:commitTimeStamp": "2015-02-03T02:34:04.9893801Z",
  "copyright": "2010-2013 Tyler Hoersch",
  "created": "2013-02-14T15:38:15.1Z",
  "description": "INJenuity is a framework written in and for Csharp assemblies with the purpose of solving dependency injection, object creation / lifetime management, and writing tedious boiler-plate code. The software engineer and the framework work together by attribute declaration, programmatically-defined configurations, and smart assembly scanning. Through each of these techniques, INJenuity will create code at runtime and inject the created code to the engineer's running assembly.",
  "id": "INJenuity",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "pAw4ZFh58gGbyEWENdCKyDLsc7huX9xyJ32NbNBxd75+XP2Azm/CfcnfK3KvUW1BhqIdQKnP6Aty+UnBcT5v7g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24099,
  "projectUrl": "http://tylerhoersch.com/injenuity",
  "published": "2013-02-14T15:38:15.1Z",
  "requireLicenseAcceptance": false,
  "title": "INJenuity Lightweight Dependency Injection",
  "version": "1.7.2",
  "tags": [
    "Dependency",
    "Injection",
    "Light",
    "weight",
    "POCO",
    "IOC"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}