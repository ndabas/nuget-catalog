{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.19.35.09/gw2.net.0.9.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GW2.NET Coding Team",
  "catalog:commitId": "a7144e0c-8272-400c-99d7-7c831c588de7",
  "catalog:commitTimeStamp": "2015-02-05T19:35:09.6592789Z",
  "copyright": "2013 - 2014",
  "created": "2014-07-06T13:49:16.18Z",
  "description": "A .NET implementation of the Guild Wars 2 public API.\nThis implementation aims to provide .NET developers with an easy to use, well documented library and tools to use in their own applications which rely on data from the Guild Wars 2 API.\nWe want to provider users with an entry point to the api, that does not require the user to take every api node and piece the data back himself.",
  "id": "GW2.NET",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://gw2dotnet.codeplex.com/license",
  "packageHash": "w2Z3JKH+2YkL8ByJml8XkH4Za0TH5zIEw/XN3BzA9akTlCBUFkSYZMWwGiYaqpqAPrcMr38MlDZ2SLTxZp4ORw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 116157,
  "projectUrl": "https://gw2dotnet.codeplex.com/",
  "published": "2014-07-06T13:49:16.18Z",
  "releaseNotes": "Changelog:\n- Removing redundant property 'Ingredient.Language'\n- Removing 'IEquatable' implementation from 'ColorModel'\n- Removing the association between 'ColorModel' and 'ColorPalette'\n- Converting type of 'ColorPalette.Language' to 'string'\n- Removing 'IEquatable' implementation from 'Location'\n- Removing the association between 'Location' and 'DynamicEventDetails'\n- Converting type of 'DynamicEventDetails.Language' to 'string'\n- Fixing a critical bug in 'MapRequest' that prevents it from forwarding 'map_id' parameters\n- Removing 'IComparable' implementation from 'ColorPalette'\n- Removing 'IComparable' implementation from 'Continent'\n- Removing 'IComparable' implementation from 'DynamicEvent'\n- Removing 'IComparable' implementation from 'DynamicEventDetails'\n- Removing 'IComparable' implementation from 'DynamicEventName'\n- Adding 'IEquatable' implementation for 'DynamicEventRotation'\n- Removing 'IComparable' implementation from 'Asset'\n- Removing the association between 'Emblem' and 'Guild'\n- Removing 'IEquatable' implementation from 'Emblem'\n- Removing 'IComparable' implementation from 'Guild'\n- Implementing the associations between 'Emblem' and 'ColorPalette'\n- Removing 'IComparable' implementation from 'Item'\n- Improving implementation of 'ItemAttribute'\n- Removing overrides of 'JsonObject.ToString()'\n- Renaming 'JsonObject' to 'ServiceContract'\n- Renaming 'JsonDictionary' to 'ServiceContractDictionary'\n- Renaming 'JsonList' to 'ServiceContractList'\n- Removing 'IComparable' implementation from 'Map'\n- Sealing class 'TypeDiscriminatorAttribute'\n- Sealing class 'ErrorResult'\n- Implementing the association between 'InfusionSlot' and 'Item'\n- Removing 'InfusionSlot.Id'\n- Removing class 'Nourishment'\n- Implementing the associations between 'IUpgradable' and 'Item'\n- Renaming skins namespace 'Backs' to 'Backpacks'\n- Changing 'IItemService' to return collections of 'Item' instead of 'int'\n- Changing 'IItemDetailsService' to accept instances of 'Item' instead of 'int'\n- Merging namespaces 'Items' and 'Items.Details'\n- Changing 'IRecipeService' to return collections of 'Recipe' instead of 'int'\n- Changing 'IRecipeDetailsService' to accept instances of 'Recipe' instead of 'int'\n- Merging namespaces 'Recipes' and 'Recipes.Details'\n- Merging namespaces 'Skins' and 'Skins.Details'\n- Changing 'ISkinService' to return collections of 'Skin' instead of 'int'\n- Changing 'ISkinDetailsService' to accept instances of 'Skin' instead of 'int'\n- Moving guild details service to namespace 'Guilds'\n- Changing 'ItemDetailsService' to replace empty descriptions with 'null'\n- Adding a property 'Build.Timestamp' for change tracking\n- Merging namespaces 'Maps' and 'Maps.Floors'\n- Removing 'IComparable' implementation from 'RenownTask'\n- Merging namespaces 'Maps.Names' and 'Maps'\n- Removing 'IComparable' implementation from 'MapName'\n- Merging namespaces 'DynamicEvents' and 'DynamicEvents.Names'\n- Merging namespaces 'DynamicEvents' and 'DynamicEvents.Rotations'\n- Merging namespaces 'Matches' and 'Matches.Details'\n- Merging namespaces 'Continents' and 'Maps'\n- Removing 'IComparable' implementation from 'Region'\n- Removing 'IComparable' implementation from 'Sector'\n- Removing 'IComparable' implementation from 'Subregion'\n- Removing 'IComparable' implementation from 'Recipe'\n- Removing 'IComparable' implementation from 'Skin'\n- Repurposing 'IItemService' to be an aggregate interface for 'IItemDiscoveryService' and 'IItemDetailsService'\n- Repurposing 'IRecipeService' to be an aggregate interface for 'IRecipeDiscoveryService' and 'IRecipeDetailsService'\n- Repurposing 'ISkinService' to be an aggregate interface for 'ISkinDiscoveryService' and 'ISkinDetailsService'\n- Changing 'ItemCollection' to derive from 'ServiceContractList'\n- Changing 'RecipeCollection' to derive from 'ServiceContractList'\n- Changing 'SkinCollection' to derive from 'ServiceContractList'\n- Removing 'IEquatable' implementation from 'ColorCollectionResult'\n- Implementing the association between 'Objective' and 'ObjectiveName'\n- Merging 'MatchService' and 'ObjectiveNameService'\n- Converting type of 'ObjectiveName.Language' to 'string'\n- Converting type of 'DynamicEventName.Language' to 'string'\n- Converting type of 'Floor.Language' to 'string'\n- Converting type of 'Map.Language' to 'string'\n- Converting type of 'MapName.Language' to 'string'\n- Converting type of 'Skin.Language' to 'string'\n- Converting type of 'World.Name' to 'string'\n- Implementing the association between 'CraftingRecipeUnlocker' and 'Recipe'\n- Implementing the association between 'DyeUnlocker' and 'ColorPalette'\n- Implementing the association between 'DynamicEvent' and 'Map'\n- Implementing the association between 'Subregion' and 'Map'\n- Implementing the association between 'Map' and 'Continent'\n- Implementing the association between 'Map' and 'Region'\n- Implementing the association between 'Floor' and 'Continent'\n- Marking events.json as [Obsolete]\n- Repurposing 'IDynamicEventService' to be an aggregate interface\n- Implementing the association between 'DynamicEventRotation' and 'DynamicEvent'",
  "requireLicenseAcceptance": true,
  "summary": "This software is licensed under the GNU General Public License version 2 (GPLv2). For a complete version of the license follow the link.",
  "title": "GW2.NET",
  "version": "0.9.6",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.19.35.09/gw2.net.0.9.6.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.19.35.09/gw2.net.0.9.6.json#dependencygroup/.netframework4.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[6.0.1, )"
        }
      ],
      "targetFramework": ".NETFramework4.0"
    }
  ],
  "tags": [
    "GW2",
    ".NET"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}