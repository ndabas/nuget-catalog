{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.03.31.09/persistentcache.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "theouteredge",
  "catalog:commitId": "79cdcfdc-3714-43fe-9807-e86abf1510dd",
  "catalog:commitTimeStamp": "2015-02-03T03:31:09.8886247Z",
  "copyright": "theouteredge",
  "created": "2013-02-24T19:29:42.63Z",
  "description": "A C# library which gives you a Persistent Cache, if we run out of memory we will store the expired and evicted cache items to disk. Think Membase but as a simple C# project, which you can include in your project.",
  "id": "PersistentCache",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "e1+8EncTB9ubHg4y1AkZ7h+vOmm/M4xUeawm9Ixlxg3BcoQjnyWhdrE7/L72xRBcyHO4SarCNGet3r74mgMs0Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 7120,
  "projectUrl": "https://github.com/theouteredge/PersistantCache",
  "published": "2013-02-24T19:29:42.63Z",
  "requireLicenseAcceptance": false,
  "summary": "Persistent Cache Library",
  "title": "",
  "version": "0.1.0",
  "tags": [
    "Persistent",
    "Cache"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}