{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.07.56.14/aspose.pdf.9.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "80cdf1da-feed-4f3c-bee3-a6fbdf954800",
  "catalog:commitTimeStamp": "2015-02-06T07:56:14.9471371Z",
  "copyright": "Â©Aspose 2002-2013. All Rights Reserved.",
  "created": "2014-09-04T17:54:27.047Z",
  "description": "Aspose.Pdf for .NET is a PDF document creation and manipulation component that enables your .NET applications to read, write and manipulate existing PDF documents without using Adobe Acrobat. It also allows you to create forms and manage form fields embedded in a PDF document. This component is written in managed C# and it allows developers to add PDF creation and manipulation functionality to their Microsoft .NET applications (WinForms, ASP.NET and .NET Compact Framework).\n        Aspose.Pdf for .NET is affordable and offers an incredible wealth of features including PDF compression options; table creation and manipulation; support for graph objects; extensive hyperlink functionality; extended security controls; custom font handling; integration with data sources; add or remove bookmarks; create table of contents; add, update, delete attachments and annotations; import or export PDF form data; add, replace or remove text and images; split, concatenate, extract or inset pages; transform pages to image; print PDF documents and much more.",
  "iconUrl": "http://www.aspose.com/blogs/wp-content/uploads/2013/06/aspose-Pdf-for-net_100.png",
  "id": "Aspose.Pdf",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "packageHash": "5i1jAafG7axOVQdtWIBxHWoBph56v0fuldmyQREnxsgs+7rxIYH3FTil2E62AiM8adkIEPzVgGyyJsPIBG38ug==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30317771,
  "projectUrl": "http://www.aspose.com/categories/.net-components/aspose.pdf-for-.net/default.aspx",
  "published": "2014-09-04T17:54:27.047Z",
  "releaseNotes": "This release introduces the features, enhancements and bug fixes as detailed below:\n\nNew Features\n\nPDFNEWNET-36115 Change page orientation from Portrait to landscape\nPDFNEWNET-36340 Create single HTML file output with embedded resoruces\nPDFNEWNET-36608 PDF to HTML - embed CSS inside HTML\nPDFNEWNET-37337 Retrieve RadioHoriz property for RadioButton field\n\nEnhancements\n\nPDFNEWNET-29860 After replacing the text, the contents of the PDF should be re-arranged\nPDFNEWNET-34143 Resultant DOC file generated from PDF is very large in size\nPDFNEWNET-36625 Missing properties of Graph object in Aspose.Pdf.Drawing.Graph\nPDFNEWNET-36626 Aspose.Pdf.Drawing.Graph Properties\nPDFNEWNET-36629 Missing properties in GraphInfo class in new Generator\nPDFNEWNET-36884 Increase performance while trimming whitespace from PDF\nPDFNEWNET-37335 Scale PDF contents of whole PDF\n\nExceptions\n\nPDFNEWNET-34202 XPS to PDF Convertion Issue\nPDFNEWNET-34488 Exception during PDF to Image conversion\nPDFNEWNET-36172 Loading a large PDF file throwing StackOverflowException\nPDFNEWNET-36557 Exception while extracting text from PDF file\nPDFNEWNET-37156 StackOverflowException when using IsContainSignature() method\nPDFNEWNET-37250 HTML to PDF - NullReference Exception while converting HTML to PDF\nPDFNEWNET-37299 NullPointerException - When converting PDF files to JPG\n\nBugs\n\nPDFNEWNET-29077 Text is not wraping to next lines when line becomes too long when replacing text\nPDFNEWNET-29224 Text not rearranged after ReplaceText\nPDFNEWNET-32600 Issue in converting pdf to tiff (v6.5)\nPDFNEWNET-33173 Convert HTML to PDF issue\nPDFNEWNET-34079 Text is appearing in top of table borders when converting PDF file to DOC\nPDFNEWNET-34400 Parentheses are inverted (Hebrew PDF to HTML conversion)\nPDFNEWNET-34675 Pdf to Word conversion: Top margin from table border is gone\nPDFNEWNET-35110 Difference in rendering XLS-FO to Pdf in 3.6.0 and 7.8.0\nPDFNEWNET-35744 Html to Pdf - Issue with nested blockquotes\nPDFNEWNET-35777 HTML to PDF: CSS white-space:nowrap property is not being honored\nPDFNEWNET-35884 Field values are lost when converting XFA form to Standard form\nPDFNEWNET-35910 HTML to PDF - Some tags are not being recognized\nPDFNEWNET-36071 XSL-FO to PDF - Footnotes are not appearing correctly\nPDFNEWNET-36314 XSLFO to PDF - Image does not appear in resultant file\nPDFNEWNET-36461 PDF table rows overlap each other if table goes over a page\nPDFNEWNET-36504 Hyperlinks Creation Issue over TextFragment\nPDFNEWNET-36522 TextReplace - subsequent TextFragments are not auto adjusting their position\nPDFNEWNET-36564 Links are not detected if it is in table or header in a PDF file\nPDFNEWNET-36697 PNG converted from PDF is being cropped\nPDFNEWNET-36784 PDF to PNG - Gray background appearing behind clock in PDF\nPDFNEWNET-36825 ParseToPdf(..) method should support multibyte characters\nPDFNEWNET-36827 HTML to PDF conversion doesn't honor strike out text\nPDFNEWNET-36835 Adding a watermark takes too much time\nPDFNEWNET-36913 PDF to TIFF: First page is being rendered as black square\nPDFNEWNET-37021 Memory leak when using Aspose.PDF for .NET on SharePoint 2010\nPDFNEWNET-37044 PdfViewer - Table is printing black\nPDFNEWNET-37065 RTL text is not appearing properly when setting IsHtmlTagSupported as True\nPDFNEWNET-37074 Large files creation issue\nPDFNEWNET-37076 Aspose.Pdf for .NET dlls (2.0, 3.5,4.0) does not work with Projects with .Net Framework 3.5 as target framework\nPDFNEWNET-37107 multiline Read-Only TextBoxField is not appearing properly\nPDFNEWNET-37124 Resultant file is corrupted/blank when performing font substitution\nPDFNEWNET-37126 Adding background image to PDF without license implementation results a blank document\nPDFNEWNET-37176 PDF to TIF - resultant image contains large black rectangle\nPDFNEWNET-37192 PDF to TIFF - Icon is appearing as black\nPDFNEWNET-37221 Facades fills form with tiny fonts\nPDFNEWNET-37222 PDF to HTML: font rendering issue\nPDFNEWNET-37241 Value from Aspose.Pdf.Color.FromRgb does not work with a Color property of an annotation\nPDFNEWNET-37271 PDF to PDF/A: Background color of first page turns to dark blue\nPDFNEWNET-37274 Incorrect bookmarks is being returned\nPDFNEWNET-37298 PDF to PDFA1b conversion loses the text\nPDFNEWNET-37300 HTML to PDF - Text background is not appearing properly\nPDFNEWNET-37323 Page level PageInfo settings are ignored if it is set at document level\nPDFNEWNET-37325 Compressing the PDF file removes images from file\nPDFNEWNET-37330 Hyperlinks breaking in stamped PDF\nPDFNEWNET-37339 Image is not being filled in PDF form\nPDFNEWNET-37345 Svg font is not properly embedded\nPDFNEWNET-37356 Issue in paragraph margins in page footer\nPDFNEWNET-37360 Image to PDF - resultant PDF dimensions are not similar to input image\nPDFNEWNET-37366 PDF to Excel - Values are not properly appearing in resultant file\nPDFNEWNET-37369 PDF to JPEG conversion using JpegDevice. UnderlineAnnotation is missing",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Pdf for .NET is an amazing component which provides the feature to create and manipulate PDF documents.",
  "title": "Aspose.Pdf for .NET",
  "version": "9.6.0",
  "tags": [
    "Aspose.Pdf",
    "PDF",
    "XFA",
    "XPS",
    "TIFF",
    "PCL",
    "SVG",
    "HTML",
    "XML",
    "XSL-FO",
    "FDF",
    "XFDF",
    "PDF/A",
    "form",
    "Portfolio",
    "EPUB",
    "PSD",
    "to",
    "XLS",
    "DOC"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}