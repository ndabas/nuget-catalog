{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.04/dotnetbrowser.1.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "6c7ac5ee-9b8e-440b-9bda-f3b0cf41a1c3",
  "catalog:commitTimeStamp": "2018-11-17T10:32:04.6357715Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2016-08-08T11:46:35.197Z",
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-17T10:31:56.21Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "GW2UnxUunDOJwQ+USmb0hAY7rz4E8esg8HmDusY/jlGxiLgzKOnAlF3qmLGbgkUiDm3s9trCv8IqGCN2L1OgQg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52550957,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2016-08-08T11:46:35.197Z",
  "releaseNotes": "DotNetBrowser 1.8 comes with the following features and improvements:\n\nUpgrade to Chromium 51. The major change in this release is upgrading the Chromium engine to version 51.0.2704.106. \nImproved the process of creating a screenshot of the complete web page in the lightweight mode. We have added the OnRedraw event to the DrawingView, and this event resolves the threading issue with OnRepaint event. The OnRedraw event is fired on the main event thread, so the captured image can be obtained in the same thread and there is no need to invoke GetImage() in the main thread. \nAdded possibility to modify upload data: now API allows to access and modify POST/PUT/PATCH upload data before sending it to a web server.\nAdded mouse simulation support. Now it is possible to simulate mouse movement, scroll and clicks even for an off-screen Browser.\nAdded native crash handler: now it is possible to be notified about the native process crash. In previous versions, the dump file was generated silently on native process crash and the component simply stopped functioning. The crash handler gives a possibility for your application to be notified about this. As a result, your application can stop working with the crashed component. \nFixed default file chooser: now the file chooser is capable to recognize acceptable file types. The default implementation of the file chooser in previous versions was not able to recognize acceptable file types and allowed to accept files of any type.\nFixed mouse movement latency. In previous versions you may notice that the component is working slower if a number of mouse events (clicks or movements) are generated. In the new version the number of mouse events will not cause latency in component rendering.\n",
  "requireLicenseAcceptance": true,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser",
  "verbatimVersion": "1.8",
  "version": "1.8.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.04/dotnetbrowser.1.8.0.json#DotNetBrowser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1502,
      "fullName": "DotNetBrowser.nuspec",
      "length": 3393,
      "name": "DotNetBrowser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.04/dotnetbrowser.1.8.0.json#lib/DotNetBrowser.Chromium.dll",
      "@type": "PackageEntry",
      "compressedLength": 51786448,
      "fullName": "lib/DotNetBrowser.Chromium.dll",
      "length": 51889664,
      "name": "DotNetBrowser.Chromium.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.04/dotnetbrowser.1.8.0.json#lib/DotNetBrowser.dll",
      "@type": "PackageEntry",
      "compressedLength": 678948,
      "fullName": "lib/DotNetBrowser.dll",
      "length": 1290752,
      "name": "DotNetBrowser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.04/dotnetbrowser.1.8.0.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 71210,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 562744,
      "name": "DotNetBrowser.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.10.32.04/dotnetbrowser.1.8.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}