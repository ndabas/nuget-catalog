{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.22.28.43/thefluentificator.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Pietro Carta",
  "catalog:commitId": "8b7160b6-c42f-4c90-ad2d-9c9a588f21c6",
  "catalog:commitTimeStamp": "2018-12-10T22:28:43.0127462Z",
  "copyright": "Copyright 2015",
  "created": "2015-11-07T11:43:49.96Z",
  "description": "The Fluentificator allows you to declare object and assign them values in a Fluent way\n\nJust include TheFluentificator namespace in your class\nand you're ready.\n\nWherever you need to create objects, or edit objects, you now have the With extension method, and you can call it in chain.\n\nExample:\n\npublic class Test { \n      String testString {get; set;}\n}\n\nvar test = new Test().With(m => m.testString = \"Awesome\");\n\nNow The Fluentificator allows you to map different objects!\n\nExample: \n\nvar dto = entity.Map<DtoClass>()\n                .With(m => m.Nested = entity.Nested.Map<NestedDto>());\n\n\nMap is created with property with same name and same type.\nNested class has to be mapped separately with the With syntax as shown in the example.\n\nYou can also say TheFluentificator to not map a property with the Attribute [NotMapped]\n\nand that's all.\n\neasy right? :)\n\nI love the chaining fluent construction, and that's why I made this package.\n\nHave fun using it and feel free to email me for every suggestion you may have",
  "id": "TheFluentificator",
  "isPrerelease": false,
  "lastEdited": "2018-12-10T22:28:18.83Z",
  "listed": true,
  "packageHash": "crUkBKLw3aa/RMO/27sjdWRNSGmcmbbMP+vO4mxLgEbooHd1OGpuzgOYrdt+fAy8WSvm+wpKR6jN8YDUXzCSWQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15635,
  "published": "2015-11-07T11:43:49.96Z",
  "releaseNotes": "Just add this reference and then you can use Fluent objects",
  "requireLicenseAcceptance": false,
  "summary": "The Fluentificator allows you to declare object and assign them values in a Fluent way and allows you to make simple maps between entitys and dto",
  "title": "The Fluentificator",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.22.28.43/thefluentificator.1.0.2.json#TheFluentificator.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 859,
      "fullName": "TheFluentificator.nuspec",
      "length": 1827,
      "name": "TheFluentificator.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.22.28.43/thefluentificator.1.0.2.json#lib/net45/TheFluentificator.dll",
      "@type": "PackageEntry",
      "compressedLength": 2184,
      "fullName": "lib/net45/TheFluentificator.dll",
      "length": 5632,
      "name": "TheFluentificator.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.22.28.43/thefluentificator.1.0.2.json#content/Web.config",
      "@type": "PackageEntry",
      "compressedLength": 242,
      "fullName": "content/Web.config",
      "length": 353,
      "name": "Web.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.22.28.43/thefluentificator.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Fluent",
    "Fluentificator"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}