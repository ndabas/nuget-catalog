{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.20.45.28/strilanc.linqtocollections.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Craig Gidney",
  "catalog:commitId": "ad512e17-a635-49f8-8da0-199440b6fe1c",
  "catalog:commitTimeStamp": "2015-02-02T20:45:28.6485059Z",
  "copyright": "Public Domain",
  "created": "2012-12-02T09:23:39.02Z",
  "description": "Implements types and extension methods for transforming IReadOnlyList<T>, IReadOnlyCollection<T>, and IReadOnlyDictionary<K,V> in a functional style.\n\nFor example, the library implements a Select method that ensures the result of 'from e in list select e * e' supports random access.",
  "iconUrl": "http://i.imgur.com/MbBB1.png",
  "id": "Strilanc.LinqToCollections",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "P1AuifXNF5z7J8NcvHzF+/HVRtigF4bMluEjfKNH8HOeXwssUvyuvZQZehJcnIMc2gH9vpjohQNZJDy50FKMDg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20263,
  "projectUrl": "https://github.com/Strilanc/LinqToCollections",
  "published": "2012-12-02T09:23:39.443Z",
  "requireLicenseAcceptance": false,
  "summary": "Types and methods for lazily transforming readonly collections in a functional style.",
  "title": "Linq to Collections",
  "version": "1.0.0",
  "tags": [
    "linq",
    "collection",
    "list",
    "dictionary"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}