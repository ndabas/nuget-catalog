{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Neodynamic",
  "catalog:commitId": "e6194390-d722-4a39-ae31-d46f951fdea3",
  "catalog:commitTimeStamp": "2020-04-03T11:44:50.8478147Z",
  "copyright": "Copyright (c) 2020 - Neodynamic",
  "created": "2020-04-03T11:41:48.77Z",
  "description": "ZPLPrinter Emulator SDK for .NET allows you to Convert, Preview and Render raw ZPL (Zebra Programming Language) commands to well known image and document formats like PNG, JPG, PCX & PDF by writing C# or VB.NET code targeting any .NET Framework, .NET CORE, Legacy ASP.NET MVC & CORE, Xamarin, Mono & Universal Windows Platform (UWP) projects.\n\nConvert ZPL to Images & Docs\n============================\nUse ZPLPrinter Emulator SDK to easily convert ZPL commands to PNG, JPG, PCX & PDF formats by writing simple C# or VB.NET code.\n\nPreview ZPL Commands\n====================\nNeed to test ZPL commands and don't have a real Zebra printer device? No problem! Use ZPLPrinter Emulator SDK to preview ZPL commands without wasting any labels!\n\nHigh Accuracy ZPL Render\n========================\nZPLPrinter Emulator SDK renders ZPL commands generating high quality output by reproducing built-in and resident ZPL fonts for texts and barcodes with high accuracy.\n\nVirtual ZPL Printer \n===================\nZPLPrinter Emulator SDK works as a Virtual ZPL Printer device. You setup the virtual printer with basic settings like the DPI resolution and default Label Size to finally pass to it the ZPL commands to be processed.    \n\nZPL Parsing & Processing\n========================\nZPLPrinter Emulator SDK can parse ZPL commands from a .NET string, .NET Stream or physical file. It can detect UTF-8 encoding automatically. Most of the ZPL Formatting and Control Commands are supported. \n\nInternational Text Support\n==========================\nZPLPrinter Emulator SDK can render ZPL commands for international text including Latin, Asian and RTL languages like German, French, Italian, Spanish, Portuguese, Swedish, Danish, Polish, Cyrillic, Greek, Chinese, Japanese, Korean, Arabic, Hebrew, and more.\n\nBarcode Symbologies Support\n===========================\nZPLPrinter Emulator SDK can generate most of the linear (1D), postal, composite, stacked and 2D barcodes shipped with real printer device. \n\nColored Label Simulation\n========================\nZPLPrinter Emulator SDK can be configured to convert ZPL to PNG, JPG & PDF formats simulating a color ribbon (for label items) and a background color label. Black & White 1bpp is also supported through PCX format.\n\nCustom ZPL Output Rotation\n==========================\nEven ZPL supports rotation, ZPLPrinter Emulator SDK can be configured to rotate ZPL outputs to 90, 180 & 270 clockwise degrees.",
  "iconUrl": "https://www.neodynamic.com/images/ZPLPrinterEmulatorSDK-64x64.png",
  "id": "Neodynamic.SDK.ZPLPrinter",
  "isPrerelease": false,
  "lastEdited": "2020-04-03T11:44:20.593Z",
  "licenseFile": "EULA-v11.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "58Aj3uJ0nr65wen97ng+WLLcVokpDk5fVNfxjXO6LcBPCLAvT/hD5SoZfStb8ZpcExNaoX0U/Dm+wt5hxY/uqg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 521747,
  "projectUrl": "https://www.neodynamic.com/products/zpl-printer-emulator-sdk/",
  "published": "2020-04-03T11:41:48.77Z",
  "releaseNotes": "• Fixed! Bug in integer command parameters parsing when decimal point is found.\n\n• Fixed! Case-sensitive resource names involving fonts, graphics/images and formats.",
  "requireLicenseAcceptance": true,
  "summary": "ZPLPrinter Emulator SDK for .NET allows you to Convert, Preview and Render raw ZPL (Zebra Programming Language) commands to PNG, JPG, PCX, GRF & PDF from .NET Standard projects",
  "title": "ZPLPrinter Emulator SDK for .NET Standard",
  "verbatimVersion": "2.0.20.402",
  "version": "2.0.20.402",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#dependencygroup/.netstandard2.0/skiasharp",
          "@type": "PackageDependency",
          "id": "SkiaSharp",
          "range": "[1.60.3, 1.60.3]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#dependencygroup/.netstandard2.0/skiasharp.harfbuzz",
          "@type": "PackageDependency",
          "id": "SkiaSharp.HarfBuzz",
          "range": "[1.60.3, 1.60.3]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#dependencygroup/.netstandard2.0/system.text.encoding.codepages",
          "@type": "PackageDependency",
          "id": "System.Text.Encoding.CodePages",
          "range": "[4.5.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#Neodynamic.SDK.ZPLPrinter.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1844,
      "fullName": "Neodynamic.SDK.ZPLPrinter.nuspec",
      "length": 4371,
      "name": "Neodynamic.SDK.ZPLPrinter.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#content/Readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 248,
      "fullName": "content/Readme.txt",
      "length": 493,
      "name": "Readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#lib/netstandard2.0/Neodynamic.SDK.ZPLPrinter.dll",
      "@type": "PackageEntry",
      "compressedLength": 502632,
      "fullName": "lib/netstandard2.0/Neodynamic.SDK.ZPLPrinter.dll",
      "length": 1038336,
      "name": "Neodynamic.SDK.ZPLPrinter.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#EULA-v11.txt",
      "@type": "PackageEntry",
      "compressedLength": 4447,
      "fullName": "EULA-v11.txt",
      "length": 15093,
      "name": "EULA-v11.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.11.44.50/neodynamic.sdk.zplprinter.2.0.20.402.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ZPLVirtualPrinter",
    "ZPLViewer",
    "ZPLParser",
    "ZPLConverter",
    "ZPLEmulator",
    "ZPL2PNG",
    "ZPL2JPG",
    "ZPL2PCX",
    "ZPL2PDF",
    "ZPL2Image",
    "ZPLtoPNG",
    "ZPLtoJPG",
    "ZPLtoPCX",
    "ZPLtoPDF",
    "ZPLtoImage",
    "ZPLTools",
    ".NET",
    "Framework",
    "CORE",
    "Legacy",
    "ASP.NET",
    "MVC",
    "Xamarin",
    "Mono",
    "UWP",
    "Zebra",
    "PDF",
    "PNG",
    "JPG",
    "PCX",
    "ZPL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}