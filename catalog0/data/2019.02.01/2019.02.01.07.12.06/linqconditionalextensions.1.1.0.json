{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.07.12.06/linqconditionalextensions.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Todd Skelton",
  "catalog:commitId": "03663903-662e-4d1d-985f-40f18affb995",
  "catalog:commitTimeStamp": "2019-02-01T07:12:06.1413415Z",
  "created": "2019-01-10T20:03:11.483Z",
  "description": "These extensions make it easy to chain Linq expressions based on conditionsâ€”useful for sorting, filtering, and paging.",
  "iconUrl": "https://github.com/xKloc/LinqConditionalExtensions/blob/master/logo.png?raw=true",
  "id": "LinqConditionalExtensions",
  "isPrerelease": false,
  "lastEdited": "2019-02-01T07:12:02.483Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "1m+fVFHs1QjNIP9VK0/KF29xRhwdoOK4OYS3y+CU/Rd1PMIY0S8kkjQvofrrbAcnkDTpUcECrHARgTLYSFolcg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21977,
  "projectUrl": "https://github.com/xKloc/LinqConditionalExtensions",
  "published": "2019-01-10T20:03:11.483Z",
  "releaseNotes": "Added new where and order by case extensions for switch chains.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "Linq Conditional Extensions",
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.07.12.06/linqconditionalextensions.1.1.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.07.12.06/linqconditionalextensions.1.1.0.json#LinqConditionalExtensions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 579,
      "fullName": "LinqConditionalExtensions.nuspec",
      "length": 1256,
      "name": "LinqConditionalExtensions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.07.12.06/linqconditionalextensions.1.1.0.json#lib/netstandard2.0/LinqConditionalExtensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 9778,
      "fullName": "lib/netstandard2.0/LinqConditionalExtensions.dll",
      "length": 28160,
      "name": "LinqConditionalExtensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.07.12.06/linqconditionalextensions.1.1.0.json#lib/netstandard2.0/LinqConditionalExtensions.xml",
      "@type": "PackageEntry",
      "compressedLength": 95,
      "fullName": "lib/netstandard2.0/LinqConditionalExtensions.xml",
      "length": 150,
      "name": "LinqConditionalExtensions.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.07.12.06/linqconditionalextensions.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "linq",
    "if",
    "where",
    "when",
    "then",
    "switch",
    "case",
    "extensions",
    "expressions",
    "sort",
    "filter",
    "page",
    "sorting",
    "filtering",
    "paging"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}