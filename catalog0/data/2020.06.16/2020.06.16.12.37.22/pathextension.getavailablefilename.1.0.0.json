{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Andrea Capigiri",
  "catalog:commitId": "7492d093-afdb-49dc-9337-3940525053a5",
  "catalog:commitTimeStamp": "2020-06-16T12:37:22.0246002Z",
  "created": "2020-05-13T10:39:59.073Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json#deprecation",
    "reasons": [
      "CriticalBugs"
    ]
  },
  "description": "Current path is not available on filesystem? No problem.\n\nUse PathExtension.GetAvailableFileName to get the next available file name in that directory. No more conflict on saving or moving files between into directories!\n\nFor example you got this path \"C:\\my_existing_file.txt\" and you get this \"C:\\my_existing_file (1).txt\"",
  "iconFile": "icon.png",
  "id": "PathExtension.GetAvailableFileName",
  "isPrerelease": false,
  "lastEdited": "2020-06-16T12:37:18.007Z",
  "listed": false,
  "packageHash": "Cwhr/fkOod/W3mUInUkqxzeZlO4ymDhE5ihhXRQMjjWSb/vI15AVyPQuAOecUEh4NKSr0TqGKOl1gzcb2JuE8g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15122,
  "projectUrl": "https://andreacapigiri.com/",
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json#PathExtension.GetAvailableFileName.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 547,
      "fullName": "PathExtension.GetAvailableFileName.nuspec",
      "length": 1037,
      "name": "PathExtension.GetAvailableFileName.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json#lib/netcoreapp3.1/AndreaC.Extensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 2533,
      "fullName": "lib/netcoreapp3.1/AndreaC.Extensions.dll",
      "length": 6144,
      "name": "AndreaC.Extensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 505,
      "fullName": "icon.png",
      "length": 567,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.12.37.22/pathextension.getavailablefilename.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Path",
    "File",
    "Directory"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}