{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dar√≠o Kondratiuk",
  "catalog:commitId": "51b29894-d813-4c18-b1cb-a8625728a8c4",
  "catalog:commitTimeStamp": "2018-06-28T22:42:26.4913494Z",
  "created": "2018-06-28T22:37:31.647Z",
  "description": "Headless Chrome .NET API",
  "id": "PuppeteerSharp",
  "isPrerelease": false,
  "lastEdited": "2018-06-28T22:42:14.717Z",
  "listed": true,
  "packageHash": "Xk4piZfOQQIVATMUgFcrqUbJjtoNXfI9jdQvQ002CFkKyMk1DHbGE2w/sdnFqd5FMkME+GcAlwZ5x/DfoHvKkA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 162195,
  "projectUrl": "https://github.com/kblok/puppeteer-sharp",
  "published": "2018-06-28T22:37:31.647Z",
  "releaseNotes": "New Features\n * New Chromium version r536395\n * Service workers support\n * Cache Support\n * New WaitFor options\n * New BrowserFetcher utility\n * Dump IO implementation\n\nNew APIs\n\n * Page.SetCacheEnabledAsync\n * Page.DOMContentLoaded\n * Page.WaitForXPathAsync\n * ResponseData.FromServiceWorker\n * ExecutionContext.Frame\n * Frame.EvaluateExpressionHandleAsync\n * Frame.EvaluateFunctionHandleAsync\n * Frame.WaitForSelectorAsync\n * Frame.WaitForXPathAsync\n * Frame.WaitForSelectorOrXPathAsync\n\nBreaking Changes\n\nDownloader changes\n\nThe Downloader class was renamed to BrowserFetcher. BrowserFetcher has the following API:\n\n * DefaultRevision\n * DownloadsFolder\n * DownloadHost\n * Platform\n * DownloadProgressChanged\n * CanDownloadAsync(int revision)\n * LocalRevisions()\n * Remove(int revision)\n * RevisionInfo(int revision)\n * DownloadAsync(int revision)\n * GetExecutablePath(int revision)\n * GetExecutablePath(Platform platform, string folderPath)\n\nIf you were using Downloader like this:\n\nawait Downloader.CreateDefault().DownloadRevisionAsync(chromiumRevision);\n\nIt should be changed to :\n\nawait new BrowserFetcher().DownloadAsync(BrowserFetcher.DefaultRevision);\n\n\nPuppeteer.LaunchAsync breaking change\n\nIn order to simplify the API, the revision argument was removed from the `LaunchAsync` method. So this piece of code:\n\nPuppeteer.LaunchAsync(launcherOptions, Downloader.DefaultRevision);\n\n\nShould be changed to:\n\nPuppeteer.LaunchAsync(launcherOptions);\n\n \nIf you need to launch Puppeteer using another revision you should handle that using the `ExecutablePath` option:\n\nvar myRevisionInfo = await new BrowserFetcher().DownloadAsync(myRevision);\nvar browser = Puppeteer.LaunchAsync(new LaunchOptions\n{\n   Headless = true,\n   ExecutablePath = myRevisionInfo.ExecutablePath\n});",
  "requireLicenseAcceptance": false,
  "title": "PuppeteerSharp",
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#dependencygroup/.netstandard2.0/microsoft.aspnetcore.webutilities",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.WebUtilities",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#dependencygroup/.netstandard2.0/microsoft.extensions.logging",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Logging",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#dependencygroup/.netstandard2.0/system.net.http",
          "@type": "PackageDependency",
          "id": "System.Net.Http",
          "range": "[4.3.3, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#PuppeteerSharp.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1196,
      "fullName": "PuppeteerSharp.nuspec",
      "length": 2937,
      "name": "PuppeteerSharp.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#lib/netstandard2.0/PuppeteerSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 128785,
      "fullName": "lib/netstandard2.0/PuppeteerSharp.dll",
      "length": 356352,
      "name": "PuppeteerSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.28.22.42.26/puppeteersharp.1.1.0.json#lib/netstandard2.0/PuppeteerSharp.xml",
      "@type": "PackageEntry",
      "compressedLength": 30427,
      "fullName": "lib/netstandard2.0/PuppeteerSharp.xml",
      "length": 244920,
      "name": "PuppeteerSharp.xml"
    }
  ],
  "tags": [
    "headless",
    "chrome",
    "puppeteer"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}