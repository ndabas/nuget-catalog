{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.13.15.25.42/excelreader.1.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Anthony Desa",
  "catalog:commitId": "78e34e2d-838d-4b8a-ae25-74aa56994cca",
  "catalog:commitTimeStamp": "2015-06-13T15:25:42.067048Z",
  "copyright": "Copyright 2015",
  "created": "2015-06-13T15:24:50.363Z",
  "description": "Excel Reader will allow developers to read excel file within 3 lines of code",
  "id": "ExcelReader",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "1rXMaTMeQt6kjPaRO8/mBmKvo9mdnhJGFwaW5afRyvaFmZJ3ccJ1AJhMR6i81i57zVuZfY7c2hrv8BtJXVV5Eg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 12891,
  "published": "2015-06-13T15:24:50.363Z",
  "releaseNotes": "1). Allow reading different excel sheet i.e. obj.Sheet(2) will allow to read second sheet (default is sheet(1)) \n\t\t2). New Method obj.RowCount() return the number of active rows in selected sheet \n\t\t3). New Method obj.ColumnCount() return the number of active columns in selected sheet \n\t\t4). New Method obj.SheetCount() return the number of sheets in excel file \n\t\t5). New Method obj.SheetNames() return IList of string collection of all names of the sheet in excel file \n\t\t6). New Method obj.HeaderNames() return IList of string collection of all names of header in first excel sheet",
  "requireLicenseAcceptance": false,
  "title": "ExcelReader",
  "version": "1.1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.13.15.25.42/excelreader.1.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "tags": [
    "ExcelReader",
    "Dynamics",
    "IterativeDesignPattern"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}