{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Yoav Rios",
  "catalog:commitId": "1109f25b-3dee-48df-848f-b98e5ffc0295",
  "catalog:commitTimeStamp": "2018-12-08T06:39:00.6841366Z",
  "copyright": "Copyright Â©  2014",
  "created": "2015-03-04T16:22:28.2Z",
  "description": "Logger SDK",
  "id": "Inhouse.Sdk.Logger",
  "isPrerelease": false,
  "language": "es-MX",
  "lastEdited": "2018-12-08T06:38:29.303Z",
  "listed": true,
  "packageHash": "0a1CPOCQzdvnKHjZTt6tEDoFc+0AY+7DmVZpIJ9uhaRfG8aHJCWDPIdwn0zTzlt97L6fJfQ/IxJf1TUa/0ta2g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24190,
  "published": "2015-03-04T16:22:28.2Z",
  "releaseNotes": "Inhouse.Sdk.Logger\n\nLogger to .Net Apps\n\nThis logger can log on Console, TextFiles, Documents(csv,tsv), Splunk via TCP\nlogger is singelton, you dont need create a instance only need wrtie\n \n <code> LogProviderManager.Logger.Log(LogType.info, \"Log FA!\") </code>\n \nParameters:\n  name = <string> name for reference the log.\n\n  type = Type Provider for the log \n    * Inhouse.Sdk.Logger.Providers.ConsoleLogProvider, Inhouse.Sdk.Logger <- Console\n    * Inhouse.Sdk.Logger.Providers.TextLogProvider, Inhouse.Sdk.Logger  <- Text\n    * Inhouse.Sdk.Logger.Providers.DocumentLogProvider, Inhouse.Sdk.Logger <- Document like csv,tsv\n    * Inhouse.Sdk.Logger.Providers.SplunkLogProvider, Inhouse.Sdk.Logger <- Splunk via TCP\n  active = enable or disable\n    * true\n    * false\n  levelLog = filter for the log.\n    * debug\n    * info\n    * warning\n    * error\n    * fatal\n    * userdata\n    * appdata\n    * systemdata\n    * none\n  Tip: 1.- When you select the level the logger write the including level and the next forwards\n    2.- if you put \"*\" before the level the logger only write log for this level with out forwards\n    3.- You can arrange the level that you can write if only want debug to error you can put debug|error and the logger only write the\n     log event debug,info,warning and error.\n  \n  pattern = the pattern to write the event the keys are\n    * %TimeStamp \n    * %UtcTimeStamp \n    * %Application \n    * %HostName \n    * %Ip \n    * %ThreadId\n    * %ThreadName \n    * %ClassName \n    * %FunctionName \n    * %Level \n    * %Item \n    * %Message \n  \n  documentType = type to document\n    * csv\n    * tsv\n\n  fileRolling = file=<nameFile.ext>;maxsize=<size with unit kb,mb,gb>;directory=<path of directory>\n       file rolling rename the log automatic.\n\n  host = ip for the host to connect\n  \n  port = port for the host to connect\n\nParameter used for providers:\n \n  Console\n   * type\n   * active\n   * levelLog\n   * pattern\n  Text\n   * type\n   * active\n   * levelLog\n   * pattern\n   * fileRolling\n  Document\n   * type\n   * active\n   * levelLog\n   * documentType\n   * fileRolling\n  Splunk\n   * type\n   * active\n   * levelLog\n   * pattern\n   * host\n   * port\nUse:\n0) Add Librery by NuGet\n1) Create App.config\n2) Configure Logs on app.config:\n  \n  <configSections>\n    <section name=\"LogProviders\" type=\"Inhouse.Sdk.Logger.LogProviderConfiguration, Inhouse.Sdk.Logger\" />\n  </configSections>\n\n  <LogProviders>\n    <providers>\n      <add name=\"Console\" \n           type=\"Inhouse.Sdk.Logger.Providers.ConsoleLogProvider, Inhouse.Sdk.Logger\" \n           active=\"true\" \n           levelLog=\"debug\" \n           pattern=\"%HostName %Ip %ClassName %FunctionName %Message\" />\n      <add name=\"text\" \n     type=\"Inhouse.Sdk.Logger.Providers.TextLogProvider, Inhouse.Sdk.Logger\" \n           active=\"false\" \n           levelLog=\"debug\" \n           pattern=\"%TimeStamp %UtcTimeStamp %Application %HostName %Ip [%ThreadId] %ThreadName %ClassName %FunctionName %Level %Item %Message\" \n           fileRolling=\"file=test.log;maxsize=0;directory=C:\\temp\" />\n      <add name=\"document\" \n           type=\"Inhouse.Sdk.Logger.Providers.DocumentLogProvider, Inhouse.Sdk.Logger\" \n           active=\"false\" \n           levelLog=\"debug\" \n           documentType=\"cvs\" \n           fileRolling=\"file=test;maxsize=10kb;directory=C:\\temp\" />\n      <add name=\"splunk\"\n           type=\"Inhouse.Sdk.Logger.Providers.SplunkLogProvider, Inhouse.Sdk.Logger\"\n           active=\"true\"\n           levelLog=\"debug\"\n           host=\"127.0.0.1\" port=\"18000\"\n           pattern=\"%TimeStamp %UtcTimeStamp %Application %HostName %Ip [%ThreadId] %ThreadName %ClassName %FunctionName %Level %Item %Message\" />\n    </providers>\n  </LogProviders>\n\n  Write Log in functions sample c#:\n   \n   static void FA()\n   {\n  LogProviderManager.Logger.Log(LogType.info, \"Log FA!\");\n   }\n\n\n   Change Log\n   *****************************\n   V 1.0.1.5\n   - Delete the event log write for security errors.\n\n   *****************************\n   V 1.0.1.4\n\n\n   *****************************\n   V 1.0.1.3\n\n\n   *****************************\n   V 1.0.1.2\n\n\n   *****************************\n   V 1.0.1.1\n\n   *****************************\n   V 1.0.1.0\n   - Initial Release!",
  "requireLicenseAcceptance": false,
  "summary": "Sdk for logs",
  "title": "Sdk to Logger",
  "verbatimVersion": "1.0.1.5",
  "version": "1.0.1.5",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[6.0.6, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json#Inhouse.Sdk.Logger.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1666,
      "fullName": "Inhouse.Sdk.Logger.nuspec",
      "length": 5179,
      "name": "Inhouse.Sdk.Logger.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json#content/LogUsing.txt",
      "@type": "PackageEntry",
      "compressedLength": 1331,
      "fullName": "content/LogUsing.txt",
      "length": 4357,
      "name": "LogUsing.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json#lib/Inhouse.Sdk.Logger.dll",
      "@type": "PackageEntry",
      "compressedLength": 9024,
      "fullName": "lib/Inhouse.Sdk.Logger.dll",
      "length": 20480,
      "name": "Inhouse.Sdk.Logger.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.06.39.00/inhouse.sdk.logger.1.0.1.5.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ihct"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}