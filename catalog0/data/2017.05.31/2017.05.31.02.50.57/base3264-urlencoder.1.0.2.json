{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.31.02.50.57/base3264-urlencoder.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eric Lau, Mhano Harkness",
  "catalog:commitId": "44c2fc94-06a5-4e11-a1fb-4fcf0bc9bc83",
  "catalog:commitTimeStamp": "2017-05-31T02:50:57.1614546Z",
  "copyright": "Copyright Mhano Harkness and Eric Lau 2014-2017",
  "created": "2017-05-31T02:49:28.09Z",
  "description": "Standards based implementations of various Base32 and Base64 encoding/decoding methods. These are designed to encode binary data to plain text, and decode the resulting text back to the original binary. This is useful when you need to transfer binary data through technologies that only support text (such as including binary security tokens in URLs).\n\nBase32Url encodes with only the characters A to Z and 2 to 7. No hyphens, underscores, pluses, slashes or equals are used, making it usable as a URL token in almost all circumstances. Base32Url also supports custom alphabets. A custom case sensitive alphabet with only consonant (non vowel) characters can be used to ensure your tokens do not contain accidental profanities. The following is an example that avoids vowels, the letter L and has no numeric characters: BCDFGHKMNPQRSTVWXYZbcdfghkmnpqrs.\n\nBase64Url is more compact than Base32Url and it is almost always usable as a URL token or file-name. The only non alpha-numeric characters Base64Url contains are the hyphen (-) and underscore (_) characters, neither of these need further encoding for use in URLs or file-names.\n      \n* Supports standard Base32 with padding characters (=) per Base32 from RFC 4648.\n* Supports the Base32 extension / alternate alphabet z-base-32 and the asymmetric crockford encoding.",
  "id": "Base3264-UrlEncoder",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://www.codeproject.com/info/cpol10.aspx",
  "listed": true,
  "packageHash": "9Pm+DmxyF6imHkNY4QDTtjshh+HFRCYf+T/iKxLpFu5RVdsSfzgxk/BqnDUPmZhrbhqJzaQokPOBix2sxik1cQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10787,
  "projectUrl": "https://github.com/ericlau-solid/Base3264-UrlEncoder/",
  "published": "2017-05-31T02:49:28.09Z",
  "releaseNotes": "Support for crockford base32 encoding",
  "requireLicenseAcceptance": false,
  "summary": "Standards based implementations of various Base32 and Base64 encoding/decoding methods.",
  "title": "Base3264-UrlEncoder",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.31.02.50.57/base3264-urlencoder.1.0.2.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.31.02.50.57/base3264-urlencoder.1.0.2.json#Base3264-UrlEncoder.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1121,
      "fullName": "Base3264-UrlEncoder.nuspec",
      "length": 2337,
      "name": "Base3264-UrlEncoder.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.31.02.50.57/base3264-urlencoder.1.0.2.json#lib/net451/Base3264-UrlEncoder.dll",
      "@type": "PackageEntry",
      "compressedLength": 7340,
      "fullName": "lib/net451/Base3264-UrlEncoder.dll",
      "length": 17408,
      "name": "Base3264-UrlEncoder.dll"
    }
  ],
  "tags": [
    "base32",
    "zbase32",
    "z-base-32",
    "base64url",
    "base64",
    "crockford",
    "profanity",
    "Base3264Encoding",
    "Base32Url",
    "rfc4648"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}