{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ruskin Dantra",
  "catalog:commitId": "fdf41f28-d276-4f06-8d0f-37d0283476d6",
  "catalog:commitTimeStamp": "2018-12-10T17:29:20.8130251Z",
  "copyright": "Copyright Â© 2016 Ruskin Dantra",
  "created": "2017-02-26T20:53:52.87Z",
  "description": "Allows injecting NLog logger using AutoFac via constructor, field or property injection",
  "id": "NLogInjector",
  "isPrerelease": false,
  "lastEdited": "2018-12-10T17:29:01.64Z",
  "licenseUrl": "https://github.com/ruskindantra/NLogInjector/blob/master/LICENSE",
  "listed": true,
  "packageHash": "7XDF/pxWKsPU6KvvBMC8hMv0gG3MS8qmj2utPT/MIcBuXysyxoEVaWPZcu3sOnCSFrL0+yGzgKriK9rWKQf5hw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15416,
  "projectUrl": "https://github.com/ruskindantra/NLogInjector",
  "published": "2017-02-26T20:53:52.87Z",
  "releaseNotes": "3-Apr-16\n\t\t\t* Initial commit\n\t\t\t* Added a field attribute which means that ILogger must be decorated with InjectLogger for the injection logic to consider it\n\t\t\t\t(Allows us to respect owner driven fields if they do exist)",
  "requireLicenseAcceptance": false,
  "title": "NLogInjector",
  "verbatimVersion": "0.0.8",
  "version": "0.0.8",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#dependencygroup/nlog",
          "@type": "PackageDependency",
          "id": "NLog",
          "range": "[4.2.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#dependencygroup/autofac",
          "@type": "PackageDependency",
          "id": "Autofac",
          "range": "[3.5.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#dependencygroup/ruskindantra.extensions",
          "@type": "PackageDependency",
          "id": "RuskinDantra.Extensions",
          "range": "[1.0.30, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#NLogInjector.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 606,
      "fullName": "NLogInjector.nuspec",
      "length": 1239,
      "name": "NLogInjector.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#lib/net452/NLogInjector.dll",
      "@type": "PackageEntry",
      "compressedLength": 3599,
      "fullName": "lib/net452/NLogInjector.dll",
      "length": 8192,
      "name": "NLogInjector.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.17.29.20/nloginjector.0.0.8.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "CSharp",
    "extensions"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}