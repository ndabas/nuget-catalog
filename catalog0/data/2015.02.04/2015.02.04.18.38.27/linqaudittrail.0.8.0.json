{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.18.38.27/linqaudittrail.0.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "mhidinger",
  "catalog:commitId": "55cfdc9f-3633-43b9-b144-1fc20e342540",
  "catalog:commitTimeStamp": "2015-02-04T18:38:27.69359Z",
  "created": "2014-02-12T20:48:30.15Z",
  "description": "Automatic auditing of all inserts/updates/deletes for any table in your database with a single line of code, including:\nWhat table was modified?\nWhat fields changed?\nWho made the change?\nWhen did it occur?\n\nNaturally, there are many ways to tackle this problem. In the past I have either relied on writing database Triggers for the tables, or wrote the Auditing logic right into the stored procedure that was doing the modification. But this time, since the project is utilizing LINQ to SQL, I had a more ambitious idea in mind.",
  "id": "LINQAuditTrail",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://doddleaudit.codeplex.com/",
  "packageHash": "gS1W9xHGC756S8SafAegrIRBjh5fEl/GPWuxNbG+deFjQu4Awq62eGLAfrfyYdRNLnTFFlargf64nnn6LSKo+g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 12313,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "This project will add automatic Auditing to your LINQ to SQL or Entity Framework (EF support is not done yet) application.",
  "title": "LINQ Audit Trail (doddleaudit)",
  "version": "0.8.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}