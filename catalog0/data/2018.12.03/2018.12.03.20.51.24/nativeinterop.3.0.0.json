{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Frank Niemeyer",
  "catalog:commitId": "bdb2c2ac-cb9c-4abb-8208-edc2f8be2589",
  "catalog:commitTimeStamp": "2018-12-03T20:51:24.9562344Z",
  "created": "2016-11-04T18:07:37.7Z",
  "description": "Provides generic pointer operations for all of .NET, building on the capabilities provided by FSharp.NativeInterop.NativePtr, which this package extends with features like 64-bit capabilities, exposed in an OOP-friendly manner as NativePtr<T> and extension methods to System.IntPtr. \n\nNativeArray, an array-like collection of items of unmanaged (blittable) type allocated on the unmanaged heap, supports 64-bit addressing and item access with and without bounds checks, utilizing the CPU's AGUs for address offset calculation where possible.\n\nThe included System.IO.Stream extension methods as well as the Buffer and Structure modules enable easy and efficient handling of structured binary data (convert array types, convert structs, access structs in an element-wise fashion, memcpy...).",
  "id": "NativeInterop",
  "isPrerelease": false,
  "lastEdited": "2018-12-03T20:51:11.957Z",
  "licenseUrl": "http://directory.fsf.org/wiki/License:Apache2.0",
  "listed": true,
  "packageHash": "SJy4wUNAU4dFlHnyF4nfzlhcbAuAPnTIpmJoyk26JkigoqjlZzE7OdPIiWoUltkCcSLP6t4MWMCdc4JUuPc1iw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 124039,
  "projectUrl": "https://bitbucket.org/frank_niemeyer/nativeinterop",
  "published": "2016-11-04T18:07:37.7Z",
  "releaseNotes": "major release - includes breaking changes to the API surface\n\nGlobal:\n    - all modules, classes and functions have been moved to namespace NativeInteropEx to avoid name clashes with FSharp.NativeInterop\n    - .NET Standard 1.1 compatibility\n    - Improved XML doc comments for all types and functions\n\nNativePtr:\n    - NativePtr is now an F#-specific module containing inlined compile-time generic functions; use IntPtrEx instead if calling from other languages like C#\n    - changed order of arguments of multiple functions\n    - added functions ofNativeInt, toNativeInt and stackalloc\n    - fixed ctor throws on length == 0\n\nNativePtr<T>\n    - ctor now accepts ilsigptr<T> (typed native CLR pointer)\n\nIntPtrEx (new):\n    - maps the functionality of NativePtr to IntPtr extension methods for use from non-F# languages\n\nStructure:\n    - added functions write, get and set\n    - renamed function convert to read\n    - removed obsolete APIs\n    - eliminated use of inline IL; as a consequence, some arguments need to be passed by reference (which makes sense to avoid copies due to pass by value anyhow)\n\nBuffer:\n    - added function toStructureWithOffset (method ToStructure)    \n    - memcpy (Copy): length argument is now of type nativeint (IntPtr)\n    - removed obsolete APIs\n    - removed duplicate APIs also found in Structure\n    - renamed Convert to Copy (overloaded)\n\nNativeArray<T>:\n    - renamed from NativeArray64\n    - type parameter further constrained to conform with System.Numerics.Vector<T> (in preparation for SIMD support)\n    - enabled bounds check for all indexers in debug mode\n    - more efficient indexer\n    - added At indexed property which always performs bounds checking\n    - added Get/Set methods for bounds-checked access from languages that don't support indexed properties\n    - simplified IDisposable implementation\n    - added specialized struct-based IEnumerator implementation, replaces Items property    \n\nNativeArray:\n    - ofArray uses Buffer.memcpy to initialize the new NativeArray\n    - zeroCreate now takes an explicit type parameter\n    - all higher order functions are now inline\n    - generalized type signatures\n    - added multiple functions (fold2, prod, sum, dot, ...)\n    - added RequireQualifiedAccess attribute\n    - implemented extension methods for use from C# etc.\n\nReinterpretCast<T, U>:\n    - added indexer (forwards to NativePtr<U>.Item)\n    - simplified IDisposable implementation\n\nStream:\n    - Re-implemented readStructureArray to read structs one-by-one instead of creating a giant buffer",
  "requireLicenseAcceptance": false,
  "summary": "Generic pointer operations on blittable (unmanaged) types, easy and efficient handling of generic binary structured streams and a 64-bit native arrays",
  "title": "NativeInterop",
  "verbatimVersion": "3.0.0",
  "version": "3.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": ""
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#NativeInterop.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1940,
      "fullName": "NativeInterop.nuspec",
      "length": 4407,
      "name": "NativeInterop.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#lib/netstandard1.1/NativeInteropEx.dll",
      "@type": "PackageEntry",
      "compressedLength": 34865,
      "fullName": "lib/netstandard1.1/NativeInteropEx.dll",
      "length": 112640,
      "name": "NativeInteropEx.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#lib/netstandard1.1/NativeInteropEx.pdb",
      "@type": "PackageEntry",
      "compressedLength": 15773,
      "fullName": "lib/netstandard1.1/NativeInteropEx.pdb",
      "length": 67072,
      "name": "NativeInteropEx.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#lib/netstandard1.1/NativeInteropEx.xml",
      "@type": "PackageEntry",
      "compressedLength": 4190,
      "fullName": "lib/netstandard1.1/NativeInteropEx.xml",
      "length": 32944,
      "name": "NativeInteropEx.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#lib/portable-net45%2Bwin8/NativeInteropEx.dll",
      "@type": "PackageEntry",
      "compressedLength": 34865,
      "fullName": "lib/portable-net45%2Bwin8/NativeInteropEx.dll",
      "length": 112640,
      "name": "NativeInteropEx.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#lib/portable-net45%2Bwin8/NativeInteropEx.pdb",
      "@type": "PackageEntry",
      "compressedLength": 15773,
      "fullName": "lib/portable-net45%2Bwin8/NativeInteropEx.pdb",
      "length": 67072,
      "name": "NativeInteropEx.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#lib/portable-net45%2Bwin8/NativeInteropEx.xml",
      "@type": "PackageEntry",
      "compressedLength": 4190,
      "fullName": "lib/portable-net45%2Bwin8/NativeInteropEx.xml",
      "length": 32944,
      "name": "NativeInteropEx.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.03.20.51.24/nativeinterop.3.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "native",
    "interop",
    "generic",
    "pointer",
    "64-bit",
    "array",
    "efficiency",
    "performance",
    "f#",
    "c#"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}