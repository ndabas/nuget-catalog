{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.14.10.21.48/pgfunction.0.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "PGCafe",
  "catalog:commitId": "00dd2929-afa0-490f-8f45-54f4c992ab72",
  "catalog:commitTimeStamp": "2016-03-14T10:21:48.6390147Z",
  "created": "2016-03-14T10:21:36.23Z",
  "description": "Some EX Class with static function.\n\nif has bug, please e-mail to me, i'll fix them as soon as i can.\n\na15752468@gmail.com",
  "id": "PGFunction",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "EO3rpp5pIOufx/x0Xagq1yoTp8ggHW6cqS9b0CkB/rlf0h5gJNP8xhAtVpmIBhald7RJIG117aCGr6u6W6Nxwg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14721,
  "published": "2016-03-14T10:21:36.23Z",
  "releaseNotes": "2016/03/14 : Add Xml Serialization and DataContract Serialization.\n\n2015/12/27 : Add MathEX and update MessageBoxEX\n\n2015/12/27 : Record what ClassEX in here.\nNow ClassEX : MathEX, MessageBoxEX, SerializationEX, ThreadEX, TryCatchEX\n\nWhat's in MathEX :\nStdandard : Calculate Standard value of value list.\n\nWhat's in MessageBoxEX : Simple call of MessageBox.Show( ... )\nShow : use ENum MessageBoxEXType to simple the icon and button enum.\nEX: MessageBoxEX.Show( \"message\", MessageBoxEXType.Warn_YN ); // it's mean show a message box with Warning icon and YesNo button.\n\n\nWhat's in SerializationEX :\nBinarySerialize : serialize object to path.\nBinaryDeSerialize : deserialize object from path.\n\n\nWhat's in ThreadEX :\nStartNewThread : create a thread and start it.( templete with no para Action to 16 para Action )\n\n\nWhat's in TryCatchEX :\nTry : package try-catch block to a method and return exception if it has or return null if it hasn't.  Best use with one line expression.\nTry<Result> : package try-catch block to a method and return defaultValue if it has or return Result if it hasn't.  Best use where u don't care what exception occur.\nTry<Result>( ..., out Exception, ... ) : same with Try<Result> but this will set exception object if it has, or set null to it.",
  "requireLicenseAcceptance": false,
  "title": "PGCafe's Function Class",
  "verbatimVersion": "0.0.4",
  "version": "0.0.4",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}