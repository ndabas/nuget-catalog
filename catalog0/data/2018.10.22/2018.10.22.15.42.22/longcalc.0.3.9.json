{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "e6c3ce3d-8c43-41b3-beff-8a2d412e68d7",
  "catalog:commitTimeStamp": "2018-10-22T15:42:22.9614006Z",
  "copyright": "Copyright 2018",
  "created": "2018-10-22T15:37:50.143Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2018-10-22T15:42:00.627Z",
  "licenseUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/LICENSE.txt",
  "listed": true,
  "packageHash": "7faApjwUcJ3pyDUZU8mh7W/aSJS8M88e7BBYXD2xxG/LOOPjEYT1Hsbr8QQory8CYMtjlcJ2DA0aAVumCEV60w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 442001,
  "published": "2018-10-22T15:37:50.143Z",
  "releaseNotes": "Unsigned Assembly\n\nChanges in this release were confined to the Gamma functions and real-valued Sin and Cos.\n\nThe change to Sin/Cos was to make sure an error was not thrown under the condition that the input was exactly an integral multiple of calculated pi / 2.\n\nFor the Gamma function, mistakes which occurred in versions 0.3.7 and 0.3.8 were corrected. This mistake resulted in incorrect values of Gamma when a Precision value greater than 2000 was requested.\nFor this current release, an inefficiency in the calculation of Gammma was also corrected. Also with this release, Spouge constants are cached in two sets: one for requested precision less or equal 2000 and one for requested precision greater than 2000. In aqddition, a change was made to re-calculate Spouge constants for precisions greater than 2000 if the newly requested precision was less than half that of the precision of the existing cached Spouge constants (Spouge constants are always re-calculated upon encountering a precision greater than that of the cached constants). \nThere was also a fix applied to the Gamma function to prevent an error which might have occurred in the BesselJ function (which uses Gamma).  \n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2017) and using Mpir.net for the underlying integer math, supplies a variety of math functions and utilities with precisions at least as large as 2,000,000 base 10 digits. The underlying objects are bf (for 'big float' real values comprised of an mpz_t extended integer part from Mpir.net and a base 2 int64 exponent), bcr (for complex numbers expressed in the rectangular coordinates of a bf real part and a bf imaginary part), and bcp (for complex numbers expressed in the polar coordinates of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.3.9",
  "version": "0.3.9",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1463,
      "fullName": "LongCalc.nuspec",
      "length": 3299,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 31730,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 97792,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.22.15.42.22/longcalc.0.3.9.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}