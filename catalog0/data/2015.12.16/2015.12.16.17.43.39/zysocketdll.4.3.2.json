{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.16.17.43.39/zysocketdll.4.3.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Administrator",
  "catalog:commitId": "464a337b-a760-4d43-8f8c-527e4a1be5d5",
  "catalog:commitTimeStamp": "2015-12-16T17:43:39.2362054Z",
  "copyright": "luyikk",
  "created": "2015-12-16T08:12:37.9Z",
  "description": "使用了 ZYNetRingBufferPool 代替 ZYNetBufferReadStream\n使用了 ZYNetRingBufferPoolV2 代替了 ZYNetBufferReadStreamV2\n\n这2个类是 线程安全的，测试代码 里面有。这2个类基于环形数据缓冲的，你懂的。不懂百度吧~\n\nZySocketSuper 添加了 public BinaryInputOffsetHandler BinaryOffsetInput { get; set; }\n\n你现在可以 使用偏移量 来把数据包输入到 缓冲池了。 对了 别忘了 把 IsOffsetInput 设置成true 详细看例1\n这样做的好处是可以 少一次copy\n\nZYSocket.share.ReadBytes and ZYSocket.share.ReadBytesV2 添加了 直接读取函数 比如 int i=read.readInt32() 为了方便嘛\n\n\nUDPService 嘛 目前测试阶段用的比较少。大家有空可以帮忙测测\n\n对了 所有例子 我都改成了 RingBufferPool.",
  "id": "ZYSOCKETDLL",
  "isPrerelease": false,
  "language": "zh-CN",
  "lastEdited": "2015-12-16T17:43:31.393Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://blog.csdn.com/luyikk",
  "listed": false,
  "packageHash": "fO5ri87DAuCZ6WqmXS25FSmbojWIPxbmjZZvPIKyOYGY3+TgGa8DB4N4IF+ou3UgwgUh+RCw1LUvoTKb/rPkrQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 2320203,
  "projectUrl": "https://github.com/luyikk/ZYSOCKET",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": true,
  "summary": "ZYSOCKET-DLL 4.3",
  "title": "ZYSOCKET-DLL",
  "verbatimVersion": "4.3.2",
  "version": "4.3.2",
  "tags": [
    "ZYSOCKET",
    "C#",
    "SOCKET"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}