{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.01.21.28/pester.3.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Pester Team",
  "catalog:commitId": "78bf8385-db90-4a3a-a221-041a542d94c2",
  "catalog:commitTimeStamp": "2015-02-08T01:21:28.5789286Z",
  "created": "2014-08-21T21:25:11.873Z",
  "description": "Pester provides a framework for running BDD style Tests to execute and validate PowerShell commands inside of PowerShell and offers a powerful set of Mocking Functions that allow tests to mimic and mock the functionality of any command inside of a piece of powershell code being tested. Pester tests can execute any command or script that is accesible to a pester test file. This can include functions, Cmdlets, Modules and scripts. Pester can be run in ad hoc style in a console or it can be integrated into the Build scripts of a Continuous Integration system.",
  "iconUrl": "http://pesterbdd.com/images/Pester.png",
  "id": "Pester",
  "isPrerelease": false,
  "lastEdited": "2014-08-21T21:29:40.643Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.html",
  "packageHash": "tvlFbILaNjOiE49zLgBlVKzpT8qXZ5A2mu5osEBneN79e44Yw4Js9e1TEOMGaxAz/a2zgGgOuhIJpWbbjD40hA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 79713,
  "projectUrl": "https://github.com/Pester/Pester",
  "published": "2014-08-21T21:25:11.873Z",
  "releaseNotes": "3.0.0 (August 21, 2014)\nFix code coverage tests so they do not left breakpoints set [GH-149]\nAdd better output for hashtables in code coverage [GH-150]\nFix Invoke-Pester -OutputXml usage of relative paths\nRemove Validate-Xml function\nRemove legacy object adaptations support\nRemove tests testing usage of the global scope\nAdd function name to Code coverage output [GH-152]\nSuppress pipeline output in Context / Describe [GH-155]\nCoverage Output Update [GH-156]\nAdd initial implementation of BeforeEach / AfterEach [GH-158]\nCodeCoverage of files containing DSC Configurations [GH-163]\nRolling back some earlier Pester Scope changes [GH-164]\nLegacy expectations cleanup [GH-165]\nInvoke-Pester tests path fix [GH-166]\nAssert-MockCalled default ModuleName fix. [GH-167]\nOutput exception source when test fails [GH-147]\nFix for PesterThrowFailureMessage on PowerShell 2.0. [GH-171]\nPester.bat no longer enables StrictMode. [GH-172]\nFixed default behavior of fixture parameter in Describe and Context. [GH-174]\nSyntax errors in test files, as well as terminating errors from Describe or Context blocks are now treated as failed tests. [GH-168]\nMock lifetime is no longer tied to It blocks. [GH-176]\nAdd module manifest\nAdded multiple lines to failure messages from Should Be and Should BeExactly. Updated console output code to support blank lines in failure messages and stack traces. [GH-185]\nFixed stack trace information when test failures come from inside InModuleScope blocks, or from something other than a Should assertion. [GH-183]\nFixed stack trace information from Describe and Context block errors in PowerShell 2.0. [GH-186]\nFixed a problem with parameter / argument resolution in mocked cmdlets / advanced functions. [GH-187]\nImproved error reporting when Pester commands are called outside of a Describe block. [GH-188]\nExtensive updates to help files and comment-based help for v3.0 release. [GH-190]\n\n\n3.0.0-beta2 (July 4, 2014)\nAdd code coverage\nFix TestName\nFix direct execution of tests when the script is dot-sourced to global scope [GH-144]\nFix mock parameter filter in strict mode [GH-143]\nFix nUnit schema compatibility\nFix special characters in nUnit output\n\n\n3.0.0-beta (June 24, 2014)\nAdd full support for module mocking\nIsolate Pester internals from tested code\nTests.ps1 files can be run directly\nAdd It scope to TestDrive\nAdd It scope to Mock\nAdd Scope parameter to Assert-MockCalled\nMeasure test time more precisely",
  "requireLicenseAcceptance": false,
  "summary": "A BDD style testing tool for Powershell",
  "title": "Pester",
  "version": "3.0.0",
  "tags": [
    "powershell",
    "unit",
    "testing",
    "bdd",
    "tdd",
    "mocking"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}