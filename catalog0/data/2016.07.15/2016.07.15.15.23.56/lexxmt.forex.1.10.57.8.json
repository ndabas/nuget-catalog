{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "LEXXMT LTD",
  "catalog:commitId": "4a33e30c-8f17-4d4d-9955-e089c63cb40d",
  "catalog:commitTimeStamp": "2016-07-15T15:23:56.4219907Z",
  "copyright": "LEXXMT LTD, VisualTradingAPI.com",
  "created": "2015-12-10T10:44:34.51Z",
  "description": "Enables programmers to access virtually unlimited number of forex brokersâ€™ price feeds and simultaneously execute orders on all connected terminals. With tick delivery delay under 10 - 15ms (Subject to your application processing speed and windows thread quantum length).\nusing System;\nusing System.Collections;\nusing System.Threading;\nusing Lexxmt.Forex;\n\nnamespace Demo \n{\n\tclass Program : IMarketListener\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tSystem.Console.WriteLine(\"Lexxmt.Forex API Demo\");\n\n\t\t\tvar tick = Market.GetApproximateQuote(\"EURUSD\");\n\t\t\tConsole.WriteLine(\"BID {0} ASK {1}\", tick.Bid, tick.Ask);\n\n\t\t\tvar app = new Program();\n\t\t\tMarket.Connection.Subscribe(app);\n\t\t\tfor (; ; )\n\t\t\t{\n\t\t\t\tif(Market.BoostProcessing(int.MaxValue) != int.MaxValue)\n\t\t\t\t\tThread.Sleep(1);\n\t\t\t}\n\t\t}\n\n\t\t#region Implementation of IMarketListener\n\n\t\t/// <summary>\n\t\t/// Coroutine: We get new broker!\n\t\t/// </summary>\n\t\t/// <param name=\"terminal\">Broker terminal object</param>\n\t\t/// <returns>Yield object or break</returns>\n\t\tIEnumerator IMarketListener.RegisterBroker(Terminal terminal)\n\t\t{\n\t\t\tSystem.Console.WriteLine(\"Enter broker: {0}\", terminal.Name);\n\t\t\tyield break;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Coroutine: Broker gone...\n\t\t/// </summary>\n\t\t/// <param name=\"terminal\">Broker terminal object</param>\n\t\t/// <returns>Yield object or break</returns>\n\t\tIEnumerator IMarketListener.UnregisterBroker(Terminal terminal)\n\t\t{\n\t\t\tSystem.Console.WriteLine(\"Part broker: {0}\", terminal.Name);\n\t\t\tyield break;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Coroutine: Trading bridge is enabled on specific terminal/broker\n\t\t/// </summary>\n\t\t/// <param name=\"terminal\">Broker terminal object</param>\n\t\t/// <returns>Yield object or break</returns>\n\t\tIEnumerator IMarketListener.EnableTrading(Terminal terminal)\n\t\t{\n\t\t\tSystem.Console.WriteLine(\"Enable bridge: {0}\", terminal.Name);\n\t\t\tyield break;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Coroutine: Trading bridge disabled on specific terminal/broker\n\t\t/// </summary>\n\t\t/// <param name=\"terminal\">Broker terminal object</param>\n\t\t/// <returns>Yield object or break</returns>\n\t\tIEnumerator IMarketListener.DisableTrading(Terminal terminal)\n\t\t{\n\t\t\tSystem.Console.WriteLine(\"Disable bridge: {0}\", terminal.Name);\n\t\t\tyield break;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Coroutine: We get price update from broker\n\t\t/// </summary>\n\t\t/// <param name=\"terminal\">Broker terminal object</param>\n\t\t/// <param name=\"symbol\">Lexxmt.Forex API symbol</param>\n\t\t/// <param name=\"tick\">Tick, that rise this event</param>\n\t\t/// <returns>Yield object or break</returns>\n\t\tIEnumerator IMarketListener.UpdateSymbol(Terminal terminal, Symbol symbol, Tick tick)\n\t\t{\n\t\t\tSystem.Console.WriteLine(\"{0}:{1}[{2:F3}/{3}]-{4} {5}/{6} ({7}) == {8}\", tick.Timestamp.ToString(\"dd'.'MM'.'yyyy HH':'mm':'ss.fff\"), tick.FarDateTime, tick.Age, tick.IsExpired ? \"Expired\" : \"Valid\", tick.Symbol, tick.Bid, tick.Ask, tick.Age, terminal.Name);\n\t\t\tyield break;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Coroutine: Internal communications\n\t\t/// </summary>\n\t\t/// <param name=\"terminal\">Broker terminal object</param>\n\t\t/// <param name=\"header\">response header</param>\n\t\t/// <param name=\"packet\">response payload</param>\n\t\t/// <returns>Yield object or break</returns>\n\t\tIEnumerator IMarketListener.DeliverMessage(Terminal terminal, MshpxResponseHeader header, MshpxPacket packet)\n\t\t{\n\t\t\tyield break;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// Expert Advice\n\t\t/// </summary>\n\t\t/// <param name=\"advice\">Advice information</param>\n\t\t/// <returns></returns>\n\t\tpublic IEnumerator Advice(IAdviceInfo advice)\n\t\t{\n\t\t\tyield break;\n\t\t}\n\n\t\t#endregion\n\n\t}\n}\n",
  "id": "Lexxmt.Forex",
  "isPrerelease": false,
  "lastEdited": "2016-07-15T15:23:30.82Z",
  "licenseUrl": "http://www.visualtradingapi.com/",
  "listed": false,
  "packageHash": "KaXPKFdxz1Ga7yv60hJDvI1qTDHJ8XecBmJIft2PV237hnTW2/gKLqEBFdMCbuv31j5K1eJ/gxaarlaNq7r/Fg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 588441,
  "projectUrl": "http://www.visualtradingapi.com/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "General release.",
  "requireLicenseAcceptance": false,
  "summary": "This is .NET library for multi-terminal  Expert Advisors / automated Forex trading.    \nvar tick = Lexxmt.Forex.Market.GetApproximateQuote(\"EURUSD\");",
  "title": "Lexxmt.Forex",
  "verbatimVersion": "1.10.57.8",
  "version": "1.10.57.8",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#Lexxmt.Forex.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1460,
      "fullName": "Lexxmt.Forex.nuspec",
      "length": 4782,
      "name": "Lexxmt.Forex.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#build/Program.cs",
      "@type": "PackageEntry",
      "compressedLength": 942,
      "fullName": "build/Program.cs",
      "length": 3396,
      "name": "Program.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#lib/net40/Lexxmt.Forex.dll",
      "@type": "PackageEntry",
      "compressedLength": 23348,
      "fullName": "lib/net40/Lexxmt.Forex.dll",
      "length": 52224,
      "name": "Lexxmt.Forex.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#lib/net40/Lexxmt.Forex.XML",
      "@type": "PackageEntry",
      "compressedLength": 9740,
      "fullName": "lib/net40/Lexxmt.Forex.XML",
      "length": 85703,
      "name": "Lexxmt.Forex.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#native/x64/liblte57.dll",
      "@type": "PackageEntry",
      "compressedLength": 32866,
      "fullName": "native/x64/liblte57.dll",
      "length": 57856,
      "name": "liblte57.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#native/x64/libmshpx.dll",
      "@type": "PackageEntry",
      "compressedLength": 66656,
      "fullName": "native/x64/libmshpx.dll",
      "length": 152064,
      "name": "libmshpx.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#native/x86/liblte57.dll",
      "@type": "PackageEntry",
      "compressedLength": 28086,
      "fullName": "native/x86/liblte57.dll",
      "length": 47104,
      "name": "liblte57.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#native/x86/libmshpx.dll",
      "@type": "PackageEntry",
      "compressedLength": 54073,
      "fullName": "native/x86/libmshpx.dll",
      "length": 124928,
      "name": "libmshpx.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#native/Lexxmt.Forex.chm",
      "@type": "PackageEntry",
      "compressedLength": 365238,
      "fullName": "native/Lexxmt.Forex.chm",
      "length": 399059,
      "name": "Lexxmt.Forex.chm"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#tools/install.ps1",
      "@type": "PackageEntry",
      "compressedLength": 270,
      "fullName": "tools/install.ps1",
      "length": 592,
      "name": "install.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#tools/Uninstall.ps1",
      "@type": "PackageEntry",
      "compressedLength": 271,
      "fullName": "tools/Uninstall.ps1",
      "length": 607,
      "name": "Uninstall.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.15.15.23.56/lexxmt.forex.1.10.57.8.json#tools/VS.psm1",
      "@type": "PackageEntry",
      "compressedLength": 1147,
      "fullName": "tools/VS.psm1",
      "length": 3856,
      "name": "VS.psm1"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}