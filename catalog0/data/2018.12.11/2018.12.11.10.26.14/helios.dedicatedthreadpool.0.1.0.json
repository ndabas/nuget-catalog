{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.10.26.14/helios.dedicatedthreadpool.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aaron Stannard, Roger Alsing",
  "catalog:commitId": "fb78ab0a-6015-4a47-b8ab-7a57179e3368",
  "catalog:commitTimeStamp": "2018-12-11T10:26:14.6115054Z",
  "copyright": "Copyright Â© Roger Alsing, Aaron Stannard 2015",
  "created": "2015-03-18T04:14:41.9Z",
  "description": "An instanced, dedicated ThreadPool for eliminating \"noisy neighbor\" problems on the CLR ThreadPool",
  "id": "Helios.DedicatedThreadPool",
  "isPrerelease": false,
  "lastEdited": "2018-12-11T10:26:11.233Z",
  "licenseUrl": "https://github.com/helios-io/DedicatedThreadPool/blob/master/LICENSE",
  "listed": true,
  "packageHash": "oijtYHBE7EoMFlmjFL/2D35VYzSsswoxiOepVusiXJJBbNXWma2r3qQ84oeQv0SVb+SQ0dWPxUbcU24P2p7sAw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15769,
  "projectUrl": "https://github.com/helios-io/DedicatedThreadPool",
  "published": "2015-03-18T04:14:41.9Z",
  "releaseNotes": "Initial build of `DedicatedThreadPool`. Works via the following API:\n```csharp\nusing (var threadPool = new Helios.Concurrency.DedicatedThreadPool(\nnew DedicatedThreadPoolSettings(numThreads)))\n{\nthreadPool.QueueUserWorkItem(() => { ... }));\n}\n```\nCreates a `DedicatedThreadPool` object which allocates a fixed number of threads, each with their own independent task queue.\nThis `DedicatedThreadPool` can also be used in combination with a `DedicatedThreadPoolTaskScheduler` for TPL support, like this:\n```csharp\n//use 3 threads\nvar Pool = new DedicatedThreadPool(new DedicatedThreadPoolSettings(3));\nvar Scheduler = new DedicatedThreadPoolTaskScheduler(Pool);\nvar Factory = new TaskFactory(Scheduler);\nvar task = Factory.StartNew(() =>\n{\n//work that'll run on the dedicated thread pool...\n});\ntask.Wait();\n```",
  "requireLicenseAcceptance": false,
  "summary": "",
  "verbatimVersion": "0.1.0",
  "version": "0.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.10.26.14/helios.dedicatedthreadpool.0.1.0.json#Helios.DedicatedThreadPool.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 789,
      "fullName": "Helios.DedicatedThreadPool.nuspec",
      "length": 1693,
      "name": "Helios.DedicatedThreadPool.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.10.26.14/helios.dedicatedthreadpool.0.1.0.json#content/Helios.Concurrency.DedicatedThreadPool.cs",
      "@type": "PackageEntry",
      "compressedLength": 2748,
      "fullName": "content/Helios.Concurrency.DedicatedThreadPool.cs",
      "length": 11405,
      "name": "Helios.Concurrency.DedicatedThreadPool.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.10.26.14/helios.dedicatedthreadpool.0.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "threads",
    "threadpool",
    "fiber",
    "helios",
    "akka.net",
    "akka"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}