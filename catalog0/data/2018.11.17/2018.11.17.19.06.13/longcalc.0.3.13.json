{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "0641ee36-f0de-4515-a341-8fdf126c1771",
  "catalog:commitTimeStamp": "2018-11-17T19:06:13.4400244Z",
  "copyright": "Copyright 2018",
  "created": "2018-11-17T19:01:36.553Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2018-11-17T19:05:49.967Z",
  "licenseUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/LICENSE.txt",
  "listed": true,
  "packageHash": "3vxKcVSvtYRzaAkoENZWoK1STQ4f0Xyp6eysTyq+DRgFbQcDh/4SYdDC4e93y2sGaIJrpHPuxHtlzQFhw+ghHA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 442452,
  "published": "2018-11-17T19:01:36.553Z",
  "releaseNotes": "Unsigned Assembly\n\nMpir.NET version 0.4.0 used by this assembly has the bug in it that if x is of type long and x is negative, new mpz_t(x) returns a value equal to the absolute value of x. Similarly, if x is of type mpz_t and x is negative and larger than long.MinValue in value, (long)x returns a value equal to the absolute value of x.\n\nAfter these bugs were discovered, (and the explicit cast bug was discovered after the mpz_t object creation bug) earlier versions of this LongCalc assembly applied workarounds to try to keep the Mpir.NET bugs from carrying over to bf object creations or explicit casts from bf to long variables. One possibility still caused a problem, and that was the possibility of the explict cast (long)x, where x is a bf object whose value is equal to long.MinValue. This current release fixes that problem as well, and that fix is the only change in this version from version 0.3.12.\n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2017) and using Mpir.net for the underlying integer math, supplies a variety of math functions and utilities with precisions at least as large as 2,000,000 base 10 digits. The underlying objects are bf (for 'big float' real values comprised of an mpz_t extended integer part from Mpir.net and a base 2 int64 exponent), bcr (for complex numbers expressed in the rectangular coordinates of a bf real part and a bf imaginary part), and bcp (for complex numbers expressed in the polar coordinates of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.3.13",
  "version": "0.3.13",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1382,
      "fullName": "LongCalc.nuspec",
      "length": 3020,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 32266,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 99328,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.19.06.13/longcalc.0.3.13.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}