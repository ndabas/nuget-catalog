{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Microsoft",
  "catalog:commitId": "3f229053-37c5-4163-b322-30adea4004e3",
  "catalog:commitTimeStamp": "2024-04-21T15:35:38.4876574Z",
  "copyright": "Copyright c Microsoft Corporation. All rights reserved.",
  "created": "2015-08-21T20:03:28.46Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#deprecation",
    "alternatePackage": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#deprecation/alternatePackage",
      "id": "Azure.Messaging.ServiceBus",
      "range": "*"
    },
    "message": "Please note, this package is obsolete and will no longer be maintained after 9/30/2026. Microsoft encourages you to upgrade to the replacement package, Azure.Messaging.ServiceBus, to continue receiving updates. Refer to the migration guide (https://aka.ms/azsdk/net/migrate/sb) for guidance on upgrading. Refer to our deprecation policy (https://aka.ms/azsdk/support-policies) for more details.",
    "reasons": [
      "Other"
    ]
  },
  "description": "Use this for Microsoft Azure Service Bus Queues, Topics, EventHub and Relay backend operations. \n\t\t\nIt adds Microsoft.ServiceBus.dll along with related configuration files to your project. This library allows AMQP 1.0 to be used as one of the protocols for communication with Microsoft Azure Service Bus.\n\t\t\nFor more information on Messaging features, please visit: http://azure.microsoft.com/en-us/documentation/services/service-bus/\nFor more information on Event Hub features, please visit: http://go.microsoft.com/fwlink/?LinkID=403957\n\t\t\nPlease note that this package requires .Net Framework 4.5 Full Profile.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#frameworkassemblygroup/.netframework4.5",
    "assembly": [
      "System.ServiceModel",
      "System.Xml",
      "System.Runtime.Serialization"
    ],
    "targetFramework": ".NETFramework4.5"
  },
  "iconUrl": "http://go.microsoft.com/fwlink/?LinkID=288890",
  "id": "WindowsAzure.ServiceBus",
  "isPrerelease": false,
  "lastEdited": "2024-04-21T15:35:19.973Z",
  "licenseUrl": "http://go.microsoft.com/fwlink/?LinkId=218949",
  "listed": true,
  "packageHash": "n/cD3Idoz/F74JhQHrOvmLA47m2XPvxlMSIqVhbxBTXJ3U/VR6Qt7+qAZS1xPxs0Fp8t2kBxQOErc7MSP43wNA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1281253,
  "projectUrl": "http://go.microsoft.com/fwlink/?LinkId=218964",
  "published": "2015-08-21T20:03:28.493Z",
  "releaseNotes": "Build: 2.0.50398.0\n• General: Compiled against .Net 4.5 \n    - if you have a .Net 4.0 project you should recompile against .Net 4.5 instead since 4.0 project cannot reference 4.5 dll. \n• General: Removal of Asynchronous Programming Model (APM) API for all Messaging and EventHub classes. \n    - If your application use the old APM API you should switch over to use the Task-based Asynchronous Pattern (TAP) API instead \n    - e.g. instead of using QueueClient.BeginSend/EndSend, please use QueueClient.SendAsync. \n    - For more information on interop between APM and TAP, please refer to https://msdn.microsoft.com/en-us/library/hh873178(v=vs.110).aspx \n    - Note: support for CancellationToken in the TAP model will be implemented in later SDK update. \n• General: Removal of Notification Hub API from Microsoft.ServiceBus.dll. \n    - To get the NotificationHub functionality please use the Microsoft.Azure.NotificationHubs nuget package instead: http://www.nuget.org/packages/Microsoft.Azure.NotificationHubs/ \n• General: ServiceBusEnvironment.SystemConnectivity.Mode now support explicit Https mode. \n• EventHub/Messaging: AutoDetect will now perform detection in both Sbmp and Amqp transport. \n    - Detection happens at the first operation per AppDomain, and the purpose of the detection is to determine if the low level host and port requirement are functional. \n    - Once a detection completes the state is not changed unless AppDomain is unloaded or system network state has changed. \n    - The perference of mode used is tcp -> https (port 443) -> http (port 80). \n• EventHub/Messaging: Amqp transport will always use WebSocket implementation when using Https or Http mode. \n• EventHub/Messaging: New Api MessagingFactory.ResetConnection() to support manual internal connection reset. \n    - This gives user a more predictable control on when a transport level connection should be recreated. \n    - This is only implmented for Amqp transport. Other transports will throw NotSupportedException. \n• EventHub: Low level data from the Amqp’s message Annotation section will now show up in EventData.SystemProperty \n• EventHub: Remove DataContractSerializer dependency from EventHub by removing EventData.GetBody() \n    - User should use EventData.GetBodyStream() or EventData.GetBytes() to get the body stream/bytes, and pass it to the serializer if desired. \n• EventHub: Client side support for future link level redirection work. \n• EventHub: Connection string now support additional connection param for future link level redirection work: HostName, AmqpSecurityScheme, CredentialType \n• Messaging: QueueClient and SubscriptionClient now exposes RenewMessageLock(lockToken) Api. \n• Messaging: Optimization on connection/factory instances when creating client using XXXClient.CreateFromConnectionString() \n    - Multiple client creation using the same connection string (within the same AppDomain) will now use the same cached MessagingFactory instance. \n    - Connection string equality will now be based on key-value pair comparison rather than plain-string comparison. This means the ordering of the key-value pair within the string will not matter anymore. \n    - Note: MessagingFactory.CreateFromConnectionString will not be affected and will still create new instances everytime the method is called.",
  "requireLicenseAcceptance": true,
  "summary": "Client library for Microsoft Azure Service Bus Queues, Topics, EventHub and Relay backend operations.",
  "title": "Microsoft Azure Service Bus",
  "verbatimVersion": "3.0.1",
  "version": "3.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#dependencygroup/microsoft.windowsazure.configurationmanager",
          "@type": "PackageDependency",
          "id": "Microsoft.WindowsAzure.ConfigurationManager",
          "range": ""
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#WindowsAzure.ServiceBus.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2247,
      "fullName": "WindowsAzure.ServiceBus.nuspec",
      "length": 5625,
      "name": "WindowsAzure.ServiceBus.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#content/app.config.install.xdt",
      "@type": "PackageEntry",
      "compressedLength": 754,
      "fullName": "content/app.config.install.xdt",
      "length": 4453,
      "name": "app.config.install.xdt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#content/web.config.install.xdt",
      "@type": "PackageEntry",
      "compressedLength": 754,
      "fullName": "content/web.config.install.xdt",
      "length": 4453,
      "name": "web.config.install.xdt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#lib/net45-full/Microsoft.ServiceBus.dll",
      "@type": "PackageEntry",
      "compressedLength": 1144241,
      "fullName": "lib/net45-full/Microsoft.ServiceBus.dll",
      "length": 3609296,
      "name": "Microsoft.ServiceBus.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#lib/net45-full/Microsoft.ServiceBus.xml",
      "@type": "PackageEntry",
      "compressedLength": 119868,
      "fullName": "lib/net45-full/Microsoft.ServiceBus.xml",
      "length": 1441236,
      "name": "Microsoft.ServiceBus.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.21.15.35.38/windowsazure.servicebus.3.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9483,
      "fullName": ".signature.p7s",
      "length": 9483,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ServiceBus",
    "Microsoft",
    "Azure",
    "AppFabric",
    "Messaging",
    "PubSub",
    "Publish",
    "Subscribe",
    "Queue",
    "Topic",
    "Relay",
    "Service",
    "Bus",
    "AMQP",
    "OASIS",
    "windowsazureofficial",
    "EventHub",
    "Event"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}