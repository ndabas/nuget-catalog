{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "MLL",
  "catalog:commitId": "b02d3b1c-e124-4950-85a5-df07bd99646e",
  "catalog:commitTimeStamp": "2024-08-14T01:32:37.2425117Z",
  "copyright": "MLL",
  "created": "2024-08-13T13:43:52.17Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#deprecation",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "原生Socket实现用于TCP监听 TCPServer监听 UDP监听 HTTP 监听\n1.2.0\n      增加Json/form-data数据直接转为实体对象给目标函数\n      路由标签使用方法时 方法所在类必须继承HttpRequest基类\n\n\n\n使用方式：\n\n```\n //TCP监听\n var listener = new TCPServer(2020);\n listener.StartListen(s => {\n     s.OnConnection = e => Console.WriteLine($@\"OnConnection：{e.RemoteEndPoint}\");\n     s.OnReceived = (e, data) =>\n     {\n         Random random = new Random();\n         int randomNum = random.Next(0, 1000000);\n         s.Send(Encoding.UTF8.GetBytes($@\"ok>{s.RemoteEndPoint.ToString()}>>{randomNum}\"));\n         Console.WriteLine($@\"OnData：{e.RemoteEndPoint}，data：{Encoding.UTF8.GetString(data)}\");\n         };\n     s.OnClosed = e => Console.WriteLine($@\"OnClosed：{e.RemoteEndPoint}\");\n     s.OnError = (conn, str, e) => Console.WriteLine($@\"{conn.OnConnection} {str}：{e.Message}\");\n });\n\n //UDP监听\n var UDPlistener = new UDPServer(2020);\n UDPlistener.StartListen(s => {\n     s.OnReceived = (e, data) =>\n     {\n         Random random = new Random();\n         int randomNum = random.Next(0, 1000000);\n         s.Send(s.RemoteEndPoint,Encoding.UTF8.GetBytes($@\"ok>{s.RemoteEndPoint.ToString()}>>{randomNum}\"));\n         Console.WriteLine($@\"UDP OnData：{e.RemoteEndPoint}，data：{Encoding.UTF8.GetString(data)}\");\n     };\n     s.OnError = (conn, str, e) => Console.WriteLine($@\"{conn.RemoteEndPoint.ToString} {str}：{e.Message}\");\n });\n\n //HTTP监听\n var httplistener = new HTTPServer(2021);\n httplistener.SetPath(MethodEnum.GET, \"/start\");\n httplistener.SetPath(MethodEnum.POST, \"/start\");\n httplistener.StartListen(s =>\n {\n     //s.OnConnection = e => Console.WriteLine($@\"OnConnection：{e.RemoteEndPoint}\");\n     s.OnReceived = (e, Req) =>\n     {\n         Random random = new Random();\n         int randomNum = random.Next(0, 1000000);\n         s.Send($@\"ok>{s.RemoteEndPoint.ToString()}>>{randomNum}\");\n         Console.WriteLine($@\"OnData：{e.RemoteEndPoint}，data：{Req.Body}\");\n     };\n });\n\n//HTTP监听路由写法：\n\n public class Workers : HTTPRequest\n {\n     [Router(\"/start1\", MethodEnum.GET)]\n     public string Tests(string UserAccount, int Password)\n     {\n         Console.WriteLine(\"Body+>\"+Content);\n          return (new { code = 200, msg = \"ok\" }).ObjectToJson();\n     }\n\n     [Router(\"/start1\", MethodEnum.POST)]\n     public object Tests2(string asd,List<int> aas)\n     {\n         foreach (var item in Headers)\n         {\n             Console.WriteLine(item.Key+\":\"+item.Value);\n         }\n\n         return new { code = 200, msg = \"ok\" };\n     }\n     [Router(\"/start2\", MethodEnum.POST)]\n     public object Tests3(Testss testss)\n     {\n         foreach (var item in Headers)\n         {\n             Console.WriteLine(item.Key + \":\" + item.Value);\n         }\n\n         return new { code = 200, msg = \"ok\" };\n     }\n }\n public class Testss\n {\n     public string? UserAccount { get; set; }\n     public string? Password { get; set; }\n }\n```",
  "id": "ServerListerner",
  "isPrerelease": false,
  "lastEdited": "2024-08-14T01:32:29.807Z",
  "listed": false,
  "packageHash": "QS2qAI9gy01mOigdw4skP/9xEsS6/ZxFAyUC8BmgT+Y4VlAtIIWQuOCgXyNDVsKN2P+MJ9orSETdZxAmkrw65A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35811,
  "published": "1900-01-01T00:00:00Z",
  "readmeFile": "使用方式.md",
  "repository": "",
  "title": "ServerListener",
  "verbatimVersion": "1.2.2",
  "version": "1.2.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#dependencygroup/.netstandard2.1/system.text.json",
          "@type": "PackageDependency",
          "id": "System.Text.Json",
          "range": "[8.0.4, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#ServerListerner.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1319,
      "fullName": "ServerListerner.nuspec",
      "length": 3843,
      "name": "ServerListerner.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#lib/netstandard2.1/ServerListerner.dll",
      "@type": "PackageEntry",
      "compressedLength": 17909,
      "fullName": "lib/netstandard2.1/ServerListerner.dll",
      "length": 44032,
      "name": "ServerListerner.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F.md",
      "@type": "PackageEntry",
      "compressedLength": 851,
      "fullName": "使用方式.md",
      "length": 3410,
      "name": "使用方式.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.14.01.32.37/serverlisterner.1.2.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12930,
      "fullName": ".signature.p7s",
      "length": 12930,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "TCP监听",
    "TCPServer",
    "UDP监听",
    "HTTP监听"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}