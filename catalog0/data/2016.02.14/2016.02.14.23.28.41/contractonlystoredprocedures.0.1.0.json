{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Abraham Heidebrecht",
  "catalog:commitId": "c7c962f5-875e-4b3f-a42d-c9f10e635ac0",
  "catalog:commitTimeStamp": "2016-02-14T23:28:41.1482437Z",
  "created": "2016-02-14T23:28:06.2Z",
  "description": "Easily call stored procedures by writing an interface that describes their names, inputs, and results. Uses the CodeOnlyStoredProcedures library to acually execute the stored procedures.",
  "id": "ContractOnlyStoredProcedures",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "gvnaMMZzVTP4CcVyDs4V2gS9JU9HKi70KjqMbPqs+Uke+jncdYIKvKJmJ141xjNu9ntIddGrv7Cvd6+QOgWOzA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 38586,
  "projectUrl": "https://github.com/abe545/ContractOnlyStoredProcedures",
  "published": "2016-02-14T23:28:06.2Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/.json#gpref",
      "reference": {
        "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json#gpref/ref/contractonlystoredprocedures.dll",
        "file": "ContractOnlyStoredProcedures.dll"
      }
    }
  },
  "releaseNotes": "0.1.0\nInitial Release\n* Includes ability to automatically implement an interface to call stored procedures via the methods defined in the interface.\n* Should support all basic stored procedures supported by CodeOnlyStoredProcedures library such as multiple result sets, output parameters,\n  and automatic hierarchy building from multiple result sets.\n* Because it uses the CodeOnlyStoredProcedures library, you can setup global transformers to massage the data, and even map an interface\n  to a concrete implementation.",
  "requireLicenseAcceptance": false,
  "title": "Contract Only Stored Procedures",
  "verbatimVersion": "0.1.0",
  "version": "0.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json#dependencygroup/.netframework4.0/codeonlystoredprocedures",
          "@type": "PackageDependency",
          "id": "CodeOnlyStoredProcedures",
          "range": "[2.2.4, )"
        }
      ],
      "targetFramework": ".NETFramework4.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.14.23.28.41/contractonlystoredprocedures.0.1.0.json#dependencygroup/.netframework4.5/codeonlystoredprocedures",
          "@type": "PackageDependency",
          "id": "CodeOnlyStoredProcedures",
          "range": "[2.2.4, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    }
  ],
  "tags": [
    "StoredProcedure",
    "EntityFramework",
    "EF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}