{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Evgeny Zelenov",
  "catalog:commitId": "2a5a94f7-860e-45c4-ba4a-8390eef3fee9",
  "catalog:commitTimeStamp": "2021-07-29T13:24:38.9999219Z",
  "copyright": "Evgeny Zelenov",
  "created": "2021-07-29T13:22:12.603Z",
  "description": "Lease expiration watcher for HarshiCorp Vault and VaultSharp client. Renews secrets' leases on time, retries multiple times on fail, gives all logging possibilities via events and checks lease expiration for non-renewable secrets",
  "id": "VaultLeaseWatcher",
  "isPrerelease": false,
  "lastEdited": "2021-07-29T13:24:14.46Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "3AWoVHyKMrzf8tZG6Vs2VSEK0TQLaSCBzt2PO0Ls07LiwFfKAGct8untRMAND9ElcWJq5RUFIuWUiSELnrKFBQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25431,
  "projectUrl": "https://github.com/Zelenov/VaultLeaseWatcher",
  "published": "2021-07-29T13:22:12.603Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "0.0.2",
  "version": "0.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json#VaultLeaseWatcher.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 546,
      "fullName": "VaultLeaseWatcher.nuspec",
      "length": 1028,
      "name": "VaultLeaseWatcher.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json#lib/netstandard2.0/VaultLeaseWatcher.dll",
      "@type": "PackageEntry",
      "compressedLength": 12541,
      "fullName": "lib/netstandard2.0/VaultLeaseWatcher.dll",
      "length": 30208,
      "name": "VaultLeaseWatcher.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json#lib/netstandard2.0/VaultLeaseWatcher.xml",
      "@type": "PackageEntry",
      "compressedLength": 89,
      "fullName": "lib/netstandard2.0/VaultLeaseWatcher.xml",
      "length": 134,
      "name": "VaultLeaseWatcher.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 631,
      "fullName": "LICENSE",
      "length": 1071,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.07.29.13.24.38/vaultleasewatcher.0.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "harshicorp",
    "vault",
    "vaultsharp",
    "secrets",
    "lease",
    "watcher",
    "background",
    "expiration",
    "renew"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}