{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Val Melamed",
  "catalog:commitId": "a26877b9-20e9-4de9-b6ed-56530b6d9921",
  "catalog:commitTimeStamp": "2018-11-18T18:14:21.4373147Z",
  "copyright": "Copyright Â© vm 2013-2015",
  "created": "2016-01-01T00:40:52.463Z",
  "description": "Features:\n            * The dump output is separated from the targeted dump media by the familiar TextWriter interface.\n            * The programmer can dump the value of any type of object: primitive and  enum types (including those marked with FlagsAttribute), custom classes, struct-s, collections, etc.\n            * For complex type objects (classes and structs) the dumper outputs the names and the values of the properties.\n            * The dump is recursive: the complex members of the dumped object are dumped indented.\n            * Dumps the elements of sequences (arrays, lists, dictionaries, etc.)\n            * Handles circular references.\n            * The developers can easily customize various aspects of the dump by using an attribute (DumpAttribute) on the classes and their members, such as:\n                - the order in which the properties are dumped;\n                - formatting of the property names and/or values;\n                - suppressing the dump of some uninteresting properties;\n                - masking the values of sensitive (e.g. PII) properties;\n                - the depth of the recursion into complex members;\n                - the maximum number of dumped elements of sequence properties.\n            * The dumper picks the customization attributes also from buddy classes declared with MetadataTypeAttribute.\n            * Even if the class doesn't have any attributes, the programmer can still pass a metadata class as a separate parameter to the dumping method. This allows for control over the dump of BCL and third party classes.\n            * Build and tested with .NET 4.0, 4.6. This package targets .NET 4.0.",
  "id": "AspectObjectDumper",
  "isPrerelease": false,
  "lastEdited": "2018-11-18T18:14:01.063Z",
  "licenseUrl": "https://aspectobjectdumper.codeplex.com/license",
  "listed": true,
  "packageHash": "vPaA+xSvAoisMeFoV7PlLulTSypiMNAjPP69UUMwaPBbxmfgktlzS0eHNYoykO3aJOMBFExXScHSf+TZW2dfgQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 56774,
  "projectUrl": "https://aspectobjectdumper.codeplex.com/",
  "published": "2016-01-01T00:40:52.463Z",
  "releaseNotes": "ATTENTION: possible breaking change.\n            The methods registering metadata information - the overloaded family 'ClassMetadataRegistrar.Register' - were added a new parameter `bool replace = false`.\n            If the parameter is false (the default) and the method is invoked to replace existing mapping of a type to different pair of dump metadata type and `DumpAttribute` instance, it will throw `InvalidOperationException`.\n            This will allow to detect confusing dump behavior, when one registrar registers some metadata and another replaces it with different metadata. To preserve the old behavior or to allow overriding of dump behavior, set\n            the parameter 'replace = true'.",
  "requireLicenseAcceptance": false,
  "summary": "Easy to integrate and easy to use component that dumps the value of a .NET object in a easy to read text form. Helpful for debugging and logging purposes.",
  "verbatimVersion": "1.5.0",
  "version": "1.5.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json#dependencygroup/commonservicelocator",
          "@type": "PackageDependency",
          "id": "CommonServiceLocator",
          "range": "[1.3.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json#AspectObjectDumper.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1445,
      "fullName": "AspectObjectDumper.nuspec",
      "length": 3324,
      "name": "AspectObjectDumper.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json#lib/net40/vm.Aspects.Diagnostics.ObjectDumper.dll",
      "@type": "PackageEntry",
      "compressedLength": 29800,
      "fullName": "lib/net40/vm.Aspects.Diagnostics.ObjectDumper.dll",
      "length": 87040,
      "name": "vm.Aspects.Diagnostics.ObjectDumper.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json#lib/net40/vm.Aspects.Diagnostics.ObjectDumper.XML",
      "@type": "PackageEntry",
      "compressedLength": 11515,
      "fullName": "lib/net40/vm.Aspects.Diagnostics.ObjectDumper.XML",
      "length": 83639,
      "name": "vm.Aspects.Diagnostics.ObjectDumper.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.18.18.14.21/aspectobjectdumper.1.5.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "dump",
    "object",
    ".net",
    "diagnostics",
    "debug",
    "log",
    "aspects"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}