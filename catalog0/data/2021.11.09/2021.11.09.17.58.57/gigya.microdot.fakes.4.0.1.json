{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gigya.Microdot.Fakes",
  "catalog:commitId": "55ae15d9-90e9-49b8-a615-dd90bde8d382",
  "catalog:commitTimeStamp": "2021-11-09T17:58:57.3733283Z",
  "copyright": "Â© 2021 Gigya Inc.",
  "created": "2021-11-08T21:49:19.257Z",
  "description": "Tools to help write tests for Microdot services.",
  "id": "Gigya.Microdot.Fakes",
  "isPrerelease": false,
  "lastEdited": "2021-11-09T17:57:13.38Z",
  "listed": false,
  "packageHash": "7YUwupDxbeL/s2VFFyCd9+hQumODtuVduf5TtTIXNrdfLod5L5F/GyQatQSx0FSkQDeHDIFkyJT7tHEn8Q02ew==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25298,
  "projectUrl": "https://github.com/gigya/microdot/blob/master/LICENSE.md",
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "verbatimVersion": "4.0.1",
  "version": "4.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#dependencygroup/net5.0/gigya.microdot.configuration",
          "@type": "PackageDependency",
          "id": "Gigya.Microdot.Configuration",
          "range": "[4.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#dependencygroup/net5.0/gigya.microdot.ninject",
          "@type": "PackageDependency",
          "id": "Gigya.Microdot.Ninject",
          "range": "[4.0.1, )"
        }
      ],
      "targetFramework": "net5.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#Gigya.Microdot.Fakes.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 467,
      "fullName": "Gigya.Microdot.Fakes.nuspec",
      "length": 928,
      "name": "Gigya.Microdot.Fakes.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#lib/net5.0/Gigya.Microdot.Fakes.runtimeconfig.json",
      "@type": "PackageEntry",
      "compressedLength": 158,
      "fullName": "lib/net5.0/Gigya.Microdot.Fakes.runtimeconfig.json",
      "length": 254,
      "name": "Gigya.Microdot.Fakes.runtimeconfig.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#lib/net5.0/Gigya.Microdot.Fakes.dll",
      "@type": "PackageEntry",
      "compressedLength": 13241,
      "fullName": "lib/net5.0/Gigya.Microdot.Fakes.dll",
      "length": 28160,
      "name": "Gigya.Microdot.Fakes.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.11.09.17.58.57/gigya.microdot.fakes.4.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9472,
      "fullName": ".signature.p7s",
      "length": 9472,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "gigya",
    "microdot",
    "microservice",
    "microservices",
    "fakes",
    "mocks",
    "mocking",
    "unit-testing"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}