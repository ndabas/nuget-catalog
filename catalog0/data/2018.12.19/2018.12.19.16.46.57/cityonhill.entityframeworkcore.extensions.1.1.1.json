{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.16.46.57/cityonhill.entityframeworkcore.extensions.1.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brandon Matheson",
  "catalog:commitId": "5fe28e2b-b928-4777-9ba9-0efd51f8e4f5",
  "catalog:commitTimeStamp": "2018-12-19T16:46:57.4208145Z",
  "created": "2018-05-25T16:37:37.977Z",
  "description": "A collection of extensions for Microsoft's Entity Framework Core",
  "id": "Cityonhill.EntityFrameworkCore.Extensions",
  "isPrerelease": false,
  "lastEdited": "2018-12-19T16:46:32.06Z",
  "listed": true,
  "packageHash": "6RgB6Hvd92+2SlE57Y6aTtmbV/UQckdbmHmk/+wDwfBFoif+R4EXrC5/uJEdB7W87MzpwkCPp7XRrtOZc9YINA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14655,
  "projectUrl": "https://github.com/Cityonhill93/Cityonhill.EntityFrameworkCore.Extensions",
  "published": "2018-05-25T16:37:37.977Z",
  "releaseNotes": "----------1.0.0.0----------\nInitial Version\n\n----------1.1.0.0----------\nAdded .WhereIf<T>(predicate, condition), an extension method to IEnumerable<T> which conditionally applies a .Where with predicate (Func<T, bool>) if the given condition (bool) evaluates to true. This is just a shortcut for\n\nvar query=context.Table1;\nif(1==1)\n{\n     query=query.Where(x=>x.Id==1);\n}\n\nUsage:\nvar results=context.Table1.WhereIf(x=>x.Id==1, (1==1))\n\n----------1.1.1.0----------\nUpdated nuget packages",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.1.1",
  "version": "1.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.16.46.57/cityonhill.entityframeworkcore.extensions.1.1.1.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.16.46.57/cityonhill.entityframeworkcore.extensions.1.1.1.json#dependencygroup/.netstandard2.0/microsoft.entityframeworkcore",
          "@type": "PackageDependency",
          "id": "Microsoft.EntityFrameworkCore",
          "range": "[2.0.3, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.16.46.57/cityonhill.entityframeworkcore.extensions.1.1.1.json#Cityonhill.EntityFrameworkCore.Extensions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 708,
      "fullName": "Cityonhill.EntityFrameworkCore.Extensions.nuspec",
      "length": 1474,
      "name": "Cityonhill.EntityFrameworkCore.Extensions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.16.46.57/cityonhill.entityframeworkcore.extensions.1.1.1.json#lib/netstandard2.0/Cityonhill.EntityFrameworkCore.Extensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 2588,
      "fullName": "lib/netstandard2.0/Cityonhill.EntityFrameworkCore.Extensions.dll",
      "length": 6656,
      "name": "Cityonhill.EntityFrameworkCore.Extensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.16.46.57/cityonhill.entityframeworkcore.extensions.1.1.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}