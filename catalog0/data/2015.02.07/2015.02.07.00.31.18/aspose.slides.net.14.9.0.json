{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.31.18/aspose.slides.net.14.9.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "aec3d9e0-c92f-4221-98d0-0c45323e835e",
  "catalog:commitTimeStamp": "2015-02-07T00:31:18.1768218Z",
  "copyright": "ï¿½ Aspose 2002-2013. All Rights Reserved.",
  "created": "2014-11-11T20:26:17.497Z",
  "description": "Aspose.Slides is a PowerPoint management library for working with Microsoft PowerPoint files without using Microsoft PowerPoint. It allows developers to work with PPT, PPS, POT, PPTX, PPSX, POTX and ODP files on ASP.NET web applications, web services and Windows applications.",
  "iconUrl": "http://www.aspose.com/images/products/dotnet/Aspose.Slides_128x128.png",
  "id": "Aspose.Slides.NET",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "packageHash": "KhrSBSfP7YrGal4vQd8BWwNg3nmBuhSGH6mVKLnbO1lnDYzPC4K4L74Qt/dy23FzqqiMgSauK3X/Lmvl2qHBXQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22754358,
  "projectUrl": "http://www.aspose.com/.net/powerpoint-component.aspx",
  "published": "2014-11-11T20:26:17.497Z",
  "releaseNotes": "Aspose.Slides for .NET 14.9.0 Release Notes\nWe are pleased to announce the release of Aspose.Slides for .NET 14.9.0. This release includes new functionality and bug fixes.\n\nUsing Aspose.Slides for .NET you can work with PPT, PPTX, OpenDocument, and other formats in your applications. You can also view, generate, modify, convert, render and print presentations all without using \nMicrosoft PowerPoint.\n\nVisit the documentation to learn how to <a href=\"http://www.aspose.com/docs/display/slidesnet/Getting+Started\"> get started with Aspose.Slides for .NET.\n\nNote this download contains a fully working version of the product, \nhowever without a license set it will run in evaluation mode. To test \nAspose.Slides without these evaluation limitations you can <a href=\"http://www.aspose.com/corporate/purchase/temporary-license.aspx\"> request a free 30-day temporary license.\n\nThe following is a list of changes in this version of Aspose.Slides.\nMinor Changes\n\nSLIDESNET-35803 - Convert a specific PPTX slide to PDF file\nSLIDESNET-35708 - Setting Fill format for SmartArt node\nSLIDESNET-35559 - Get warnings for Fonts substitution in Aspose.Slides\nSLIDESNET-33196 - Support for setting the background color of individual nodes in SmartArt shape\nSLIDESNET-35805 - Missing feature to replace image in presentation file in the new unified version\nSLIDESNET-35588 - Implement animation timeline serialization to PPT\n\nOther Improvements and Changes\nBug Fixes\n\nSLIDESNET-35821 - The animations are not working properly in the generated PPTX file\nSLIDESNET-35811 - Object reference not set to an instance of an object Exception is thrown on PPT to PDF conversion\nSLIDESNET-35807 - NullReference exception on opening presentation\nSLIDESNET-35782 - Text missing after PPTX presentation resaving\nSLIDESNET-35774 - Border issue when opening and saving pptx Presentation\nSLIDESNET-35720 - PPTX to PDF: Vertical axis scale is wrong\nSLIDESNET-35715 - Unknown file format exception is thrown on opening PPT presentation\nSLIDESNET-35710 - NullPointerException on exporting PPTX to PDF\nSLIDESNET-35701 - Animation effects are lost after saving PPT\nSLIDESNET-35696 - Pie Chart Series Labels are outside the chart in generated PNG\nSLIDESNET-35692 - Embeddded videos lost in cloned presentaiton\nSLIDESNET-35664 - Exception on generating XPS using Aspose.Slides\nSLIDESNET-35624 - Resaving animations resets start/end markers\nSLIDESNET-35569 - Image missing in generated PDF when exported using mono environment in Linux\nSLIDESNET-35529 - Bullets are missing in exported PDF\nSLIDESNET-35527 - Text getting overlapped and over sized in generated PDF\nSLIDESNET-35526 - Extra bullets rendered in generated PDF\nSLIDESNET-35455 - PPT password protected presentation reading throws an exception\nSLIDESNET-35320 - PptxUnsupportedFormat Exception on loading password protect PPT presentation\nSLIDESNET-35237 - Converting Slide to Thumbnail does not show the chart in converted file\nSLIDESNET-35232 - Hidden Slide property issue for PPT file\nSLIDESNET-34373 - The line links are missing for rendered smart art in generated PDF\nSLIDESNET-35647 - Argument exception on generating PDF\n\nPublic API Changes\nInheritance from ICollection and generic IEnumerable interfaces have been added to ISmartArtNodeCollection\n\nThe class Aspose.Slides.SmartArt.SmartArtNodeCollection (and related interface  Aspose.Slides.SmartArt.ISmartArtNodeCollection) inherit generic interface IEnumerable<ISmartArtNode> and interface ICollection.\nSmartArtLayoutType.Custom enum value has been added\n\nThis type of SmartArt layout represents diagram with custom template. Custom diagrams only can be loaded from presentation file and can't be created via method ShapeCollection.AddSmartArt(x, y, width, height, SmartArtLayoutType.Custom)\nSmartArtShape class and ISmartArtShape interface have been added\n\nThe Aspose.Slides.SmartArt.SmartArtShape class (and its interface Aspose.Slides.SmartArt.ISmartArtShape) add access to individual shapes inside SmartArt diagram. SmartArtShape can be used to change FillFormat, LineFormat, adding Hyperlinks etc.\n\nNote: SmartArtShape does not supported IShape properties RawFrame, Frame, Rotation, X, Y, Width, Height and thrown System.NotSupportedException when attempting to access them.\n\nExample of usage:\n\nusing (Presentation pres = new Presentation())\n{\n  ISmartArt smart = pres.Slides[0].Shapes.AddSmartArt(10, 10, 400, 300, SmartArtLayoutType.BasicBlockList);\n  ISmartArtNode node = smart.AllNodes[0];\n  foreach (SmartArtShape shape in node.Shapes)\n  {\n    shape.FillFormat.FillType = FillType.Solid;\n    shape.FillFormat.SolidFillColor.Color = Color.Red;\n  }\n  pres.Save(\"out.pptx\", Export.SaveFormat.Pptx);\n}\n\nSmartArtShapeCollection class, ISmartArtShapeCollection interface and ISmartArtNode.Shapes property have been added\n\nThe Aspose.Slides.SmartArt.SmartArtShapeCollection class (and its interface Aspose.Slides.SmartArt.ISmartArtShapeCollection) add access to individual shapes inside SmartArt diagram. Collection contains shapes associated with SmartArtNode. Property SmartArtNode.Shapes returns collections of all shapes associated with the node.\n\nNote: depending of SmartArtLayoutType one SmartArtShape can be shared between several nodes.\n\nusing (Presentation pres = new Presentation())\n{\n  ISmartArt smart = pres.Slides[0].Shapes.AddSmartArt(10, 10, 400, 300, SmartArtLayoutType.BasicBlockList);\n  ISmartArtNode node = smart.AllNodes[0];\n  foreach (SmartArtShape shape in node.Shapes)\n  {\n    shape.FillFormat.FillType = FillType.Solid;\n    shape.FillFormat.SolidFillColor.Color = Color.Red;\n  }\n  pres.Save(\"out.pptx\", Export.SaveFormat.Pptx);\n}\n\nMethods for saving presentation slides with page numbers keeping have been added\n\nThe following methods have been added:\n\nvoid IPresentation.Save(string fname, int[] slides, SaveFormat format);\n\nvoid IPresentation.Save(string fname, int[] slides, SaveFormat format, ISaveOption options);\n\nvoid IPresentation.Save(Stream stream, int[] slides, SaveFormat format);\n\nvoid IPresentation.Save(Stream stream, int[] slides, SaveFormat format, ISaveOption options);\n\nThese methods allow to save specified presentation slides to PDF, XPS, TIFF, HTML formats. The 'slides' array allows to specify page numbers, starting from 1.\nSave(string fname, int[] slides, SaveFormat format);\n\nPresentation presentation = new Presentation(presentationFileName);\nint[] slides = new int[] { 2, 3, 5 }; //Array of slides positions\npresentation.Save(outFileName, slides, SaveFormat.Pdf);\n\nMethods for image replacing have been added to PPImage, IPPImage\n\nNew methods added:\n\nIPPImage.ReplaceImage(byte[] newImageData)\nIPPImage.ReplaceImage(Image newImage)\nIPPImage.ReplaceImage(IPPImage newImage)\n\nPresentation presentation = new Presentation(presentation.pptx);\n\n//the first way\nbyte[] data = File.ReadAllBytes(image0.jpeg);\nIPPImage oldImage = presentation.Images[0];\noldImage.ReplaceImage(data);\n\n//the second way\nImage newImage = Image.FromFile(image1.png);\noldImage = presentation.Images[1];\noldImage.ReplaceImage(newImage);\n\n//the third way\noldImage = presentation.Images[2];\noldImage.ReplaceImage(presentation.Images[3]);\n\npresentation.Save(presentation_out.pptx, SaveFormat.Pptx);",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Slides is a PowerPoint management library for working with Microsoft PowerPoint files without using Microsoft PowerPoint. It allows developers to work with PPT, PPS, POT, PPTX, PPSX, POTX and ODP files on ASP.NET web applications, web services and Windows applications. It allows you to open files and manipulate the elements of the presentation from adding slides and managing variety of shapes and working with text to more complex elements like presentation protection, slide animations, charts and SmartArt rendering.The presentations can be exported to PDF, TIFF, XPS, SVG, PNG, JPEG, BMP or EMF formats.",
  "title": "Aspose.Slides for .NET",
  "version": "14.9.0",
  "tags": [
    "PowerPoint",
    "presentations",
    "Aspose.Slides",
    "PPT",
    "PPTX",
    "POTX",
    "POT",
    "PPS",
    "PPSX",
    "ODT"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}