{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.31.22.30.19/hybridservicewcfunity.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "K. JENZRI",
  "catalog:commitId": "0454cc43-15f1-4501-929c-9cbb930b810e",
  "catalog:commitTimeStamp": "2016-01-31T22:30:19.1393933Z",
  "created": "2016-01-31T22:29:54.02Z",
  "description": "Wcf service hosted under an Hybrid Service. Will run as Console Application on interactive environment otherwise will run as a Windows service. Services instances will be created using Unity as dependency injection container.",
  "id": "HybridServiceWcfUnity",
  "isPrerelease": false,
  "lastEdited": "2016-01-31T22:29:54.103Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": false,
  "packageHash": "2jbCV8rwkJmv2/Sx7wjjlb2Xbuu9Cf2eZMhw5qM36shy5+Vyjcp3rqXHi3o0a23naWbU/e+uBZmkn6/dD+i0dw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11537,
  "projectUrl": "https://hybridservice.codeplex.com/",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.31.22.30.19/hybridservicewcfunity.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.31.22.30.19/hybridservicewcfunity.1.0.0.json#dependencygroup/unity",
          "@type": "PackageDependency",
          "id": "Unity",
          "range": "[4.0.1, )"
        }
      ]
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}