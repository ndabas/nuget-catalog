{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael McBride",
  "catalog:commitId": "3ec0ce2c-f690-43ed-a723-06f25ddd41c2",
  "catalog:commitTimeStamp": "2020-06-26T08:30:35.5874837Z",
  "created": "2020-06-26T08:28:20.283Z",
  "description": "A .NET library which allows you to read and write plain-text configuration files",
  "iconFile": "icon.png",
  "id": "ConfigTextFile",
  "isPrerelease": false,
  "lastEdited": "2020-06-26T08:30:22.8Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "HYUKT9G6mHCUCkY3RSDbNdcTUq5VkWLmsimmoHsSPE4DFFUH0OdBFwbSDQSFo2jKzpapxzTm7AmLAFcJN7PZNw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 29173,
  "projectUrl": "https://github.com/Michmcb/ConfigTextFile",
  "published": "2020-06-26T08:28:20.283Z",
  "releaseNotes": "- When trying to get a string value by using array indexers e.g. ConfigSectionElement[\"key\"], this now throws an exception rather than returning null, if the key does not resolve to a ConfigStringElement. Prefer array indexers if you want exceptions, prefer methods if you don't.\n- Setting ConfigInvalidElement.Value throws an exception. Use ConfigInvalidElement.InvalidValue to set the default value which gets returned (Which is empty string by default)",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.4.0",
  "version": "1.4.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#dependencygroup/.netstandard2.0/microsoft.extensions.configuration",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Configuration",
          "range": "[3.1.4, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#dependencygroup/.netstandard2.0/microsoft.extensions.configuration.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Configuration.Abstractions",
          "range": "[3.1.4, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#ConfigTextFile.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 770,
      "fullName": "ConfigTextFile.nuspec",
      "length": 1621,
      "name": "ConfigTextFile.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#lib/netstandard2.0/ConfigTextFile.dll",
      "@type": "PackageEntry",
      "compressedLength": 13793,
      "fullName": "lib/netstandard2.0/ConfigTextFile.dll",
      "length": 33792,
      "name": "ConfigTextFile.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 637,
      "fullName": "LICENSE",
      "length": 1085,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 2516,
      "fullName": "icon.png",
      "length": 2672,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.26.08.30.35/configtextfile.1.4.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "config",
    "text",
    "fluent"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}