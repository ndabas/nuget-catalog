{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.06.25.23/sprache.1.9.1.31.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nicholas Blumhardt",
  "catalog:commitId": "fa61ba09-d2d3-4fe3-8412-dc6a9b4d7bc7",
  "catalog:commitTimeStamp": "2015-02-01T06:25:23.6339473Z",
  "created": "2011-01-07T08:01:17.887Z",
  "description": "Sprache is a simple, lightweight library for constructing parsers in C#.",
  "iconUrl": "http://code.google.com/p/sprache/logo?cct=1262420590",
  "id": "Sprache",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "ezqC0jo9vXmjLDsF7GgH/pJzrf1pJUroooiAkbVz0e3HXZoVXeG4LXKo42Hyo6fqhvpEXY90ErUicim0ZZ8rbg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35809,
  "projectUrl": "http://code.google.com/p/sprache/",
  "published": "2011-01-07T08:01:18.387Z",
  "requireLicenseAcceptance": false,
  "summary": "Sprache makes parsing 'external' DSLs clean and simple. It does this by relying on C# language features like lambda expressions and Linq. Unlike most parser-building frameworks, you use Sprache directly from your program code, and don't need to set up any build-time code generation tasks.",
  "title": "Sprache",
  "version": "1.9.1.31",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}