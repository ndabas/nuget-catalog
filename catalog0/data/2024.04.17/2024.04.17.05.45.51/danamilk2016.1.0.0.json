{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.17.05.45.51/danamilk2016.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Didimini510",
  "catalog:commitId": "97800a47-3f9d-4896-9d48-db21e143497a",
  "catalog:commitTimeStamp": "2024-04-17T05:45:51.6517305Z",
  "created": "2024-04-17T05:43:06.39Z",
  "description": "// Получаем общее время выполнения\n                object totalTimeObj = commandTime.ExecuteScalar();\n                if (totalTimeObj != DBNull.Value && totalTimeObj != null)\n                {\n                    int totalTime = Convert.ToInt32(totalTimeObj);\n\n                    // Запрос для получения количества выполненных заявок\n                    SqlCommand commandCount = new SqlCommand($\"SELECT COUNT(*) FROM Заявки WHERE Код_Статуса = 3 AND Дата_окончания IS NOT NULL\", sql.str);\n                    int _executedRequestsCount = (int)commandCount.ExecuteScalar();\n                    ExecutedRequestsCount.Text = Convert.ToString(_executedRequestsCount);\n\n                    // Рассчитываем среднее время выполнения\n                    if (_executedRequestsCount > 0)\n                    {\n                        double averageTime = totalTime / (double)_executedRequestsCount;\n                        AverageTime.Text = $\"{averageTime:F2} ч.\";\n                    }\n                    else\n                    {\n                        AverageTime.Text = \"Нет выполненных заявок\";\n                    }",
  "id": "danamilk2016",
  "isPrerelease": false,
  "lastEdited": "2024-04-17T05:45:39.177Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "K6mo8SBBY/KvGIOcFWIkWzx9VSBC4egLnIll1vsOpZjJ+TFT+f0wR+puJ37OM4H8H845lC4SZIdBZzjSJSqR1Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18514,
  "published": "2024-04-17T05:43:06.39Z",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.17.05.45.51/danamilk2016.1.0.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.17.05.45.51/danamilk2016.1.0.0.json#danamilk2016.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 801,
      "fullName": "danamilk2016.nuspec",
      "length": 1789,
      "name": "danamilk2016.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.17.05.45.51/danamilk2016.1.0.0.json#lib/netcoreapp3.1/danamilk2016.dll",
      "@type": "PackageEntry",
      "compressedLength": 2545,
      "fullName": "lib/netcoreapp3.1/danamilk2016.dll",
      "length": 7680,
      "name": "danamilk2016.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.17.05.45.51/danamilk2016.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12930,
      "fullName": ".signature.p7s",
      "length": 12930,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}