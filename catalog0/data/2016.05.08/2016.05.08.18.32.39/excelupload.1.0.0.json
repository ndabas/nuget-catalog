{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.08.18.32.39/excelupload.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Smith",
  "catalog:commitId": "effa0dfb-289f-407e-a43a-32aed453efac",
  "catalog:commitTimeStamp": "2016-05-08T18:32:39.6799652Z",
  "copyright": "Copyright 2016",
  "created": "2016-05-08T18:15:58.66Z",
  "description": "Convert Excel file to filled List_T_",
  "iconUrl": "http://icon_url_here_or_delete_this_line/",
  "id": "ExcelUpload",
  "isPrerelease": false,
  "lastEdited": "2016-05-08T18:32:04.343Z",
  "licenseUrl": "http://license_url_here_or_delete_this_line/",
  "listed": false,
  "packageHash": "XmVODd79lI7cdfAPn9pzm02zn5xzGT2Wsy55fN28PFZ4+Uef7crJxIPlRvgjGW3xyAdat7PsBRUeWA+hei0N2Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 53072,
  "projectUrl": "http://project_url_here_or_delete_this_line/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "using ExcelUpload;\nusing ExcelUpload.Abstract;\n\n       [HttpPost]\n        public override JsonResult Upload(HttpPostedFileBase file)\n        {\n            JsonResult result = base.Upload(file);\n\n            if (String.IsNullOrWhiteSpace(((UploadResult)result.Data).Message))\n            {\n\n                List_IPTable_ PTableList = new List_IPTable_();\n                PTableList.Add(new PTable_Sedan_());\n                PTableList.Add(new PTable_Order_());\n                ExcellReader er = new ExcellReader();\n                er.ReadExcelContent(file, PTableList);\n                List_Sedan_ Sedans = (List_Sedan_)PTableList[0].GetDataList;\n                List_Order_ Orders = (List_Order_)PTableList[1].GetDataList;\n\n                using (var db = new AutoContext())\n                {\n                    Sedans.ForEach(s=> db.Autos.Add(s));\n                    Orders.ForEach(s => db.Orders.Add(s));\n                    db.SaveChanges();\n                }\n\n            }\n\n            return result;\n        }",
  "title": "ExcelUpload",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.08.18.32.39/excelupload.1.0.0.json#ExcelUpload.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 719,
      "fullName": "ExcelUpload.nuspec",
      "length": 1823,
      "name": "ExcelUpload.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.08.18.32.39/excelupload.1.0.0.json#content/Autos.xlsx",
      "@type": "PackageEntry",
      "compressedLength": 6687,
      "fullName": "content/Autos.xlsx",
      "length": 9238,
      "name": "Autos.xlsx"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.08.18.32.39/excelupload.1.0.0.json#lib/net40/ExcelUpload.dll",
      "@type": "PackageEntry",
      "compressedLength": 4987,
      "fullName": "lib/net40/ExcelUpload.dll",
      "length": 10240,
      "name": "ExcelUpload.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.08.18.32.39/excelupload.1.0.0.json#lib/net40/Net.SourceForge.Koogra.dll",
      "@type": "PackageEntry",
      "compressedLength": 37959,
      "fullName": "lib/net40/Net.SourceForge.Koogra.dll",
      "length": 82944,
      "name": "Net.SourceForge.Koogra.dll"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}