{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "QED",
  "catalog:commitId": "98f66dc9-b565-42a0-9df4-fe6bcf38ff60",
  "catalog:commitTimeStamp": "2015-02-07T00:03:36.6814981Z",
  "copyright": "Copyright 2014",
  "created": "2014-11-10T19:18:50.653Z",
  "description": "InetSpeedWinRT (InternetConnectionState) is a convenient WinRT API for making Internet connection state decisions in real time, using the speed result to decide if/when to run your network-intensive code. This is all about speed and latency, so you will need to test throughput if that is important to your application. This API does not need to eat a bunch of network bandwidth to do it's job.\n\nInternetConnectionState fills a small gap in the Windows platform networking APIs by providing developers a very easy to use, simple abstraction to measure current Internet connection speed, something most apps today are not doing, which ends up in potentially poor experiences for people using apps that assume the existence of a an Internet connection is enough to proceed with network-intensive work. \n\nThis API will benefit the people using your app, who should always be shielded from network latency under all circumstances. Developers - developers are people! - will also benefit as you can be confident that: \n\na) The easy-to-use API will return a result very quickly, as any API call should \n\nb) This API is accurate and reliable ",
  "id": "InetSpeedWinRT",
  "isPrerelease": false,
  "lastEdited": "2014-11-11T04:22:43.28Z",
  "packageHash": "5ZPbGdpYgA1prgXZBUeItdqhE5csvPP+F08VzDDa9lyznu3/dpEDnR1kQikL8euJXTVzL8j+uGC1aejL1RGgjQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 940275,
  "published": "1900-01-01T00:00:00Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/.json#gpref",
      "reference": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json#gpref/ref/inetspeedwinrtphone.winmd",
          "file": "InetSpeedWinRTPhone.winmd"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json#gpref/ref/inetspeedwinrtarm.winmd",
          "file": "InetSpeedWinRTARM.winmd"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json#gpref/ref/inetspeedwinrtx86.winmd",
          "file": "InetSpeedWinRTx86.winmd"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json#gpref/ref/inetspeedwinrtx64.winmd",
          "file": "InetSpeedWinRTx64.winmd"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.00.03.36/inetspeedwinrt.1.0.3.json#gpref/ref/inetspeedwinrtphone81.winmd",
          "file": "InetSpeedWinRTPhone81.winmd"
        }
      ]
    }
  },
  "releaseNotes": "You will need to remove the architecture specific references that don’t apply to your project’s build target after referencing the nuget package via References -> Add Reference… -> Manage Nuget packages. The component is written in C++/CX, so each dll and winmd file is created for a specific machine architecture (ARM for Windows, Windows Phone 8 (ARM), Windows Phone 8.1 (ARM), Windows 8/8.1 (ARM, x86, x64).  \n\nYou’ll see these files in your references folder when you install the InetSpeedWinRT nuget package (remove all that don’t apply to your solution…) \n\nInetSpeedWinRTARM (For Windows RT (ARM) WinRT apps) InetSpeedWinRTPhone (For Windows Phone 8 Silverlight apps) InetSpeedWinRTPhone81 (For Windows Phone 8.1, SL and WinRT apps) \nInetSpeedWinRTx86 (Windows 8.1 WinRT apps, 32-bit Windows) InetSPeedWinRTx64 (Windows 8.1 WinRT apps, 64-bit Windows) \n\nNote: You will also need to reference the SDK Extension Microsoft Visual C++ 2013 Runtime Package for Windows 8.1 and Windows Phone 8.1 projects, for C# and JavaScript. For Windows Phone 8.0, you’ll reference Microsoft Visual C++ 2012 Runtime Package for your C# SL apps. \n\nThe InternetConnectionState API, version 1.0.3\n \nInternetConnectionState InternetConnectionState(); \n\nProperties: \n\nstatic bool Connected Returns true if the current Internet connection for the device is active, else false. \n\nInstance methods:\n\nIAsyncOperation<ConnectionSpeed> GetInternetConnectionSpeed(); Asynchronous method that will return a ConnectionSpeed (see below). \n\nIAsyncOperation<ConnectionSpeed> GetInternetConnectionSpeedWithHostName(HostName hostName); \nAsynchronous method that will perform the speed/latency test on a supplied host target and returns a ConnectionSpeed. This is very useful to ensure the Internet resource you’re trying to reach is available at the speed level you require (generally, these would be High and Average…). \n\nenum ConnectionSpeed:  \n\nHigh: Device is currently attached to a high-speed, low-latency Internet connection. \n\nAverage: Device is currently attached to an average speed/latency Internet connection (LTE, 3G, etc…).\n\nLow: Device is currently attached to low-speed, high-latency Internet connection.\n\nUnknown: The current Internet connection speed can't be determined. Proceed with caution. This could mean that there is very high network latency, a problem with an upstream service, etc... \n",
  "requireLicenseAcceptance": false,
  "summary": "A simple, fast, reliable shared WinRT component that supplies WinRT and SL8/8.1 developers with an API for determining Internet connection speed/latency in real time \n",
  "title": "InetSpeedWinRT: Internet Connection Speed API",
  "version": "1.0.3",
  "tags": [
    "InetSpeedWinRT",
    "Networking",
    "WinRT",
    "Component"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}