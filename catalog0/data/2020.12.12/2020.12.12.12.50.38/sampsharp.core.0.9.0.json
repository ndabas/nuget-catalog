{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tim Potze",
  "catalog:commitId": "ee927f5b-2938-4fff-9232-e9df77bdf9f2",
  "catalog:commitTimeStamp": "2020-12-12T12:50:38.7385422Z",
  "copyright": "Tim Potze",
  "created": "2020-12-12T12:48:24.433Z",
  "description": "The core library of SampSharp which manages the communication with the SA-MP server.",
  "iconUrl": "https://github.com/ikkentim/SampSharp/raw/master/sampsharp.png",
  "id": "SampSharp.Core",
  "isPrerelease": false,
  "lastEdited": "2020-12-12T12:50:26.06Z",
  "licenseUrl": "https://raw.githubusercontent.com/ikkentim/SampSharp/master/LICENSE",
  "listed": true,
  "packageHash": "77DP0X0AotVQbesWSr82SobryM0MIU7udzGMxSxviYF3JgDyySjYsvhPX684xeLo4caXkaTxdS/esAchdg0/2w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 60388,
  "projectUrl": "https://github.com/ikkentim/SampSharp",
  "published": "2020-12-12T12:48:24.433Z",
  "releaseNotes": "- Added `IGameModeClient.RegisterCallback` overloads which allows the arguments of the callback to be provided as an `object[]` to the specified method\n- Added option to specify the index at which the identifier arguments are located within natives of native objects\n- Added notice to multi-process run mode: \"for development purposes only\", use hosted hosted mode for production environments\n- Added callback name to the `IGameModeClient.UnhandledException` event\n- Added unhandled exception handling in hosted mode\n- Added unhandled exception handling in multi-process mode for ticks and synchronisations\n- Added `IfHosted` and `IfMultiProcess` methods to `GameModeBuilder`\n- Updated minimum .NET Standard version to 2.0\n- Improved shutdown behaviour of multi-process run mode\n- Improved number of memory allocations during handling of callbacks and native calls in hosted run mode\n- Changed hosted mode to not automatically redirect console output to the server_log.txt, use `GameModeBuilder.RedirectConsoleOutput()` to reenable logging to the server log\n- Removed `GameModeBuilder.BuildWith`\n- Fixed `GameModeBuilder.RedirectConsoleOutput` causing errors during startup in multi-process mode\n- Fixed garbage strings being returned when no string is set to out string parameters (#323)",
  "requireLicenseAcceptance": false,
  "title": "SampSharp Server Core",
  "verbatimVersion": "0.9.0",
  "version": "0.9.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#dependencygroup/.netstandard2.0/system.io.pipes",
          "@type": "PackageDependency",
          "id": "System.IO.Pipes",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#dependencygroup/.netstandard2.0/system.reflection.emit",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#dependencygroup/.netstandard2.0/system.reflection.emit.ilgeneration",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit.ILGeneration",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#dependencygroup/.netstandard2.0/system.threading.thread",
          "@type": "PackageDependency",
          "id": "System.Threading.Thread",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#SampSharp.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1127,
      "fullName": "SampSharp.Core.nuspec",
      "length": 2623,
      "name": "SampSharp.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#lib/netstandard2.0/SampSharp.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 34217,
      "fullName": "lib/netstandard2.0/SampSharp.Core.dll",
      "length": 75776,
      "name": "SampSharp.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#lib/netstandard2.0/SampSharp.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 13674,
      "fullName": "lib/netstandard2.0/SampSharp.Core.xml",
      "length": 157306,
      "name": "SampSharp.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.50.38/sampsharp.core.0.9.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}