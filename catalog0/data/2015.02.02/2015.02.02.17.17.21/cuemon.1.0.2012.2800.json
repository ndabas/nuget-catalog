{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.17.21/cuemon.1.0.2012.2800.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Mortensen",
  "catalog:commitId": "1f474e45-1689-446f-96cd-ce1051f9f069",
  "catalog:commitTimeStamp": "2015-02-02T17:17:21.68631Z",
  "copyright": "Copyright Â© MuchMore 2009-2012. All rights reserved.",
  "created": "2012-10-07T15:38:18.02Z",
  "description": "If you like the structure of the .NET platform, then the Cuemon .NET Framework Additions might just be that extra solution you have been looking for! With these assemblies I have aimed to accomplish at least two things; simplify the tedious work that is always present when coding towards a generic framework, and implementing some core- and utility classes for you to enjoy.",
  "iconUrl": "http://cdn.cuemon.net/themes/cuemon/images/nuget.png",
  "id": "Cuemon",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://creativecommons.org/licenses/by/3.0/",
  "packageHash": "h6VjovsYKFzEV7YPrJtMpi9c8M4xaUIiJVcf2VDJR0UEQ3dxXdU+GcOWjW5n4LZ8IenZWbRGYDWCUEGHfxc6NQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 372812,
  "projectUrl": "http://www.cuemon.net/",
  "published": "2012-10-07T15:38:18.02Z",
  "releaseNotes": "For this release, the primary focus was to further stabilize and improve existing functionality of the previous two releases.\nThe following work has been implemented:\n\n- The EnumerableUtility class was extended with the following new generic method; Any\n- The HttpRequestUtility class was extended with the following new method; GetHostAuthority\n- The HttpResponseUtility class was extended with a new method that further increases IIS 6.0 compatibility; RemoveResponseHeader\n- The NetDependency class received some documentation changes after a spell check and some modest infrastructure revamp\n- The NetWatcher class received some modest infrastructure revamp\n- The ReflectionUtility class had the newly introduced method, ToString(MethodBase method) removed and moved to MethodSignature in a refactored version\n- The FileDependency class received some modest infrastructure revamp\n- The DataDependency class received some modest infrastructure revamp\n- The AsyncCall class received a minor - but important - infrastructure revamp\n- The DataWatcher class received some modest infrastructure revamp\n- The Watcher class received some documentation changes after a spell check\n- The BusinessEntity class had IsDisposed property promoted to public and received some modest infrastructure revamp\n- The BusinessEntityCollection class had IsDisposed property promoted to public\n- The DataAdapter class had IsDisposed property promoted to public\n- The DictionaryUtility class was extended with the following new generic method; ToKeyValuePairs\n- The Instrumentation class received a complete refactoring after som intense research to strengthen reliability in Release mode (JIT and compiler optimization) and insure flexibility and control of the measurement. There is a slight implementation overhead compared to AOP but I hope it will suffice for a good alternative with complete control\n- The ManagementUtility class was further improved with these new methods; GetPerformanceMonitorCounters and GetInstanceName\n- The PerformanceMonitorCounter class was introduced to provide a simple way of representing a Performance Counter as in Windows Performance Monitor\n- The MethodSignature class was introduced to provide a simple and standardized way of defining a method signature\n- The ParameterSignature class was introduced to provide a simple and standardized way of defining a parameter signature\n- The SerializationUtility class was extended with the following new methods; Deserialize\n- The DataCommand class was changed so it now actually follows the DefaultTimeout through out the class\n- The DataManager class was modified to support Transient Failure Recovery (ideal for SQL Azure solutions) which is default enabled and further extended with two new generic scaler methods\n- The SqlDataManager class was modified to support the newly introduced Transient Failure Recovery - namely IsTransientFailure method was implemented with SQL Azure codes as well as some more normal case studies\n- The SqlCeDataManager class received a simple implementation of IsTransientFailure as it is file based\n- The CountdownEvent class was extended with a new method; AddCount\n- The SqlDataConnection class was deprecated and removed from the Cuemon.Data assembly\n- The GlobalModule class received various bug fixes triggered by different scenarios - mostly related to IIS 6.0 compatibility\n- The ProcessInfo class was renamed to ProcessSnapshot due to one or more naming conflicts with .NET CLR\n\nNote: this version has some breaking changes from the previous version; affected classes are: ProcessInfo, Instrumentation and SqlDataConnection.",
  "requireLicenseAcceptance": false,
  "summary": "Simple,  logical and every-day usage additions to the Microsoft .NET Framework 2.0 and forward. Follows the established namespace structure already found in the .NET Framework.",
  "title": "Cuemon .NET Framework Additions",
  "version": "1.0.2012.2800",
  "tags": [
    "cuemon",
    "xml",
    "xslt",
    "json",
    ".net",
    "framework",
    "additions",
    "businessentity",
    "caching",
    "manager",
    "datespan",
    "depedency",
    "watcher",
    "dataadapter",
    "datamanager",
    "sqlceclient",
    "sqlclient",
    "datadepedency",
    "netdepedency",
    "securitytoken",
    "hash",
    "aes",
    "utility",
    "classes",
    "xsltpage",
    "xsltmaterpage",
    "globalmodule",
    "ihttpmodule",
    "cloud",
    "security",
    "wcf",
    "wmi",
    "threading",
    "async",
    "httppost",
    "httpput",
    "httpget",
    "httpdelete",
    "countdownevent",
    "processinfo",
    "process",
    "snapshot",
    "instrumentation",
    "factory",
    "func",
    "action",
    "timemeasure",
    "performance",
    "counter",
    "transient",
    "failure",
    "recovery",
    "sql",
    "azure",
    "iis"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}