{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.22.02.05/jquerydatatableserializer.1.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kelly Vernon",
  "catalog:commitId": "d6077fd1-aeb6-4dbf-af46-f318a97b1fde",
  "catalog:commitTimeStamp": "2015-02-07T22:02:05.8836241Z",
  "copyright": "Copyright 2013",
  "created": "2013-09-29T15:47:36.84Z",
  "description": "A framework for the serialization of the popular JQuery DataTables Plug-in. There are two small libraries, CubedElement.DataTable.Contracts and CubedElement.DataTable.Model, and when building this the goal was not only to make it user friendly, but to make it n-tiered and IoC friendly too!",
  "id": "JQueryDataTableSerializer",
  "isPrerelease": false,
  "lastEdited": "2013-09-29T16:16:26.883Z",
  "licenseUrl": "https://github.com/kvernon/JQueryDataTableSerializer/blob/master/LICENSE.txt",
  "packageHash": "11VFASPD476RaoSWuIwR0hGCqL6j8ZJQnCKew6I5OyYgoebI6A9lSFKe8U5elskPlpYs5R9+5Ec2TB1V1XlheA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36611,
  "projectUrl": "https://github.com/kvernon/JQueryDataTableSerializer/",
  "published": "2013-09-29T15:47:36.84Z",
  "releaseNotes": "Version 1.0.0.0\n\t* first release with unit tested items and demo project (at project site)\n\t* currently targeted for .net 4 and .net 4.5",
  "requireLicenseAcceptance": false,
  "summary": "Datatables is a complex datagrid javascript plugin for JQuery. It does a lot things quite well. As I've worked with it in the past, I've found there's just so much information coming back that I realized there needs to be a way to organize this data not only for receiving but also returning, hence these libraries.\n\nTo use this collection, I'd suggest looking at the example on github. It does a great job at showing how to send the data from the UI and how to return it.\n\nThe super condensed version is this:\n1. In the UI, transform the server variables into a key / value array collection\n2. In the service layer, loop through the collection to put into the valid containers, which resides in the RequestCollection\n3. Use the RequestCollection to assist you when getting data from your data layer\n4. When translating your data to the resulting class, make sure you've implemented the IDataTableSerializer interface\n5. Send the Wrapper class",
  "title": "JQuery DataTables Serializer",
  "version": "1.0.0.1",
  "tags": [
    "javascript",
    "jquery",
    "serialization",
    "datacontract",
    "datacontracts",
    "datamember",
    "datamembers",
    "datatables",
    "datatables.net",
    "wcf",
    "web-api",
    "mvc",
    "mvvm"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}