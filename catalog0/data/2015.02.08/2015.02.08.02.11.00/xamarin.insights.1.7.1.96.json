{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.02.11.00/xamarin.insights.1.7.1.96.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Xamarin,  Inc.",
  "catalog:commitId": "2d0fbe73-0083-4624-8d15-80df8b0662ed",
  "catalog:commitTimeStamp": "2015-02-08T02:11:00.0821634Z",
  "copyright": "Copyright 2014",
  "created": "2014-10-23T16:04:01.69Z",
  "description": "Insights for your Apps",
  "iconUrl": "https://houstonweb.blob.core.windows.net/assets/analytics-package@2x.png",
  "id": "Xamarin.Insights",
  "isPrerelease": false,
  "lastEdited": "2014-10-23T16:05:44.037Z",
  "packageHash": "tyvVL6Z0NI4fwOtsz1BN4Lv37cF6dsqMByZ9t9Jl1xxRnkmx73sl1uGS6puYoyryJGgyUTw/NYkMyQEkt7Th+Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 523075,
  "projectUrl": "https://insights.xamarin.com/",
  "published": "2014-10-23T16:04:01.707Z",
  "releaseNotes": "## Features\n\n * New API: ```bool Xamarin.Insights.IsInitialized``` - You can use this to check if insights has been initialized, for example in a library you use across projects that may or may not initialize insights.\n * New API: ```bool Xamarin.Insights.ForceDataTransmission``` setting this to true will make insights ignore the current network state and attempt communication with the Insights servers.\n * Android API level < 14 support: This is experimental but does seem to work. If you target API 14 and above but allow your app to run on lower API (tested down to API level 7) we should no longer crash, though you will lose session reporting on lower API levels than 14. We would love to see where this breaks and does not break but for right now, please consider this experimental, it has not been thoroughly tested.\n\n### Fixed Issues:\n\n* #886 - Android, without network change permissions, defaulted to no network connectivity.\n* #882 - All Platforms, Assembly info reporting, we now report basic assembly information to the server as part of crash reports. \n* #871 - Android, protection against invalid contexts, if you get the message ```Invalid Android context detected``` in your debug output, you are using insights before your android context is ready to be used. \n* #862 - iOS, both build number and version number are reported \n* #852 - All Platforms, New API so you can check if Insights is initialized yet, ```bool Xamarin.Insights.IsInitialized``` will return true if Insights has been initialized\n* #849 - All Platforms, New API to force data transmission regardless of network state, \n* #848 - Android, Basic do not crash on Android 2.* support\n* #831 - Desktop, Garbage collector issue in .net (but not mono) was causing tasks to be dropped and thus usage not being reported to the Insights server, this has been corrected\n* #830 - Android, NRE client crash on Background change event \n* #819 - Switch off session sending and reject on endpoint. Old session API was turned off in favour of new event based session tracking.\n* #908 - Android, crash on resume from background, java NRE when we did not unsubscribe an event listener\n* #804 - iOS, DivisionByZeroException kills an iOS app ",
  "requireLicenseAcceptance": false,
  "summary": "Improve your apps with real-time monitoring. Track crashes and exceptions and understand what is happening with live users.",
  "title": "Xamarin.Insights",
  "version": "1.7.1.96",
  "tags": [
    "Xamarin",
    "Insights",
    "Monitoring",
    "Analytics",
    "Stability"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}