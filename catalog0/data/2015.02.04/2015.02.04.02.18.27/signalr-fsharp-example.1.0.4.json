{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.02.18.27/signalr-fsharp-example.1.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tuomas Hietanen",
  "catalog:commitId": "2dbc4e63-5e57-46c0-96a7-cafb7bb70fb4",
  "catalog:commitTimeStamp": "2015-02-04T02:18:27.6865372Z",
  "copyright": "Copyright Â© Tuomas Hietanen 2013, LGPLv3",
  "created": "2013-11-05T20:55:04.85Z",
  "description": "Example of SignalR with F-Sharp (and Silverlight 5 or Javascript):\n\n- SignalR is a library (for web-based Publish/Subscribe -pattern) on top \n  of WebSockets, which is HTML5 API that enables bi-directional communication \n  between the browser and server. SignalR will fallback to other techniques and \n  technologies when WebSockets are not available.\n  http://signalr.net/\n  \n- F-Sharp (F#) is multiparadigm (functional-first) programming language \n  mainly for .NET environment.\n  http://fsharp.org/\n  \n- This sample uses Reactive Extensions 2.1 to communicate with SignalR, \n  on both client and server side. Reactive Extensions is a library to \n  compose asynchronous and event-based programs using observable \n  collections and LINQ-style query operators.\n  http://msdn.microsoft.com/en-us/data/gg577609.aspx\n\n- For server side:  \n  This could work purely from F# as Owin (http://owin.org/) console application \n  but now F#-server-side is called from an\n  empty ASP.NET C# Web Application. (Still you can start OWin from F# Interactive...)\n\n- For client side:\n  Silverlight 5.0 application using F#-library\n  and Silverlight 5.0 XAML/C# application to show the user interface.\n  http://www.silverlight.net\n  There is also jQuery/JavaScript test page, if you don't want to use Silverlight.\n  \n- This proof of concept/sample/tutorial/demo is developed with \n  Visual Studio 2012. References are resolved via NuGet. \n  F# compiler won't auto-restore packages on compile. \n  So go first to Tools -> Library Package Manager -> NuGet\n  and press \"Restore\" to restore all the references, and then rebuild.\n\n- SignalR supports two kinds of connections: Hub and PersistentConnection\n  Both are working with Silverlight and JavaScript.",
  "id": "SignalR-FSharp-Example",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "uftmCllmbeLtbMiC9cbQBhWwHQGa58yW4izbe1xppIjJH70SAGMt3t4ZtonbOvwkvPP2Y2mO/25Ii0kdlRBDNg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 2271268,
  "projectUrl": "https://github.com/Thorium/SignalR-FSharp-Example",
  "published": "2013-11-05T20:55:04.85Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "title": "Example of SignalR with F-Sharp (and Silverlight 5)",
  "version": "1.0.4",
  "tags": [
    "SignalR",
    "FSharp",
    "F#",
    "Silverlight",
    "Rx",
    "Reactive",
    "Publish",
    "Subscribe"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}