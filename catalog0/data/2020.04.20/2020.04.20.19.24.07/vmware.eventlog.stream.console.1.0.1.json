{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.20.19.24.07/vmware.eventlog.stream.console.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "VMware",
  "catalog:commitId": "e8a202b3-733b-44eb-bbde-f4befe2c0f34",
  "catalog:commitTimeStamp": "2020-04-20T19:24:07.621049Z",
  "copyright": "Copyright 2020",
  "created": "2020-04-20T19:21:56.353Z",
  "description": "Many .NET legacy apps make use of the Windows Event Log for persisting errors and warnings raised at runtime.  There are different options for externalizing these logs on the cloud. One option is to refactor all calls to ILogger.Log or Console.WriteLine while another option is to use Microsoft's log montior (https://github.com/microsoft/windows-container-tools/tree/master/LogMonitor).\n      \n      This NuGet package offers an additional option which is code-free and minimally invasive. By installing this package to an ASP Framework 4.x app, all calls to the System.Diagnostics.EventLog.WriteEvent and System.Diagnostics.EventLog.WriteEntry static methods will instead write to console. This behavior will extend only to your app domain.\n      \n      The VMware.EventLog.Stream.Console NuGet package leverages the Lib.Harmony NuGet package.",
  "id": "VMware.EventLog.Stream.Console",
  "isPrerelease": false,
  "lastEdited": "2020-04-20T19:23:57.77Z",
  "licenseUrl": "https://licenses.nuget.org/BSD-2-Clause",
  "listed": true,
  "packageHash": "aWg3RTO4p5s8LqWYLZX5C6YRsp0imoMVmdGkFSBuBE7vePc/sl+3cCOSyGvefeDoiXS/ipLj/5YXHjwYyESdBA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16601,
  "projectUrl": "https://github.com/vmware/vmware-eventlog-stream-console",
  "published": "2020-04-20T19:21:56.353Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.20.19.24.07/vmware.eventlog.stream.console.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.20.19.24.07/vmware.eventlog.stream.console.1.0.1.json#dependencygroup/lib.harmony",
          "@type": "PackageDependency",
          "id": "Lib.Harmony",
          "range": "[1.2.0.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.20.19.24.07/vmware.eventlog.stream.console.1.0.1.json#VMware.EventLog.Stream.Console.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 770,
      "fullName": "VMware.EventLog.Stream.Console.nuspec",
      "length": 1538,
      "name": "VMware.EventLog.Stream.Console.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.20.19.24.07/vmware.eventlog.stream.console.1.0.1.json#lib/net4/VMware.Shims.dll",
      "@type": "PackageEntry",
      "compressedLength": 4208,
      "fullName": "lib/net4/VMware.Shims.dll",
      "length": 9216,
      "name": "VMware.Shims.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.20.19.24.07/vmware.eventlog.stream.console.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9482,
      "fullName": ".signature.p7s",
      "length": 9482,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}