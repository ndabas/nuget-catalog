{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.00.41.19/eventflow.mssql.0.12.891.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "0e739a23-6201-4041-8270-20f87af5fd28",
  "catalog:commitTimeStamp": "2018-11-19T00:41:19.8055469Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-09-04T21:06:01.297Z",
  "description": "MSSQL support for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.MsSql",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-19T00:40:51.763Z",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": true,
  "packageHash": "Pa9Jsl0G2Bo+J7yxxg/ASuYrVHeau+6UAsREGMQV+8UDbRgvHnJhJomjhfWNJJuVBUaN5DSa5YhKB0zZQviqwg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 94724,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-09-04T21:06:01.297Z",
  "releaseNotes": "Breaking: Aggregate root no longer have `Aggregate` removed from their\nwhen name, i.e., the metadata property with key `aggregate_name` (or\n`MetadataKeys.AggregateName`). If you are dependent on the previous naming,\nuse the new `AggregateName` attribute and apply it to your aggregates\nBreaking: Moved `Identity<>` and `IIdentity` from the `EventFlow.Aggregates`\nnamespace to `EventFlow.Core` as the identities are not specific for aggregates\nBreaking: `ICommand.Id` is renamed to `ICommand.AggregateId` to make \"room\"\nfor the new `ICommand.SourceId` property. If commands are serialized, then\nit _might_ be important verify that the serialization still works. EventFlow\n_does not_ serialize commands, so no mitigation is provided. If the\n`Command<,>` is used, make sure to use the correct protected constructor\nBreaking: `IEventStore.StoreAsync(...)` now requires an additional\n`ISourceId` argument. To create a random one, use `SourceId.New`, but it\nshould be e.g. the command ID that resulted in the events. Note, this method\nisn't typically used by developers\nNew: Added `ICommand.SourceId`, which contains the ID of the source. The\ndefault (if your commands inherit from `Command<,>`) will be a new\n`CommandId` each time the a `Command<,>` instance is created. You can pass\nspecific value, merely use the newly added constructor taking the ID.\nAlternatively you commands could inherit from the new\n`DistinctCommand`, enabling commands with the same state to have the\nsame `SourceId`\nNew: Duplicate commands can be detected using the new `ISourceId`. Read the\nEventFlow article regarding commands for more details\nNew: Aggregate names can now be configured using the attribute\n`AggregateName`. The name can be accessed using the new `IAggregateRoot.Name`\nproperty\nNew: Added `Identity<>.NewDeterministic(Guid, string)` enabling creation of\n[deterministic GUIDs](http://code.logos.com/blog/2011/04/generating_a_deterministic_guid.html)\nNew: Added new metadata key `source_id` (`MetadataKeys.SourceId`) containing\nthe source ID, typically the ID of the command from which the event\noriginated\nNew: Added new metadata key `event_id` (`MetadataKeys.EventId`) containing a\ndeterministic ID for the event. Events with the same aggregate sequence\nnumber and from aggregates with the same identity, will have the same event\nidentity\nFixed: `Identity<>.With(string)` now throws an `ArgumentException` instead of\na `TargetInvocationException` when passed an invalid identity\nFixed: Aggregate roots now build the cache of `Apply` methods once, instead\nof when the method is requested the first time",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.MsSql - Core MSSQL support",
  "verbatimVersion": "0.12.891",
  "version": "0.12.891",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.00.41.19/eventflow.mssql.0.12.891.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.00.41.19/eventflow.mssql.0.12.891.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.12.891, 0.12.891]"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.00.41.19/eventflow.mssql.0.12.891.json#EventFlow.MsSql.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1616,
      "fullName": "EventFlow.MsSql.nuspec",
      "length": 3604,
      "name": "EventFlow.MsSql.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.00.41.19/eventflow.mssql.0.12.891.json#lib/net451/EventFlow.MsSql.dll",
      "@type": "PackageEntry",
      "compressedLength": 80980,
      "fullName": "lib/net451/EventFlow.MsSql.dll",
      "length": 195584,
      "name": "EventFlow.MsSql.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.00.41.19/eventflow.mssql.0.12.891.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "mssql"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}