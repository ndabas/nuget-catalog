{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aurel Hudec, Mpv.NET contributors",
  "catalog:commitId": "48c91ddf-250e-454d-b06b-fead0e37c247",
  "catalog:commitTimeStamp": "2021-03-01T18:29:52.855069Z",
  "copyright": "Copyright 2021",
  "created": "2021-03-01T18:28:08.78Z",
  "description": ".NET embeddable video/media player based on mpv for WinForms and WPF",
  "id": "Mpv.NET",
  "isPrerelease": false,
  "lastEdited": "2021-03-01T18:29:42.343Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "ZZWxwkndV7OJMfWbRr9C3nhUqInsospT+8a+SNJis1jeICRXjxcUh8F6oiwZun0xYWWDWgAuxYvwrcRmVH18zQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 48822,
  "projectUrl": "https://github.com/hudec117/Mpv.NET-lib-",
  "published": "2021-03-01T18:28:08.78Z",
  "releaseNotes": "GabCM contributed: Added ability to load playlists and loop them.\nSebastianBecker2 contributed: Fixed shutdown race condition.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "summary": ".NET embeddable video/media player based on mpv for WinForms and WPF",
  "title": "Mpv.NET",
  "verbatimVersion": "1.2.0",
  "version": "1.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json#Mpv.NET.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 604,
      "fullName": "Mpv.NET.nuspec",
      "length": 1251,
      "name": "Mpv.NET.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json#lib/netstandard2.0/Mpv.NET.deps.json",
      "@type": "PackageEntry",
      "compressedLength": 520,
      "fullName": "lib/netstandard2.0/Mpv.NET.deps.json",
      "length": 1380,
      "name": "Mpv.NET.deps.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json#lib/netstandard2.0/Mpv.NET.dll",
      "@type": "PackageEntry",
      "compressedLength": 24065,
      "fullName": "lib/netstandard2.0/Mpv.NET.dll",
      "length": 63488,
      "name": "Mpv.NET.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json#lib/netstandard2.0/Mpv.NET.pdb",
      "@type": "PackageEntry",
      "compressedLength": 12112,
      "fullName": "lib/netstandard2.0/Mpv.NET.pdb",
      "length": 25956,
      "name": "Mpv.NET.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.01.18.29.52/mpv.net.1.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "mpv",
    "media",
    "video",
    "audio",
    "media-player",
    "video-player",
    "audio-player",
    "embedded",
    "embeddable",
    "wpf",
    "winforms"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}