{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.07.21.22.16/contest.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "amiralles",
  "catalog:commitId": "2286e61e-e590-4707-8655-0d02c3001a69",
  "catalog:commitTimeStamp": "2016-01-07T21:22:16.6107763Z",
  "copyright": "Copyright 2016",
  "created": "2016-01-07T21:17:13.94Z",
  "description": "Minimalist and cross platform. Contest, the new testing framework for .NET.",
  "id": "Contest",
  "isPrerelease": false,
  "lastEdited": "2016-01-07T21:21:46.84Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/amiralles/contest/blob/master/license.md",
  "listed": true,
  "packageHash": "mN82MIvQI1QUjr+z4AK/FRbUNVOEN1Q4xe+6fmBZkvrogikI95q20lEH0IHfkMACgoSN6f8L9yp9Iu7nNysvZw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 40304,
  "projectUrl": "https://github.com/amiralles/contest",
  "published": "2016-01-07T21:17:13.94Z",
  "releaseNotes": "Added BDD Syntax.\n        Added Fluent assertions.",
  "requireLicenseAcceptance": false,
  "summary": "Contest is minimalist testing framework bundled with a lightweight console test runner. In contrast with most popular testing frameworks, is conventions based, so it doesn't require a whole lotta of attributes to identify test cases, setups, and so on... \n        Point in case, the code reads almost like plain english.",
  "verbatimVersion": "1.2.0",
  "version": "1.2.0",
  "tags": [
    "unit",
    "testing",
    "framework",
    "tdd",
    "console",
    "test",
    "crossplatform",
    "linux",
    "mac"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}