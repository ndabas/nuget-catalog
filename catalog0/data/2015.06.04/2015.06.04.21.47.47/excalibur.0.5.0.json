{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.06.04.21.47.47/excalibur.0.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Excalibur.js",
  "catalog:commitId": "09b2ce4b-00d5-4a80-8700-b54d7b163af0",
  "catalog:commitTimeStamp": "2015-06-04T21:47:47.6161678Z",
  "created": "2015-06-04T01:36:57.53Z",
  "description": "Excalibur.js is a simple JavaScript game engine with TypeScript bindings for making 2D games in HTML5 Canvas. Our mission is to make web game development as simple as possible.",
  "iconUrl": "https://raw.github.com/excaliburjs/Excalibur/master/assets/icon.png",
  "id": "Excalibur",
  "isPrerelease": false,
  "lastEdited": "2015-06-04T21:47:34.907Z",
  "licenseUrl": "https://github.com/excaliburjs/Excalibur/master/blob/LICENSE.md",
  "packageHash": "/x4AZzoORmG3Y4tJONF+pXfOqfLGbQHOUvX9Qt6w9qyAlFCC0I5gC/IdbxOoh8bTrBbakBTt+1stthYR4PFsgw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 270433,
  "projectUrl": "https://github.com/excaliburjs/Excalibur",
  "published": "2015-06-04T01:36:57.53Z",
  "releaseNotes": "## New Features\n\nAdded resource cache busting (#280)\nAdded HTML5 Gamepad API support. (#15)\nAdded Browserify support (#312, thanks @finnp)\nAdded ‘blur’ and ‘visible’ events to detect when the browser window a game is in has focus (#385)\nAdded Z-index support to Actors, allowing for specific ordered drawing. (#356)\nAdded unlocked drawing for UI elements (#354)\nAdded `Promise.join()` to return a new promise when promises passed to it have been resolved (#341, #340)\nAdded ability to skip a frame in an animation (#313)\nYou can now remove effects from `IDrawable` objects. (#303)\nAdded a generic `Resource` type to allow for XHR loading (#297)\nAdded gray `Color` constants (#209)\n\n## Updates\n\nRenamed`engine.addChild()` to `engine.add()`. (#288)\nRenamed `setSpriteTransformationPoint()` to  `setAnchor()` (#269)\nRenamed `TopCamera` to `LockedCamera` (#184)\nRenamed `Actor.pipeline` to `Actor.traits` (#351)\nActor anchoring now uses center origin by default. (#299)\nActor updates (movement, collision, etc.) now use a pipeline. (#330)\nOrganized classes, files, and project structure (#182, #347)\nImprovements to collision detection (#345, #332)\nImproved documentation (#392, #412, #362, #415, #426)\nLoop optimizations for performance improvements (#296)\nUpdated to TypeScript 1.4 (#393)\nImproved pointer event handling. You no longer have to capture touch and mouse events separately. (#334)\nImproved `Point` and `Vector` methods and rotation (#323, #302)\n`Color` is now treated as a vector to allow for changes. (#298)\nCleaned up event type consistency (#273)\nThere is now a default instance of a `Camera`. (#270)\nTSLint now used to enforce code quality (#394, #79)\n\n## Bug Fixes\n\nA Sprite’s dimensions weren’t validated against the size of its texture. (#318)\nImproved sprite drawing performance issues (#316)\nActors were sometimes throwing duplicate collision events. (#284)\nActors were not setting their initial opacity correctly (#307, thanks @MrAlexLau)\nParticle emitters couldn’t emit less than 60 particles per second (#301)\nFixed issue with TileMap collisions (#286)\nAnimations with duplicate frames weren’t being created correctly (#283)\nSeparated drawing and collision logic for CollisionMaps (now TileMap) (#285)\nErrors in promises were being swallowed if no error callback was supplied. (#337)\nA null promise was being returned if no loader was given to `Engine.start()`. (#335)\nChanged default collisionType to ‘PreventCollision’ (#324)\nColor didn’t handle alpha = 0 correctly. (#257)\nBlink action usage was confusing. (#279)\nCouldn’t use the `width` and `height` properties of a Texture after it loaded. (#355)\nUsing `on(‘pointerdown’)` would not automatically enable pointer capturing. (#398)\nUnsubscribing from an event sometimes removed other event handlers. (#366)\n`Actor.setCenterDrawing()` was hard-coded to true.  (#375)\nConsole was undefined in IE9. (#378)\nPointers were not handling mobile Safari touch events. (#382)\nFixed debug mode drawing (#274)\nFlipping a sprite didn’t factor in scaling (#401)\nSound continued to play when the game was paused (#383)\n`UIActor.kill()` didn’t remove the actor (#373)\nPassing an empty array to `ex.Promise.join` resulted in unresolved promises (#365)\nMouseUp / TouchEnd events weren’t capture correctly if outside of canvas. (#374)\nClearing actions from an empty action queue caused problems (#409)\n`Scene.onActivate()` was being called before `Scene.onInitialize()`. (#418)\nNew z-indexing wasn’t cleaning up after itself. (#433)\nFixed issue with world / screen coordinates in UIActors (#371)\nFade action didn’t work for text. (#261)\nFade action didn’t work for plain-color actors. (#256)\nCollision events weren’t being published for both collision participants. (#254)\nThe loading bar was misrepresenting the time taken to decode audio files. (#106)\n`actor.getCenter()` wasn’t returning the correct value. (#438)\nCameras were on the engine instead of the scene, resulting in scene transition problems. (#277)\nActors with sprites larger than the actor would disappear prematurely from the screen. (#287)\nDerived classes can now use offscreen culling (#294)\nFixed issue with TileMap culling (#444)",
  "requireLicenseAcceptance": false,
  "title": "Excalibur.js",
  "version": "0.5.0",
  "tags": [
    "JavaScript",
    "TypeScript",
    "Excalibur",
    "Game",
    "Engine",
    "GameEngine"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}