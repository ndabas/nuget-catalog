{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Maxim Shoshin",
  "catalog:commitId": "5d050f87-9e1f-45e7-ae65-5ce457e00850",
  "catalog:commitTimeStamp": "2018-06-14T20:47:26.5402045Z",
  "created": "2018-06-14T20:43:46.07Z",
  "description": "Roslyn Scripting provide awesome compilation of any C# expression. Roslyn.Scripting has one disadwantage now:\n            for any single script parse it creates separate assembly in current AppDomain. Now there is no ability to unload\n            such assemblies even they are not used anymore.\n\n            ExpressionCompiler creates DynamicMethod based on your expression without loading additional assemblies in the app\n            domain. DynamicMethod can be garbage collected as usual class when it no longer used.",
  "id": "Expression.Compilation",
  "isPrerelease": false,
  "lastEdited": "2018-06-14T20:46:55.513Z",
  "licenseUrl": "https://raw.githubusercontent.com/MaxShoshin/ExpressionCompiler/master/LICENSE",
  "listed": true,
  "packageHash": "L9FtRDvrVwUAxbGw5/fM0TvpeDWHg8h4O1gzqpXQbh/mkXeSJrLRlnKRViG7T2qAg+zv+kfEdVxQ7ScGGZijfw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14578,
  "projectUrl": "https://github.com/MaxShoshin/ExpressionCompiler",
  "published": "2018-06-14T20:43:46.07Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "Expression Compilation",
  "verbatimVersion": "0.1.1",
  "version": "0.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/microsoft.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CSharp",
          "range": "[4.4.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/microsoft.codeanalysis.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CodeAnalysis.CSharp",
          "range": "[2.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/microsoft.codeanalysis.csharp.workspaces",
          "@type": "PackageDependency",
          "id": "Microsoft.CodeAnalysis.CSharp.Workspaces",
          "range": "[2.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/microsoft.codeanalysis.fxcopanalyzers",
          "@type": "PackageDependency",
          "id": "Microsoft.CodeAnalysis.FxCopAnalyzers",
          "range": "[2.6.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/microsoft.codeanalysis.workspaces.common",
          "@type": "PackageDependency",
          "id": "Microsoft.CodeAnalysis.Workspaces.Common",
          "range": "[2.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/mono.cecil",
          "@type": "PackageDependency",
          "id": "Mono.Cecil",
          "range": "[0.10.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/system.reflection.emit",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/system.reflection.emit.ilgeneration",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit.ILGeneration",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#dependencygroup/.netstandard2.0/system.reflection.emit.lightweight",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit.Lightweight",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#Expression.Compilation.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 834,
      "fullName": "Expression.Compilation.nuspec",
      "length": 2303,
      "name": "Expression.Compilation.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.20.47.26/expression.compilation.0.1.1.json#lib/netstandard2.0/ExpressionCompilation.dll",
      "@type": "PackageEntry",
      "compressedLength": 11836,
      "fullName": "lib/netstandard2.0/ExpressionCompilation.dll",
      "length": 24576,
      "name": "ExpressionCompilation.dll"
    }
  ],
  "tags": [
    "roslyn",
    "expression",
    "parse",
    "dynamic",
    "method"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}