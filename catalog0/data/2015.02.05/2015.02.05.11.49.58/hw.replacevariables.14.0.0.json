{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.11.49.58/hw.replacevariables.14.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "hahoyer",
  "catalog:commitId": "8c638ad1-dbbd-4ec4-b1af-6129f94baa00",
  "catalog:commitTimeStamp": "2015-02-05T11:49:58.5643412Z",
  "copyright": "Copyright Harald Hoyer 2014",
  "created": "2014-05-27T21:07:34.637Z",
  "description": "Example:\n\n            using hw.ReplaceVariables;\n\n            static public class Example\n            {\n            public static void TestMethod()\n            {\n            var myData = new MyData();\n            var format = \"i: $(InvoiceDate) - n: $(Now) - id: $(InvoiceDate.Date) - in: $(ImportantNumber) - asis: $(=ImportantNumber) \";\n            var expectedResult = \"i: 22.04.2014 22:57:34 - n: 27.05.2014 22:57:34 - id: 22.04.2014 - in: 42 - asis: $(ImportantNumber) \";\n            var result = format.ReplaceVariables(myData);\n            Tracer.Assert(result == expectedResult);\n            }\n\n            sealed class MyData\n            {\n            [Visible]\n            DateTimeSpecial InvoiceDate { get { return new DateTimeSpecial(new DateTime(2014,5,27,22,57,34).AddDays(-35)); } }\n            [Visible]\n            DateTimeSpecial Now = new DateTimeSpecial(new DateTime(2014, 5, 27, 22, 57, 34));\n            [Visible]\n            int ImportantNumber = 42;\n            }\n\n            sealed class DateTimeSpecial\n            {\n            DateTime _value;\n            public DateTimeSpecial(DateTime value) { _value = value; }\n            [Visible]\n            int Day { get { return _value.Day; } }\n            [Visible]\n            int Month { get { return _value.Month; } }\n            [Visible]\n            int Year { get { return _value.Year; } }\n            [Visible]\n            string Date { get { return _value.Date.ToShortDateString(); } }\n            public override string ToString() { return _value.ToString(); }\n            }\n            }",
  "id": "hw.ReplaceVariables",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "U+1L0akrdICtDmzkXLQhJppEvoDtGSqFwlbyKkLnU62nQF1pN7bVaiUhcwbUsu2q0fbRWP5btfsUuA5YcdPvLg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5515,
  "projectUrl": "https://github.com/hahoyer/HWClassLibrary.cs",
  "published": "2014-05-27T21:07:34.637Z",
  "releaseNotes": "New: more DateRange functions",
  "requireLicenseAcceptance": false,
  "summary": "Formatting a string by replacing variables of the form $(name) by values of members of an object.",
  "title": "hw.ReplaceVariables",
  "version": "14.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.11.49.58/hw.replacevariables.14.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.11.49.58/hw.replacevariables.14.0.0.json#dependencygroup/hw.helper.core",
          "@type": "PackageDependency",
          "id": "hw.Helper.Core",
          "range": "[14.0.0, )"
        }
      ]
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}