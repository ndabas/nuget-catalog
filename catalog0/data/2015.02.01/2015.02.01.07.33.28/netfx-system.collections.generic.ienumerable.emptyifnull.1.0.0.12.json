{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.07.33.28/netfx-system.collections.generic.ienumerable.emptyifnull.1.0.0.12.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Daniel",
  "catalog:commitId": "3f38b04c-d916-42c8-9128-dd2421c0a757",
  "catalog:commitTimeStamp": "2015-02-01T07:33:28.9218723Z",
  "created": "2011-06-15T02:59:22.607Z",
  "description": "Hate checking for nulls in Linq queries? Turn any null enumerable into an empty one as needed! \n\nvar id = schema.Elements.EmptyIfNull().FirstOrDefault(x => x == \"Id\")",
  "iconUrl": "http://download.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=netfx&DownloadId=199201",
  "id": "netfx-System.Collections.Generic.IEnumerable.EmptyIfNull",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://netfx.codeplex.com/license",
  "packageHash": "Hbri3Ofv+VpJuCXeoFDhVYvOiuWypMmS5PewkD7BJSBRiiEbobiJROosw0Tz/R3ABja6A41ldcyO4DuxxSfmBA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5875,
  "projectUrl": "http://netfx.codeplex.com",
  "published": "2011-06-15T02:59:23.733Z",
  "requireLicenseAcceptance": false,
  "title": "NETFx IEnumerable<T>.EmptyIfNull Extension Method",
  "version": "1.0.0.12",
  "tags": [
    "netfx",
    "enumerable",
    "linq"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}