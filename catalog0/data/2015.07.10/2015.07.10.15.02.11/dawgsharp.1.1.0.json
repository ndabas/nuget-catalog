{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.10.15.02.11/dawgsharp.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sergey Slepov",
  "catalog:commitId": "bd90b811-0681-4e60-8254-12457ba6371e",
  "catalog:commitTimeStamp": "2015-07-10T15:02:11.8379798Z",
  "created": "2015-07-10T15:01:31.04Z",
  "description": "DAWG is a data structure for effectively storing and searching large word lists. DawgSharp is an open-source C# implementation featuring a linear time graph reduction algorithm and persistence support.",
  "id": "DawgSharp",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "8tiGhY8XNvCY42rAD7lapFk3GAncTgpK1WBYnHWFfAXy8nCNGFFkBgnYmaONrWfdn92pTRjW8Op7o1TEqJPPeA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10433,
  "published": "2015-07-10T15:01:31.04Z",
  "releaseNotes": "Add method DawgBuilder.TryGetValue to support getting and modifying values for existing keys.",
  "requireLicenseAcceptance": false,
  "summary": "A clever string dictionary in C#",
  "version": "1.1.0",
  "tags": [
    "DAWG",
    "string",
    "dictionary"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}