{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.11.40.29/telerik.dataaccess.core.2014.2.918.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Telerik AD",
  "catalog:commitId": "8b2b55f4-79e2-4652-826b-508f4167300f",
  "catalog:commitTimeStamp": "2015-02-06T11:40:29.2706739Z",
  "copyright": "Copyright (C) 1996-2014 Telerik AD",
  "created": "2014-09-24T08:19:32.467Z",
  "description": "The Telerik.DataAccess.Core NuGet package provides the Telerik Data Access runtime assemblies necessary to consume Telerik Data Access persistent objects, without defining any mapping.\n\nIf this project contains persistent classes and defines mapping, the Telerik.DataAccess.Fluent NuGet package is required as well.\n\nTelerik Data Access helps defining mapping and executing create, retrieve, update and delete operations for your data access classes and database tables. It allows you to consume stored procedures and functions.",
  "iconUrl": "http://www.telerik.com/sfimages/default-source/productsimages/openaccess-orm/Resources/nuget-telerik-data-access.png",
  "id": "Telerik.DataAccess.Core",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.telerik.com/purchase/license-agreement/data-access",
  "packageHash": "o0T7mOQQybQ+QTvL2YS7hyp2ESoHjZvxujO6b+mLWmYjROS514Pb0jG6TanAF9/DOp52XrcxT00d5k1ZjDvg2Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4261468,
  "projectUrl": "http://www.telerik.com/data-access",
  "published": "2014-09-24T08:19:32.56Z",
  "releaseNotes": "New\n- Service Stack service layer code generation - The Telerik Data Access Add Service Wizard can now generate an extensible ServiceStack service layer based on a selected Telerik Data Access Model.\n- Handling for DateTimeOffset methods and properties in LINQ - The handling of methods and properties on DateTimeOffset CLR type is now implemented and leads to the same SQL as DateTime methods/properties\n\nFixed\n- Runtime: ContainsExtended not working with joined expressions, leading to NullReferenceException</strong> - A paramList.Contains(x.persistentField) was not handled correctly when done on a joined expression.\nExample:\n var paramList = Enumerable.Repeat(\"a\", 501); // more than 500 entries needed to trigger temporary table Contains handling\n var query = from b in context.Bs\n    join e in context.Es on b.Id equals e.Id\n    where paramList.Contains(b.field1) && e.status != 200\n    select new { Field1 = b.Id, Field2 = e.Status };\nA NullReferenceException used to occur while calculating a join to the temporary table, which does not have primary keys.\n- RelationalConnectionPool can write false error log entries when connection waiting thread was interrupted - When the managed connection pool is used by an application, the connection pool is emptied so that threads block and wait for a connection, and that waiting threads is interrupted, the runtime might write wrong entries in the application log for \"Forced Garbage Collection to free dangling connections.\". The original entry is still valid, yet the condition was not reset.\n- Runtime: Wrong string converter used for default mapped string properties - Now string properties mapped with Fluent Mapping without specifying character encoding will be use Non-Unicode value converter to match their Non-Unicode string encoding.\n- Runtime: HighLow key generator does not work correctly when ReadWithoutTransactions is used - When ReadWithoutTransactions is turned on, the HighLow key generator mechanism did not protect itself properly against concurrent usage, leading to DuplicateKeyExceptions.\n\nNOTE: These Release Notes include only the runtime changes in the particular Telerik Data Access release. For the full list of changes please refer to the Telerik web site ( http://www.telerik.com/support/whats-new/data-access/release-history ).",
  "requireLicenseAcceptance": true,
  "summary": "The Telerik.DataAccess.Core NuGet package provides the Telerik Data Access runtime assemblies necessary to work with Telerik Data Access persistent objects.",
  "title": "Telerik.DataAccess.Core",
  "version": "2014.2.918.1",
  "tags": [
    "ORM",
    "Fluent",
    "CodeOnly",
    "Entity",
    "Mapping",
    "DataAccess",
    "Database",
    "DAL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}