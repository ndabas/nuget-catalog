{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Angus Millar",
  "catalog:commitId": "ca98c4b8-6362-4e16-813f-94a0f1063609",
  "catalog:commitTimeStamp": "2021-05-28T03:39:16.3780922Z",
  "created": "2021-05-28T03:37:31.673Z",
  "description": "FHIR SMART Health Card JWS token encoder, decoder and verifier libaray",
  "id": "SmartHealthCard.Token",
  "isPrerelease": true,
  "lastEdited": "2021-05-28T03:39:05.773Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "eo4edujCFwUiNH2arEHLVGqdf+e24j6S7UPMIrsqcJ+LqcmpyxaiMJWpMkh9CROvydYyl/bM9uzQTkXhIKpxUQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35443,
  "projectUrl": "https://github.com/angusmillar/SmartHealthCard",
  "published": "2021-05-28T03:37:31.673Z",
  "releaseNotes": "Fixed bug in SmartHealthCardJwks where duplicate Key objects where output and invalid JSON as there was no comma between the objects. The issue was deep in the JsonSerilizer therefore this bug would have effected many other JSON outputs.\n Removed the Minified property from the call to SmartHealthCardJwks.GetJsonWebKeySet() as you can not minifiy the returned object model, it was only required on  the SmartHealthCardJwks.Get() method that retrurn JSON.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "0.1.0-alpha.2",
  "version": "0.1.0-alpha.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json#dependencygroup/net5.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.1, )"
        }
      ],
      "targetFramework": "net5.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json#SmartHealthCard.Token.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 771,
      "fullName": "SmartHealthCard.Token.nuspec",
      "length": 1483,
      "name": "SmartHealthCard.Token.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json#lib/net5.0/SmartHealthCard.Token.dll",
      "@type": "PackageEntry",
      "compressedLength": 22616,
      "fullName": "lib/net5.0/SmartHealthCard.Token.dll",
      "length": 56832,
      "name": "SmartHealthCard.Token.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 641,
      "fullName": "LICENSE",
      "length": 1090,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.28.03.39.16/smarthealthcard.token.0.1.0-alpha.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "SmartHealthCard",
    "JWS",
    "JWT",
    "FHIR",
    "covid19",
    "immunization",
    "laboratory",
    "VerifiableCredential"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}