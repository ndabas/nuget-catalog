{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Liquet",
  "catalog:commitId": "d4e42929-e0e0-4b93-b89c-95356fc69c9b",
  "catalog:commitTimeStamp": "2021-03-02T06:51:47.2731499Z",
  "created": "2021-03-02T06:49:53.73Z",
  "description": "Does your application make use of random memes from Reddit? If this is the case, you might use this API (https://github.com/D3vd/Meme_Api) to get your memes. That's fine and dandy, but what if you don't want to write your own implementation of it? That's where this wrapper comes in. Call one function and get your meme easily! Original API found here: https://github.com/D3vd/Meme_Api",
  "iconFile": "reddit.jpg",
  "id": "LQ.MemeApiDotNetWrapper",
  "isPrerelease": false,
  "lastEdited": "2021-03-02T06:51:24.963Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "IlWk7yX5mzfvTVmq3WfmxnLns4dQBBumOlrNpDVpgUnJIn6d2KkBbu12YDYjiTnIY8LzS8LogKrI9iwlamfHsQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 85785,
  "projectUrl": "https://github.com/EternalLiquet/MemeApiDotNetWrapper",
  "published": "2021-03-02T06:49:53.73Z",
  "releaseNotes": "Now includes a sync version of the base GetMemes() and made GetMemes() async say GetMemesAsync() for specification",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.5.0",
  "version": "1.5.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#dependencygroup/.netcoreapp3.1/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[12.0.3, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#LQ.MemeApiDotNetWrapper.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 739,
      "fullName": "LQ.MemeApiDotNetWrapper.nuspec",
      "length": 1485,
      "name": "LQ.MemeApiDotNetWrapper.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#lib/netcoreapp3.1/MemeApiDotNetWrapper.dll",
      "@type": "PackageEntry",
      "compressedLength": 7285,
      "fullName": "lib/netcoreapp3.1/MemeApiDotNetWrapper.dll",
      "length": 17920,
      "name": "MemeApiDotNetWrapper.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 12289,
      "fullName": "LICENSE",
      "length": 35823,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#reddit.jpg",
      "@type": "PackageEntry",
      "compressedLength": 53782,
      "fullName": "reddit.jpg",
      "length": 59477,
      "name": "reddit.jpg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.02.06.51.47/lq.memeapidotnetwrapper.1.5.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Meme",
    "API",
    "Reddit",
    "Moment",
    "Wrapper"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}