{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.02.21.18/avltree.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Costin S",
  "catalog:commitId": "70634ad2-27dd-4f2d-8475-7cc95afe21fa",
  "catalog:commitTimeStamp": "2015-02-02T02:21:18.0613449Z",
  "copyright": "Copyright 2012",
  "created": "2012-08-15T03:54:49.283Z",
  "description": "Self balancing avl tree with Concat and Split operations.",
  "id": "AvlTree",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://avltree.codeplex.com/license",
  "packageHash": "xJyPG/bQRO7Hovt7ByGNbnjurL2hWE0wMMO0j99D+SIIg6iYT5HeIa7U9pX4g9hUeXn6+AVnXT6+OK9berwWPQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11960,
  "projectUrl": "http://avltree.codeplex.com/",
  "published": "2012-08-15T03:54:49.283Z",
  "releaseNotes": "Stable.",
  "requireLicenseAcceptance": true,
  "summary": "Provides concatenate and split operations plus the usual: add, delete, search, min, max, deletemin, deletemax .. (all logarithmic time). Can be easily ported to c++. Can be used with or without parent pointers/references (refer to TREE_WITH_PARENT_POINTERS directive in the source code). Traversal is currently implemented using parent pointers",
  "title": "AvlTree",
  "version": "1.0.0",
  "tags": [
    "avl",
    "tree",
    "balanced",
    "concat",
    "split"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}