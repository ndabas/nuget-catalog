{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.20.14.32.56/freezablecollections.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dmitry Naumov",
  "catalog:commitId": "8016c2dd-413c-4ffb-af89-2c2b573e03eb",
  "catalog:commitTimeStamp": "2015-07-20T14:32:56.3513203Z",
  "copyright": "Copyright 2015",
  "created": "2015-07-20T14:31:53.693Z",
  "description": "FreezableCollections provide efficient way to start working with mutable collection and then convert it to immutable, type-safe version with zero cost.",
  "id": "FreezableCollections",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "E23HtNZ48zOdEeGVOp49c2wtVYscNtHYpSESZxNJeg7TQJG/I8ZKUShvFjk7lJ2UUXUy3edSPIyfdxQ9q53PNA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8142,
  "projectUrl": "https://github.com/DmitryNaumov/FreezableCollections",
  "published": "2015-07-20T14:31:53.693Z",
  "requireLicenseAcceptance": false,
  "summary": "Mutable collections which can be turned into immutable.",
  "title": "FreezableCollections",
  "version": "0.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.20.14.32.56/freezablecollections.0.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}