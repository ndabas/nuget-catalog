{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "BBernard / CajunCoding",
  "catalog:commitId": "fef81761-76e2-49c0-be49-093dbb8c9c40",
  "catalog:commitTimeStamp": "2023-07-26T04:27:26.6523924Z",
  "copyright": "Copyright Â© 2020",
  "created": "2023-07-26T04:24:50.4Z",
  "description": "A set of extensions for working with HotChocolate GraphQL and Database access with micro-orms such as RepoDb (or Dapper).  This extension pack provides access to key elements such as Selections/Projections, Sort arguments, & Paging arguments in a significantly simplified facade so this logic can be leveraged in the Resolvers (and lower level Serivces/Repositories that encapsulate all data access) without dependency on IQueryable deferred execution (e.g. EntityFramework).",
  "id": "GraphQL.ResolverProcessingExtensions",
  "isPrerelease": false,
  "lastEdited": "2023-07-26T04:27:26.207Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "3BmiAlUAj0gnN3jdTObZAG14Zttup3lW06HTqf5TMbpfPrrGLa4W/B/G7SoMn59VJ7yKHgacTjwjuxlvD0TalQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34704,
  "projectUrl": "https://github.com/cajuncoding/graphql.RepoDb",
  "published": "2023-07-26T04:24:50.4Z",
  "releaseNotes": "Release Notes:\n\t\t\tRelease Notes:\n\t\t\t- Updated and Optimized now with HC v13 -- leveraging more out-of-the-box features, simplifying code, and improving performance.\n\t\t\t- Update project to .NET 6.0 which is now the minimum version supported by HC v13.\n\t\t\t- Implemented support for dynamic injection of the GraphQL RepoDb Mapper via Resolver parameters.\n\t\t\t- The Field Middleware is now optimized to only resolve and inject IParamsContext when it's actually requested in the signature of the resolver\n\t\t\t- NOTE: There are some breaking changes as part of the simplification such as:\n\t\t\t-    .AsPreProcessedCursorSlice() is replaced by .ToGraphQLConnection() and you can now simply return a normal HC Connection<T> from your resolvers.\n\t\t\t-    .AsPreProcessedPageResults() is replaced by .ToGraphQLCollectionSegment() and you can now simply return a normal HC CollectionSegment<T> from your resolvers.\n\t\t\t-\t Classes & Namespaces have been renamed from 'PreProcessing' to now 'ResolverProcessing'\n\n\t\t\tPrior Releases Notes:\n\t\t\t- Updated to latest version of HC to v12.4.1\n\t\t\t- Fixed breaking change in HC where Field Definition context data methods were removed; now uses the new pattern that HC Core attributes (e.g. UsePaging, UseSorting).\n\t\t\t- Updated Demo projects to .Net 6.0 and Azure Functions v4.\n\t\t\t- Fixed issue #8 related to the in-memory Cursor Paging custom extension handling of empty enumerable results.\n\t\t\t- Upgraded to now support HotChocolate version 12 with v12.0.1 and synced Nuget Version\n\t\t\t- Bump HotChocolate version to v11.3.8 (latest v11 version before jumping to v12) and synced Nuget Version\n\t\t\t- Bump HotChocolate version to v11.2.2 stable and sync Nuget version.\n\t\t\t- Minor code cleanup and optimizations and removed duplicated validation.\n\t\t\t- Eliminated dependency on Total Count to compute HasNextPage; this enalbed optimizing the paging algorthims in RepoDB (and other consuming libraries).\n\t\t\t- Eliminate dependency on Generic Class type constraint for Paging as this is not a restriction of the HC Core, now primitive return types are supported.\n\t\t\t- Enabled OffsetPaging parameters to be completely optional and default to retrieving all results, unless manually enforced by the Resolver or PagingMiddleware via PagingHandler (which is where HC core implements existing validation).\n\t\t\t- Add full support for Offset Paging in addition to CursorPaging; including Offset Paging models, extension methods to convert IEnumerable, etc.\n\t\t\t- Added examples in the StarWars Azure Functions project using in-memory processing (RepoDb implementation is not complete).\n\t\t\t- Added support to easily determine if TotalCount is selected (as it's a special case selection) to support potential performance optimizations within Resolver logic.\n\t\t\t- Added more Unit test coverage for Selections, and Paging implmentations\n\t\t\t- Bump version to HotChocolate v11.0.4.\n\t\t\t- Add support for Argument Names, and AllArguments facade for easier detecting and working with Arguments.\n\t\t\t- Add .ConfigureAwait(false) to all awaits for performance.\n\t\t\t- Fix Namespace consistency (might be a breaking change due to some mixed naming)\n\t\t\t- Fixed new issue due to changes in Sort arguments in HotChocolate core; sort arguments are resolved correctly again.\n\t\t\t- Bump to HotChocolate v11.0.1 which now resolves a bug that we helped identify with interfaces in the initial release of v11.0.0.\n\t\t\t- Provide ability to trace log out some details for the query, execution time, etc. Also improves support for cancellation token throughout DB calls and minor optimizations and cleanup.",
  "repository": "",
  "verbatimVersion": "13.0.0",
  "version": "13.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json#dependencygroup/net6.0/hotchocolate.data",
          "@type": "PackageDependency",
          "id": "HotChocolate.Data",
          "range": "[13.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json#dependencygroup/net6.0/hotchocolate.types.offsetpagination",
          "@type": "PackageDependency",
          "id": "HotChocolate.Types.OffsetPagination",
          "range": "[13.0.0, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json#GraphQL.ResolverProcessingExtensions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2284,
      "fullName": "GraphQL.ResolverProcessingExtensions.nuspec",
      "length": 5146,
      "name": "GraphQL.ResolverProcessingExtensions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json#lib/net6.0/GraphQL.ResolverProcessingExtensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 18752,
      "fullName": "lib/net6.0/GraphQL.ResolverProcessingExtensions.dll",
      "length": 41472,
      "name": "GraphQL.ResolverProcessingExtensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.27.26/graphql.resolverprocessingextensions.13.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11514,
      "fullName": ".signature.p7s",
      "length": 11514,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "graphql",
    "graph-ql",
    "hotchocolate",
    "azure",
    "repository",
    "service",
    "repodb",
    "dapper",
    "petapoco",
    "sqlkata",
    "sorting",
    "paging",
    "cursor"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}