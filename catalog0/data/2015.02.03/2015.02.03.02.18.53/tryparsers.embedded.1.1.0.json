{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.02.18.53/tryparsers.embedded.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Atif Aziz",
  "catalog:commitId": "86e892ed-55cb-43ff-ba0b-48379179993a",
  "catalog:commitTimeStamp": "2015-02-03T02:18:53.5502971Z",
  "copyright": "Copyright (c) 2012 Atif Aziz. All rights reserved.",
  "created": "2013-02-11T22:13:13.63Z",
  "description": "A single C# file that can be embedded to provide alternate ways to invoke TryParse methods from .NET Framework for use in expressions and functional code like LINQ queries.",
  "id": "TryParsers.Embedded",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/bsd-license.php",
  "packageHash": "E1pecBrwS0IJVoleNvvqfe45TFY/aoHToC75xxV/BXzOkm8rtDGa2w1A8X3E6tPMdDy/T4csOazprZS/qcY/qQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5730,
  "projectUrl": "http://bitbucket.org/raboof/tryparsers/",
  "published": "2013-02-11T22:13:13.63Z",
  "releaseNotes": "Adds support for SByte, UInt16, UInt32, UInt64 and enumerations",
  "requireLicenseAcceptance": false,
  "summary": "TryParse from .NET Framework done right",
  "title": "TryParsers (Embedded)",
  "version": "1.1.0",
  "tags": [
    "parser",
    "parsing",
    "linq",
    "functional"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}