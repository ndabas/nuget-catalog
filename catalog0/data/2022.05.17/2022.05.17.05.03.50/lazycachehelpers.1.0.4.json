{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.17.05.03.50/lazycachehelpers.1.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "BBernard / CajunCoding",
  "catalog:commitId": "3f536c18-8813-45af-9be6-df5a837c8185",
  "catalog:commitTimeStamp": "2022-05-17T05:03:50.7641824Z",
  "copyright": "Copyright (c) 2018",
  "created": "2022-05-17T05:01:22.237Z",
  "description": "Library for leveraging the power of the Lazy class to enable high performance caching at all layers of an application. It provides support for both Sync and Async Lazy caching operations in an extremely lightweight and simple footprint -- with passive cache coding style using Lambdas to maximize server utilization and performance with a blocking, or self-populating, cache implementation!",
  "id": "LazyCacheHelpers",
  "isPrerelease": false,
  "lastEdited": "2022-05-17T05:03:23.897Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "DLKFSbXArA1+/aD2+FWLoq/XeetugWBpUb/QmCPFL/ax4eIjdxdz0Yvd0zH25/SqHuM759Twp27jSgCkJ1LNGw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21874,
  "projectUrl": "https://github.com/cajuncoding/LazyCacheHelpers",
  "published": "2022-05-17T05:01:22.237Z",
  "releaseNotes": "- Restored LazyCacheConfig class capabilities for reading values dynamically from Configuration.\n\t\t- Added support for Bootstrapping a Configuration Reader Func (Delegate) so that all reading of config values from the keys is completely dynamic now.\n\n\t\tPrior Release Notes:\n\t\t- Added new LazyStaticInMemoryCache<> class to make it significantly easier to implement in-memory caching of data that rarely or never changes with the lazy loading, blocking cache, pattern; great for minimizing the runtime impact of expensive Reflection or I/O Async logic for data that rarely or never changes.\n\t\t- Refactored as .Net Standard v2.0 compatible Library for greater compatibility\n\t\t- Removed dependency on System.ConfigurationManagement; breaking change if a couple helper overloads were used. The helpers can be restored by adding LazyCacheHelpers.ConfigurationManagement extension package and renaming all calls to LazyCachePolicy static helper to now use LazyCachePolicyFromConfig static helper.\n\t\t- Now fully supported as a .Net Standard 2.0 library (sans Configuration reader helpers) whereby you can specify the timespan directly for Cache Policy initialization.\n\t\t- Initial nuget release for .Net Framework.",
  "repository": "",
  "verbatimVersion": "1.0.4",
  "version": "1.0.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.17.05.03.50/lazycachehelpers.1.0.4.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.17.05.03.50/lazycachehelpers.1.0.4.json#dependencygroup/.netstandard2.0/system.runtime.caching",
          "@type": "PackageDependency",
          "id": "System.Runtime.Caching",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.17.05.03.50/lazycachehelpers.1.0.4.json#LazyCacheHelpers.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1264,
      "fullName": "LazyCacheHelpers.nuspec",
      "length": 2636,
      "name": "LazyCacheHelpers.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.17.05.03.50/lazycachehelpers.1.0.4.json#lib/netstandard2.0/LazyCacheHelpers.dll",
      "@type": "PackageEntry",
      "compressedLength": 9131,
      "fullName": "lib/netstandard2.0/LazyCacheHelpers.dll",
      "length": 20480,
      "name": "LazyCacheHelpers.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.17.05.03.50/lazycachehelpers.1.0.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9478,
      "fullName": ".signature.p7s",
      "length": 9478,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "cache",
    "caching",
    "memory",
    "memorycache",
    "in-memory",
    "lazy",
    "loading",
    "load",
    "self",
    "populate",
    "populating",
    "abstraction",
    "abstract",
    "thread",
    "threadsafe",
    "thread-safe",
    "safe",
    "performance",
    "optimization",
    "optimize",
    "server",
    "utilization"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}