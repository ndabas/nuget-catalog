{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.03.25.14.17.33/iconextractor.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "J.Sakamoto",
  "catalog:commitId": "52e52b7e-08ff-494e-930e-2f2adf237f4e",
  "catalog:commitTimeStamp": "2015-03-25T14:17:33.1930845Z",
  "created": "2015-03-25T14:16:41.837Z",
  "description": "This library allows you to extracting first .ico file in PE format file (.exe, .dll) to stream.",
  "id": "IconExtractor",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/jsakamoto/iconextractor/blob/master/LICENSE",
  "packageHash": "3q4SONq0AQFtuZB6GAkoMa9mIyES85pfU0NfHn5bY9vrxVKkA6JTN2NczJ3/1qT6fCiC2VfFRpxoaREVLnAQ6Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8456,
  "projectUrl": "https://github.com/jsakamoto/iconextractor",
  "published": "2015-03-25T14:16:41.837Z",
  "releaseNotes": "v.1.0\n      - first release",
  "requireLicenseAcceptance": false,
  "summary": "Extract .ico file from PE Format file (.exe, .dll)",
  "title": "IconExtractor",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.03.25.14.17.33/iconextractor.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "tags": [
    "icon",
    "icons"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}