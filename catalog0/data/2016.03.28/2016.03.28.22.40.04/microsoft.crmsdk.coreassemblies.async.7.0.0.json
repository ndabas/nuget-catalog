{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.28.22.40.04/microsoft.crmsdk.coreassemblies.async.7.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Serge Semenov",
  "catalog:commitId": "9db7ae3e-b45b-4e22-837d-bb556428963d",
  "catalog:commitTimeStamp": "2016-03-28T22:40:04.4288549Z",
  "created": "2016-03-28T17:30:05.393Z",
  "description": "When you call \"IOrganizationService.Execute(request)\" for instance, it blocks the current thread until the reply is received from the Dynamics CRM server. In case when multiple such operations are running in parallel the app will use too many worker threads (because they are blocked) and will start suffer from performance degradation due to thread exhaustion. To avoid this issue, it's better not to block threads and process server responses as soon as they are available. This extension library allows you to do this using Task Parrallel Library (TPL) and asynchronous calls to Dynamics CRM server, e.g. \"await IAsyncOrganizationService.ExecuteAsync(request, cancellationToken)\".\n\nYo use you need to create an async version of the client (Microsoft.Xrm.Sdk.Client.Async.AsyncOrganizationServiceProxy, Microsoft.Xrm.Sdk.Client.Async.AsyncDiscoveryServiceProxy, Microsoft.Xrm.Sdk.WebServiceClient.Async.OrganizationWebProxyAsyncClient, Microsoft.Xrm.Sdk.WebServiceClient.Async.DiscoveryWebProxyAsyncClient) which does asynchronous WCF calls to the service.",
  "id": "Microsoft.CrmSdk.CoreAssemblies.Async",
  "isPrerelease": false,
  "lastEdited": "2016-03-28T22:39:24.837Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://opensource.org/licenses/MIT",
  "listed": false,
  "packageHash": "FTDya5l0jFHTEdPh1XGad32aDHjhZr44UpQ2E8dr05xDzKGZbYiIMFdiYcLz+1ns+gwBnJo2/sZEnUdfk6uocQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 44109,
  "projectUrl": "https://github.com/tyrotoxin/Microsoft.Xrm.Sdk.Async",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Adds IAsyncOrganizationService and IAsyncDiscoveryService with async versions of interface methods to the CRM Dynamics SDK",
  "verbatimVersion": "7.0.0.0",
  "version": "7.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.28.22.40.04/microsoft.crmsdk.coreassemblies.async.7.0.0.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.28.22.40.04/microsoft.crmsdk.coreassemblies.async.7.0.0.json#dependencygroup/.netframework4.5/microsoft.crmsdk.coreassemblies",
          "@type": "PackageDependency",
          "id": "Microsoft.CrmSdk.CoreAssemblies",
          "range": "[7.1.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.28.22.40.04/microsoft.crmsdk.coreassemblies.async.7.0.0.json#dependencygroup/.netframework4.5/microsoft.identitymodel",
          "@type": "PackageDependency",
          "id": "Microsoft.IdentityModel",
          "range": "[6.1.7600.16394, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    }
  ],
  "tags": [
    "Dynamics",
    "2015",
    "CRM",
    "SDK",
    "XRM",
    "async"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}