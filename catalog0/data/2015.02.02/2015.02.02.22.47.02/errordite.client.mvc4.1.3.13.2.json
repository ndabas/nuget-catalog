{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.22.47.02/errordite.client.mvc4.1.3.13.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "nick-codetrip,gaz-codetrip",
  "catalog:commitId": "f3faa6f2-cd1a-488b-89f5-e2957f363a11",
  "catalog:commitTimeStamp": "2015-02-02T22:47:02.9714988Z",
  "created": "2012-12-30T18:52:41.373Z",
  "description": "Errordite receives all your application exceptions and groups together those that are the same - automatically or with rules you define. You then decide how to progress the errors. You can fix them, ignore them, or wait and see how often the error occurs. This is the MVC4 version which automaticaly configures your application (via an http modules) to send all errors to Errordite. There is also a general purpose client and an MVC2/MVC3 version available.",
  "id": "Errordite.Client.Mvc4",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "C1svGN7W7GzSUh5GcroMeymHpS/OZPuyR0JzZOq2dcula9bcAG8oEUqhlJ+WWeAkKYkngz6g4ApGDsSkTbyJng==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 46456,
  "projectUrl": "http://www.errordite.com",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Client for cloud based exception logging and management.",
  "version": "1.3.13.2",
  "tags": [
    "Exceptions",
    "Errors",
    "Logging",
    "Exception-Handling",
    "MVC4"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}