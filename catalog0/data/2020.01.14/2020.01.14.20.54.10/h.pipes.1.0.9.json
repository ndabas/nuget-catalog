{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "havendv",
  "catalog:commitId": "7d96538e-db49-4647-90a0-d41cdfafbcb7",
  "catalog:commitTimeStamp": "2020-01-14T20:54:10.6741042Z",
  "created": "2020-01-14T20:51:23.237Z",
  "description": "Features:\n- Create named pipe servers that can handle multiple client connections simultaneously.\n- Send strongly-typed messages between clients and servers: any serializable .NET object can be sent over a pipe and will be automatically serialized/deserialized, including cyclical references and complex object graphs.\n- Async\n- Requires .NET Standard 2.0\n- Supports large messages - up to 300 MiB.\n- Server restart automatically\n- Automatically wait for the release of the pipe for the server, if it is already in use\n- Automatically waiting for a server pipe creating when client connecting\n- Automatic reconnect with a given interval and at each `client.WriteAsync`, if necessary\n- Supports variable formatters, default - BinaryFormatter which uses System.Runtime.Serialization.BinaryFormatter inside\n- Also available ready formatters in separate nuget packages: H.Formatters.Json and H.Formatters.Wire\n- Supports `PipeAccessRule`'s(see `H.Pipes.AccessControl` nuget package) or more complex code to access using the `PipeServer.PipeStreamInitializeAction` property",
  "id": "H.Pipes",
  "isPrerelease": false,
  "lastEdited": "2020-01-14T20:53:53.74Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "BQwazRI4izzDTOSlh4+Mu6ICL23NCpIgAXfzSd/mGa9xRETblIFwwHgWXrfny+NF7RAk5sXurZySedKYMR+l9A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 81104,
  "projectUrl": "https://github.com/HavenDV/H.Pipes",
  "published": "2020-01-14T20:51:23.237Z",
  "releaseNotes": "Fixed bugs.\nAdded optimized SingleConnection client/server classes.\nAdded IPipeClient/IPipeServer interfaces.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.9",
  "version": "1.0.9",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#dependencygroup/.netstandard2.0/h.formatters.binaryformatter",
          "@type": "PackageDependency",
          "id": "H.Formatters.BinaryFormatter",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#dependencygroup/.netstandard2.0/microsoft.bcl.asyncinterfaces",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.AsyncInterfaces",
          "range": "[1.1.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#dependencygroup/.netstandard2.1/h.formatters.binaryformatter",
          "@type": "PackageDependency",
          "id": "H.Formatters.BinaryFormatter",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#H.Pipes.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1069,
      "fullName": "H.Pipes.nuspec",
      "length": 2407,
      "name": "H.Pipes.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#lib/netstandard2.0/H.Pipes.dll",
      "@type": "PackageEntry",
      "compressedLength": 29919,
      "fullName": "lib/netstandard2.0/H.Pipes.dll",
      "length": 74240,
      "name": "H.Pipes.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#lib/netstandard2.0/H.Pipes.xml",
      "@type": "PackageEntry",
      "compressedLength": 3887,
      "fullName": "lib/netstandard2.0/H.Pipes.xml",
      "length": 43857,
      "name": "H.Pipes.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#lib/netstandard2.1/H.Pipes.dll",
      "@type": "PackageEntry",
      "compressedLength": 30242,
      "fullName": "lib/netstandard2.1/H.Pipes.dll",
      "length": 75776,
      "name": "H.Pipes.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#lib/netstandard2.1/H.Pipes.xml",
      "@type": "PackageEntry",
      "compressedLength": 3887,
      "fullName": "lib/netstandard2.1/H.Pipes.xml",
      "length": 43857,
      "name": "H.Pipes.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.01.14.20.54.10/h.pipes.1.0.9.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "pipes",
    "named",
    "async",
    "namedpipes"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}