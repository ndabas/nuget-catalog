{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.22.49.12/objectflattenerrecomposer.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dogu Arslan",
  "catalog:commitId": "87865ff3-8879-42ab-be51-1578fe6348d1",
  "catalog:commitTimeStamp": "2017-10-01T22:49:12.1971106Z",
  "copyright": "Copyright 2016",
  "created": "2017-10-01T21:54:57.083Z",
  "description": "Integrated into Azure Storage SDK v8.0.0.0 \nhttps://msdn.microsoft.com/en-us/library/mt775435.aspx \nhttps://msdn.microsoft.com/en-us/library/mt775432.aspx \n\nBlog: https://doguarslan.wordpress.com/2016/02/03/writing-complex-objects-to-azure-table-storage/ \n\nProvides functionality to flatten complex objects into EntityProperty dictionary and functionality to recompose original complex object from the flattened property dictionary. One usage is that the API allows writing any complex object with nested properties into Azure Table Storage in flattened form wih individual columns. \nThe API also allows you to save Enum, TimeSpan, DateTimeOffset, Nullable, IEnumerable property types to Azure Table Storage. \n\nAdded IEnumerable property (List, Array, Dictionary, ...) support to v2.0.0\n\nUsage: \nusing ObjectFlattenerRecomposer; \n//Flatten object and convert it to EntityProperty Dictionary \nDictionary<string, EntityProperty> flattenedProperties = EntityPropertyConverter.Flatten(complexObject); \n// Create a DynamicTableEntity and set its PK and RK \nDynamicTableEntity dynamicTableEntity = new DynamicTableEntity(partitionKey, rowKey); \ndynamicTableEntity.Properties = flattenedProperties; \n// Write the DynamicTableEntity to Azure Table Storage using client SDK \n//Read the entity back from AzureTableStorage as DynamicTableEntity using the same PK and RK \nDynamicTableEntity entity = [Read from Azure using the PK and RK]; \n//Convert the DynamicTableEntity back to original complex object. \nImagine original complexObject was of type Order. \nOrder order = EntityPropertyConverter.ConvertBack<Order>(entity.Properties);",
  "id": "ObjectFlattenerRecomposer",
  "isPrerelease": false,
  "lastEdited": "2017-10-01T22:48:21.253Z",
  "listed": true,
  "packageHash": "twnf95AHvo+gRe9Eaw5993w7UVU4nOCWZvdG2Anf94fq12FNBP6Rb7TZd4sJqexriPFIHVyX5FkSck/OJX/Lng==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10407,
  "projectUrl": "https://doguarslan.wordpress.com/2016/02/03/writing-complex-objects-to-azure-table-storage/",
  "published": "2017-10-01T21:54:57.083Z",
  "releaseNotes": "Update to version 2.0 \n\t- Added support for all IEnumerable type properties (List, Array, Dictionary, ICollection, IReadOnlyCollection etc.). Automatically converts these properties to json when writing to table storage. Recreates the original IEnumerable property with correct type when reading from the table.\n\n\t- Added support for byte type property.",
  "requireLicenseAcceptance": false,
  "summary": "Enables reading and writing complex objects to table storage. Supports all property types and complex objects with nested properties.",
  "title": "Object Flattener Recomposer",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.22.49.12/objectflattenerrecomposer.2.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.22.49.12/objectflattenerrecomposer.2.0.0.json#dependencygroup/windowsazure.storage",
          "@type": "PackageDependency",
          "id": "WindowsAzure.Storage",
          "range": "[4.3.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.22.49.12/objectflattenerrecomposer.2.0.0.json#ObjectFlattenerRecomposer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1191,
      "fullName": "ObjectFlattenerRecomposer.nuspec",
      "length": 3032,
      "name": "ObjectFlattenerRecomposer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.22.49.12/objectflattenerrecomposer.2.0.0.json#lib/net45/ObjectFlattenerRecomposer.dll",
      "@type": "PackageEntry",
      "compressedLength": 6453,
      "fullName": "lib/net45/ObjectFlattenerRecomposer.dll",
      "length": 14848,
      "name": "ObjectFlattenerRecomposer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.22.49.12/objectflattenerrecomposer.2.0.0.json#content/License.txt",
      "@type": "PackageEntry",
      "compressedLength": 801,
      "fullName": "content/License.txt",
      "length": 1504,
      "name": "License.txt"
    }
  ],
  "tags": [
    "Object",
    "Flatten",
    "Recompose",
    "Azure",
    "Table",
    "Storage",
    "EntityProperty",
    "DynamicTableEntity",
    "POCO",
    "Converter"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}