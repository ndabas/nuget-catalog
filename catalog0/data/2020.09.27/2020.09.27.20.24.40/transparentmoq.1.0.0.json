{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.27.20.24.40/transparentmoq.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kim Hugener-Ohlsen",
  "catalog:commitId": "8a848338-550a-49bb-8ec8-464a6138bd16",
  "catalog:commitTimeStamp": "2020-09-27T20:24:40.7589001Z",
  "copyright": "Kim Hugener-Ohlsen",
  "created": "2020-09-27T20:22:33.05Z",
  "description": "With inspiration taken from mocking frameworks like NSubstitute, FakeItEasy and JustMock the project tries to make Moq get some of the advantages of these frameworks. TransparentMoq allows to use Moq without having to store mocks in Mock<T> variables, instead a T variable can be used. This also removes the need to pass mocks with \".Object\" everywhere as they can be passed directly.\nThe library provides extension methods for most of Moq's methods, so they can also be called directly on the T variable.\nExamples:\nInstead of\nprivate Mock<IFileSystem> fileSystem = new Mock<IFileSystem>();\nWrite\nprivate IFileSystem fileSystem = New.Mock<IFileSystem>();\n\nInstead of\nMethodThatTakesFileSystem(fileSystem.Object);\nwrite\nMethodThatTakesFileSystem(fileSystem);\n\nTo arrange a mock everything remains the same:\nfileSystem.Setup(x => x.Exists(It.IsAny<string>())).Returns(true);",
  "id": "TransparentMoq",
  "isPrerelease": false,
  "lastEdited": "2020-09-27T20:24:37.34Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "r4foGoEKZF/Y0QZg1hW7toFlGu+3lwRZWxVivrCOTu52W6YAg0uI1KwlHtyk/fO5cHc6eYcRrGUSc++RIWgCIg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17131,
  "projectUrl": "https://github.com/hugener/TransparentMoq",
  "published": "2020-09-27T20:22:33.05Z",
  "releaseNotes": "1.0 - Initial release",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.27.20.24.40/transparentmoq.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.27.20.24.40/transparentmoq.1.0.0.json#dependencygroup/.netstandard2.0/moq",
          "@type": "PackageDependency",
          "id": "Moq",
          "range": "[4.14.5, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.27.20.24.40/transparentmoq.1.0.0.json#TransparentMoq.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 902,
      "fullName": "TransparentMoq.nuspec",
      "length": 1816,
      "name": "TransparentMoq.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.27.20.24.40/transparentmoq.1.0.0.json#lib/netstandard2.0/TransparentMoq.dll",
      "@type": "PackageEntry",
      "compressedLength": 4619,
      "fullName": "lib/netstandard2.0/TransparentMoq.dll",
      "length": 12800,
      "name": "TransparentMoq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.27.20.24.40/transparentmoq.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "moq",
    "mocking"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}