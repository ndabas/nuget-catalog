{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "M-Files Corporation",
  "catalog:commitId": "1d3130ca-73ba-4604-9318-0f6517f6506e",
  "catalog:commitTimeStamp": "2023-04-27T08:19:25.8713228Z",
  "copyright": "M-Files Corporation 2020 onwards",
  "created": "2023-04-27T08:17:11.31Z",
  "description": "Community-driven extensions for the M-Files Vault Application Framework.",
  "iconFile": "logo.png",
  "id": "MFiles.VAF.Extensions",
  "isPrerelease": false,
  "lastEdited": "2023-04-27T08:19:16.35Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "/8pLmeIsMn2rzWDKozPGSDQZDRi58YnAFGi3lFSMzKmxFs7lDUhFQ12pj3zQ5y97zXr6Wu1oZncw1T0qyvhczQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 181829,
  "projectUrl": "https://github.com/M-Files/VAF.Extensions.Community",
  "published": "2023-04-27T08:17:11.31Z",
  "readmeFile": "nuget-readme.md",
  "releaseNotes": "Changes included in 23.4.51\nhttps://github.com/M-Files/VAF.Extensions.Community/commit/44d62c665a9265c4e674205b4fc930a64a6d10db\nAdded CustomCommandAttribute and helpers (#100)\nEnables buttons to be created declaratively on the VaultApplication class:\n## Defining commands for the M-Files Admin area via attributes\nIn general terms, [commands can be added to the M-Files Admin area](https://developer.m-files.com/Frameworks/Vault-Application-Framework/Configuration/Commands/) by overriding `ConfigurableVaultApplicationBase<T>.GetCommands` and returning appropritately-defined instances of `CustomDomainCommand`.  The VAF Extensions adds the abilty to define these commands using attributes instead.\n*Note that the method signature must be correct for these attributes to work.  The method return type must be defined as `void` and it must define two parameters, the first of type `IConfigurationRequestContext` and the second of type `ClientOperations`.*\n### Buttons in the header\n*The code below is equivalent to [this example](https://developer.m-files.com/Frameworks/Vault-Application-Framework/Configuration/Commands/#displaying-commands-in-the-header) in the Developer Portal.*\n```csharp\npublic class VaultApplication\n: MFiles.VAF.Extensions.ConfigurableVaultApplicationBase<Configuration>\n{\n// Create a command with \"Say hello\" as the button text.\n[CustomCommand(\"Say hello\")]\n// Add it to the header bar.\n[ButtonBarCommandLocation]\npublic void SayHello\n(\nIConfigurationRequestContext context,\nClientOperations operations\n)\n{\noperations.ShowMessage($\"Hello {context.CurrentUserSessionInfo.AccountName}\");\n}\n}\n```\n### Buttons in the domain menu\n*The code below is equivalent to [this example](https://developer.m-files.com/Frameworks/Vault-Application-Framework/Configuration/Commands/#displaying-context-menu-items-for-the-domain-menu) in the Developer Portal.*\n```csharp\npublic class VaultApplication\n: MFiles.VAF.Extensions.ConfigurableVaultApplicationBase<Configuration>\n{\n// Create a command with \"Say hello\" as the button text.\n[CustomCommand(\"Say hello\")]\n// Add it to the domain context menu.\n[DomainMenuCommandLocation]\npublic void SayHello\n(\nIConfigurationRequestContext context,\nClientOperations operations\n)\n{\noperations.ShowMessage($\"Hello {context.CurrentUserSessionInfo.AccountName}\");\n}\n}\n```\nThe `DomainMenuCommandLocationAttribute` allows you to additionally define other appropriate content such as the priority and icon.\n### Buttons in the configuration menu\n*The code below is equivalent to [this example](https://developer.m-files.com/Frameworks/Vault-Application-Framework/Configuration/Commands/#displaying-context-menu-items-for-the-configuration-menumenu) in the Developer Portal.*\n```csharp\npublic class VaultApplication\n: MFiles.VAF.Extensions.ConfigurableVaultApplicationBase<Configuration>\n{\n// Create a command with \"Say hello\" as the button text.\n[CustomCommand(\"Say hello\")]\n// Add it to the configuration context menu.\n[ConfigurationMenuCommandLocation]\npublic void SayHello\n(\nIConfigurationRequestContext context,\nClientOperations operations\n)\n{\noperations.ShowMessage($\"Hello {context.CurrentUserSessionInfo.AccountName}\");\n}\n}\n```\nThe `ConfigurationMenuCommandLocationAttribute` allows you to additionally define other appropriate content such as the priority and icon.\n### Defining commands and referencing them in a dashboard\nIt is also possible to use attributes to define a command, and then to manually render the command inside a dashboard.  To do this you must provide a static command ID when declaring the command:\n```csharp\npublic class VaultApplication\n: MFiles.VAF.Extensions.ConfigurableVaultApplicationBase<Configuration>\n{\n// Define the constant command ID.\nprivate const string SayHelloCommandId = \"SayHello\";\n// Create a command with \"Say hello\" as the button text and an explicit command ID.\n[CustomCommand(\"Say hello\", CommandId = SayHelloCommandId)]\npublic void SayHello\n(\nIConfigurationRequestContext context,\nClientOperations operations\n)\n{\noperations.ShowMessage($\"Hello {context.CurrentUserSessionInfo.AccountName}\");\n}\n// An example of returning the command; typically you would not\n// replace the entire dashboard with it!\npublic override IEnumerable<IDashboardContent> GetStatusDashboardRootItems\n(\nIConfigurationRequestContext context\n)\n{\n// Just return the button.\nyield return this.GetCustomDomainCommandResolver()?\n.GetDashboardDomainCommand(SayHelloCommandId); // Use the explicit command ID to find it again.\n}\n}\n```",
  "repository": "",
  "verbatimVersion": "23.4.51",
  "version": "23.4.51",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#dependencygroup/.netframework4.7.2",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#dependencygroup/.netframework4.7.2/mfiles.vaf",
          "@type": "PackageDependency",
          "id": "MFiles.VAF",
          "range": "[22.12.672.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#dependencygroup/.netframework4.7.2/mfiles.vaf.configuration.logging.nlog",
          "@type": "PackageDependency",
          "id": "MFiles.VAF.Configuration.Logging.NLog",
          "range": "[22.11.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#dependencygroup/.netframework4.7.2/mfilesapi.extensions",
          "@type": "PackageDependency",
          "id": "MFilesAPI.Extensions",
          "range": "[1.0.6, )"
        }
      ],
      "targetFramework": ".NETFramework4.7.2"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#MFiles.VAF.Extensions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1784,
      "fullName": "MFiles.VAF.Extensions.nuspec",
      "length": 5831,
      "name": "MFiles.VAF.Extensions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#lib/net472/fi/MFiles.VAF.Extensions.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 4642,
      "fullName": "lib/net472/fi/MFiles.VAF.Extensions.resources.dll",
      "length": 14848,
      "name": "MFiles.VAF.Extensions.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#lib/net472/fr/MFiles.VAF.Extensions.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 8673,
      "fullName": "lib/net472/fr/MFiles.VAF.Extensions.resources.dll",
      "length": 27648,
      "name": "MFiles.VAF.Extensions.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#lib/net472/MFiles.VAF.Extensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 147956,
      "fullName": "lib/net472/MFiles.VAF.Extensions.dll",
      "length": 421376,
      "name": "MFiles.VAF.Extensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#logo.png",
      "@type": "PackageEntry",
      "compressedLength": 3775,
      "fullName": "logo.png",
      "length": 3876,
      "name": "logo.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#nuget-readme.md",
      "@type": "PackageEntry",
      "compressedLength": 1133,
      "fullName": "nuget-readme.md",
      "length": 2709,
      "name": "nuget-readme.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.27.08.19.25/mfiles.vaf.extensions.23.4.51.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11523,
      "fullName": ".signature.p7s",
      "length": 11523,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}