{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.11.52.31/prig.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Akira Sugiura",
  "catalog:commitId": "feb7df43-4ecc-4257-a301-94b1ad781eb0",
  "catalog:commitTimeStamp": "2015-02-07T11:52:31.7155651Z",
  "copyright": "(c) 2014 Akira Sugiura. All rights reserved.",
  "created": "2014-12-31T02:16:57.973Z",
  "description": "Prig(PRototyping jIG) is a framework that generates a Test Double like Microsoft Fakes/Typemock Isolator/Telerik JustMock based on Unmanaged Profiler APIs. This framework enables that any methods are replaced with mocks. For example, a static property, a private method, a non-virtual member and so on.",
  "id": "Prig",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/urasandesu/Prig/blob/master/LICENSE.md",
  "packageHash": "jaI1nS+PBNIb6lJdSZwKKTdDSUw16cGIm2UT6RRoqGGlnb3GEFkdkKkom7XSoZL6ewmme0QYgo4I7pxviBhRQw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4550716,
  "projectUrl": "https://github.com/urasandesu/Prig",
  "published": "2014-12-31T02:16:58.207Z",
  "releaseNotes": "Version 1.1.0\n* Release 1.1.\n* Fixed #26: Prig assembly shouldn't need InternalsVisibleToAttribute.\n* Fixed #27: Test stalled if adding the indirection settings for all members of DateTime.\n* Fixed #28: The indirect tests sometimes fail.\n* Supported the feature \"Prig setup session\" that makes adding the indirection stub settings more easier.\n\n\nVersion 1.0.0\n* Release 1.\n* Fixed #25: Default parameterized method can't call indirectly.\n\n\nVersion 0.0.0-alpha10\n* Pre-release 10.\n* Fixed #23: Can't be replaced the method that exposes the type of GAC unregistered assembly.\n* Fixed #24: Add Comment-Based Help.\n* Supported the feature that be able to replace any methods that have some non-public type in its signature.\n* [NOTICE] Changed the generated stub's API. It became that the indirection stubs and proxies are generated ALWAYS(overwrite). Until now, it no longer generates stubs and proxies after it generated them once.\n\n\nVersion 0.0.0-alpha9\n* Pre-release 9.\n* Fixed #16: Nested Type can't be resolved in its indirection stub.\n* Fixed #17: Prig can't uninstall correctly against the solution that contains multiple test projects.\n* Fixed #18: `Get-IndirectionStubSetting` generates invalid alias against explict implemented interface.\n* Fixed #19: `Find-IndirectionTarget` should filter the members that can't call indirectly by default.\n* Fixed #20: Indirection stub settings for the instance method of an internal class generates build errors.\n\n\nVersion 0.0.0-alpha8\n* Pre-release 8.\n* Supported the feature to set default behavior.\n* Modifying stub settings became a bit easier. The PowerShell command `Get-IndirectionStubSetting` supports generating unique name at the same time.\n* Fixed #14: `Environment.GetFolderPath(SpecialFolder)` can't call indirectly.\n* Fixed #15: `WebClient.DownloadStringTaskAsync` can't create indirection stub.\n\n\nVersion 0.0.0-alpha7\n* Pre-release 7.\n* Fixed #12: `.cctor()` can't replace with indirection stub.\n* Fixed #13: TypeLoadException is occurred when trying to detour multiple assemblies.\n\n\nAbout more previous versions, please see https://github.com/urasandesu/Prig/releases.",
  "requireLicenseAcceptance": false,
  "summary": "Prig is a lightweight framework for test indirections in .NET Framework.",
  "title": "Prig: Open Source Alternative to Microsoft Fakes",
  "version": "1.1.0",
  "tags": [
    "tdd",
    "isolation",
    "mock",
    "mocks",
    "mocking",
    "fake",
    "fakes",
    "faking",
    "unittest",
    "unittesting"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}