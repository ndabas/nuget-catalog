{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.06.05.10.07.08/metalup.functionallibrary.2.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Richard Pawson",
  "catalog:commitId": "fdff25ba-b326-4e34-be6c-7edc452c8c3e",
  "catalog:commitTimeStamp": "2022-06-05T10:07:08.4708772Z",
  "copyright": "Copyright 2018",
  "created": "2022-06-05T10:04:42.263Z",
  "description": ".NET library that mimics behaviour of some Haskell functions and types.",
  "id": "MetalUp.FunctionalLibrary",
  "isPrerelease": false,
  "lastEdited": "2022-06-05T10:06:46.103Z",
  "licenseUrl": "https://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "FZR4hX3swtTFErFt7Y9OwQr8LjojHrPRf/3QPOrx1Qoo39AiOegB9A14rcQvS542TTuCRBndEyL3Bf+Rhn9pyA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 96592,
  "projectUrl": "https://github.com/MetalUp/FunctionalLibrary",
  "published": "2022-06-05T10:04:42.263Z",
  "releaseNotes": "All and Any now short-circuit and return a Boolean result as soon as possible., e.g., All(i => i % 2 == 0, EnumFrom(1)) will return false after having only tested the first element of the range from 1 to Int32.MaxValue.\n      All will return true when used on an empty list, e.g., All(i => i % 2 == 0, Flist.Empty<int>() returns true.",
  "requireLicenseAcceptance": false,
  "summary": "Referencing MetalUp.FunctionalLibrary, use FList.New to create immutable functional lists in the style of Haskell, then apply static functions such as FList.Head, .Append, .Map to the list(s).",
  "verbatimVersion": "2.0.1",
  "version": "2.0.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.06.05.10.07.08/metalup.functionallibrary.2.0.1.json#MetalUp.FunctionalLibrary.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 696,
      "fullName": "MetalUp.FunctionalLibrary.nuspec",
      "length": 1319,
      "name": "MetalUp.FunctionalLibrary.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.06.05.10.07.08/metalup.functionallibrary.2.0.1.json#images/icon.png",
      "@type": "PackageEntry",
      "compressedLength": 77873,
      "fullName": "images/icon.png",
      "length": 77848,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.06.05.10.07.08/metalup.functionallibrary.2.0.1.json#lib/net452/MetalUp.FunctionalLibrary.dll",
      "@type": "PackageEntry",
      "compressedLength": 6626,
      "fullName": "lib/net452/MetalUp.FunctionalLibrary.dll",
      "length": 15872,
      "name": "MetalUp.FunctionalLibrary.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.06.05.10.07.08/metalup.functionallibrary.2.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    ".net",
    "functional",
    "list",
    "random",
    "merge",
    "sort",
    "c#",
    "vb"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}