{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.21.16.15/bizark.core.2.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brian Brewder, Boris Modylevsky",
  "catalog:commitId": "3fac58bd-a449-4a31-bc03-489a60064560",
  "catalog:commitTimeStamp": "2015-02-03T21:16:15.4524762Z",
  "created": "2013-09-30T11:44:19.14Z",
  "description": "Core assembly in the BizArk framework.",
  "id": "BizArk.Core",
  "isPrerelease": false,
  "lastEdited": "2013-10-09T09:04:19.9Z",
  "packageHash": "JQ6uNs0rh8FeDeZtOk+8HvZbUa877cC7kUVU1Nx6DdbCMyqXcZifga+L7ZfstA7xbGa7ZY5TRqaVQwVg5Z1E6Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 132412,
  "projectUrl": "https://bizark.codeplex.com/",
  "published": "2013-09-30T11:44:19.153Z",
  "releaseNotes": "* 9047 Command line argument surrounded with double quotes\n* 7522 Set ExitCode which is different than 0 on exception",
  "requireLicenseAcceptance": false,
  "summary": "Command-line parsing can be a tedious chore when you are building an application that accepts command-line arguments. But what if all you had to do was create a class with the properties that you want to accept? The BizArk framework offers a simple to use command-line parsing utility that allows you to do exactly that.",
  "version": "2.0.4",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}