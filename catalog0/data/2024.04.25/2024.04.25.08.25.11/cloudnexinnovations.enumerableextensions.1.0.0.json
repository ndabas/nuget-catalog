{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sourav Das",
  "catalog:commitId": "d23f224b-e6cd-4f95-89ee-fa42fbdce631",
  "catalog:commitTimeStamp": "2024-04-25T08:25:11.8834642Z",
  "created": "2024-04-25T08:22:00.757Z",
  "description": "Overview:\nThe CloudNexInnovations.EnumerableExtensions library offers a suite of powerful and versatile extension methods for IEnumerable<T>, enhancing the capability of collections management and data manipulation in .NET. This package provides developers with easy-to-use, efficient methods that extend the base functionality of IEnumerable, allowing for advanced operations such as converting collections to DataTables, filtering, batching, pagination, and complex data joins, among others.\n\nKey Features:\n\nToDataTable: Convert any IEnumerable<T> to a DataTable, making it easy to use with data-binding and reporting tools that require tabular data.\nDistinctBy: Retrieve distinct elements from a collection based on a specified key selector, offering more flexibility than the standard Distinct method.\nBatch: Split the collection into smaller, more manageable chunks or batches, which is useful for processing large datasets or implementing pagination in processing routines.\nPaginate: Simplify data pagination directly on collections, which is essential for creating data-driven user interfaces with paging capabilities.\nMaxBy and MinBy: Determine the maximum or minimum item in a collection based on a specified key selector, enabling more complex comparison logic than what's possible with standard Max or Min methods.\nMerge and MergeSorted: Combine two sequences in a controlled manner, either by merging them based on matching keys or by merging two already sorted sequences efficiently.\nFullOuterJoin: Perform a full outer join on two sequences based on specified key selectors, crucial for relational data manipulations not inherently supported by LINQ.\nShuffle: Randomize the order of elements in a collection, which is particularly useful in gaming, simulations, or any scenario requiring random distribution of items.\nFlatten: Convert a hierarchical or nested structure into a flat sequence, useful for processing tree-like data structures such as file systems or organizational hierarchies.\nDeepCopy: Create a deep copy of a collection where elements implement ICloneable, ensuring that modifications to the copy do not affect the original collection.\nSmartDistinct and ConditionalDistinct: Provide advanced filtering capabilities that go beyond simple uniqueness, allowing for element selection based on consecutive comparison or conditional logic.\nRunningTotal: Compute a running total from a sequence of numbers, useful for financial calculations and cumulative statistics.\nUsage Scenarios:\n\nData transformation and preparation for reporting and data analysis.\nEnhancing server-side processing of data for web applications, particularly in ASP.NET.\nStreamlining complex data manipulations that are common in business applications, such as CRM and ERP systems.\nUtility functions for games and simulations.\nCompatibility:\nDesigned to integrate seamlessly with any .NET Standard compliant project, supporting a wide range of .NET implementations including .NET Core, .NET Framework, and others.",
  "id": "CloudNexInnovations.EnumerableExtensions",
  "isPrerelease": false,
  "lastEdited": "2024-04-25T08:25:03.74Z",
  "licenseFile": "License.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "A5mk3eFEJSKUY5OtjaT3g0beUtnzbthiyIzCSQO/2/os8zpms5mAO2sUtDTweLt6iqMc9VqApKYXoZ9c/gyElg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37793,
  "published": "2024-04-25T08:22:00.757Z",
  "readmeFile": "README.md",
  "releaseNotes": "Version 1.0.0 - 2024-04-25\nWelcome to the initial release of the CloudNexInnovations.EnumerableExtensions! This package offers a range of powerful and versatile extension methods for IEnumerable<T>, enhancing the functionality of collections in .NET. Our goal is to provide developers with efficient, easy-to-use tools that extend the base functionality of IEnumerable, allowing for advanced operations such as data manipulation and querying in more intuitive and productive ways.\n\nFeatures\nToDataTable: Convert any IEnumerable<T> to a DataTable, facilitating integration with systems that require tabular data formats.\nDistinctBy: Retrieve distinct elements from a collection based on a specified key selector, offering enhanced filtering capabilities.\nBatch: Divide a large collection into manageable chunks, ideal for processing large datasets in a more efficient manner.\nPaginate: Implement efficient data pagination directly on collections, essential for applications that require data display in segments.\nMaxBy and MinBy: Extract the maximum or minimum element from a collection based on a specified key selector, simplifying complex queries.\nMerge and MergeSorted: Efficiently combine or merge two sequences based on keys or by maintaining an existing order.\nFullOuterJoin: Perform a full outer join on two sequences, a crucial operation for complex data relationships not supported natively by LINQ.\nShuffle: Randomize the order of elements in a collection, useful in scenarios requiring unbiased random distribution.\nFlatten: Convert hierarchical data structures into a flat sequence, easing the processing of nested collections.\nDeepCopy: Create deep copies of collections where elements implement ICloneable, ensuring modifications do not affect the original.\nSmartDistinct and ConditionalDistinct: Advanced filtering functions that provide greater control over how distinctions are made in collections.\nRunningTotal: Calculate running totals from numerical sequences, ideal for financial and statistical applications.",
  "repository": "",
  "title": "EnumerableExtensions",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json#CloudNexInnovations.EnumerableExtensions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2166,
      "fullName": "CloudNexInnovations.EnumerableExtensions.nuspec",
      "length": 5758,
      "name": "CloudNexInnovations.EnumerableExtensions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json#lib/netstandard2.1/CloudNexInnovations.EnumerableExtensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 18047,
      "fullName": "lib/netstandard2.1/CloudNexInnovations.EnumerableExtensions.dll",
      "length": 44032,
      "name": "CloudNexInnovations.EnumerableExtensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json#License.txt",
      "@type": "PackageEntry",
      "compressedLength": 661,
      "fullName": "License.txt",
      "length": 1104,
      "name": "License.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 574,
      "fullName": "README.md",
      "length": 1107,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.25.08.25.11/cloudnexinnovations.enumerableextensions.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12928,
      "fullName": ".signature.p7s",
      "length": 12928,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}