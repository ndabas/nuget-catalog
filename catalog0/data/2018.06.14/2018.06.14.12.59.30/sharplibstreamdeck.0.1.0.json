{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Stéphane Lenclud\nChristian Wischenbart",
  "catalog:commitId": "448e00cd-1719-4927-8266-5b40023e7ff6",
  "catalog:commitTimeStamp": "2018-06-14T12:59:30.4839762Z",
  "copyright": "Christian Wischenbart\nStéphane Lenclud",
  "created": "2018-06-14T12:55:56.643Z",
  "description": "Class library providing access to some Elgato Gaming Stream Deck functionalities.",
  "id": "SharpLibStreamDeck",
  "isPrerelease": false,
  "language": "",
  "lastEdited": "2018-06-14T12:59:11.193Z",
  "licenseUrl": "https://github.com/Slion/SharpLibStreamDeck/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "EQSu39CazJolnZVLuLqMvrcwyvKrLLubgQ2gMlZpppsgPvvErX0GxKFI1kT04+ggFOIMWNmimKlNuHcn7AyJHQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23237,
  "projectUrl": "https://github.com/Slion/SharpLibStreamDeck",
  "published": "2018-06-14T12:55:56.643Z",
  "releaseNotes": "v0.1.0\nBetter support for key up events.\n\t\t\nv0.0.9\nEditCurrentKey now public.\n\nv0.0.8\nFixed issue where Stream Deck does initialize until the editor form is shown.\n\nv0.0.7\nForm editor constructor taking model file name as parameter.\n\nv0.0.6\nMaking it easier for consumers to save model as XML.\n\nv0.0.5\nFixing some editor controls anchors.\n\nv0.0.4\nForm editor save and load can be overridden.\nForm editor provides key press handler.\nForm editor provides access to events' combobox.\n\nv0.0.3\nStream Deck Model.\nWindows Forms Editor.",
  "requireLicenseAcceptance": false,
  "title": "Elgato Gaming Stream Deck Library",
  "verbatimVersion": "0.1.0",
  "version": "0.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json#dependencygroup/hidlibrary",
          "@type": "PackageDependency",
          "id": "hidlibrary",
          "range": "[3.2.46, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json#dependencygroup/sharplibforms",
          "@type": "PackageDependency",
          "id": "SharpLibForms",
          "range": "[0.0.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json#SharpLibStreamDeck.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 764,
      "fullName": "SharpLibStreamDeck.nuspec",
      "length": 1616,
      "name": "SharpLibStreamDeck.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json#lib/net461/SharpLibStreamDeck.dll",
      "@type": "PackageEntry",
      "compressedLength": 8760,
      "fullName": "lib/net461/SharpLibStreamDeck.dll",
      "length": 17920,
      "name": "SharpLibStreamDeck.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.06.14.12.59.30/sharplibstreamdeck.0.1.0.json#lib/net461/SharpLibStreamDeckForms.dll",
      "@type": "PackageEntry",
      "compressedLength": 11873,
      "fullName": "lib/net461/SharpLibStreamDeckForms.dll",
      "length": 28160,
      "name": "SharpLibStreamDeckForms.dll"
    }
  ],
  "tags": [
    "Elgato",
    "Gaming",
    "Stream",
    "Deck",
    "HID"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}