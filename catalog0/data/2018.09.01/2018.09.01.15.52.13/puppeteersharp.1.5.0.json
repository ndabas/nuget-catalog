{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dar√≠o Kondratiuk",
  "catalog:commitId": "dbd02d31-4146-4897-94a4-9f2d764e6f08",
  "catalog:commitTimeStamp": "2018-09-01T15:52:13.6719748Z",
  "created": "2018-09-01T15:47:39.553Z",
  "description": "Headless Chrome .NET API",
  "id": "PuppeteerSharp",
  "isPrerelease": false,
  "lastEdited": "2018-09-01T15:51:50.157Z",
  "listed": true,
  "packageHash": "/gaVeKkrHLPmgSGUhse5dDixCRBUk658bbBwQ7FNUCLMBjpRWV5BGGPauFY/RiFNYDK55qWsbVZ8sBjD5POKrA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 188668,
  "projectUrl": "https://github.com/kblok/puppeteer-sharp",
  "published": "2018-09-01T15:47:39.553Z",
  "releaseNotes": "# New Features\n\n * Browser Contexts.\n * Workers\n\n# New APIs\n\n * Target.Opener.\n * Request.IsNavigationRequest.\n * Page.IsClosed.\n * Change accessibilty on Payload.\n * Page.ScreenshotBase64Async and ElementHandle.ScreenshotBase64Async.\n * CDPSession.TargetType.\n * Page.WorkerCreated.\n * Page.WorkerDestroyed.\n * Page.Workers.\n\n# Breaking Changes\n\n * Disable crash reporting by default.\n * Added .ConfigureAwait(false) to each await.\n * Change ScreenshotOptions.Quality type.\n * Dropped CDPSession.TargetId.\n * Dropped ExecutionContext.FrameId.\n * Dropped ExecutionContext.IsDefault.\n\n# Changelog\n\n * Chromium updated to r564778.\n * Update PuppeteerSharp.Tests packages versions.\n * Launch browser with 'about:blank' by default.\n * Respect timeout 0 in Page.waitForFunctionAsync.\n * Add a missing test for elementHandle.\n * Pass through \"background_page\" types.\n * Ensure first page is created when browser is launched.\n * Improve access to files to use true asynchronous methods.\n * Add test that validates that pages open with userDataDir arg.\n * Normalize scrollbars in headful tests.\n * Disable OOPIF by default.\n * Not pass user options to browser constructor.\n * Verify ignoreHTTPSErrors works with puppeteer.ConnectAsync.\n * Update ConsoleType.\n * ElementHandle.QuerySelectorAllHandleAsync.",
  "requireLicenseAcceptance": false,
  "title": "PuppeteerSharp",
  "verbatimVersion": "1.5.0",
  "version": "1.5.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#dependencygroup/.netstandard2.0/microsoft.aspnetcore.webutilities",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.WebUtilities",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#dependencygroup/.netstandard2.0/microsoft.extensions.logging",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Logging",
          "range": "[2.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#dependencygroup/.netstandard2.0/system.net.http",
          "@type": "PackageDependency",
          "id": "System.Net.Http",
          "range": "[4.3.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#dependencygroup/.netstandard2.0/system.threading.tasks.extensions",
          "@type": "PackageDependency",
          "id": "System.Threading.Tasks.Extensions",
          "range": "[4.5.1, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#PuppeteerSharp.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1160,
      "fullName": "PuppeteerSharp.nuspec",
      "length": 2535,
      "name": "PuppeteerSharp.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#lib/netstandard2.0/PuppeteerSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 142416,
      "fullName": "lib/netstandard2.0/PuppeteerSharp.dll",
      "length": 392704,
      "name": "PuppeteerSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#lib/netstandard2.0/PuppeteerSharp.xml",
      "@type": "PackageEntry",
      "compressedLength": 33738,
      "fullName": "lib/netstandard2.0/PuppeteerSharp.xml",
      "length": 272665,
      "name": "PuppeteerSharp.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.09.01.15.52.13/puppeteersharp.1.5.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "headless",
    "chrome",
    "puppeteer"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}