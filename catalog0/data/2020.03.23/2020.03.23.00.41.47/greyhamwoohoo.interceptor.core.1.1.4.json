{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.23.00.41.47/greyhamwoohoo.interceptor.core.1.1.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GreyhamWooHoo",
  "catalog:commitId": "1e5eddc7-e717-403e-a0c2-778fa5e904c8",
  "catalog:commitTimeStamp": "2020-03-23T00:41:47.566404Z",
  "copyright": "(c) 2020 GreyhamWooHoo",
  "created": "2020-03-23T00:39:20.137Z",
  "description": "Intercept calls to an interface before or after the concrete implementation is invoked.",
  "id": "GreyhamWooHoo.Interceptor.Core",
  "isPrerelease": false,
  "lastEdited": "2020-03-23T00:41:23.64Z",
  "listed": true,
  "packageHash": "sVpeS5Ovs4q3Q1wWMx4msv4hsMZPbgdNYceVawDOOnUA3t8VKoPskF5Sy1TRqYkza9CAzm8J3CYA5i1dH5yxAw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19957,
  "projectUrl": "https://github.com/greyhamwoohoo/interface-interceptor-core",
  "published": "2020-03-23T00:39:20.137Z",
  "releaseNotes": "1.1.4\n- Fixed a bug where OnAfter would be called for all After rules, not just the matching one\n\n1.1.3\n- Stub and OnAfter include parameters and arguments for the method call\n- Improved internal code relating to stubbing void methods\n\n1.1.2\n- Support for multiple Before and multiple After callouts\n\n1.1.1\n- Adding support for method / return value interrogators\n- Consolidated the async, Void and Task implementations (wrong assumptions/knowledge gap on my part)\n- Tests consolidated / renamed\n- Breaking Changes:\n1. Prior implementation: non-generic Tasks were always assumed to be void (HasReturnValue=false on callout)\n2. 1.1.1 Implementation: non-generic Tasks will interpret the .Result and callout with the correct result\n\n1.0.9:\n- Adding async void methods, extra tests\n- Includes generic and non-generic builder interfaces (backwards compatible)\n\n1.0.8:\n- Adding support for async tasks / methods\n\n1.0.7:\n- Initial release.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.1.4",
  "version": "1.1.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.23.00.41.47/greyhamwoohoo.interceptor.core.1.1.4.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.23.00.41.47/greyhamwoohoo.interceptor.core.1.1.4.json#GreyhamWooHoo.Interceptor.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 919,
      "fullName": "GreyhamWooHoo.Interceptor.Core.nuspec",
      "length": 1821,
      "name": "GreyhamWooHoo.Interceptor.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.23.00.41.47/greyhamwoohoo.interceptor.core.1.1.4.json#lib/netstandard2.1/GreyhamWooHoo.Interceptor.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 7725,
      "fullName": "lib/netstandard2.1/GreyhamWooHoo.Interceptor.Core.dll",
      "length": 18944,
      "name": "GreyhamWooHoo.Interceptor.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.23.00.41.47/greyhamwoohoo.interceptor.core.1.1.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Testing",
    "Mocking",
    "Capture",
    "Replay"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}