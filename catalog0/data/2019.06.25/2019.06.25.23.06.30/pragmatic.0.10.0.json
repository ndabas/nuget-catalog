{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.25.23.06.30/pragmatic.0.10.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Igor Rončević",
  "catalog:commitId": "2d2be532-4f7b-4dec-8e62-330b07e9b5ca",
  "catalog:commitTimeStamp": "2019-06-25T23:06:30.9051061Z",
  "copyright": "Copyright © 2014 Igor Rončević. All rights reserved.",
  "created": "2015-10-30T10:01:05.723Z",
  "description": "Pragmatic core abstractions.",
  "id": "Pragmatic",
  "isPrerelease": false,
  "lastEdited": "2019-06-25T23:06:04.473Z",
  "listed": false,
  "packageHash": "gDOaTlJ+A/n+r020qecT9CG1RdutPRSuxXjQ4QD92c+C581IlCtvLRrzPx283QeKAeRRuWcmRfvQZ191FE4EVQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36397,
  "projectUrl": "https://github.com/ironcev/pragmatic",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Version 0.10.0\nEnhancements:\n * Response.Add(IEnumerable&lt;ResponseMessage&gt; responseMessages) added.\n\nVersion 0.9.0\nEnhancements:\n * Auto invalidating in-memory result cache (AutoInvalidatingInMemoryResultCache).\n\nBreaking changes:\n * InMemoryEquatableQueryResultCache renamed to InMemoryResultCache.\n * IQueryResultCache.HasCachedResultFor() and IQueryResultCache.GetCachedResultFor() replaced by IQueryResultCache.TryGetCachedResultFor().\n * IQueryResultCache.InvalidatCacheForAllQueries() replaced by IQueryResultCache.InvalidateCacheForAllQueries().\n\nVersion 0.8.0\nEnhancements:\n * Caching of query results.\n\nVersion 0.7.2\nBug fixes:\n * QueryableExtensions.OrderByWithExpressionTransform<T>() works properly when more than two order by parameters are provided.\n * QueryableExtensions.OrderByWithExpressionTransform<T>() works properly when order by parameter of the type System.String is casted to object.\n\nVersion 0.7.1\nEnhancements:\n * QueryableExtensions.OrderByWithExpressionTransform<T>() supports parameters of type System.Boolean.\n\nVersion 0.7.0.2\nEnhancements:\n * Added support for Entity Framework.",
  "requireLicenseAcceptance": false,
  "summary": "Pragmatic core abstractions.",
  "title": "Pragmatic",
  "verbatimVersion": "0.10.0",
  "version": "0.10.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.25.23.06.30/pragmatic.0.10.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.25.23.06.30/pragmatic.0.10.0.json#dependencygroup/swissknife",
          "@type": "PackageDependency",
          "id": "SwissKnife",
          "range": "[0.5.7, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.25.23.06.30/pragmatic.0.10.0.json#Pragmatic.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 799,
      "fullName": "Pragmatic.nuspec",
      "length": 1930,
      "name": "Pragmatic.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.25.23.06.30/pragmatic.0.10.0.json#lib/net451/Pragmatic.dll",
      "@type": "PackageEntry",
      "compressedLength": 23569,
      "fullName": "lib/net451/Pragmatic.dll",
      "length": 61440,
      "name": "Pragmatic.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.25.23.06.30/pragmatic.0.10.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}