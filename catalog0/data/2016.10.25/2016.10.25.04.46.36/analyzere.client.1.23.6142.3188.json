{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Analyze Re",
  "catalog:commitId": "bfa26043-9f3e-41cd-96dc-3811daf45894",
  "catalog:commitTimeStamp": "2016-10-25T04:46:36.7200138Z",
  "copyright": "Copyright 2016",
  "created": "2016-10-25T04:46:29.603Z",
  "description": "A client library for Analyze Re high performance analytics services",
  "iconUrl": "http://docs.analyzere.net/csharp/logo64.png",
  "id": "AnalyzeRe.Client",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "Mj3u0AVFPv+94OL9kaHOx4NYXfckYhpas0N2uJY6VG/Ba0uinx2lcW6Lpqa2d7UgLMBWMAjTsfCV3SPAxZXeyg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 833290,
  "projectUrl": "http://docs.analyzere.net/csharp/",
  "published": "2016-10-25T04:46:29.603Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/.json#gpref",
      "reference": {
        "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#gpref/ref/analyzere.client.dll",
        "file": "AnalyzeRe.Client.dll"
      }
    }
  },
  "releaseNotes": "This Client Library wraps the AnalyzeRe REST API.\n\n1.23\n- Removed the Obsolete Inuring Terms from ELTLossSets. Inuring terms are now modeled by applying an AggXL layer to the loss set, then using it as the source to a nested layer.\n\n1.22\n- Adds an optional CancellationToken parameter to PollingOptions, which anything that takes PollingOptions should respect and monitor for cancellation.\n- Updated the API.PollUntilReady helper function, as well as the IStoredAPIResource_WithStatus PollUntilReady extension method to monitor the cancellation token if supplied.\n- Restored functionality to the AsyncRequestMonitor by making use of the existing polling methods.\n- Gave the AsyncRequestMonitor the ability to poll either by monitoring RetryAfter responses, or by monitoring the status of a supported resource.\n\n1.21\n- OptimizationViews now implement the new IStoredAPIResource_WithStatus interface, following a change on the server. They are now polled using their status instead of 503 responses on the results.\n- Added the ability to request only certain object properties using the \"API.Parameters.Fields\" request parameters. This speeds up status polling.\n- Renamed the \"WaitForStatusToBeReady\" extension method from the previous commit to \"PollUntilReady\" to be consistent with existing RetryAfter based polling method available in the API namespace.\n- Added the \"Queued\" TaskStatus enum value which is used in some cases and is a special distinction of \"Processing\" indicating that the resource has not yet begun processing, but will.\n\n1.20\n- Add the ability to set the data_file property to commit an existing file against a new resource.\n- New polling options parameters changed from double (seconds) to integer (millseconds) parameters to improve consistency with other timeouts in .NET.\n- IStoredAPIResource_WithStatus interface added to describe resources that have a status indicating their validation progress.\n- WaitForStatusToBeReady extension method added which will poll resources of the above type (includes resources with data and AnalysisProfiles).\n- Exponential backoff added to existing RetryAfter polling method and the above status polling method.\n\n1.19\n- CoMetrics requests now support setting the component reporting period.\n\n1.18\n- Enhanced `SimulationOptions`' derivees' copy constructors to include as optional arguments all parameters that cannot be copied from the base object.\n\n1.17\n- Sped up reference deserializer\n- Added NotSaveableAttribute to indicate layer types that can be inlined but not persisted to the layers collection.\n- Renamed `IsDefinedFast` to `IsAttributeDefinedFast` in the reflection utilities library, to reduce ambiguity.\n\n1.16\n- Support for probabilities and thresholds requested using exponential notation.\n\n1.15\n- ReportingPeriod parameter added to metrics requests. You can now specify a begin and/or end DateTime to get filter distributions by date.\n- Fixed PollUntilReady and all blocking metrics requests not respecting the MaxPollTotalTime (since 1.13)\n\n1.14\n- Modified BufferedBytesFromStreamProducer to allow users to limit the number of bytes read from the source stream.\n\n1.13\n- API types can now be modified on the fly with property expressions.\n  - Example: CatXL layer = someCatXL.ShallowCopy().Change(l => l.participation, 0.25).Post();\n- New metrics options classes added, which bundle common request options (filter, perspective, etc.)\n  - TailMetrics, CoMetrics, ExceedanceProbabilities, etc. requests now support options objects as parameters.\n- Old metrics methods are now marked Obsolete, and will be removed at the next major version.\n\n1.11\n- Removed LossNetOfOccurrenceTerms as an input and output perspective.\n- Added bindings for the FixedRateCurrencyConverter structure.\n\n1.10\n- Warning: Minor Backwards Incompatible Changes\n- Simplified code hierarchy in preparation for open sourcing.\n- Modified some models to fall under different namespaces.\n- Improvements and bugfixes to documentation after the recent switch to support .NET40\n\n1.9:\n- Support for projects targetting either .NET framework 4.0 or 4.5\n- Includes source and symbols for debugging.\n- Should no longer require projects to also add Json.NET or RestSharp as dependencies.\n\n1.8:\n- Support for vectorized metrics requests (batching of probabilities / thresholds)\n- No longer caches requests with resource instances - library user must implement their own caching.\n- Performance enhancements due to leaner requests, caching reflection-based requests, and improved file upload streaming.\n- Compatibility with new server features such as back-allocation, binary upload, and gzipping.\n- Automatic handling for temporary network failures such as socket noise and interrupted SSH handshakes.\n\n1.7:\n- Now targets .NET Framework 4.5 to make use of improvements to native compression algorithms\n\n1.6 and earlier features:\n- Models for all of the resource types defined by the AnalyzeRe API\n- Models for Metrics response structures and other custom API objects that appear within various resources\n- Extensive error handling and debug logging capabilities via APIRequestException\n- REST functionality via resource extension methods that allows:\n  - Creation, modification, and retrieval of resources on the server\n  - Supplying additional/custom headers and/or parameters to requests\n- Additional functionality for specific resources such as:\n  - LargeDataUpload functionality for resources with a data upload endpoint\n  - Metrics functionality and extension methods for LayerViews and PortfolioViews\n- Resource collection GET and Search capability via the API class\n- A library of custom Attributes to assist with automated validation of resources and to indicate server constraints on property values.",
  "requireLicenseAcceptance": false,
  "title": "Analyze Re Client Library",
  "verbatimVersion": "1.23.6142.3188",
  "version": "1.23.6142.3188",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#AnalyzeRe.Client.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2919,
      "fullName": "AnalyzeRe.Client.nuspec",
      "length": 6670,
      "name": "AnalyzeRe.Client.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net40/AnalyzeRe.Client.dll",
      "@type": "PackageEntry",
      "compressedLength": 86565,
      "fullName": "lib/net40/AnalyzeRe.Client.dll",
      "length": 211456,
      "name": "AnalyzeRe.Client.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net40/AnalyzeRe.Client.dll.config",
      "@type": "PackageEntry",
      "compressedLength": 518,
      "fullName": "lib/net40/AnalyzeRe.Client.dll.config",
      "length": 2270,
      "name": "AnalyzeRe.Client.dll.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net40/AnalyzeRe.Client.xml",
      "@type": "PackageEntry",
      "compressedLength": 56144,
      "fullName": "lib/net40/AnalyzeRe.Client.xml",
      "length": 478432,
      "name": "AnalyzeRe.Client.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net40/Newtonsoft.Json.dll",
      "@type": "PackageEntry",
      "compressedLength": 194856,
      "fullName": "lib/net40/Newtonsoft.Json.dll",
      "length": 489472,
      "name": "Newtonsoft.Json.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net40/RestSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 72126,
      "fullName": "lib/net40/RestSharp.dll",
      "length": 169984,
      "name": "RestSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net45/AnalyzeRe.Client.dll",
      "@type": "PackageEntry",
      "compressedLength": 86714,
      "fullName": "lib/net45/AnalyzeRe.Client.dll",
      "length": 211456,
      "name": "AnalyzeRe.Client.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net45/AnalyzeRe.Client.dll.config",
      "@type": "PackageEntry",
      "compressedLength": 518,
      "fullName": "lib/net45/AnalyzeRe.Client.dll.config",
      "length": 2270,
      "name": "AnalyzeRe.Client.dll.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net45/AnalyzeRe.Client.xml",
      "@type": "PackageEntry",
      "compressedLength": 56075,
      "fullName": "lib/net45/AnalyzeRe.Client.xml",
      "length": 477976,
      "name": "AnalyzeRe.Client.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net45/Newtonsoft.Json.dll",
      "@type": "PackageEntry",
      "compressedLength": 200530,
      "fullName": "lib/net45/Newtonsoft.Json.dll",
      "length": 526336,
      "name": "Newtonsoft.Json.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.10.25.04.46.36/analyzere.client.1.23.6142.3188.json#lib/net45/RestSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 72116,
      "fullName": "lib/net45/RestSharp.dll",
      "length": 169984,
      "name": "RestSharp.dll"
    }
  ],
  "tags": [
    "AnalyzeRe",
    "REST",
    "Client",
    "Library",
    "Insurance",
    "Reinsurance",
    "Analytics"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}