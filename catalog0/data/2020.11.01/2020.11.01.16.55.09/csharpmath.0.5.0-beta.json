{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "CSharpMath Contributors (verybadcat, Happypig375, charlesroddie, FoggyFinder)",
  "catalog:commitId": "173dae01-d711-44ec-b6a0-aa8a0d52ff83",
  "catalog:commitTimeStamp": "2020-11-01T16:55:09.9748033Z",
  "copyright": "Â© CSharpMath Contributors 2020",
  "created": "2020-11-01T16:53:17.317Z",
  "description": "The core of the C# math rendering engine - CSharpMath.\n      Can display beautiful math equations and symbols from the LaTeX format.\n      Needs a front end to function.\n      Currently, front ends exist for Avalonia, iOS, SkiaSharp and Xamarin.Forms.",
  "iconFile": "Icon.png",
  "id": "CSharpMath",
  "isPrerelease": true,
  "lastEdited": "2020-11-01T16:54:53.697Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "9RHxIUs32+8ERm8d0t1ugIq1o+D2aOhaqdflaOqXef+Y/ciOGKpTn7JLmPubbPmrV6CnsnbjlLxe8a/TvzkCCA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 104414,
  "projectUrl": "https://github.com/verybadcat/CSharpMath",
  "published": "2020-11-01T16:53:17.317Z",
  "releaseNotes": "# 0.5.0 Evaluation Update Beta\n\n## Changes from v0.5.0-alpha4 (Recently merged first)\n## ðŸš€ Features\n\n<details><summary>Add placeholder blinks setting (#177) @SymboLinker</summary><table><td>\n\nIn issue #175 a feature request was done for stopping the blinking of the placeholder (but still have a blinking carret if it moves to a spot without a placeholder).\n\nThe proposed pull request #176 just removes the blinking of the placeholder and does not leave it as an option.\n\nThis pull request adds a setting LaTeXSetting.PlaceholderBlinks that keeps the default value true and does not break any existing unit tests.\n\nTests are added\n- to make sure that the setting for a non-blinking placeholder works\n- to document how it should work\n- to make sure that it will not be removed in a whim\n\n@charlesroddie Please verify that the effect of changing the PlaceholderBlinks-setting results in the behaviour you like.\n</td></table></details>\n\n<details><summary>Make blinking Placeholder's Nucleus and ForeColor customizable in both CaretStates (#167) @SymboLinker</summary><table><td>\n\nIn pull request #164, posting https://github.com/verybadcat/CSharpMath/pull/164#issuecomment-699458440, the idea came up to make the placeholder customizable in the keyboard output. While PR #164 is concerned with the display of the keyboard buttons themselves, this PR is about the math keyboard output.\n\nCurrently the placeholder has two possible appearances: a full black square and an empty square with a black border.\n\nThis pull request makes the Nucleus and the ForeColor of the placeholder customizable in both CaretStates.\n\nAn example of usage: instead of an empty square with a black border in the 'hiding' CaretState, you could choose a full square with another Color (gray, for instance).\n\nAn example test:\nIn CSharpMath.Forms.Example\\CSharpMath.Forms.Example\\EditorPage.xaml.cs\nadd the following lines at the top of the constructor of the EditorView:\n```\n      Atom.LaTeXSettings.PlaceholderHidingNucleus = \\u25A0;\n      Atom.LaTeXSettings.PlaceholderHidingColor = Color.LightGray;\n```\nOpen the Example project and go to the Editor tab. Click the fraction button. The output is:\n![image](https://user-images.githubusercontent.com/32139898/94426706-46d0b980-018e-11eb-875c-21275d880d4d.png)\nwhere the square in the numerator blinks, LightGray/Black.\n\nI am willing to write unit tests after some form of preliminary approval of this pull request.\n(And of course I will fix mistakes and refactor if needed.)\n</td></table></details>\n\n\n## ðŸ§° Maintenance\n\n- #180 take 2 (#181) @Happypig375\n\n- Update Release workflow with the workaround from Test (#180) @Happypig375\n\n<details><summary>Make MathKeyboard IDisposable (#179) @charlesroddie</summary><table><td>\n\nfixes: https://github.com/verybadcat/CSharpMath/issues/178\n</td></table></details>\n\n<details><summary>Cleanup in preparation for Font Styles (#156) @charlesroddie</summary><table><td>\n\nInitial simplification in preparation for adding Font Styles\n- DoNothingFontChanger was removed was only used in tests.\n\nFor subsequent PR:\n- UnicodeFontChanger uses mathematical bold/italic ranges to use a single font for normal/bold/italic. To preserve existing functionality without deploying additional fonts, this logic needs to be kept when using standard fonts.\n- Allow users to add bold and italic fonts, for use in TextPainter. This PR will not address MathAtom fonts. If these fonts are present, they will be used instead of UnicodeFontChanger for rendering bold/italic fonts.\n</td></table></details>\n\n<details><summary>Enable the use of codecov.io (#163) @Happypig375</summary><table><td>\n\nSee https://codecov.io/gh/verybadcat/CSharpMath\n</td></table></details>\n\n<details><summary>Continuous Benchmark (#162) @Happypig375</summary><table><td>\n\nSee https://verybadcat.github.io/CSharpMath/dev/bench/\n</td></table></details>\n\n- Fix GitHub Packages (#157) @Happypig375\n\n<details><summary>Add test coverage as CI artifacts (#155) @Happypig375</summary><table><td>\n\nAlso CSharpMath.Rendering.Tests baselines became smaller magically\n</td></table></details>\n\n## Contributors\n@Happypig375, @SymboLinker and @charlesroddie",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "CSharpMath",
  "verbatimVersion": "0.5.0-beta",
  "version": "0.5.0-beta",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#dependencygroup/.netstandard2.0/system.memory",
          "@type": "PackageDependency",
          "id": "System.Memory",
          "range": "[4.5.4, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#dependencygroup/.netstandard2.0/system.runtime.compilerservices.unsafe",
          "@type": "PackageDependency",
          "id": "System.Runtime.CompilerServices.Unsafe",
          "range": "[4.6.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#CSharpMath.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2530,
      "fullName": "CSharpMath.nuspec",
      "length": 6067,
      "name": "CSharpMath.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#lib/netstandard2.0/CSharpMath.dll",
      "@type": "PackageEntry",
      "compressedLength": 75753,
      "fullName": "lib/netstandard2.0/CSharpMath.dll",
      "length": 185344,
      "name": "CSharpMath.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 14646,
      "fullName": "Icon.png",
      "length": 14818,
      "name": "Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.01.16.55.09/csharpmath.0.5.0-beta.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9480,
      "fullName": ".signature.p7s",
      "length": 9480,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "math",
    "mathematics",
    "mathematical",
    "formula",
    "equation",
    "equations\n",
    "expression",
    "tex",
    "latex",
    "render",
    "rendering",
    "display",
    "beautiful",
    "CSharpMath"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}