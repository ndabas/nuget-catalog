{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Analyze Re",
  "catalog:commitId": "0cf9bf67-a4e3-4bac-9144-2cc6f4015035",
  "catalog:commitTimeStamp": "2024-09-26T13:41:44.0950607Z",
  "copyright": "Copyright 2022",
  "created": "2024-09-26T13:38:47.803Z",
  "description": "A testing framework for the Analyze Re Client Library",
  "iconUrl": "https://docs.analyzere.net/csharp/logo64.png",
  "id": "AnalyzeRe.Client.Test",
  "isPrerelease": false,
  "lastEdited": "2024-09-26T13:41:13.96Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "+bqN9A0eiw871V+f9q3SrYjsR+pkaB2hlHFMdQKuz5e2sOnFE1OxKnwFtNueaXmDHlbQEr1FLj1QcDAPS9ZMhw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 225272,
  "projectUrl": "https://docs.analyzere.net/csharp/",
  "published": "2024-09-26T13:38:47.803Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/.json#gpref",
      "reference": {
        "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#gpref/ref/analyzere.client.test.dll",
        "file": "AnalyzeRe.Client.Test.dll"
      }
    }
  },
  "releaseNotes": "An extensible unit testing framework that ensures all features of the client library work against your target Analyze Re API server. Facilitates testing of new custom features and libraries built off of the Analyze Re Client package.\n\n1.44\n- Added support for Machine-To-Machine authentication workflow.\n\n1.44\n- Now targets .NET Framework 4.8.\n\n1.42\n- Reflection class instances can now be seeded to make their behaviour deterministic.\n- Removed the NestedLayerLossSet (now obsolete) from the set of Loss Set types to randomly generate and include in a variety of input-fuzzing tests. Backwards-compatibility tests remain in place.\n- Added rules to the random property value generation routines that not only result in a resource valid to Post, but also one that is valid to use in a simulation.\n\n1.41\n- Fixed test runs affecting the 'default server URL' in the current user's registry settings. \n- Made the sample PortfolioView resources more complex by giving them 3 layer_views rather than 1.\n\n1.40\n- Base tests and sample resources added for new layer models (such as ValueAllocator, BackAllocatedLayer, Policy and Fee features) \n- Added an additional loss set to each sample layer type to improve the variety of sample resources and coverage.\n- Added a base test for random resource generation with validation enabled, which includes assurances that any resource property can either be randomly modified, or can identify whether and why that is not possible (useful for hash collision testing).\n- Clarified the AssertAPI.AllPropertiesEqual helper method usage by splitting into 3 methods, with explicit methods for testing POST and PUT responses.\n\n1.39\n- Base resource testing suite has been overhauled in a major and backwards-incompatible way:\n-- Test methods that used to expect a test resource factory method now just take a reference to a constructed instance.\n-- Resources with data upload component are managed more simply, without having to provide a getter for the data endpoint.\n-- Tests no longer attempt to toggle client request logging on and off. Instead, more detailed logs are written if and when a test failure occurs.\n-- Removed a variety of obsolete constructs such as attempt to cleanup resource by deleting them following a test.\n- Some `GenericTest` methods have been removed, renamed or consolidated with the\n- Any tests for Layer or LayerView POST success now also assert that metrics can be retrieved on the new analysis without issues.\n- Fixed an issue with using the unit testing library using the NUnit test runner on some systems.\n- Fixed random resource generation producing invalid resources due to inlined nested filter definitions that contained embedded layer_view references more than one level deep.\n\n1.38\n- Fixed random resource generation creating invalid IAPIAnalysis resources due to mixing currencies for which there were no exchange rates available in the linked analysis profile.\n\n1.36\n- Adapts to the client-side changes that allow nested layers to reference layers or layer_views in some cases.\n-- Reflection-based random resource generation and assertions have been adjusted in accordance. In most cases, helper methods are now more flexible, supporting any ICollection{T} arguments, rather than just List{T} arguments.\n- Expanded on Reflection based resource generation utilities in to allow for more in-depth input fuzzing tests.\n\n1.31\n- New class `MockResponse.cs` used to mock RestSharp responses for testing without actually making a request.\n- Setting the RUN_OFFLINE environment variable to true changes the behaviour of Samples (InjectibleResources) and base test methods to no longer rely on a server connection. Tests requiring a connection will return Inconclusive in this mode.\n- Fixed a subtle error in the AssertAPI.AllPropertiesEqual test helper method when it recursed on resources.\n\n1.27\n- New TypedLockGuard class reduces contention for thread-safe shared sample resources and improves test performance.\n- Source updated to take advantage of modern C#7 language features and their associated performance improvements.\n- Reduced logging when the Reflection class is used to generate property values for trivial types.\n- Adapt to new best-practices for resolving references introduced in version 1.27 of the client library.\n\n1.26\n- Test infrastructure changes to support new types and more numeric limits.\n- Changes to default test assumptions surrounding updated platform features.\n\n1.25\n- Added additional testing infrastructure for collections.\n\n1.21\n- Updated usage and tests for IStoredAPIResource_WithStatus resources to respect the need to do status polling before considering the POST complete.\n\n1.17\n- Layer tests reconfigured to also test attributes of layers when inlined within LayerViews\n- Reflection-based tests made to ignore resources tagged with the NotSaveable attribute.\n\n1.15\n- Added TestSuite_SimulationOptions for detailed tests on Reporting Period and other options.\n\n1.14\n- Fixed the TestSuite_LargeDataUpload.YELTStream returning 0 bytes if the requested buffer size was smaller than the first row generated. \n\n1.11\n- Removed LossNetOfOccurrenceTerms as an input and output perspective.\n\n1.10\n- Adapts to refactoring and namespace changes made in the client library.\n- Modified the root namespace to fall outside of AnalyzeRe's core client library.\n- Improvements and bug fixes to documentation\n\n1.9:\n- Includes source and symbols for debugging.\n- Should no longer require projects to also add Json.NET or RestSharp as dependencies.\n\n1.8:\n- Backwards incompatible overhaul of unit test framework to simplify resource injection.\n\n1.7:\n- Now targets .NET Framework 4.5 to make use of improvements to native compression algorithms.\n\n1.6 and earlier features:\n- Injectable test resources for all of the resource types defined by the AnalyzeRe API\n- Optional caching and injected resource re-use to allow integration tests to run quickly and in parallel.\n- Tests which can serve as examples of every piece of functionality in the library and illustrate a number of error scenarios.\n- Reflection-based utilities for generating random valid resources.",
  "requireLicenseAcceptance": false,
  "title": "Analyze Re Testing Library",
  "verbatimVersion": "1.45.9035.24555",
  "version": "1.45.9035.24555",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup/analyzere.client",
          "@type": "PackageDependency",
          "id": "AnalyzeRe.Client",
          "range": "[1.45.9035.24555, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup/restsharpsigned",
          "@type": "PackageDependency",
          "id": "RestSharpSigned",
          "range": "[105.2.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup/nunit",
          "@type": "PackageDependency",
          "id": "NUnit",
          "range": "[3.12.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup/nunit.console",
          "@type": "PackageDependency",
          "id": "NUnit.Console",
          "range": "[3.9.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#dependencygroup/nunit3testadapter",
          "@type": "PackageDependency",
          "id": "NUnit3TestAdapter",
          "range": "[3.10.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#AnalyzeRe.Client.Test.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3239,
      "fullName": "AnalyzeRe.Client.Test.nuspec",
      "length": 7478,
      "name": "AnalyzeRe.Client.Test.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#lib/net48/AnalyzeRe.Client.Test.dll",
      "@type": "PackageEntry",
      "compressedLength": 206455,
      "fullName": "lib/net48/AnalyzeRe.Client.Test.dll",
      "length": 680960,
      "name": "AnalyzeRe.Client.Test.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#lib/net48/AnalyzeRe.Client.Test.dll.config",
      "@type": "PackageEntry",
      "compressedLength": 724,
      "fullName": "lib/net48/AnalyzeRe.Client.Test.dll.config",
      "length": 3544,
      "name": "AnalyzeRe.Client.Test.dll.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.26.13.41.44/analyzere.client.test.1.45.9035.24555.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12929,
      "fullName": ".signature.p7s",
      "length": 12929,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "AnalyzeRe",
    "Client",
    "Library",
    "Integration",
    "Test"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}