{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.09.09.23.48/linked365.mockaroodatamunger.1.2020.11.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "LinkeD365",
  "catalog:commitId": "e50ec91c-9592-41b2-82fe-e83c42b83472",
  "catalog:commitTimeStamp": "2020-11-09T09:23:48.7006478Z",
  "copyright": "Copyright 2020",
  "created": "2020-11-09T09:20:52.947Z",
  "description": "A XrmToolBox tool to create data in your CDS environment using Mockaroo API",
  "iconUrl": "https://linked365.blog/wp-content/uploads/2020/03/smallIcon.png",
  "id": "LinkeD365.MockarooDataMunger",
  "isPrerelease": false,
  "lastEdited": "2020-11-09T09:23:00.313Z",
  "listed": true,
  "packageHash": "Idswb+OLC5RGSHDu6+mXgoXmo0GEsj78g2bA93EKwRnlJAIvm8jIdSfj95S0Dmf+w1URur7rKOlE7b9RzUxAWA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 209628,
  "projectUrl": "https://github.com/LinkeD365/MockarooDataMunger",
  "published": "2020-11-09T09:20:52.947Z",
  "releaseNotes": "#18 Fixed issue of retrieving accounts instead of contacts for customer field üòí\n      #17 Added new mock type for Fake Emails, which appends .FAKE to those generated by Mockaroo üëΩ\n\n      #15 Status added\n      #4 Icon added for Config üòç\n      Customer field implemented\n      Added IGitHubInterface",
  "requireLicenseAcceptance": false,
  "title": "Mockaroo Data Munger",
  "verbatimVersion": "1.2020.11.1",
  "version": "1.2020.11.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.09.09.23.48/linked365.mockaroodatamunger.1.2020.11.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.09.09.23.48/linked365.mockaroodatamunger.1.2020.11.1.json#dependencygroup/xrmtoolbox",
          "@type": "PackageDependency",
          "id": "XrmToolBox",
          "range": "[1.2020.6.40, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.09.09.23.48/linked365.mockaroodatamunger.1.2020.11.1.json#LinkeD365.MockarooDataMunger.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 649,
      "fullName": "LinkeD365.MockarooDataMunger.nuspec",
      "length": 1228,
      "name": "LinkeD365.MockarooDataMunger.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.09.09.23.48/linked365.mockaroodatamunger.1.2020.11.1.json#lib/net472/Plugins/LinkeD365.MockarooDataMunger.dll",
      "@type": "PackageEntry",
      "compressedLength": 197676,
      "fullName": "lib/net472/Plugins/LinkeD365.MockarooDataMunger.dll",
      "length": 485888,
      "name": "LinkeD365.MockarooDataMunger.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.11.09.09.23.48/linked365.mockaroodatamunger.1.2020.11.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "XrmToolBox",
    "Plugins",
    "Mockaroo",
    "Munger"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}