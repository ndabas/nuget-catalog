{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.17.11.33.48/dbmocker.1.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Denis Voituron",
  "catalog:commitId": "36bd1050-11c1-4fd2-b0a1-fbd66fdd4964",
  "catalog:commitTimeStamp": "2019-04-17T11:33:48.404355Z",
  "copyright": "Denis Voituron",
  "created": "2019-04-17T11:29:35.377Z",
  "description": "This .NET library simplifies data mocking for UnitTests, to avoid a connection to a relational database.\nDbMocker use the standard Microsoft .NET DbConnection object. So, you can mock any toolkit, \nincluding EntityFramework, Dapper or ADO.NET; And for all database servers (SQL Server, Oracle, SQLite).\n\n```\nvar conn = new MockDbConnection();\nconn.Mocks\n    .When(cmd => cmd.CommandText.Contains(\"SELECT COUNT(*) FROM EMP\"))\n    .ReturnsScalar(14);\n```",
  "id": "DbMocker",
  "isPrerelease": false,
  "lastEdited": "2019-04-17T11:33:43.303Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "QzKVkzn9p0K26dx8VSx/805uMuMnNm581S3lDzreih0MKBDYFxd5mkbVvS3iTwjQzO5H7cS4w0k6gYphN1hxgw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1957337,
  "projectUrl": "https://github.com/Apps72/DbMocker",
  "published": "2019-04-17T11:29:35.377Z",
  "releaseNotes": "https://github.com/Apps72/DbMocker",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "DBMocker to validate and mock SQL Queries",
  "verbatimVersion": "1.6.0",
  "version": "1.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.17.11.33.48/dbmocker.1.6.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.17.11.33.48/dbmocker.1.6.0.json#DbMocker.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 741,
      "fullName": "DbMocker.nuspec",
      "length": 1449,
      "name": "DbMocker.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.17.11.33.48/dbmocker.1.6.0.json#lib/netstandard2.0/Apps72.Dev.Data.DbMocker.dll",
      "@type": "PackageEntry",
      "compressedLength": 12700,
      "fullName": "lib/netstandard2.0/Apps72.Dev.Data.DbMocker.dll",
      "length": 28160,
      "name": "Apps72.Dev.Data.DbMocker.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.17.11.33.48/dbmocker.1.6.0.json#lib/netstandard2.0/Microsoft.SqlServer.SqlParser.dll",
      "@type": "PackageEntry",
      "compressedLength": 1932223,
      "fullName": "lib/netstandard2.0/Microsoft.SqlServer.SqlParser.dll",
      "length": 6951424,
      "name": "Microsoft.SqlServer.SqlParser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.17.11.33.48/dbmocker.1.6.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "DbMocker",
    "Mocker",
    "SQLServer",
    "Oracle",
    "Sqlite",
    "EntityFramework",
    "EF",
    "Dapper",
    "UnitTest"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}