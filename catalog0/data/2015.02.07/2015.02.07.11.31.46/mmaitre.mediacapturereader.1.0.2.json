{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.11.31.46/mmaitre.mediacapturereader.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Matthieu Maitre",
  "catalog:commitId": "10a7fddf-a9e2-4aad-b27d-e0b4e1833495",
  "catalog:commitTimeStamp": "2015-02-07T11:31:46.5280405Z",
  "copyright": "Copyright Â© 2014, Matthieu Maitre. All rights reserved.",
  "created": "2014-12-29T07:59:19.7Z",
  "description": "Reads audio and video samples from cameras and microphones using MediaCapture. Renders video samples to XAML SwapChainPanel and SurfaceImageSource.",
  "id": "MMaitre.MediaCaptureReader",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.githubusercontent.com/mmaitre314/MediaCaptureReader/master/LICENSE",
  "packageHash": "vGOf2jrmquyii2E0n/wki+hATQjKoDjYn+1l8sNDVWUl2ikOQjYT3M/c63dW9GoKGh5/scWughU+FYgrnWfRsg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 749769,
  "projectUrl": "https://github.com/mmaitre314/MediaCaptureReader",
  "published": "2014-12-29T07:59:19.7Z",
  "releaseNotes": "Add NullMediaCapture to enable automated testing on Windows.",
  "requireLicenseAcceptance": false,
  "summary": "Reads audio and video samples from cameras and microphones using MediaCapture.",
  "title": "MediaCapture Reader",
  "version": "1.0.2",
  "tags": [
    "Native",
    "WinRT",
    "XAML",
    "MediaCapture",
    "SwapChainPanel",
    "SurfaceImageSource"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}