{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Georg Dangl",
  "catalog:commitId": "e41a4767-b3ff-489b-9539-7d96964901ee",
  "catalog:commitTimeStamp": "2024-10-31T11:19:57.258405Z",
  "copyright": "(c) 2024 Georg Dangl",
  "created": "2024-10-31T11:17:12.143Z",
  "description": "Dangl.Identity.Client www.dangl-it.com",
  "iconFile": "gd_icon_256.png",
  "id": "Dangl.Identity.Client.Models",
  "isPrerelease": false,
  "lastEdited": "2024-10-31T11:19:53.48Z",
  "listed": true,
  "packageHash": "LWzhOwSyOmQyyZguaQJzjplFnZAnJPQo2GoR3A2PzTcbYq/TmtJkq726fbY7bZduvv1tQW97l/I/dQ+l85PWFQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35473,
  "projectUrl": "https://github.com/GeorgDangl/Dangl.Identity.Client",
  "published": "2024-10-31T11:17:12.143Z",
  "releaseNotes": "## v6.2.0:\n- Update to .NET 8 & latest **Dangl.Identity** dependencies\n\n## v6.1.0:\n- Added a new endpoint to the `DanglIdentityController` that returns the user info data for the current request. If the user and / or client is authenticated, it will return all current claims. This is useful if backend-for-frontend authentication via cookies is used, where the frontend does not have direct access to the JWT\n- The `claims` property in the Angular `UserInfo` object's type was changed from `{[key: string]: string}` to `{[key: string]: string[]}` \n- Added `DanglIdentityServerConfiguration.RelativeRedirectForAccessDenied`, to configure access denied redirect paths in cases where the user declines consent when using OpenID Connect cookie authentication\n- Added `DanglIdentityServerConfiguration.SetIncludeJwtBearerWithOpenIdCookie`, to configure both OpenID Connect cookie and JWT authentication in the same application\n\n## v6.0.2:\n- Updated internal dependencies\n\n## v6.0.1:\n- Fixed a bug in the release pipeline that failed if the MS Teams API (for notifications) was returning an error\n\n## v6.0.0:\n- The `DanglIdentityAppTokenHandler` class is now available in the **Dangl.Identity.Client.App** package\n- The `DanglIdentityServerTokenHandler ` class is now available in the **Dangl.Identity.Client** package\n- Fixed a bug where the provided `IAccoundDelegatedClient` in the **Dangl.Identity.Client.Mvc** package did not correctly use authentication when interacting with **Dangl.Identity**\n- The **Dangl.Identity** packages were updated to version 6\n\n## v5.0.1:\n- The **Dangl.Identity.Client** libraries are now all published to public NuGet and MyGet feeds\n\n## v5.0.0\n- Update to .NET 7 & latest **Dangl.Identity** dependencies\n\n## v4.1.3:\n- The lifecycle management in the Angular client was updated to correctly complete and unsubscribe from all subscriptions\n- Fixed a bug in the `DanglIdentityUserInfoUpdater` that caused exceptions when new users were created from JWT tokens concurrently\n\n## v4.1.2:\n- The Angular client was updated to use any Angular version at v14 or upwards\n\n## v4.1.1:\n- The Angular client was updated to Angular v14\n\n## v4.1.0:\n- The client libraries and tests were updated to .NET 6 and **Dangl.Identity** dependencies were updated to v4.2\n\n## v4.0.1:\n- Updated the frontend dependency to Angular v13\n\n## v4.0.0:\n- All packages were updated to **Dangl.Identity** v4 and to .NET 5\n- Support for fallback uris for **Dangl.Identity** has been removed. This was rarely used in practice, and makes integrations in clients easier\n\n## v3.4.0:\n- The Angular package was upgraded to Angular v12\n- The `DanglIdentityServerConfiguration.HttpMessageHandlerFactory` will now no longer default to an `Action` that returns `null` but will itself be set to `null` for new instances\n- The .NET client now uses `System.Text.Json` internally instead of `Newtonsoft.Json` for Json serialization\n- Added `IDanglIdentityRequestValidator` to Angular client to allow developers to control for which requests authorization tokens are included\n\n## v3.3.0:\n- `DanglIdentityAuthenticationExtensions.UseDanglIdentityJwtTokenAuthentication` now optionally supports to accept access tokens via query parameters, e.g. for usage in SignalR\n- `DanglIdentityServerConfiguration.JwtBearerOptionsConfig` was added as a way to customize the `AddJwtBearer` configuration\n\n## v3.2.5\n- Bugfix in the Angular library where a subscription to the token refresh event did not end after the first event\n\n## v3.2.4:\n- The `DanglIdentityAuthenticationExtensions` will now log the id of the client used for JWT logins\n- The `DanglIdentityServerConfiguration` class now has the `AllowInsecureJwtIssuers` property that allows to disable the Https requirement for token issuers\n\n## v3.2.3:\n- Fixed a bug in the Angular library where refresh token requests were cancelled when a dependency requested a refresh token but then cancelled the request. This led to the refresh token becoming invalid, thus requiring a reauthentication from the user\n\n## v3.2.2:\n- The Angular library was updated to Angular v10\n\n## v3.2.1:\n- The `UseDanglIdentityJwtTokenAuthentication` extension will now also work when the configured base urls have a trailing slash `/`\n\n## v3.2.0:\n- Added the `ClaimsUtilities` class for helping with managing claims from Jwt tokens\n- When performing a non-OpenID Cookie login, all user claims except some ignored ones will now be put on the user principal\n- Fixed an error where the `IUserInfoService.GetCurrentUserIdAsync()` method could throw an exception when the user id was only present in the `sub` claim and not in the ASP.NET Core default `nameidentifier`\n\n## v3.1.0:\n- The OpenID Extensions now remove the default claim type mapping and directly use the claim types from the JWT token, e.g. `role` is now directly available as a claim\n\n## v3.0.0:\n- Update to **Dangl.Identity** v3.0.0 and to .NET Core 3.1\n- The OpenID Connect extensions now check the `access_token` expiry and refresh the token if necessary. Additionally, locked out or deleted users are now also removed from client applications\n- When using the OpenID Connect extensions, it internally now calls `AddIdentityCore` instead of `AddIdentity` and adds some required services. This might break client applications that rely on services now no longer included. Consumers should manually add these to the dependency injection configuration\n- The `AddMvcWithDanglIdentity` extension was renamed to `AddControllersWithDanglIdentity` and the internal call to `AddMvc` was replaced with `AddControllers`. If required, consumers should manually call `AddMvc` in their apps\n- The Angular library was updated to Angular v9.1.9\n\n## v2.6.0:\n- Added `UserInfo` and `AccessTokenExtensions` in **Dangl.Identity.Client**\n\n## v2.5.2:\n- Added checks for the `UserInfoService` in the **Dangl.Identity.Client.MVC** package to give meaningful error messages in cases of invalid configuration\n\n## v2.5.1:\n- Dropped dependency `IdentityServer4.AccessTokenValidation`\n\n## v2.5.0:\n- The generated assemblies now have a strong name. This is a breaking change of the binary API and will require recompilation on all systems that consume this package. The strong name of the generated assembly allows compatibility with other, signed tools. Please note that this does not increase security or provide tamper-proof binaries, as the key is available in the source code per [Microsoft guidelines](https://msdn.microsoft.com/en-us/library/wd40t7ad(v=vs.110).aspx)\n\n## v2.4.3:\n- Add `RequiredJwtRoles` and `RequiredJwtClaims` to `DanglIdentityServerConfiguration` to configure required claims and / or roles when using Jwt authentication\n\n## v2.4.2:\n- When `UseDanglIdentityJwtAuthentication` is enabled on servers, the integrated endpoints for cookie authentication are disabled\n- CI tests for the .NET components are now also run on Linux\n\n## v2.4.1:\n- Include `Id` for current user in Angular client `AuthenticationMessenger`\n\n## v2.4.0:\n- Refactoring of Angular client\n\n## v2.3.0:\n- Update of **Dangl.Identity** dependencies\n- Breaking Change: If you're using **Dangl.Identity** Jwt authentication from the **Dangl.Identity.Client.Mvc** package, you should set the property `UseDanglIdentityJwtAuthentication` in the configuration for **Dangl.Identity** to `true` and ensure that `app.UseDanglIdentityJwtTokenAuthentication()` is called early in your request pipeline\n\n## v2.2.1:\n- Bugfix where the Angular library failed to update the current authentication status after failed token refresh attempts\n\n## v2.2.0:\n- An Angular front end package is now available at `@dangl/angular-dangl-identity-client`\n\n## v2.1.0:\n- Update internal dependencies to latest **Dangl.Identity** and to ASP.NET Core 2.2\n\n## v2.0.8:\n- Update internal dependencies\n\n## v2.0.7:\n- Fix bug where invalid Jwt tokens led to internal server error responses in `Dangl.Identity.Client.Mvc`\n\n## v2.0.4:\n- Remove `HttpMessageHandler` constructor argument from `UserInformationTransmissionHttpHandler` to be better composable with `HttpClientFactory`\n- Add overload to `UserInformationTransmissionHttpHandler` that allows to supply `IHttpContextAccessor` to be able to resolve dependencies on the fly from the `RequestServices`\n\n## v2.0.3:\n- Switch to `HttpClientFactory`\n- Introduced `DanglIdentityHttpClientAccessor` to abstract accessing `HttpClient` in **Dangl.Identity.Client.Mvc** services\n\n## v2.0.0:\n- Add support for user identicon id properties\n- Update to latest version 2.0.1 of `Dangl.Identity`\n- Renamed `Dangl.Identity.OAuth` to `Dangl.Identity.Client.Mvc`\n\n## v1.2.2:\n- Fix deserialization error of Jwt `Bearer` tokens to no longer throw exceptions on invalid input in **Dangl.Identity.Client.Mvc**\n\n## v1.2.1:\n- `Dangl.Identity.Client` is now public\n\n## v1.2.0:\n- Add support for client-side integration of OpenID with **Dangl.Identity** as OpenID provider\n- Add `UserInformationTransmissionHttpHandler` to share user information for requests contexts across different services\n- `IUserService` will now also determine user ids and whether users are authenticated in inter-service calls\n- See the README for requirements & setup on how to transmit user ids in inter-service requests\n- The extensions for OAuth as server-side integration now only support either Cookie auth or Jwt, not both. Specifying one will disable the other\n\n## v1.1.1: \n- Add `UserInfoService.CLIENT_CLAIM_PREFIX` \n- `IUserInfoService.GetCurrentClientIdAsync()` now returns a `string` as `ClientId` to be in sync with **Dangl.Identity**\n- Added `ClientCredentialsLoginAsync` to `DanglIdentityLoginHandler`\n\n## v1.1.0\n- Update to stay in sync with **Dangl.Identity**\n\n## v1.0.0\n- Initial Release",
  "repository": "",
  "title": "Dangl.Identity.Client www.dangl-it.com",
  "verbatimVersion": "6.2.0",
  "version": "6.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#dependencygroup/.netstandard2.0/dangl.identity.shared",
          "@type": "PackageDependency",
          "id": "Dangl.Identity.Shared",
          "range": "[6.4.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#dependencygroup/.netstandard2.0/identitymodel",
          "@type": "PackageDependency",
          "id": "IdentityModel",
          "range": "[7.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#dependencygroup/.netstandard2.0/system.componentmodel.annotations",
          "@type": "PackageDependency",
          "id": "System.ComponentModel.Annotations",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#Dangl.Identity.Client.Models.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4009,
      "fullName": "Dangl.Identity.Client.Models.nuspec",
      "length": 11002,
      "name": "Dangl.Identity.Client.Models.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#lib/netstandard2.0/Dangl.Identity.Client.Models.dll",
      "@type": "PackageEntry",
      "compressedLength": 4834,
      "fullName": "lib/netstandard2.0/Dangl.Identity.Client.Models.dll",
      "length": 12288,
      "name": "Dangl.Identity.Client.Models.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#gd_icon_256.png",
      "@type": "PackageEntry",
      "compressedLength": 11795,
      "fullName": "gd_icon_256.png",
      "length": 12153,
      "name": "gd_icon_256.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.31.11.19.57/dangl.identity.client.models.6.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12924,
      "fullName": ".signature.p7s",
      "length": 12924,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}