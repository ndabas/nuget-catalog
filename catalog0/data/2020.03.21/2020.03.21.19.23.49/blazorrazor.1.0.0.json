{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "BlazorRazor",
  "catalog:commitId": "0a7def9b-9a7e-43cf-96e0-c93deed18b64",
  "catalog:commitTimeStamp": "2020-03-21T19:23:49.2346687Z",
  "created": "2020-03-21T19:21:19.063Z",
  "description": "Login and Logout views to integrate Blazor Server applications with IdentityServer hybrid flow.\nThis library is designed to complement Kevin Dockx's Pluralsight tutorial \"Authentication and Authorization in Blazor Applications\". It replaces the LoginIDP and LogoutIDP Razor Pages from Kevin's project with a reusable library component.",
  "frameworkReferences": "",
  "id": "BlazorRazor",
  "isPrerelease": false,
  "lastEdited": "2020-03-21T19:23:20.52Z",
  "licenseFile": "LICENSE.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "mG1mFbj0FNfnfBZl6Cu5Xn3bI/8ovg0Aub8p0INMkQoTYnz3QqR2nfQfPkuETXA9UToTC8za11ZVtQuV2pPGGw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20159,
  "published": "2020-03-21T19:21:19.063Z",
  "releaseNotes": "Initial release - Login and Logout views -",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#dependencygroup/.netcoreapp3.1/microsoft.aspnetcore.authentication.openidconnect",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Authentication.OpenIdConnect",
          "range": "[3.1.2, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#BlazorRazor.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 684,
      "fullName": "BlazorRazor.nuspec",
      "length": 1445,
      "name": "BlazorRazor.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#lib/netcoreapp3.1/BlazorRazor.Views.dll",
      "@type": "PackageEntry",
      "compressedLength": 3959,
      "fullName": "lib/netcoreapp3.1/BlazorRazor.Views.dll",
      "length": 10240,
      "name": "BlazorRazor.Views.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#lib/netcoreapp3.1/BlazorRazor.dll",
      "@type": "PackageEntry",
      "compressedLength": 3244,
      "fullName": "lib/netcoreapp3.1/BlazorRazor.dll",
      "length": 7680,
      "name": "BlazorRazor.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#LICENSE.md",
      "@type": "PackageEntry",
      "compressedLength": 652,
      "fullName": "LICENSE.md",
      "length": 1102,
      "name": "LICENSE.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.21.19.23.49/blazorrazor.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Blazor",
    "IdentityServer",
    "Oidc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}