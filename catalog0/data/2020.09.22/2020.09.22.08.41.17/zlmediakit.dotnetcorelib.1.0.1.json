{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.22.08.41.17/zlmediakit.dotnetcorelib.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "LiuMingZhu",
  "catalog:commitId": "3fa169f2-9efd-4287-886c-8cd1b1e63569",
  "catalog:commitTimeStamp": "2020-09-22T08:41:17.6270759Z",
  "copyright": "starry_link@foxmail.com",
  "created": "2020-09-22T08:38:05.37Z",
  "description": "https://github.com/MingZhuLiu",
  "id": "ZLMediaKit.DotNetCoreLib",
  "isPrerelease": false,
  "lastEdited": "2020-09-22T08:41:05.943Z",
  "listed": true,
  "packageHash": "7vK/up56UD+aTpqAco6FeYwOSUQldMltvO1AiDoEJmkxDAplLpAPzvSNwBgLdT23+AmjR100V2IY8h6Fr5ZWOw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 25476,
  "projectUrl": "https://github.com/MingZhuLiu",
  "published": "2020-09-22T08:38:05.37Z",
  "releaseNotes": "# ZLMediaKit.DotNetCore.Sdk\n一个基于[ZLMediaKit](https://github.com/xiongziliang/ZLMediaKit)的.NetCoreSDK\n\n>## STRealVideo.Control  控制台项目(主要用于测试)\n>### 参考代码文件Program.cs\n\n>## STRealVideo.Lib  核心SDK类库(用于实际开发对接)\n>### \\Common 文件夹存放工具类\n>### \\Models 文件夹存放实体类\n>### ZLClient.cs 基于ZLMediaServer实现的API客户端(所有业务操作都使用它来完成)\n>### ZLClient 构造方法中传入api地址(如果api服务器运行在本机,则第二个参数secret可以不传)\n\n## 调用方法参考\n     \n            ZLClient client = new ZLClient(\"http://127.0.0.1/\", \"035c73f7-bb6b-4889-a715-d9eb2d1925cc\");\n            var resThreadsLoad = client.getThreadsLoad();//获取各epoll(或select)线程负载以及延时\n            var resWorkThreadsLoad = client.getWorkThreadsLoad();//获取各后台epoll(或select)线程负载以及延时\n            var resServerConfigs = client.getServerConfig();//获取服务器配置\n            var resSetConfig = client.setServerConfig(\"api.apiDebug\", \"1\");//将服务器参数api.apiDebug设置为0\n            var resRestartServer = client.restartServer();//重启服务器,只有Daemon方式才能重启，否则是直接关闭！\n            var resMediaList = client.getMediaList();//获取流列表，可选筛选参数\n            var resCloseStream = client.closeStream(\"rtsp\", \"127.0.0.1\", \"live\", \"test\");//关闭流(目前所有类型的流都支持关闭)\n            var resCloseStreams = client.closeStreams(\"rtsp\", \"127.0.0.1\");//关闭流(目前所有类型的流都支持关闭)\n            var resSessions = client.getAllSession();//获取所有TcpSession列表(获取所有tcp客户端相关信息)\n            var resKillSession = client.kickSession(resSessions.data[0].id);//断开tcp连接，比如说可以断开rtsp、rtmp播放器等\n            var resKillSessions = client.kickSessions(null, \"127.0.0.1\");//断开tcp连接，比如说可以断开rtsp、rtmp播放器等\n            var resAddStream = client.addStreamProxy(\"__defaultVhost__\", \"live\", \"0\", \"rtsp://admin:12356789a@192.168.1.3:554/h264/ch1/main/av_stream\", true, true, true, true, RTPPullType.TCP);//动态添加rtsp/rtmp拉流代理(只支持H264/H265/aac负载)\n            var resDelStream = client.delStreamProxy(\"xxxxxxxxx\");//关闭拉流代理\n            var resAddFFmpegSource = client.addFFmpegSource(\"http://127.0.0.1/live/0/hls.m3u8\", \"rtmp://127.0.0.1/live/2\", 10000);//通过fork FFmpeg进程的方式拉流代理，支持任意协议\n            var resDelFFmpegSource = client.delFFmpegSource(\"xxxxxxxxx\");//关闭ffmpeg拉流代理\n            var resMediaOnline = client.isMediaOnline(\"rtsp\", \"__defaultVhost__\", \"live\", \"0\");//判断直播流是否在线\n            var resMediaInfo = client.getMediaInfo(\"rtsp\", \"__defaultVhost__\", \"live\", \"0\");//获取流相关信息\n            var resSsrcInfo = client.getSsrcInfo(\"XXXXXXX\");//获取rtp代理时的某路ssrc rtp信息\n            var resMp4RecordFile = client.getMp4RecordFile(\"__defaultVhost__\", \"live\", \"0\", \"2020-04-08\");//搜索文件系统，获取流对应的录像文件列表或日期文件夹列表\n            var resStartRecord = client.startRecord(0, \"__defaultVhost__\", \"live\", \"0\");//开始录制hls或MP4\n            var resStopRecord = client.stopRecord(0, \"__defaultVhost__\", \"live\", \"0\");//停止录制流\n            var resRecording = client.isRecording(0, \"__defaultVhost__\", \"live\", \"0\");//停止录制流\n\n\n# 致谢\n#### 感谢作者[夏楚](https://github.com/xiongziliang)开源提供这么棒的流媒体服务框架",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.22.08.41.17/zlmediakit.dotnetcorelib.1.0.1.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.22.08.41.17/zlmediakit.dotnetcorelib.1.0.1.json#dependencygroup/.netcoreapp3.1/system.text.encoding.codepages",
          "@type": "PackageDependency",
          "id": "System.Text.Encoding.CodePages",
          "range": "[4.7.0, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.22.08.41.17/zlmediakit.dotnetcorelib.1.0.1.json#ZLMediaKit.DotNetCoreLib.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1980,
      "fullName": "ZLMediaKit.DotNetCoreLib.nuspec",
      "length": 4478,
      "name": "ZLMediaKit.DotNetCoreLib.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.22.08.41.17/zlmediakit.dotnetcorelib.1.0.1.json#lib/netcoreapp3.1/STRealVideo.Lib.dll",
      "@type": "PackageEntry",
      "compressedLength": 12250,
      "fullName": "lib/netcoreapp3.1/STRealVideo.Lib.dll",
      "length": 29184,
      "name": "STRealVideo.Lib.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.09.22.08.41.17/zlmediakit.dotnetcorelib.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}