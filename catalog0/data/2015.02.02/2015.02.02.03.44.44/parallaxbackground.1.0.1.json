{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.03.44.44/parallaxbackground.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "JohnMichaelHauck",
  "catalog:commitId": "9eb3bfdf-db1c-4430-a7d6-a1f0881e91c8",
  "catalog:commitTimeStamp": "2015-02-02T03:44:44.7090831Z",
  "copyright": "John Michael Hauck",
  "created": "2012-09-08T18:47:12.963Z",
  "description": "A Metro moving background",
  "id": "ParallaxBackground",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "CJkt2/p6hCnl5dcW9bSw9wKWTy8MwYl6MJfzdUVa3pEQm8K/9+14EeOP4jJaAX+JQ4J6pGupiPlsXCOt3Eq84w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4750,
  "projectUrl": "http://parallaxbackground.codeplex.com/",
  "published": "2012-09-08T18:47:12.963Z",
  "releaseNotes": "Added a converter parameter and enhanced the demo to show trees.",
  "requireLicenseAcceptance": false,
  "summary": "http://w8isms.blogspot.com/2012/09/parallax-background-in-xaml-revisited.html",
  "title": "ParallaxBackground",
  "version": "1.0.1",
  "tags": [
    "Parallax",
    "Background",
    "C#",
    "WinRt",
    "XAML"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}