{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.20.03.25/shamz.1.0.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "asipe",
  "catalog:commitId": "c0d519b1-605e-478f-a51a-d376d30b9880",
  "catalog:commitTimeStamp": "2015-02-03T20:03:25.3260972Z",
  "copyright": "Copyright 2013",
  "created": "2013-09-16T12:46:17.417Z",
  "description": "Shamz is a micro library for mocking command line executables.  Shamz allows you to dynamically create an executable which will match command line args and take some action (delay, return a specific exit code, etc..).  Useful for writing tests against an external executable.",
  "id": "Shamz",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/asipe/shamz/blob/master/LICENSE",
  "packageHash": "MvneUWP+lalk9i+L8PLfJDme1ZiwLhlr/2rCtUjO/4hCvIYq8sI1LHezbAW1VupqbN/NCdhZRi8QpUpmynAV3g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 51091,
  "projectUrl": "https://github.com/asipe/Shamz",
  "published": "2013-09-16T12:46:17.417Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "version": "1.0.0.3",
  "tags": [
    "mock",
    "test",
    "unittest",
    "integrationtest",
    "exe",
    "executable"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}