{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Vladimir Sadov",
  "catalog:commitId": "75b4aa7b-a792-4f5e-989f-be152134a760",
  "catalog:commitTimeStamp": "2023-06-03T20:58:50.1093467Z",
  "copyright": "Copyright 2022 (c) Vladimir Sadov. All rights reserved.",
  "created": "2023-06-03T20:56:14.153Z",
  "description": "Implementation of a lock-free dictionary on .Net\n\n      This fork contain the following changes:\n      - Non-snapshotting Keys and Values properties (Azure Gem)\n      - Attempt at reducing GC pressure (Azure Gem, TODO: Measure effectiveness, seems to be minimal-to-nonexistent-to-imaginary, YMMV)\n      - NonBlockingHashset wrapper (Azure Gem, TODO: Implement a proper one instead of a wrapper)\n      - Capacity getter property (Azure Gem)\n      - Capacity is not doubled on construction (Azure Gem)\n      - Clear with capacity (Azure Gem)\n      - EstimatedCount getter property (Azure Gem)\n      - Removal of the hash mixer (Idea from https://github.com/VSadov/NonBlocking/issues/20#issuecomment-1545057207)\n      - Rename everything from \"Concurrent\" to \"Nonblocking\" (Azure Gem)\n      \n      Some changes are specific to my use case.\n\n      Included types:\n      === NonBlocking.NonBlockingDictionary\n      Lock-free, wait-free implementation of a dictionary.\n      - has the same API as System.Collections.Concurrent.ConcurrentDictionary.\n      - No locks are taken during any operation including Get, Add, Remove, internal resizes etc...\n      - While multiple threads accessing NonBlocking dictionary will help each other in operations such as table resizing, there is no dependency on such behavior. If any thread get unscheduled or delayed for whatever reason, other threads will be able to make progress independently.\n      - NonBlocking dictionary scales linearly with the number of active threads if hardware permits.\n\n      On most operations NonBlocking dictionary is faster than Concurrent, especially in write-heavy scenarios.\n\n      Core algorithms are based on NonBlockingHashMap, written and released to the public domain by Dr. Cliff Click. A good overview could be found here: https://www.youtube.com/watch?v=HJ-719EGIts\n\n      === NonBlocking.NonBlockingHashSet\n      Lock-free, wait-free implementation of a hashset based on NonBlockingDictionary.\n      - No locks are taken during any operation including Get, Add, Remove, internal resizes etc...\n      - While multiple threads accessing NonBlocking dictionary will help each other in operations such as table resizing, there is no dependency on such behavior. If any thread get unscheduled or delayed for whatever reason, other threads will be able to make progress independently.\n      - NonBlocking dictionary scales linearly with the number of active threads if hardware permits.\n\n      === Counter32\n      === Counter64\n      Low-overhead scalable counters.\n\n      === Disclaimer\n      I, Azure Gem, do not intend to maintain this fork.",
  "id": "AG.NonBlocking",
  "isPrerelease": false,
  "lastEdited": "2023-06-03T20:58:42.993Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "tvw4MUI6p6+SsFYU8BpYfThf0OpTCHNXk9Rt/7ySTTfqhi4sCrdPqiMPkAXzj7UU9Bul0mvCUqbmyRHHiptYwQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 41202,
  "projectUrl": "https://github.com/rreminy/NonBlocking",
  "published": "2023-06-03T20:56:14.153Z",
  "releaseNotes": "Fork",
  "verbatimVersion": "2.1.1",
  "version": "2.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json#dependencygroup/net7.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json#dependencygroup/net7.0/system.runtime.compilerservices.unsafe",
          "@type": "PackageDependency",
          "id": "System.Runtime.CompilerServices.Unsafe",
          "range": "[6.0.0, )"
        }
      ],
      "targetFramework": "net7.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json#AG.NonBlocking.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1411,
      "fullName": "AG.NonBlocking.nuspec",
      "length": 3515,
      "name": "AG.NonBlocking.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json#lib/net7.0/NonBlocking.dll",
      "@type": "PackageEntry",
      "compressedLength": 19976,
      "fullName": "lib/net7.0/NonBlocking.dll",
      "length": 48640,
      "name": "NonBlocking.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json#lib/net7.0/NonBlocking.xml",
      "@type": "PackageEntry",
      "compressedLength": 5487,
      "fullName": "lib/net7.0/NonBlocking.xml",
      "length": 53723,
      "name": "NonBlocking.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.06.03.20.58.50/ag.nonblocking.2.1.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11510,
      "fullName": ".signature.p7s",
      "length": 11510,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "lock-free",
    "wait-free",
    "dictionary",
    "high-performance"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}