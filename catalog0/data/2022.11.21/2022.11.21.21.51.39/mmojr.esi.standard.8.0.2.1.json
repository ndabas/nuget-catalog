{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.21.21.51.39/mmojr.esi.standard.8.0.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "MMOJr - Soluções TI",
  "catalog:commitId": "ecf8d9fe-bdcd-400c-8632-bff1bfb91720",
  "catalog:commitTimeStamp": "2022-11-21T21:51:39.7892423Z",
  "created": "2022-11-20T21:02:24.353Z",
  "description": "E.S.I. - Execute Scope Instances .NET Standard 2.1",
  "id": "MMOJr.ESI.Standard",
  "isPrerelease": false,
  "lastEdited": "2022-11-21T21:51:24.83Z",
  "listed": false,
  "packageHash": "HM+Dh0PX5ovgdzjIvqNamPfPy8mogFfNMsMUjFld3U8TQFOwUx8NkgQDbaMVhYdENQJ8VutoBML8KaJKFfXlGA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 32542,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Changes Version 8.x.x:\n\n\t1. New Async Methods will be included on ESIControllerBase<TData>, ESIBusinessBase<TData> and ESIRepositoryBase<TData>:\n\t\t* ExecuteAsync()\n\t\t\tMethod that performs the calls Async.\n\t\t* ExecuteAsync(millisecondsDelay)\n\t\t\tMethod that performs the calls Async with time Delay Cancel.\n\n\t2. When a System Exception occurs, EndType.Execution and EndLoop.Break will no longer be set by default.\n\t   The Execution will continue until it is canceled (Asynchronous Process) or Terminated by the user, according to Item 4 Below.\n\n\t3. The ESIEndType and ESIEndLoop properties will no longer be available in OnSuccess, OnFailure and OnException Events.\n\t   The Management of these Properties they are in the New Method of ESIControllerBase<TData>, according to Item 4 Below.\n\n\t4. New Methods will be included in the ESIControllerBase<Data> in the LoadScope Method:\n\t\t* EndTypeScopeOnException()\n\t\t\tWhen an Exception occurs (The List Exception is filled), the EndType.Scope will be set.\n\t\t* EndTypeExecutionOnException()\n\t\t\tWhen an Exception occurs (The List Exception is filled), the EndType.Execution will be set.\n\t\t* EndLoopContinueOnException()\n\t\t\tWhen an Exception occurs (The List Exception is filled) and it is inside a Loop, the EndLoop.Continue will be set.\n\t\t* EndLoopBreakOnException()\n\t\t\tWhen an Exception occurs (The List Exception is filled) and it is inside a Loop, the EndLoop.Break will be set.\n\t\t* EndTypeScopeOnSuccess<TBusiness>()\n\t\t\tWhen an Success = true on TBusiness, the EndType.Scope will be set.\n\t\t* EndTypeExecutionOnSuccess<TBusiness>()\n\t\t\tWhen an Success = true on TBusiness, the EndType.Execute will be set.\n\t\t* EndLoopContinueOnSuccess<TBusiness>()\n\t\t\tWhen an Success = true on TBusiness and it is inside a Loop, the EndLoop.Continue will be set.\n\t\t* EndLoopBreakOnSuccess<TBusiness>()\n\t\t\tWhen an Success = true on TBusiness and it is inside a Loop, the EndLoop.Break will be set.\n\t\t* EndTypeScopeOnFailure<TBusiness>()\n\t\t\tWhen an Success = false on TBusiness, the EndType.Scope will be set.\n\t\t* EndTypeExecutionOnFailure<TBusiness>()\n\t\t\tWhen an Success = false on TBusiness, the EndType.Execution will be set.\n\t\t* EndLoopContinueOnFailure<TBusiness>()\n\t\t\tWhen an Success = false on TBusiness and it is inside a Loop, the EndLoop.Continue will be set.\n\t\t* EndLoopBreakOnFailure<TBusiness>()\n\t\t\tWhen an Success = false on TBusiness and it is inside a Loop, the EndLoop.Break will be set.\n\n\t\t* ClearListException()\n\t\t\tClear the ListException and 'Backup' the Exceptions.\n\t\t* UpdateListException()\n\t\t\tReturns the 'Backup' of Exceptions for ListException.\n\n\t5. New Methods will be included in the ESIConfigurationSuccess and ESIConfigurationFailure on Events OnSuccess abd OnFailure:\n\t\t* AddNewException(string message)\n\t\t\tAdd a new Exception in ListException, with a Message.\n\t\t* AddNewException(string message, object keyData, object valueData)\n\t\t\tAdd a new Exception in ListException, with a Message and Key Pair Values Data.\n\t\t* AddNewException(string message, string source)\n\t\t\tAdd a new Exception in ListException, with a Message and Source.\n\t\t* AddNewException(string message, string source, object keyData, object valueData)\n\t\t\tAdd a new Exception in ListException, with a Message, Source and Key Pair Values Data.\n\n\t6. New Methods will be included in the ESIConfigurationException on Event OnException:\n\t\t* ThrowNewException(string message)\n\t\t\tThrows a new Exception, with a Message and Adds the Original Exception as an InnerException.\n\t\t* ThrowNewException(string message, object keyData, object valueData)\n\t\t\tThrows a new Exception, with a Message, Key Pair Values Data and Adds the Original Exception as an InnerException.\n\t\t* ThrowNewException(string message, string source)\n\t\t\tThrows a new Exception, with a Message, Source and Adds the Original Exception as an InnerException.\n\t\t* ThrowNewException(string message, string source, object keyData, object valueData)\n\t\t\tThrows a new Exception, with a Message, Source, Key Pair Values Data and Adds the Original Exception as an InnerException.\n\n\t7. The DbConnection property will no longer be available in OnExecute Event of IESIConfigurationRepository<TData>.\n\t   In this Release, ESI Implement Multiple Connections of System.Data.IDbConnection and System.Data.IDbTransaction.\n\t   For this, create an ID for each new Connection.\n\n\t8. New Methods will be included in the IESIConfigurationRepository<TData>:\n\t\t* AddConnection(string idConnection, IDbConnection dbConnection)\n\t\t\tAdd new the SQL Data Connection (System.Data.IDbConnection) in ESIRepositoryBase.\n\t\t* GetConnection(string idConnection)\n\t\t\tGet the SQL Data Connection (System.Data.IDbConnection) passed to ESIRepositoryBase.\n\t\t* GetTransaction(string idConnection)\n\t\t\tGet the SQL Data Transaction Local (System.Data.IDbTransaction) passed to ESIRepositoryBase with Attribute ESITransactionLocal (Item 9).\n\t\t* RemoveConnection(string idConnection)\n\t\t\tRemove the SQL Data Connection (System.Data.IDbConnection) in ESIRepositoryBase.\n\n\t9. New Attribute ESITransactionLocal:\n\t\t* Used for local, non-distributed transactions linked to DbConnection for each IDConnection.\n\n\t\t* ESITransactionLocalAttribute(string idConnection)\n\t\t\tThe idConnection parameter must be passed to Identify the Connection that initiates the Local Transaction.\n\t\t\tPrepare Instance Execution for Begin Local Transaction with default System.Data.IsolationLevel. IDbConnection.BeginTransaction()\n\t\t\tIf there is no Exception during Instance Execution (ListException.Count = 0), Commit the Transaction, otherwise, Rollback the Transaction.\n\t\t\tRemove Connection default is true. Dispose and Remove the Connection and Transaction to the List Connections, after Instance Execution.\n\n\t\t* ESITransactionLocalAttribute(string idConnection, bool removeConnection)\n\t\t\tThe idConnection parameter must be passed to Identify the Connection that initiates the Local Transaction.\n\t\t\tThe removeConnection parameter if true, Dispose and Remove the Connection and Transaction to the List Connections, after Instance Execution.\n\t\t\tPrepare Instance Execution for Begin Local Transaction with default System.Data.IsolationLevel. IDbConnection.BeginTransaction()\n\t\t\tIf there is no Exception during Instance Execution (ListException.Count = 0), Commit the Transaction, otherwise, Rollback the Transaction.\n\n\t\t* ESITransactionLocalAttribute(string idConnection, System.Data.IsolationLevel isolationLevel)\n\t\t\tThe idConnection parameter must be passed to Identify the Connection that initiates the Local Transaction.\n\t\t\tPrepare Instance Execution for Begin Local Transaction with System.Data.IsolationLevel set. IDbConnection.BeginTransaction(System.Data.IsolationLevel)\n\t\t\tIf there is no Exception during Instance Execution (ListException.Count = 0), Commit the Transaction, otherwise, Rollback the Transaction.\n\t\t\tRemove Connection default is true. Dispose and Remove the Connection and Transaction to the List Connections, after Instance Execution.\n\n\t\t* ESITransactionLocalAttribute(string idConnection, System.Data.IsolationLevel isolationLevel, bool removeConnection)\n\t\t\tThe idConnection parameter must be passed to Identify the Connection that initiates the Local Transaction.\n\t\t\tThe removeConnection parameter if true, Dispose and Remove the Connection and Transaction to the List Connections, after Instance Execution.\n\t\t\tPrepare Instance Execution for Begin Local Transaction with System.Data.IsolationLevel set. IDbConnection.BeginTransaction(System.Data.IsolationLevel)\n\t\t\tIf there is no Exception during Instance Execution (ListException.Count = 0), Commit the Transaction, otherwise, Rollback the Transaction.\n\nFor more information about ESI, visit the website: mmojrti.com or contact us by email: support@mmojrti.com.",
  "verbatimVersion": "8.0.2.1",
  "version": "8.0.2.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.21.21.51.39/mmojr.esi.standard.8.0.2.1.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.21.21.51.39/mmojr.esi.standard.8.0.2.1.json#dependencygroup/.netstandard2.1/microsoft.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CSharp",
          "range": "[4.7.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.21.21.51.39/mmojr.esi.standard.8.0.2.1.json#MMOJr.ESI.Standard.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1835,
      "fullName": "MMOJr.ESI.Standard.nuspec",
      "length": 8510,
      "name": "MMOJr.ESI.Standard.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.21.21.51.39/mmojr.esi.standard.8.0.2.1.json#lib/netstandard2.1/MMOJr.ESI.Standard.dll",
      "@type": "PackageEntry",
      "compressedLength": 17409,
      "fullName": "lib/netstandard2.1/MMOJr.ESI.Standard.dll",
      "length": 44032,
      "name": "MMOJr.ESI.Standard.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.21.21.51.39/mmojr.esi.standard.8.0.2.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11510,
      "fullName": ".signature.p7s",
      "length": 11510,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}