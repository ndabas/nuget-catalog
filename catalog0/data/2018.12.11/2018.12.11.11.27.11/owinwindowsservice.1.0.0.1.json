{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Leo Breido",
  "catalog:commitId": "eeb9ddaa-da4d-4380-a511-2d1768a35ae5",
  "catalog:commitTimeStamp": "2018-12-11T11:27:11.022657Z",
  "copyright": "Copyright 2015",
  "created": "2015-11-13T14:07:07.49Z",
  "description": "Adaptation of MicroService4Net (by CodeCleaner, ref. http://www.codeproject.com/Tips/894355/MicroService-Net-Create-Micro-Services-Easily-with) \n\tfor using OWIN Self Host instead of ASP.NET Web Api Self Host.",
  "id": "OwinWindowsService",
  "isPrerelease": false,
  "lastEdited": "2018-12-11T11:26:55.227Z",
  "listed": true,
  "packageHash": "ljHPp9tQbX4KL3ml04yoes2DrBamOOTE4EL7AULIq1ju0PDJSLHFk6aMMrwaiMha/KlK3Jsai5V+Gv8lyF4ZQQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18148,
  "published": "2015-11-13T14:07:07.49Z",
  "releaseNotes": "See description.",
  "requireLicenseAcceptance": false,
  "summary": "How to use :\n\n\t1. Create Console application, say, MyService.exe with\n\n\tclass Program\n    \t{\n        \tstatic void Main(string[] args)\n        \t{\n            \t\tAction<IAppBuilder> startup = b =>\n            \t\t{\n                \t\tvar config = new HttpConfiguration();\n                \t\tconfig.MapHttpAttributeRoutes();\n                \t\tb.UseWebApi(config);\n                \t\t// ..etc..\n            \t\t};\n\t    \t\tvar port = 12345; // must be >= 8000\n            \t\tvar microService = new OwinMicroService(port,startup);\n            \t\tmicroService.Run(args);        \n        \t}\n    \t}\n\t2. Add a number of ApiControllers to the project. You can use the controllers in the application assembly only.\n\t3. If you wish to install it as a windows service, you have to add 2 classes to the project:\n   \t\t3.1. public class MicroServiceInstaller : ProjectInstaller { }\n   \t\t3.2. public class MicroServiceService : InternalService { }\n\n\t4.1 To run as console application : use command 'MyService.exe'\n\t4.2 To install as windows service (you must be the administrator) : use command 'MyService.exe -install'\n\t4.3 To uninstall : use command 'MyService.exe -uninstall'",
  "title": "OwinWindowsService",
  "verbatimVersion": "1.0.0.1",
  "version": "1.0.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json#dependencygroup/microsoft.aspnet.webapi.owinselfhost",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNet.WebApi.OwinSelfHost",
          "range": "[5.2.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json#dependencygroup/microsoft.owin.staticfiles",
          "@type": "PackageDependency",
          "id": "Microsoft.Owin.StaticFiles",
          "range": "[3.0.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json#OwinWindowsService.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 964,
      "fullName": "OwinWindowsService.nuspec",
      "length": 2087,
      "name": "OwinWindowsService.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json#lib/net45/OwinWindowsService.dll",
      "@type": "PackageEntry",
      "compressedLength": 4942,
      "fullName": "lib/net45/OwinWindowsService.dll",
      "length": 11264,
      "name": "OwinWindowsService.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.11.27.11/owinwindowsservice.1.0.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}