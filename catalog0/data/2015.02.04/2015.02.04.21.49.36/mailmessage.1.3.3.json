{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.21.49.36/mailmessage.1.3.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Venetasoft",
  "catalog:commitId": "61b72f44-4512-4e6a-a874-8e2d876dafaa",
  "catalog:commitTimeStamp": "2015-02-04T21:49:36.2916038Z",
  "copyright": "Venetasoft",
  "created": "2014-03-02T04:40:52.47Z",
  "description": "Main Features:\n• connects to Microsoft Live, Gmail or to a custom smtp mail server through a direct and secured ssl connection.\n• does not use any web service.\n• supports any kind of attachment, from resource or isolated storage.\n• sends an email without calling EmailComposeTask and does not need user intervention.\n• WP7 and WP8 compatible.\n• multithreaded: will not freeze/block your UI.\n• works on wifi and data connection.\n• 100% managed code, perfectly compliant to app certification (see the certificated App list below).\n• comes with a complete VS2012 demo project, a functional demo App ready to be deployed to your phone for testing the library.\n• lifetime upgrades and support via email/forum.\n• supports international charset (Chinese).\n\n//create a new MailMessage object\nMailMessage mailMessage = new MailMessage();\n\n//set a Live/Hotmail or Gmail, or a custom SMTP account\nmailMessage.UserName= \"*****@hotmail.com;\nmailMessage.Password = \"********\";\nmailMessage.AccountType = accountType.MicrosoftAccount; \nmailMessage.From = \"myapp@mycompany.com\";\n\n//set mail data\nmailMessage.To = \"foo@foo.com\";\nmailMessage.ReplyTo = \"foo5@foo.com\";\nmailMessage.Subject = \"Hello from WP\";\nmailMessage.Body = \"I can send any type of attachment from my app now !!\";   //text or HTML\n\n//attach ANY KIND of file from a resource or IsolatedStorage path\nmailMessage.AddAttachment(\"\\rex\\file.wav\");\nmailMessage.AddAttachment(\"\\myFolder\\file.mp3\"); \nmailMessage.AddAttachment(\"\\downloads\\file.mp4\"); \n//attach from in-memory data:\nmailMessage.AddAttachment(Encoding.UTF8.GetBytes(\"yesssss\".ToCharArray()), \"memoryfile.txt\");\n\n//set message event handlers\nmailMessage.Error +=  mailMessage_Error; \nmailMessage.MailSent += mailMessage_MailSent; \nmailMessage.Progress += mailMessage_Progress;  \n\n//send email (async)\nmailMessage.SendMail();\n\nSupport:  support@venetasoft.it",
  "iconUrl": "http://win.venetasoft.it/images/mailmessagelogo.jpg",
  "id": "MailMessage",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "lQsIkJq/Zywzni9bSqiRnET/YQVOuVdbzjZVfpJY4qR7RpaovD40fV5Z7hEvQi4WQWIK9ukt3LW5R2Aa/pSfFQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1115471,
  "projectUrl": "http://www.geekchamp.com/marketplace/components/livemailmessage",
  "published": "2014-03-02T04:40:52.47Z",
  "releaseNotes": "Free version: \n• fully functional but time limited. It opens a popup window and adds a \"demo\" string on subject and body.\n\nFull version: \n• write to buy@venetasoft.it\n• lifetime free updates  and support.\n• use it on as many complete WP apps as you want.",
  "requireLicenseAcceptance": false,
  "summary": "SMTP library to send emails with any  kind of attachment without using EmailComposeTask.\nAttach any type of file (pdf, mp3, wav, mp4, avi, bmp, txt, zip, jpg, etc).",
  "title": "MailMessage",
  "version": "1.3.3",
  "tags": [
    "Windows",
    "Phone",
    "SMTP",
    "Mail",
    "component"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}