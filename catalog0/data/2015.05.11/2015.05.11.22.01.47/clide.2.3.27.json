{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.11.22.01.47/clide.2.3.27.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Daniel Cazzulino",
  "catalog:commitId": "67771621-cc0f-48fb-b598-20ab51305b0b",
  "catalog:commitTimeStamp": "2015-05-11T22:01:47.283186Z",
  "copyright": "Copyright 2012",
  "created": "2015-05-11T22:01:17.357Z",
  "description": "High-level, composable and testable APIs for working with IDEs.",
  "iconUrl": "http://clarius.io/clide-48x48",
  "id": "Clide",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://clarius.io/clide-license",
  "listed": true,
  "packageHash": "zciE17775m4m+9WuCDqXxzreJZG49FzS1VNbl8/PEFZUFS6pR/t8aTONkB/iJgiEgNi914fzJSrotYC3lVWMEg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 195108,
  "projectUrl": "http://clarius.io/clide",
  "published": "2015-05-11T22:01:17.357Z",
  "releaseNotes": "v2.2\n\n* Added general-purpose referencing service\n\nv2.1\n\n* Added FindProjects extension method for ISolutionNode, which is more efficient than traversing the entire solution.\n* Improved support for side-by-side versioning of Clide assemblies deployed by multiple extensions\n\nv2.0\n\n* Reworked internals to avoid depending on VS-MEF extensibility, which is problematic and may \n  cause interference with VS composition.\n* Core DI now provided by Autofac, which gives us a performance boost in addition.\n* Components now don't need any [Import] or [ImportingConstructor] in order for constructor\n  dependencies to work, even for core VS services like IServiceProvider or IVsShell, DTE, etc.\n* Types that have the ComponentAttribute applied are automatically registered. \n* Supports registering with a certain type (like [Export(typeof(IMyService))]): [Component(typeof(IMyService))]\n* Added support for registering components as single instance (singletons) using [Component(IsSingleton = true)]\n\nv1.4\n\n* Fixes some performance issues due to MEF (lack of) caching\n* Tracing of MEF composition off by default (can be turned on for diagnostics via the registry)\n* Exposed ServiceLocator.GlobalProvider to get access to a thread-safe IServiceProvider for the entire Visual Studio IDE. \n* Removed usage of the problematic ServiceProvider.GlobalProvider (see above)\n* Removed usage of the problematic ThreadHelper for UI thread marshaling (now leveraging the WPF Dispatcher)\n* Added support for customizing what kinds of traces you want to receive on your output window via Host.Initialize\n* Fixed a potential hang when using the Tracer from a background thread\n* Fixed issue when a command filter was improperly configured.\n\nv1.3\n\n* Expose CompositionContainer directly on IDevEnv. This simplifies many scenarios where you want to interact with the container. Users can still import ICompositionService.\n* Added support for intercepting arbitrary commands in the IDE via simple exports of ICommandInterceptor components, automatically registered when the host is initialized. \n* Moved MEF tracing/diagnostics to run on a separate background thread. This makes host initialization much faster.\n\nv1.2\n\n* Refactored for easier reuse by offering two static entry points: \n     - DevEnv.Get: gets the IDevEnv entry point API. This can be \n       used from anywhere you can import an IServiceProvider. By \n       default the instance is reused.\n     - Host.Initialize: initializes a hosting package and its components\n       (i.e. commands, filters, tool windows, etc.).\n* Single assembly now can be used for both VS2010 and VS2012: this means \n  you no longer have to fork your extension for either IDE just because \n  you use Clide (you may because of other dependencies, like VSMSDK).\n\nv1.1\n\n* ISolutionExplorer API, with full solution traversal, behaviors\n  for selecting, expanding and collapsing nodes, etc.\n* Integration with Adapter pattern for pluggable conversion of \n  solution explorer nodes (i.e. projectNode.As<EnvDTE.Project>())\n* Improved diagnostics and debug-time rendering of nodes\n* Improved reporting of composition errors in the Clide output window\n\nv1.0\n\n* Full support for MEF-exported commands (ICommandExtension) and command filters\n* ToolWindow support\n* Tools options pages support",
  "requireLicenseAcceptance": false,
  "title": "Clide: An Enjoyable IDE Automation API",
  "version": "2.3.27",
  "tags": [
    "visualstudio",
    "vsx",
    "extensibility"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}