{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Unterrainer Informatik OG Team",
  "catalog:commitId": "8eff6c74-8180-4b75-9d4b-51da5ae533d9",
  "catalog:commitTimeStamp": "2018-12-18T11:26:13.415946Z",
  "copyright": "Copyright 2017",
  "created": "2017-09-09T18:16:23.72Z",
  "description": "Build complex machines holding the state of your game components using an intuitive fluent DSL.",
  "id": "MonoGameStateMachine",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-18T11:26:01.44Z",
  "licenseUrl": "http://unlicense.org/",
  "listed": true,
  "packageHash": "HKP3o+d39BI76xx9tN2YRTZYebRmNUf/3zKcMO8r3pG6lRAwa3ZapR81pOmYhbC2yIH6l17bJpPnnrrotGu/KA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16661,
  "projectUrl": "https://github.com/UnterrainerInformatik/FiniteStateMachine",
  "published": "2017-09-09T18:16:23.72Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "This project implements a Finite-State-Machine (FSM) designed to be used in games.\n\t  Furthermore it implements even a Stack-Based-FSM (SBFSM). So you may tell it to 'continue with the last state before the active one'.\n\t  You describe your FSM using a nice and well documented DSL (Domain Specific Language).\n\n\t  This machine also adds the function '.After(time)' to transitions so you can set timed transitions that don't necessarily have to have a trigger at all.\n\t  \n      This replaces the code we usually had for keyboard-input (run-left-right-duck-jump), clicked buttons on the GUI (idle-over-down-refreshing), tower-states (idle-aiming-firing-reloading) or for the connection procedure when setting up peer2peer connections in our games....",
  "title": "MonoGameStateMachine",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json#dependencygroup/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[11.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json#dependencygroup/nunit",
          "@type": "PackageDependency",
          "id": "NUnit",
          "range": "[3.8.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json#MonoGameStateMachine.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 948,
      "fullName": "MonoGameStateMachine.nuspec",
      "length": 1835,
      "name": "MonoGameStateMachine.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json#lib/net451/MonoGameStateMachine.dll",
      "@type": "PackageEntry",
      "compressedLength": 4429,
      "fullName": "lib/net451/MonoGameStateMachine.dll",
      "length": 11264,
      "name": "MonoGameStateMachine.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.11.26.13/monogamestatemachine.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "state",
    "finite",
    "machine",
    "gamestate",
    "transition",
    "fluent",
    "gametime",
    "monogame",
    "mg",
    "after",
    "timer"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}