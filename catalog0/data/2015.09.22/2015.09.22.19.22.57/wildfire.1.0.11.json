{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.22.19.22.57/wildfire.1.0.11.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Riju Vashisht,Chris Shum",
  "catalog:commitId": "32b9841d-e110-4ab9-b1f6-fd758f846baa",
  "catalog:commitTimeStamp": "2015-09-22T19:22:57.2945094Z",
  "copyright": "",
  "created": "2015-09-22T19:22:01.757Z",
  "description": "var queryBuilder = new QueryBuilder();\n    var t0 = new Table()\n            {\n                TableName = \"Table0\",\n                TableAlias = \"t0\"\n            };       \nvar t1 = new Table()\n            {\n                TableName = \"Table1\",\n                Column1Name = \"Column1\",\n                Column2Name = \"Column2\",\n                JoinType = JoinType.Inner,\n                TableAlias = \"t2\"\n            };\n ////Create table from first table\n            //var tables = new List<Table>();\n            //tables.Add(t1);\n            //// Perform a join\n            //t0.JoinOn(tables);\n            queryBuilder.AddTable(t0);\n            ////there are two ways you can add predicate  either by string or predicate object\n            var textMatchExpression = new Predicate(\"t1.[Column3] like 'Joe'\");\n            ////AddPredicate also takes just string if you have only one where condition.\n            queryBuilder.AddPredicate(textMatchExpression, OperationType.And);\n            var datesExpressions1 = new List<string>();\n            datesExpressions1.Add(\"f.[Column5] >= '2015-09-01'\");\n            datesExpressions1.Add(\"f.[Column6] <= '2015-12-31'\");\n            var dateExpressions2 = new List<string>();\n            dateExpressions2.Add(\"f.[Column7] >= '2015-10-01'\");\n            dateExpressions2.Add(\"f.[Column8] >= '2015-12-31'\");\n            //add groups of predicates\n            queryBuilder.AddPredicate(datesExpressions1, OperationType.And, OperationType.Or);\n            queryBuilder.AddPredicate(dateExpressions2, OperationType.And, OperationType.Empty);\n            //Order by \n            queryBuilder.Query.OrderBy(\"Column1\", true);\n            //Fetch overloaded with offset and number of rows.\n            queryBuilder.Query.FetchNext(\"2\",\"20\");\n            queryBuilder.GenerateQuery();",
  "id": "WildFire",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/optimus4me/WildFire/blob/master/LICENSE",
  "listed": true,
  "packageHash": "/vpJ14mditCpbfNjv6DaE6xOX0uEOAN7Xf2wi+6caaOonjNNdLLwbk7i0apf5Xzn6m49kUJD1910/TAnNTJGiw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18332,
  "projectUrl": "https://github.com/optimus4me/WildFire",
  "published": "2015-09-22T19:22:01.757Z",
  "releaseNotes": "1.0.2 Updated logic for groups and subgroups in predicates.\n1.0.3 Added support for order by and Fetch Next also now queryBuilder.Query object gives query string.(Breaking change)\n1.0.4 Multiple tables will not have repeated table names.\n1.0.5 Breaking change :- Fixed a major bug now you dont have to addfrom table anymore you could just add tables in the list and join on any one table also table is a object.\n1.0.6 Updated description.\n1.0.7 Updated dlls.\n1.0.8 Fixed bug of not selecting the columns and not getting comma.\nNow Order by is enum ASC DESC\nFixed bug ZERO predicates was throwing null reference exception.\n1.0.9 Bug fixed code is unreachable.\n1.0.10 Fixed the spacing predicates and and removing the last predicate if you are passing list of predicates or may predicates.\n1.0.11",
  "requireLicenseAcceptance": false,
  "summary": "A .Net Library for reusable code for data access from database , collections, and other utility classes. License under MIT.",
  "title": "WildFire",
  "verbatimVersion": "1.0.11",
  "version": "1.0.11",
  "tags": [
    "Dynamic",
    "Query",
    "SQL",
    "Collections."
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}