{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.13.09.47/dependencysharp.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Evan Wondrasek",
  "catalog:commitId": "6c9e91c9-7759-4ea4-bf59-add127ef2e22",
  "catalog:commitTimeStamp": "2015-02-03T13:09:47.1673379Z",
  "copyright": "Copyright © Evan Wondrasek 2013",
  "created": "2013-07-02T18:46:09.62Z",
  "description": "Unmanaged Dependencies Suck™\nThis library allows you to embed unmanaged dependencies within your managed code (as a byte array), and at runtime check if the dependency exists in a specified location. If it doesn't, the dependency is automatically written to the correct location.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.13.09.47/dependencysharp.1.0.1.json#frameworkassemblygroup",
    "assembly": [
      "System",
      "System.Core"
    ]
  },
  "id": "DependencySharp",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "RE3694uGnJWrvF0tXKTFBJry9IyKVfQZhrQgFsghuBP1bYrUrHP88loZ9z+49wdD91qr3HQVYeeE3vFNlEJRnA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8377,
  "projectUrl": "https://github.com/evanwon/dependencysharp",
  "published": "2013-07-02T18:46:09.62Z",
  "releaseNotes": "Fixed: Attempts to create destination directory if it doesn't exist.",
  "requireLicenseAcceptance": false,
  "title": "DependencySharp",
  "version": "1.0.1",
  "tags": [
    "dependency"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}