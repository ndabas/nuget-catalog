{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "MediatR.Extensions.UnitOfWork",
  "catalog:commitId": "86ce41b3-4cc0-44bd-b3e4-22fba15ebbd1",
  "catalog:commitTimeStamp": "2020-02-11T11:16:24.6253039Z",
  "copyright": "Vitali Bibikov Â©",
  "created": "2020-02-11T11:14:10.45Z",
  "description": "Set of extensions to run multiple MediatR commands sequentially. In a transaction scope, \n      just one by one or when you need to fire a notification just after a command succeded/failed.",
  "id": "MediatR.Extensions.UnitOfWork",
  "isPrerelease": false,
  "lastEdited": "2020-02-11T11:16:13.587Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "zWo6da/d7hKqX2FKJUmpIryBcUNPV7ZMZS6qUuIGU7cGF+iEMC9a1VgdYLEKJhFIMcFKcOXJ9nt0ASD2aw0sMQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20509,
  "projectUrl": "https://github.com/vitalybibikov/AzureExtensions.FunctionToken",
  "published": "2020-02-11T11:14:10.45Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "8.0.1",
  "version": "8.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json#dependencygroup/.netstandard2.1/mediatr",
          "@type": "PackageDependency",
          "id": "MediatR",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json#MediatR.Extensions.UnitOfWork.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 601,
      "fullName": "MediatR.Extensions.UnitOfWork.nuspec",
      "length": 1218,
      "name": "MediatR.Extensions.UnitOfWork.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json#lib/netstandard2.1/MediatR.Extensions.UnitOfWork.dll",
      "@type": "PackageEntry",
      "compressedLength": 7759,
      "fullName": "lib/netstandard2.1/MediatR.Extensions.UnitOfWork.dll",
      "length": 19456,
      "name": "MediatR.Extensions.UnitOfWork.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 643,
      "fullName": "LICENSE",
      "length": 1092,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.11.11.16.24/mediatr.extensions.unitofwork.8.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9470,
      "fullName": ".signature.p7s",
      "length": 9470,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "MediatR",
    "UnitOfWork",
    "Transactions",
    "Scope"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}