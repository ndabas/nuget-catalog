{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Cornelius J. van Dyk",
  "catalog:commitId": "1dc9a2ca-10ee-41bd-aac6-408d4922e26f",
  "catalog:commitTimeStamp": "2024-02-26T16:36:53.2440201Z",
  "copyright": "Copyright 2020-2021",
  "created": "2021-01-15T13:20:57.523Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#deprecation",
    "alternatePackage": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#deprecation/alternatePackage",
      "id": "GCCHigh.Extensions",
      "range": "*"
    },
    "reasons": [
      "Legacy"
    ]
  },
  "description": "Extensions.dll contains extension methods that enhance existing C# classes thus making life easier for developers.",
  "iconUrl": "https://github.com/cjvandyk/Quix/blob/master/Extensions/Extensions.png?raw=true",
  "id": "Extensions.cs",
  "isPrerelease": false,
  "lastEdited": "2024-02-26T16:36:44.257Z",
  "licenseExpression": "GPL-3.0-or-later",
  "licenseUrl": "https://licenses.nuget.org/GPL-3.0-or-later",
  "listed": false,
  "packageHash": "oEAGSvYL1ixu7+tokxo2fWLjZFYJpg1AriBY6pVDbGOU46eGtZGkL/vsD/xV2nUiGmbIykJxukJNTUbKLicfgg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 158640,
  "projectUrl": "https://github.com/cjvandyk/Quix/tree/master/Extensions",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Elevate()\n      Restarts the current process with elevated permissions.\n      For example:\n      System.Diagnostics.Process.GetCurrentProcess().Elevate(args)\n      will restart the current console app in admin mode.\n\n      Get()\n      Language extension for properties.  Use to get the value of the\n      extension property in question.\n\n      GetUrlRoot()\n      Get the URL root for the given string object containing a URL.\n      For example:\n      \"https://blog.cjvandyk.com\".GetUrlRoot()\n      will return\n      \"https://blog.cjvandyk.com\"\n      whereas\n      \"https://blog.cjvandyk.com/sites/Approval\".GetUrlRoot()\n      will also return\n      \"https://blog.cjvandyk.com\".\n\n      IsAlphabetic()\n      Validates that the given string object contains all alphabetic\n      characters (a-z and A-Z) returning True if it does and False if\n      it doesn't.\n      For example:\n      \"abcXYZ\".IsAlphabetic()\n      will return True whereas\n      \"abc123\".IsAlphabetic()\n      will return False.\n\n      IsNumeric()\n      Validates that the given string object contains all numeric\n      characters (0-9) returning True if it does and False  if it\n      doesn't.\n      For example:\n      \"123456\".IsNumeric()\n      will return True whereas\n      \"abc123\".IsNumeric()\n      will return False.\n\n      IsAlphaNumeric()\n      Validates that the given string object contains all alphabetic\n      and/or numeric characters (a-z and A-Z and 0-9) returning True if it\n      does and False  if it doesn't.\n      For example:\n      \"abc123\".IsAlphaNumeric()\n      will return True whereas\n      \"abcxyz\".IsAlphaNumeric()\n      will also return True and\n      \"123456\".IsAlphaNumeric()\n      will also return True but\n      \"abc!@#\".IsAlphaNumeric()\n      will return False.\n\n      IsChar()\n      This method takes a char[] as one of its arguments against which the\n      given string object is validated.  If the given string object contains\n      only characters found in the char[] it will return True, otherwise it\n      will return False.\n      For example:\n      \"aacc\".IsChar(new char[] {'a', 'c'})\n      will return True whereas\n      \"abc123\".IsNumeric()\n      will return False.\n\n      IsUrlRoot()\n      Check if the given string object containing a URL, is that of the\n      URL root only.  Returns True if so, False if not.  For example:\n      \"https://blog.cjvandyk.com\".IsUrlRootOnly()\n      will return True whereas\n      \"https://blog.cjvandyk.com/sites/Approval\".IsUrlRootOnly()\n      will return False.\n\n      Lines()\n      This method returns the number of lines/sentences in the given string\n      object.\n\n      LoremIpsum()\n      Poplates the given string with a given number of paragraphs of dummy\n      text in the lorem ipsum style e.g.\n      \"\".LoremIpsum(2)\n      would yield\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer\n      aliquam arcu rhoncus erat consectetur, quis rutrum augue tincidunt.\n      Suspendisse elit ipsum, lobortis lobortis tellus eu, vulputate\n      fringilla lorem. Cras molestie nibh sed turpis dapibus sollicitudin\n      ut a nulla. Suspendisse blandit suscipit egestas. Nunc et ante mattis\n      nulla vehicula rhoncus. Vivamus commodo nunc id ultricies accumsan.\n      Mauris vitae ante ut justo venenatis tempus.\n\n      Nunc posuere, nisi eu convallis convallis, quam urna sagittis ipsum,\n      et tempor ante libero ac ex. Aenean lacus mi, blandit non eros luctus,\n      ultrices consectetur nunc. Vivamus suscipit justo odio, a porta massa\n      posuere ac. Aenean varius leo non ipsum porttitor eleifend. Phasellus\n      accumsan ultrices massa et finibus. Nunc vestibulum augue ut bibendum\n      facilisis. Donec est massa, lobortis quis molestie at, placerat a\n      neque. Donec quis bibendum leo. Pellentesque ultricies ac odio id\n      pharetra. Nulla enim massa, lacinia nec nunc nec, egestas pulvinar\n      odio. Sed pulvinar molestie justo, eu hendrerit nunc blandit eu.\n      Suspendisse et sapien quis ipsum scelerisque rutrum.\"\n\n      ReplaceTokens()\n      Takes a given string object and replaces 1 to n tokens in the string\n      with replacement tokens as defined in the given Dictionary of strings.\n\n      Retry()\n      Checks if a System.Net.WebException contains a \"Retry-After\" header.\n      If it does, it sleeps the thread for that period (+ 60 seconds)\n      before reattempting to HTTP call that caused the exception in the\n      first place.  If no \"Retry-After\" header exist, the exception is\n      simply rethrown.\n      For example:\n      System.Net.HttpWebRequest request ...\n      Try\n      {\n      request.GetResponse();\n      }\n      Catch (System.Net.WebException ex)\n      {\n      ex.Retry(request);\n      }\n\n      Set()\n      Language extension for properties.  Use to set the value of the\n      extension property in question.\n\n      ToBinary()\n      This method returns the given string represented in 1s and 0s as\n      a binary result.\n      For example:\n      \"This test\".ToBinary()\n      will return\n      1010100 1101000 1101001 1110011 100000 1110100 1100101 1110011 1110100\n\n      Words()\n      This method returns the number of words used in the given string\n      object.\n      For example:\n      \"This is my test\".Words()\n      will return 4 whereas\n      \"ThisIsMyTest\".Words()\n      will return 1.",
  "requireLicenseAcceptance": true,
  "summary": "Extensions.dll contains extension methods that enhance existing C# classes thus making life easier for developers.\n      These methods are included:\n      Elevate()\n      Get()\n      GetUrlRoot()\n      IsAlphabetic()\n      IsNumeric()\n      IsAlphaNumeric()\n      IsChar()\n      IsUrlRoot()\n      Lines()\n      LoremIpsum()\n      ReplaceTokens()\n      Retry()\n      Set()\n      ToBinary()\n      Words()",
  "title": "Extensions",
  "verbatimVersion": "1.1.27",
  "version": "1.1.27",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#Extensions.cs.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2356,
      "fullName": "Extensions.cs.nuspec",
      "length": 6926,
      "name": "Extensions.cs.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#lib/net48/Extensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 53089,
      "fullName": "lib/net48/Extensions.dll",
      "length": 1436672,
      "name": "Extensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#content/Images/Discord.png",
      "@type": "PackageEntry",
      "compressedLength": 897,
      "fullName": "content/Images/Discord.png",
      "length": 936,
      "name": "Discord.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#content/Images/Extensions-64x64.png",
      "@type": "PackageEntry",
      "compressedLength": 6445,
      "fullName": "content/Images/Extensions-64x64.png",
      "length": 6446,
      "name": "Extensions-64x64.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#content/Images/Extensions.ico",
      "@type": "PackageEntry",
      "compressedLength": 43874,
      "fullName": "content/Images/Extensions.ico",
      "length": 1413422,
      "name": "Extensions.ico"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#content/Images/Extensions.png",
      "@type": "PackageEntry",
      "compressedLength": 40200,
      "fullName": "content/Images/Extensions.png",
      "length": 40320,
      "name": "Extensions.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.26.16.36.53/extensions.cs.1.1.27.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Quix",
    "Extensions",
    "C#",
    "cjvandyk",
    "Crayveon"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}