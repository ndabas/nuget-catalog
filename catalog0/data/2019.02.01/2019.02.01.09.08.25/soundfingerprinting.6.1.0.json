{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.09.08.25/soundfingerprinting.6.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sergiu Ciumac",
  "catalog:commitId": "91afc28f-6eed-4896-ae5b-60a52bb71566",
  "catalog:commitTimeStamp": "2019-02-01T09:08:25.0275904Z",
  "created": "2019-02-01T09:04:14.357Z",
  "description": "SoundFingerprinting is a C# framework that implements an efficient algorithm of audio fingerprinting and identification. Designed for developers, enthusiasts, researchers in the fields of audio processing, data mining, digital signal processing.",
  "id": "SoundFingerprinting",
  "isPrerelease": false,
  "lastEdited": "2019-02-01T09:08:22.857Z",
  "licenseUrl": "https://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "+S2UkG8m8Nw/5jeMKd5hQeLruEo6wuYWmwW2sQnK03L8bjG/w/8z8Uyo8GKIXWBPj4kp4kc7lIyY5xguQoKz1A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 258587,
  "projectUrl": "https://addictedcs.github.io/soundfingerprinting",
  "published": "2019-02-01T09:04:14.357Z",
  "releaseNotes": "Version 6.1.0 comes with the ability to create realtime queries, that will continuously poll data from a shared queue and query the storage in realtime. Version 6.0.0 comes with redesigned model services, to support track and fingerprints insertion in one method call. Version 5.2.3 added a support for MetaFields passed during query requests to the server. Version 5.2.2 supports 8Khz and 16KHz audio files at the input. Version 5.2.0 provides EstimatedCoverage which shows the estimated portion of the track that has been captured in the query. SoundFingerprintingAudioService now supports 48KHz files at the input. Version 5.1.0 provides new fingerprinting configurations that support noisy environments, that fit well scenarious when recordings are provided from mobile devices. Version 5.0.0 supports .NET Standard 2.0 as well as .NET Core apps. Default audio service is now SoundFingerprintingAudioService that supports only raw wave files in the input. If you want to process mp3 or flac files please use SoundFingerprinting extension packages with NAudio or Bass. \n4.2.1 comes with a bugfix related to fingerprints serialization. \nIn 4.2.0 FFT is running on arrays allocated on the stack rather than on RAM, yielding to faster fingerprinting. Version 4.1.0 comes without Ninject dependency. Fingerprints signature has changed to Int32[] instead of Int64[], which allows better memory management. MaxEntropyPermutations are now used as default permutations for locality sensitive hashing. \nVersion 4.0.0 comes with a list of improvements. New Haar wavelet transformation normalization factor is now set-up as the default one. It yields better recall and accuracy. Re-index fingerprints if you are migrating from v3.x. Most important update in v4 is an improved fingerprinting speed (2 mins of audio are fingerprinted in ~300 ms), with fever bytes used throughout the process. Similarly to v3.2.0  the InMemoryModelService can now be serialized to file system, and reloaded on application startup (useful for scenarios when you don't want to add external data storages). QueryResult now contains Stats information about the number of candidates analyzed during the query, as well as segregated query duration information: QueryDuration and FingerprintingDuration. Fingerprinting and Query configurations are simplified with various profiles available for choice: LowLatency, Default and HighPrecision configurations. Choose one that corresponds to your scenario. Check Solr data source for fast persistent storage for fingerprints https://github.com/AddictedCS/soundfingerprinting.solr. \nContact ciumac.sergiu@gmail.com for early access to specially designed fingerprinting storage that outperforms Solr.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "6.1.0",
  "version": "6.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.09.08.25/soundfingerprinting.6.1.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.09.08.25/soundfingerprinting.6.1.0.json#dependencygroup/.netstandard2.0/protobuf-net",
          "@type": "PackageDependency",
          "id": "protobuf-net",
          "range": "[2.3.2, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.09.08.25/soundfingerprinting.6.1.0.json#SoundFingerprinting.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1843,
      "fullName": "SoundFingerprinting.nuspec",
      "length": 3917,
      "name": "SoundFingerprinting.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.09.08.25/soundfingerprinting.6.1.0.json#lib/netstandard2.0/SoundFingerprinting.dll",
      "@type": "PackageEntry",
      "compressedLength": 245389,
      "fullName": "lib/netstandard2.0/SoundFingerprinting.dll",
      "length": 468992,
      "name": "SoundFingerprinting.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.01.09.08.25/soundfingerprinting.6.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Audio",
    "Identification",
    "Fingerprinting",
    "Digital",
    "Signal",
    "Processing",
    "Music",
    "Recognition",
    "Data",
    "Mining",
    "Content",
    "Sound",
    "Shazam"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}