{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.14.08.44.43/edlinsoftware.verifier.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ivan Iakimov (edlinsoft@gmail.com)",
  "catalog:commitId": "bbf546bf-f968-470e-b9c6-ec01f76f365b",
  "catalog:commitTimeStamp": "2017-08-14T08:44:43.8534863Z",
  "copyright": "Copyright Â© 2017 EdlinSoftware",
  "created": "2017-08-14T08:33:47.923Z",
  "description": "Sometimes in automation tests we need to validate work of methods, returning very complex objects as a result. We want to be sure, that these objects have correct structure. Common assertion libraries allow us to check our expectation about simple objects (strings, numbers), and collections of objects of primitive types. But it can happen, that we need more.\n\nVerifiers library is created to support such cases. It allows you to combine many expectations in one package, execute them all, and return all results in one place.",
  "iconUrl": "https://raw.githubusercontent.com/yakimovim/verifier/master/Verifier/check.ico",
  "id": "EdlinSoftware.Verifier",
  "isPrerelease": false,
  "lastEdited": "2017-08-14T08:39:57.203Z",
  "licenseUrl": "https://raw.githubusercontent.com/yakimovim/verifier/master/LICENSE",
  "listed": true,
  "packageHash": "DagVpjWQ+p6J5FPEFCmiJ1yRljpOYXiGeta0VJrI8vff548ybQmQjF9/4OCtEmnP+0jYBt6wLRRJOWlqOFVMPg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9207,
  "projectUrl": "https://github.com/yakimovim/verifier",
  "published": "2017-08-14T08:33:47.923Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "summary": "Sometimes in automation tests we need to validate work of methods, returning very complex objects as a result. We want to be sure, that these objects have correct structure. Common assertion libraries allow us to check our expectation about simple objects (strings, numbers), and collections of objects of primitive types. But it can happen, that we need more.\n\nVerifiers library is created to support such cases. It allows you to combine many expectations in one package, execute them all, and return all results in one place.",
  "title": "EdlinSoftware Verifier of Complex Objects",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.14.08.44.43/edlinsoftware.verifier.1.0.0.json#dependencygroup/.netstandard1.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.14.08.44.43/edlinsoftware.verifier.1.0.0.json#dependencygroup/.netstandard1.0/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        }
      ],
      "targetFramework": ".NETStandard1.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.14.08.44.43/edlinsoftware.verifier.1.0.0.json#EdlinSoftware.Verifier.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 835,
      "fullName": "EdlinSoftware.Verifier.nuspec",
      "length": 2219,
      "name": "EdlinSoftware.Verifier.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.14.08.44.43/edlinsoftware.verifier.1.0.0.json#lib/netstandard1.0/EdlinSoftware.Verifier.dll",
      "@type": "PackageEntry",
      "compressedLength": 6664,
      "fullName": "lib/netstandard1.0/EdlinSoftware.Verifier.dll",
      "length": 15872,
      "name": "EdlinSoftware.Verifier.dll"
    }
  ],
  "tags": [
    "Test",
    "Testing",
    "Assert",
    "Verify"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}