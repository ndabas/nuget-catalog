{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.09.17.26.58/signalr.tests.1.0.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ilya Margolin",
  "catalog:commitId": "a089c81f-7085-4ce4-825d-a8ec0b3bf829",
  "catalog:commitTimeStamp": "2015-09-09T17:26:58.287252Z",
  "created": "2015-09-09T17:26:08.027Z",
  "description": "In-memory testing the full SignalR pipline",
  "id": "SignalR.Tests",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "n0/dtrYMfwE1hME8NBirJU3Zv5G2/rskH9D3HsdCd42fmgmldUmZ5gOyj4C6TiGS8oVe7NZ9LX4OMI/5/X6dTQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5513,
  "projectUrl": "https://github.com/marhoily/SignalR.Tests",
  "published": "2015-09-09T17:26:08.027Z",
  "requireLicenseAcceptance": false,
  "summary": "Enables in-memory testing SignalR hubs and proxies end-to-end\n      in the same way Microsoft.Owin.Testing package enables testing the WebApi",
  "verbatimVersion": "1.0.6",
  "version": "1.0.6",
  "tags": [
    "SignalR",
    "test",
    "testing",
    "in-memory"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}