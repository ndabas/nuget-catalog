{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kermalis",
  "catalog:commitId": "3924e25b-3bed-48a1-9864-e8658f748b4e",
  "catalog:commitTimeStamp": "2022-08-30T19:44:11.0135388Z",
  "copyright": "Kermalis",
  "created": "2022-08-30T19:36:44.02Z",
  "description": "This .NET library provides a simple API to read/write bytes from/to streams and spans using user-specified endianness.\n\t\t\tBy default, supported types include primitives, enums, arrays, strings, and some common .NET struct types.\n\t\t\tObjects can also be read/written from/to streams via reflection and attributes.\n\t\t\tThe developer can use the API even if their target behavior or data is not directly supported by using the IBinarySerializable interface, inheritting from the reader/writer, or using the manual Span methods without streams.\n\t\t\tPerformance is the focus when not using reflection; no allocations unless absolutely necessary!\n\n\t\t\tProject URL and Samples â€• https://github.com/Kermalis/EndianBinaryIO",
  "id": "EndianBinaryIO",
  "isPrerelease": false,
  "lastEdited": "2022-08-30T19:38:24.62Z",
  "licenseFile": "LICENSE.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "K02aUPR7LQYHK7FSR5X8pwdapTsMo3CtJxK3ml8T8dBzS9cSlJtspxnVYT2UIS8fNG5KLygt7I1jLmwa5gCbqQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35480,
  "projectUrl": "https://github.com/Kermalis/EndianBinaryIO",
  "published": "2022-08-30T19:36:44.02Z",
  "readmeFile": "README.md",
  "releaseNotes": "* Rewritten with Span<T> and performance in mind. No allocations unless absolutely necessary\n\t\t\t* The compiler will now inline certain methods. For example, ReadEnum<TEnum>() will only include code that will be executed for the given enum size. So passing a TEnum that is the size of a byte will condense down to just a ReadByte() call with no size/type checks\n\t\t\t* Implemented reading and writing for Half, DateOnly, TimeOnly, Vector2, Vector3, Vector4, Quaternion, and Matrix4x4\n\t\t\t* Removed bloated overloads (with array offset/count, alternate Encoding/BooleanSize, null termination, etc.). The reader/writer now respects its state (such as whether to use ASCII, and which BooleanSize to use) which you can change at any time\n\t\t\t* decimal int order now matches with .net APIs\n\t\t\t* Removed EndianBitConverter in favor of EndianBinaryPrimitives, which has similar API while using modern programming like Span<T>\n\t\t\t* API uses nullable notations\n\t\t\t* You can now ReadObject() and WriteObject() with primitives and other supported types like DateTime, Vector3, etc.\n\t\t\t* Removed Encoding usage. The whole thing was very complicated before, and it barely functioned. Now you have ASCII and .net (UTF16-LE) support by default, and can add your own requirements either by extension methods or inheriting the reader/writer",
  "repository": "",
  "title": "EndianBinaryIO",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json#EndianBinaryIO.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1433,
      "fullName": "EndianBinaryIO.nuspec",
      "length": 2925,
      "name": "EndianBinaryIO.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json#lib/net6.0/EndianBinaryIO.dll",
      "@type": "PackageEntry",
      "compressedLength": 18898,
      "fullName": "lib/net6.0/EndianBinaryIO.dll",
      "length": 48128,
      "name": "EndianBinaryIO.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json#LICENSE.md",
      "@type": "PackageEntry",
      "compressedLength": 634,
      "fullName": "LICENSE.md",
      "length": 1084,
      "name": "LICENSE.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 2726,
      "fullName": "README.md",
      "length": 8638,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.30.19.44.11/endianbinaryio.2.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Serialization",
    "Reflection",
    "Endianness",
    "LittleEndian",
    "BigEndian",
    "EndianBinaryIO"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}