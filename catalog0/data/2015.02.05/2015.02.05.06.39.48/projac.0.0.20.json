{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.06.39.48/projac.0.0.20.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Yves Reynhout",
  "catalog:commitId": "bc2cf2f0-f1d0-417e-9b78-5d662c782d3c",
  "catalog:commitTimeStamp": "2015-02-05T06:39:48.2179488Z",
  "copyright": "Copyright 2014, BitTacklr. All rights reserved.",
  "created": "2014-04-26T12:08:32.903Z",
  "description": "Projac provides lightweight infrastructure for producing T-SQL DML statements.",
  "id": "Projac",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.github.com/yreynhout/Projac/master/LICENSE.txt",
  "packageHash": "MxGD/WZaRRHwN3mfbjTUnYbuC66Rosd3vDzM/W/MI26DbU6yTAiDQUYEa6t/0/RHFkZSHUBFC3vp0jP4k50mww==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14341,
  "projectUrl": "https://github.com/yreynhout/Projac",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Changes: Added TSql.Compose() allowing for a fluent syntax to compose multiple non query statements that is both friendly to the eye and LINQ-to-objects. TSql.Projection() allows specifying Projac based projections in a declarative fashion (say goodbye to classes for specifying projections).",
  "requireLicenseAcceptance": false,
  "title": "Projac",
  "version": "0.0.20",
  "tags": [
    "eventsourcing",
    "DDDesign"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}