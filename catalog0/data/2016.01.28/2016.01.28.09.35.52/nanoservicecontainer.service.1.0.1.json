{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.28.09.35.52/nanoservicecontainer.service.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rustam Kulenov",
  "catalog:commitId": "6d629e43-2c5b-41e1-acd8-72e5b542d68e",
  "catalog:commitTimeStamp": "2016-01-28T09:35:52.0634391Z",
  "created": "2016-01-28T09:35:28.923Z",
  "description": "Infrastructure component for building composite applications consisting of multiple parts (services).\nThe container loads and starts services from subfolders using reflection. In microservices architecture each microservice is executed in LXC or VM, while in this project each nanoservice instance is ran in separate .Net application domain, but in single process.\nSee also \"NanoServiceContainer\" for classes and interfaces required for creating service host.",
  "id": "NanoServiceContainer.Service",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "d1UGaGV7pZ7I6EEDT8jwf2xsLcNfcEnYKeymS46s2EWXeRngazuasgHOqGcXr1s14rNE4TI/swiB7dlQeN3K+w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11012,
  "projectUrl": "https://bitbucket.org/rkulenov/nanoservicecontainer",
  "published": "2016-01-28T09:35:28.923Z",
  "requireLicenseAcceptance": false,
  "summary": "Infrastructure component for building composite applications consisting of multiple parts (services) without using virtualization, LXC, VMs.",
  "title": "Nano service container. Service libs",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "tags": [
    "service",
    "microservice",
    "nanoservice",
    "container",
    "host"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}