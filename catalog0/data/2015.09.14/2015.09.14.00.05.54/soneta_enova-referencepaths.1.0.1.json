{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.14.00.05.54/soneta_enova-referencepaths.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "sebastian.mach",
  "catalog:commitId": "d12ebb4e-461c-4131-9b58-2708fdd36c9d",
  "catalog:commitTimeStamp": "2015-09-14T00:05:54.6815697Z",
  "copyright": "Copyright 2015",
  "created": "2015-09-14T00:05:11.987Z",
  "description": "This package sets up ReferencePath property at Visual Studio project file to make access to enova assemblies.",
  "id": "Soneta_enova-ReferencePaths",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "mLmgn6p7xcwnhsvY8b6reb/bFAfb+CI5CZ7tRkDT0B5L0y4SCNW3iiPSE9Hs5CRRhXPM+eD6XmFo6EpOWrlD2g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4347,
  "projectUrl": "https://github.com/a4099181/Soneta.ReferencePathResolver",
  "published": "2015-09-14T00:05:11.987Z",
  "releaseNotes": "This is the first stable release of this package.",
  "requireLicenseAcceptance": false,
  "summary": "It produces single ReferencePath entry for each known installation of the Soneta enova ERP system. It should be helpful to develop enova extensions on start already. Don't click to find a path to currently installed enova software. Get this package! It will make it for you and it will track any new enova installations in the future.",
  "title": "Soneta enova ReferencePath resolver",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "tags": [
    "Soneta",
    "enova",
    "ReferencePath"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}