{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Lorenzo Solano Martinez",
  "catalog:commitId": "86d6d8e8-6bc6-4943-a1eb-b6e5566e6974",
  "catalog:commitTimeStamp": "2021-05-14T15:32:54.3171155Z",
  "copyright": "(C) Lorenzo Solano Martinez (https://lorenzosolano.com/) 2019-2021. All Rights Reserved.",
  "created": "2021-05-14T15:30:31.05Z",
  "description": "Common validations.",
  "id": "Triplex.Validations",
  "isPrerelease": false,
  "lastEdited": "2021-05-14T15:32:36.62Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "OHiej6ma7+B7UnMH4T8ceCIbnaXouIlxmv7gikqgX+C2GK80cJa137Ct7Kxm66IecjzuVK8xhzV0E4IQgd/8pg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23874,
  "published": "2021-05-14T15:30:31.05Z",
  "releaseNotes": "New Features\n  - Add FormatException to LuhnFormula.IsValid(int[]) at Triplex.Validations.Algorithms.Checksum when array elements are not within [0-9].\n  - Add overload to LuhnFormula.IsValid(int[]) with String input LuhnFormula.IsValid(string)",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "0.9.0",
  "version": "0.9.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net5.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json#Triplex.Validations.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 606,
      "fullName": "Triplex.Validations.nuspec",
      "length": 1111,
      "name": "Triplex.Validations.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json#lib/net5.0/Triplex.Validations.dll",
      "@type": "PackageEntry",
      "compressedLength": 8690,
      "fullName": "lib/net5.0/Triplex.Validations.dll",
      "length": 21504,
      "name": "Triplex.Validations.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json#lib/net5.0/Triplex.Validations.xml",
      "@type": "PackageEntry",
      "compressedLength": 2445,
      "fullName": "lib/net5.0/Triplex.Validations.xml",
      "length": 28728,
      "name": "Triplex.Validations.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 644,
      "fullName": "LICENSE",
      "length": 1082,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.14.15.32.54/triplex.validations.0.9.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Preconditions",
    "Postconditions",
    "Invariants",
    "DDD",
    "Domain",
    "Driven",
    "Design"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}