{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.09.25.12.18.26/ruzzie.cache.flashcache.0.9.45.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dorus Verhoeckx",
  "catalog:commitId": "d36b6fa5-2590-4484-96b3-aef7443628a8",
  "catalog:commitTimeStamp": "2015-09-25T12:18:26.6631025Z",
  "copyright": "Copyright 2015",
  "created": "2015-09-25T12:13:50.547Z",
  "description": "a fixed size high performant in memory cache",
  "id": "Ruzzie.Cache.FlashCache",
  "isPrerelease": false,
  "lastEdited": "2015-09-25T12:17:56.213Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "/xysKaOJoo16wOscqsEGXoqwa1cgZv7nfF1oLAwEPXFvBP9d4av0vaTj3o9jcy07zM1a+Egn6l8YIGciOXMtpA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22931,
  "projectUrl": "https://github.com/Ruzzie/flashcache",
  "published": "2015-09-25T12:13:50.547Z",
  "requireLicenseAcceptance": false,
  "summary": "a fixed size high performant in memory cache",
  "title": "FlashCache",
  "verbatimVersion": "0.9.45",
  "version": "0.9.45",
  "tags": [
    "Caching",
    "Memory",
    "Fixed",
    "size",
    "memory"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}