{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Mortensen",
  "catalog:commitId": "ff8ed6e3-9cd8-4e3a-982c-e022d5e6ec2f",
  "catalog:commitTimeStamp": "2021-04-19T07:21:45.7097457Z",
  "copyright": "Copyright Â© Weubphoria 2009-2018. All rights reserved.",
  "created": "2018-09-10T21:09:09.667Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#deprecation",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "This is all the assemblies of the Cuemon .NET Standard family.",
  "iconUrl": "https://nblcdn.net/themes/cuemon.net/img/core/128x128x.png",
  "id": "Cuemon.Core.Package",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2021-04-19T07:21:38.253Z",
  "licenseUrl": "https://github.com/gimlichael/CuemonCore/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "fhhBlIC5srpyM8Pmz5SybkZCtAF/ZQCThHiKdeRNPsRdIYCSV7dv1UZU1Pplz96lpg4U+BWbOPHArxtNs1uIdA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19611,
  "projectUrl": "https://www.cuemon.net/",
  "published": "2018-09-10T21:09:09.667Z",
  "releaseNotes": "5.0.2018.251\n* FIXED - The extension method for IEnumerable{T}: Shuffle{T} was fixed so it no longer skips one item\n* CHANGED - Although very usefull, the default value for SynchronizeWithJsonConvert on JsonFormatterOptions class in the Cuemon.Serialization.Json.Formatters namespace, is now false again, as it caused trouble with Microsoft Unit test in VS (which uses the JSON serailizer/deserializer internally)\n* CHANGED - SynchronizeWithXmlConvert on XmlFormatterOptions class in the Cuemon.Serialization.Xml.Formatters namespace, is now false, to keep the implementation alligned with the JSON variant\n* ADDED - New extension method for ICollection{JsonConverter}: AddDataPairConverter\n\n5.0.2018.250\n* PRELUDE - This is a major release with breaking changes through out the assembly family\n* CHANGED - Refactored and moved ExceptionDescriptor class from Cuemon namespace to Cuemon.Diagnostics\n* CHANGED - Refactored and moved ExceptionDescriptorAttribute class from Cuemon namespace to Cuemon.Diagnostics\n* ADDED - IMessageLocalizer interface in the Cuemon.Globalization namespace that provides a generic way to support localized messages on attribute decorated methods\n* ADDED - Support for localization of fault messages on ExceptionDescriptorAttribute class\n* ADDED - ExceptionDescriptorOptions class in the Cuemon.Diagnostics namespace that specifies options that is related to ExceptionDescriptor\n* CHANGED - Wrapper class in the Cuemon namespace received a simplified constructor\n* ADDED - New extensions for {T}: UseWrapper (Wrap and extend an existing object of {T} with additional data)\n* ADDED - Two new validation methods on Validator class in the Cuemon namespace; ThrowIfDistinctDifference and ThrowIfNotDistinctDifference\n* CHANGED - ContainsInterface on the TypeUtility class in the Cuemon namespace to include self (should self be an interface)\n* ADDED - IConfigurable interface in the Cuemon.Configuration namespace that provides a generic way to support the options pattern on a class level\n* ADDED - Configurable abstract class in the Cuemon.Configuration namespace that provides a generic base class to support the options pattern on a class level\n* FIXED - TryParse on EncodingUtility class in the Cuemon.Text namespace no longer throws exception when byte array is less than fourn in length\n* ADDED - ICorrelation interface in the Cuemon.Messaging namespace that provides a Correlation ID (also known as a Request ID) that is a unique identifier which is attached to requests and messages that allow reference to a particular transaction or event chain\n* ADDED - DynamicCorrelation class in the Cuemon.Messaging namespace that provides a factory based way to create and wrap an ICorrelation implementation\n* ADDED - ChecksumResult class in the Cuemon.Integrity namespace that represents the result of a computed checksum operation\n* CHANGED - TimeMeasureOptions class in the Cuemon.Diagnostics namespace is no longer sealed\n* ADDED - ICacheableTimestamp interface in the Cuemon.Integrity namespace that represents the timestamp that is normally associated with a data-set\n* ADDED - ICacheableIntegrity interface in the Cuemon.Integrity namespace that represents the data integrity that is normally associated with a data-set\n* ADDED - ICacheableEntity interface in the Cuemon.Integrity namespace that represents both the timestamp and data integrity that is normally associated with a data-set\n* CHANGED - CacheValidator class in the Cuemon.Integrity namespace now implements ICacheableTimestamp and no longer requires a Modified date (eg. nullable is now accepted)\n* REMOVED - ChecksumBuilder class in the Cuemon.Integrity namespace no longer have CombineWith methods\n* ADDED - New extensions for ChecksumBuilder: CombineWith (generic and flexible variants of earlier implemented methods)\n* CHANGED - GetCacheValidator overload on CacheValidatorExtensions class in the Cuemon.Integrity namespace to be more precise when determining assembly data integrity\n* CHANGED - HttpManager class in the Cuemon.Net.Http namespace was refactored to be more simple yet more powerfull\n* CHANGED - All related HttpManagerExtensions to comply with the changes on the HttpManager class (both in Cuemon.Net.Http namespace)\n* ADDED - HttpRequestOptions class in the Cuemon.Net.Http namespace that specifies options that is related to HttpManager operations\n* CHANGED - HashResult class in the Cuemon.Security.Cryptography namespace now inherits from CheksumResult\n* REMOVED - FormatterOptions class in the Cuemon.Serialization.Formatters namespace was deemed obsolete and removed\n* CHANGED - FormatterExtensions class in the Cuemon.Serialization.Formatters namespace was changed in many methods\n* ADDED - New extensions for ICollection{JsonConverter}: AddStringEnumConverter, AddStringFlagsEnumConverter, AddExceptionDescriptorConverter, AddTimeSpanConverter and AddExceptionConverter\n* CHNAGED - JsonFormatter class in the Cuemon.Serialization.Json.Formatters namespace was refactored\n* CHANGED - JsonFormatterOptions class in the Cuemon.Serialization.Json.Formatters namespace was conpletely refactored\n* CHANGED - DynamicJsonConverter class in the Cuemon.Serialization.Json.Formatters namespace was refactored\n* ADDED - New extensions for JsonWriter: WritePropertyName\n* ADDED - DynamicContractResolver class in the Cuemon.Serialization.Json namespace that provides a factory based way to create and wrap an IContractResolver implementation\n* REMOVED - XmlConverterOptions class in the Cuemon.Serialization.Xml namespace was deemed obsolete and removed\n* ADDED - XmlConverter abstract class in the Cuemon.Serialization.Xml.Converters namespace that converts an object to and from XML\n* ADDED - DefaultXmlConverter class in the Cuemon.Serialization.Xml.Converters namespace that provides a default way to convert objects to and from XML\n* ADDED - New extensions for IList{XmlConverter}: AddXmlConverter, InsertXmlConverter, FirstOrDefaultReaderConverter, FirstOrDefaultWriterConverter, AddEnumerableConverter, AddExceptionDescriptorConverter, AddExceptionConverter, AddUriConverter, AddDateTimeConverter, AddTimeSpanConverter and AddStringConverter\n* CHANGED - XmlFormatter class in the Cuemon.Serialization.Xml.Formatters namespace was refactored\n* CHANGED - XmlFormatterOptions class in the Cuemon.Serialization.Xml.Formatters namespace was conpletely refactored\n* CHANGED - DynamicXmlConverter class in the Cuemon.Serialization.Xml namespace was conpletely refactored\n* CHANGED - XmlConvert class in the Cuemon.Serialization.Xml namespace was refactored to provide methods for converting between .NET types and XML types\n* ADDED - XmlSerializer class in the Cuemon.Serialization.Xml namespace that serializes and deserializes objects into and from the XML format\n* ADDED - XmlSerializerSettings class in the Cuemon.Serialization.Xml namespace that specifies options that is related to XmlSerializer operations\n* ADDED - New extensions for XmlWriter: WriteObject, WriteStartElement, WriteEncapsulatingElementIfNotNull and WriteXmlRootElement\n* FIXED - ToHierarchy on the XmlReaderExtensions class was fixed to support dictionaries\n* FIXED - Spelling error on the FormConverter class in the Cuemon.Web namespace\n* ADDED - New extensions for String: TryParseXElement, IsXmlString\n* CHANGED - FromException on the XmlStreamConverter class now serializes the same way as its JSON counterpart\n\n4.3.2018.2200\n* ADDED - AsyncOptions class in the Cuemon.Threading namespace that specifies options that is related to asynchronous operations\n* FIXED - All extensions methods was fixed with async/await\n* FIXED - The extension method for Uri: HttpGet was renamed to HttpGetAsync due to the overlooked rename on last release\n\n4.3.2018.2070\n* CHANGED - Assembly version 4.2.2017.0 --> 4.3.2018.205\n* CHANGED - Renamed Remove --> RemoveAll on the StringUtility and StringUtilityExtensions class in the Cuemon namespace (breaking)\n* ADDED - New extensions for Task: ContinueWithCapturedContext, ContinueWithSuppressedContext\n* ADDED - New extensions for Task{TResult}: ContinueWithCapturedContext, ContinueWithSuppressedContext\n* CHANGED - HashUtility and HashUtilityExtensions class in the Cuemon.Security.Cryptography namespace was refactored to support the options pattern\n* CHANGED - HmacUtility and HmacUtilityExtensions class in the Cuemon.Security.Cryptography namespace was refactored to support the options pattern\n* ADDED - HashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to HashAlgorithm operations\n* ADDED - KeyedHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to KeyedHashAlgorithm operations\n* ADDED - StreamHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to HashAlgorithm operations\n* ADDED - StreamKeyedHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to KeyedHashAlgorithm operations\n* ADDED - StringHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to HashAlgorithm operations\n* ADDED - StringKeyedHashOptions class in the Cuemon.Security.Cryptography namespace that specifies options that is related to KeyedHashAlgorithm operations\n* CHANGED - Breaking change on all async methods on HttpManager and HttpManagerExtensions classes in the Cuemon.Net.Http namespace; renamed to follow the naming convention of Async methods\n* CHANGED - JsonFormatterOptions class in the Cuemon.Serialization.Json.Formatters namespace received a few more standard settings\n\n4.2.2018.840\n* PRELUDE - Microsoft has now proven that .NET Standard is the way to go why per assembly download is re-introduced again\n* PRELUDE - Changed title of package from Cuemon .NET Core Package --> Cuemon .NET Standard Package\n\n4.2.2017.2270\n* CHANGED - Renamed FromChars --> ToEnumerable on the StringConverter class in the Cuemon namespace\n* ADDED - StringConverter class in the Cuemon namespace received one new method; FromChars\n* ADDED - New extensions for IEnumerable{Char}: FromChars\n* ADDED - StringUtility class in the Cuemon namespace received three new methods; two overloaded HasConsecutiveCharacters and one ParseDistinctDifference\n\n4.2.2017.2250\n* ADDED - New extensions for IDictionary{TKey,TValue}: TryGetValue, GetValueOrDefault\n* FIXED - XmlStreamConverter class in the Cuemon.Xml namespace had the FromException method fixed to traverse inner exceptions correctly\n* FIXED - XmlFormatter class in the Cuemon.Serialization.Xml.Formatters namespace had the Deserialize method fixed to use XmlReaderSettings instead of XmlWriterSettings\n* CHANGED - FormatterOptions class in the Cuemon.Serialization.Formatters namespace received ways to support Reader- and Writer- settings\n* CHANGED - XmlFormatterOptions class in the Cuemon.Serialization.Xml.Formatters namespace was refactored to support XmlReaderSettings and XmlWriterSettings\n* ADDED - XmlFormatterOptions class in the Cuemon.Serialization.Xml.Formatters namespace received support for Exception serialization\n* CHANGED - DynamicXmlConverter class in the Cuemon.Serialization.Xml namespace was refactored to support XmlReaderSettings and XmlWriterSettings\n* ADDED - ConditionalCollection{T} class in the Cuemon.Collections.Generic namespace that provides an abstract base class for a generic, conditional collection\n* ADDED - Initializer class in the Cuemon namespace that provides a generic way to wrap and initialize a class for countless scenarios\n* ADDED - InitializerBuilder{T} class in the Cuemon namespace that supports the Initializer class for building custom initializers\n\n4.2.2017.900\n* FIXED - All async/await methods now uses ConfigureAwait(false)\n* ADDED - ChecksumBuilder class in the Cuemon.Integrity namespace that provides a way to fluently represent checksum values of arbitrary data\n* ADDED - ChecksumBuilderOptions class in the Cuemon.Integrity namespace that specifies options that is related to ChecksumBuilder operations\n* CHANGED - Refactored the CacheValidator class in the Cuemon.Integrity namespace to inherit from the new ChecksumBuilder class\n* ADDED - ActionFactory class in the Cuemon namespace received a Task based method; ExecuteMethodAsync (TAP)\n* ADDED - FuncFactory class in the Cuemon namespace received a Task{TResult} based method; ExecuteMethodAsync (TAP)\n* ADDED - TaskActionFactory class in the Cuemon namespace that provides access to factory methods for creating instances that encapsulate a Task based function delegate with a variable amount of generic arguments (TAP)\n* ADDED - TaskFuncFactory class in the Cuemon namespace that provides access to factory methods for creating instances that encapsulate a Task{TResult} based function delegate with a variable amount of generic arguments (TAP)\n* ADDED - TransientOperation class in the Cuemon namespace received several Task based overloaded methods; WithFuncAsync and WithActionAsync (TAP)\n* FIXED - TransientOperationOptions class in the Cuemon namespace now have a default value of 5 minutes on the MaximumAllowedLatency property\n* ADDED - ExceptionDescriptorAttribute class in the Cuemon namespace that provides information about an Exception, in a developer friendly way, optimized for open- and otherwise public application programming interfaces (API)\n* ADDED - ExceptionDescriptor class in the Cuemon namespace received two new overloaded methods; PostInitializeWith\n* CHANGED - MethodDescriptor class in the Cuemon.Reflection namespace was refactored to use property Caller:Type instead of property ClassName:string, which in return should add higher flexibility\n* ADDED - MethodWrappedException class in the Cuemon namespace that wraps an exception that was refined with meta information from the ExceptionUtility class\n* ADDED - ExceptionUtility class in the Cuemon namespace received a new method; Unwrap\n* CHANGED - ExceptionUtility class in the Cuemon namespace received refactoring of Refine methods; instead of returning a generic {T of Exception}, they now return a MethodWrappedException\n* FIXED - Renamed extensions for Exception: RefineException --> Refine\n* ADDED - New extensions for MethodWrappedException: Unwrap\n* FIXED - StringConverter class in the Cuemon namespace now writes punctuations delimiters again on the FromType method\n* ADDED - Validator class in the Cuemon namespace received four new overloaded methods; ThrowIfUri, ThrowIfNotUri, ThrowIfContainsType and ThrowIfNotContainsType\n* ADDED - TimeMeasure class in the Cuemon.Diagnostics namespace received several Task based overloaded methods; WithActionAsync and WithFuncAsync (TAP)\n* ADDED - TesterDoer class in the Cuemon namespace that provides a set of methods that can assist with the tester-doer pattern\n* ADDED - XmlFormatter class in the Cuemon.Serialization.Xml.Formatters namespace received an additional constructor that takes a JsonFormatterOptions\n* PATCH - ObjectConverter class in the Cuemon namespace was patched with failover to TypeDescriptor\n\n4.1.2017.500\n* CHANGED - DataPair class in the Cuemon namespace can now be inherited from\n* CHANGED - FromPascalCasing method on the StringConverter class in the Cuemon namespace to be more flexible on conversion\n\n4.1.2017.411\n* FIXED - Same spelling error (embarrassing) on the HttpManager class in the Cuemon.Net.Http namespace (HttPatch --> HttpPatch)\n\n4.1.2017.410\n* FIXED - The extension method for Uri: HttPatch was renamed to HttpPatch due to the obvious spelling error\n\n4.1.2017.400\n* ADDED - DayPart class in the Cuemon namespace that represents a part of a day.\n* ADDED - DayParts class in the Cuemon namespace that provides a roughly way to determine if a given part of a day is either; Night, Morning, Forenoon, Afternoon og Evening\n* FIXED - World class in the Cuemon.Globalization namespace now tries to load cultures by reflection; if unsuccessful, it reverts to an embedded resource where CultureNotFoundException are swallowed\n* ADDED - New extensions for DateTime: IsWithinRange, IsTimeOfDayNight, IsTimeOfDayMorning, IsTimeOfDayForenoon, IsTimeOfDayAfternoon, IsTimeOfDayEvening\n* ADDED - New extensions for String: SubstringBefore\n* ADDED - New extensions for Uri: HttPatch\n* ADDED - New extensions for HttpMethod: ToHttpMethod\n* ADDED - New extensions for HttpStatusCode: IsSuccessStatusCode\n* CHANGED - CacheValidator class in the Cuemon.Integrity namespace was changed in terms of default assembly referencepoint as well as minor adjustment/improvals\n* CHANGED - HttpManager class in the Cuemon.Net.Http namespace now supports the HttpPatch method\n* CHANGED - HttpMethods enum was extended with one new value; Patch (128)\n\n4.1.2017.350\n* ADDED - New extensions for Int16: Min, Max\n* ADDED - New extensions for Int32: Min, Max\n* ADDED - New extensions for Int64: Min, Max\n* ADDED - New extensions for String: ToCasing, GetCacheValidator\n* ADDED - New extensions for Assembly: GetCacheValidator\n* ADDED - New extensions for FileVersionInfo: ToProductVersion, ToFileVersion\n* ADDED - New extensions for RegionInfo: GetCultures\n* ADDED - CasingMethod enum in the Cuemon namespace that specifies ways that a string must be converted in terms of casing\n* ADDED - FileInfoConverter class in the Cuemon.IO namespace that is designed to make FileInfo related conversions easier to work with\n* CHANGED - CacheValidator class in the Cuemon.Integrity namespace to support the options pattern and Checksum now return a HashResult object instead of a hexadecimal string\n* ADDED - CacheValidatorOptions class in the Cuemon.Integrity namespace that specifies options that is related to CacheValidator operations\n* CHANGED - ChecksumMethod enum was extended with one new value; Timestamp\n* CHANGED - Renamed FromConvertible --> FromConvertibles on the ByteConverter class in the Cuemon namespace\n* ADDED - World class in the Cuemon.Globalization namespace that is designed to make System.Globalization related operations easier to work with\n\n4.1.2017.280\n* FIXED - EncodingOptions class in the Cuemon.Text namespace now uses the static default values\n* FIXED - ReflectionUtility class in the Cuemon.Reflection namespace now identifies an auto-property correctly\n* FIXED - The extension method for String: ToByteArray was re-implemented using the old way of method overloading due to conflict with the generic variant of this method\n\n4.1.2017.200\n* CHANGED - Assembly version 4.0.2016.0 --> 4.1.2017.0\n* CHANGED - All extension methods, that uses the options pattern, now has an optional setup delegate\n* ADDED - Validator class in the Cuemon namespace received several new overloaded methods; ThrowIfEmpty, ThrowIfWhiteSpace, ThrowIfNullOrEmpty, ThrowIfNullOrWhitespace\n* ADDED - Condition class in the Cuemon namespace received a new method; IsWhiteSpace\n* CHANGED - HttpManager class in the Cuemon.Net.Http namespace was refactored to support the options pattern an also received a bugfix\n* ADDED - HttpManagerOptions class in the Cuemon.Net.Http namespace that specifies options that is related to the HttpManager class\n\n4.1.2016.3580\n* ADDED - LatencyException class in the Cuemon namespace that provides the exception that is thrown when a latency related operation was taking to long to complete\n* CHANGED - Parse and Flatten methods on the static ExceptionUtility class in the Cuemon namespace was tweaked to be more versatile\n* CHANGED - ByteConverter class in the Cuemon namespace was simplified internally\n* CHANGED - CharConverter class in the Cuemon namespace was simplified internally and tweaked with a try to detect encoding on relevant methods\n* CHANGED - StringConverter class in the Cuemon namespace was simplified internally and tweaked with a try to detect encoding on relevant methods\n* CHANGED - Renamed extensions for Stream: ToString --> ToEncodedString\n* CHANGED - Renamed extensions for Exception: ToString --> ToEncodedString\n* CHANGED - Renamed extensions for Byte[]: ToString --> ToEncodedString\n* ADDED - New extensions for XmlReader: Copy\n* ADDED - TransientFaultEvidence class in the Cuemon namespace that provides evidence about a faulted TransientOperation\n* CHANGED - TransientFaultException class in the Cuemon namespace was changed to include TransientFaultEvidence\n* CHANGED - TransientOperation class in the Cuemon namespace was extended to support a FaultCallback delegate, calculate latency and include TransientFaultEvidence\n* CHANGED - TransientOperationOptions class in the Cuemon namespace was extended to support MaximumAllowedLatency\n* CHANGED - TimeMeasure class in the Cuemon.Diagnostics namespace was changed in terms of TimeMeasureCompletedCallback delegate being renamed to CompletedCallback\n\n4.1.2016.3510\n* CHANGED - XmlFormatter class in the Cuemon.Serialization.Xml.Formatters namespace was refactored to match recent changes in the Cuemon.Serialization.Formatters.Formatter class\n* CHANGED - DynamicXmlConverter class in the Cuemon.Serialization.Xml namespace was changed to support non-generic factory methods\n* CHANGED - XmlConvert class in the Cuemon.Serialization.Xml namespace was changed to support non-generic factory methods\n* CHANGED - Formatter class in the Cuemon.Serialization.Formatters namespace was refactored for simplicity and support for non-generic deserialization\n\n4.1.2016.3500\n* ADDED - ExceptionDescriptor class in the Cuemon namespace that provides information about an Exception, in a developer friendly way, optimized for open- and otherwise public application programming interfaces (API)\n* ADDED - ObjectHierarchyOptions class in the Cuemon.Reflection namespace that specifies options that is related to ReflectionUtility.GetObjectHierarchy operations\n* REMOVED - Callback suffix from various delegates throughout the assembly package\n* ADDED - New extensions for TOptions: ConfigureOptions\n* CHANGED - Refactored the GetObjectHierarchy method to support the options pattern on the ReflectionUtility class in the Cuemon.Reflection namespace\n* ADDED - The Cuemon.Serialization assembly is a new member of the Cuemon .NET Core family and provides generic base classes for serialization\n* ADDED - Formatter class in the Cuemon.Serialization.Formatters namespace that serves as an abstract class that supports serialization and deserialization of an object, in a given format\n* ADDED - FormatterOptions class in the Cuemon.Serialization.Formatters namespace that specifies options that is related to Formatter{TFormat} operations\n* ADDED - New extensions for IHierarchy<DataPair>: UseTimeSpanFormatter, UseUriFormatter, UseDateTimeFormatter, UseConvertibleFormatter, UseGuidFormatter, UseStringFormatter, UseDecimalFormatter, UseCollection, UseDictionary\n* ADDED - The Cuemon.Serialization.Xml assembly is a new member of the Cuemon .NET Core family and provides XML serialization\n* ADDED - XmlFormatter class in the Cuemon.Serialization.Xml.Formatters namespace that serializes and deserializes an object, in XML format\n* ADDED - XmlFormatterOptions class in the Cuemon.Serialization.Xml.Formatters namespace that specifies options that is related to XmlFormatter operations\n* ADDED - DynamicXmlConverter class in the Cuemon.Serialization.Xml namespace that provides a factory based way to create and wrap an XmlConverter implementation\n* ADDED - DynamicXmlSerializable class in the Cuemon.Serialization.Xml namespace that provides a factory based way to create and wrap an IXmlSerializable implementation\n* ADDED - XmlConvert class in the Cuemon.Serialization.Xml namespace that provides methods to make XML serialization operations easier to work with\n* ADDED - XmlConverter class in the Cuemon.Serialization.Xml namespace that provides a way to convert objects to and from XML\n* ADDED - XmlConverterOptions class in the Cuemon.Serialization.Xml namespace that specifies options that is related to XmlConverter operations\n* ADDED - New extensions for XmlReader: ToHierarchy, Chunk\n* REMOVED - Redundant extension methods that collisioned with the .NET Standard Library\n* CHANGED - Hierarchy{T} class in the Cuemon namespace was made more simple and flexible\n* ADDED - New extensions for IHierarchy{T}: FindFirstInstance, FindSingleInstance, FindInstance, FindFirst, FindSingle, Find, Replace, ReplaceAll\n* CHANGED - IHierarchy{T} interface in the Cuemon namespace received two new members; Replace and GetPath\n* CHANGED - DataPair class in the Cuemon namespace was made more simple and flexible\n* ADDED - TimeRange class in the Cuemon namespace that represents a period of time between two DateTime values\n* CHANGED - IsComplex method on the TypeUtility class in the Cuemon namespace to be more precise\n* ADDED - New extensions for IDictionary{TKey,TValue}: AddIfNotContainsKey, AddOrUpdate\n* ADDED - New extensions for DateTime: ToString\n* ADDED - New extensions for Stream: RemoveXmlNamespaceDeclarations\n* ADDED - New extensions for String: EscapeXml, UnescapeXml, SanitizeElementName, SanitizeElementText\n* REMOVED - Uri support from the ObjectConverter.FromString method in the Cuemon namespace\n* REMOVED - XmlSerializationUtility class from the Cuemon.Xml.Serialization namespace\n* ADDED - XmlCopyOptions class in the Cuemon.Xml namespace that specifies options that is related to XmlWriterUtility operations\n* CHANGED - XmlReadertility class in the Cuemon.Xml namespace to support the options pattern\n* CHANGED - XmlWriterUtility class in the Cuemon.Xml namespace to support the options pattern\n* FIXED - A bug in the JsonWebToken class\n\n4.0.2016.3270\n* PRELUDE - Because of the many paths given by Microsoft in the road of .NET Core, this is a major and breaking release where all assemblies have been refactored and put together again in a nifty package. So, just like Cuemon .NET Framework, this is the Core version. No more single assemblies for download. It seemed smart, but reality has proven otherwise. So all single assemblies has been deemed deprecated.\n* MERGED - All method extensions from Cuemon.*.Extensions assemblies has been merged to there logical owner\n* MERGED - JsonWebToken class in the Cuemon.Security.Web namespace was moved from the now obsolete Cuemon.Web.Security\n* MERGED - JsonWebTokenHashAlgorithm class in the Cuemon.Security.Web namespace was moved from the now obsolete Cuemon.Web.Security\n* MERGED - JsonWebTokenHashAlgorithmConverter class in the Cuemon.Security.Web namespace was moved from the now obsolete Cuemon.Web.Security\n* MERGED - JsonWebTokenHeader class in the Cuemon.Security.Web namespace was moved from the now obsolete Cuemon.Web.Security\n* MERGED - JsonWebTokenPayload class in the Cuemon.Security.Web namespace was moved from the now obsolete Cuemon.Web.Security\n* REMOVED - Act delegates in the Cuemon namespace (leftover from Cuemon .NET Framework merge); all lamda expressions has been replaced with Action delegates\n* REMOVED - Doer delegates in the Cuemon namespace (leftover from Cuemon .NET Framework merge); all lamda expressions has been replaced with Func delegates\n* CHANGED - ActFactory class in the Cuemon namespace was renamed to ActionFactory\n* CHANGED - DoerFactory class in the Cuemon namespace was renamed to FuncFactory\n* CHANGED - TesterDoer delegates in the Cuemon namespace was renamed to TesterFunc delegates\n* CHANGED - TesterDoerFactory class in the Cuemon namespace was renamed to TesterFuncFactory\n* CHANGED - TesterDoerUtility class in the Cuemon namespace was renamed to TesterFuncUtility\n* CHANGED - MethodSignature class in the Cuemon.Reflection namespace was renamed to MethodDescriptor\n* CHANGED - StreamWriterUtility class in the Cuemon.IO namespace was refactored to support the options pattern\n* CHANGED - StreamWriterSettings class in the Cuemon.IO namespace was renamed to StreamWriterOptions and refactored to support the options pattern\n* CHANGED - TransientFaultUtility class in the Cuemon namespace was renamed to TransientOperation and refactored to support the options pattern\n* ADDED - TransientOperationOptions class in the Cuemon namespace that specifies options that is related to TransientOperation handling\n* ADDED - Profiler class in the Cuemon.Diagnostics namespace that represents a base class for profiler related operations\n* ADDED - ProfilerOptions class in the Cuemon.Diagnostics namespace that specifies options that is related to Profiler operations\n* ADDED - TimeMeasureOptions class in the Cuemon.Diagnostics namespace that specifies options that is related to TimeMeasureProfiler operations\n* ADDED - TimeMeasureProfiler class in the Cuemon.Diagnostics namespace that represents a profiler that is optimized for time measuring operations\n* ADDED - TimeMeasureProfiler<TResult> class in the Cuemon.Diagnostics namespace that represents a profiler that is optimized for time measuring operations that provides a return value\n* ADDED - Tweaker class in the Cuemon namespace that provides a way to change any instance of the same generic type\n* ADDED - EncodingOptions class in the Cuemon.Text namespace that specifies options that is related to Encoding operations\n* ADDED - One new method, IsAnonymousMethod, was added to the TypeUtility class in the Cuemon namepspace\n* ADDED - Two new method, SafeInvokeDisposable (overloaded) and ConfigureAction, was added to the DelegateUtility class in the Cuemon namepspace\n* ADDED - New extensions for DateTime: ToUtcKind, ToLocalKind, ToDefaultKind\n* ADDED - New extensions for T: Adjust\n* ADDED - New extensions for TimeSpan: GetTotalNanoseconds, GetNanoseconds, GetTotalMicroseconds, GetMicroseconds\n* ADDED - New extensions for IDataReader: ToRows, ToColumns\n\n4.0.2016.1880\n* ADDED - Two new methods, ToProtocolRelativeUri, was added to the StringConverter class in the Cuemon namepspace\n* ADDED - UriConverter static class in the Cuemon namepspace that is designed to make Uri related conversions easier to work with\n* ADDED - Two new methods, IsProtocolRelativeUri, was added to the UriUtility class in the Cuemon namepspace\n* FIXED - The default function delegate for ByteConverter.TryFromBase64String and StringUtility.IsBase64 now evaluates a Base64 string correctly\n\n4.0.2016.1380-rc2\n* ADDED - Support for .NET Platform Standard 1.4 (netstandard1.4)\n* CHANGED - Removed support for .NET Platform Standard 5.4 (dotnet5.4)\n* CHANGED - The CacheCollection.Memoize<TResult>(Doer<TResult>, ..) methods in the Cuemon.Runtime.Caching namespace was optimized in terms of retreiving the memoized value\n* CHANGED - The DTO-related classes in the Cuemon.Data namespace was optimized to use a more ligthweight implementation with far less resource usage\n\n4.0.2016.1360-beta\n* CHANGED - The StringConverter.FromException(Exception, ..) method in the Cuemon namespace now flatten and includes all inner exceptions\n* CHANGED - The XmlStreamConverter.FromException(Exception, ..) method in the Cuemon.Xml namespace now flatten and includes all inner exceptions\n* FIXED - The ByteConverter.TryFromBase64String(string, ..) method in the Cuemon namespace now evaluates false if the predicate evaluates false\n* FIXED - The TransientFaultUtility class in the Cuemon namespace does not include a dublet of the last exception thrown\n* FIXED - The DataManager class in the Cuemon.Data namespace now clears the command paramters if called multiple times due to retry logic",
  "requireLicenseAcceptance": false,
  "summary": "A free and flexible assembly family, built to extend and boost your codebelt - providing vast ways of possibilities for all breeds of coders, programmers, developers and the likes thereof.",
  "title": "Cuemon .NET Standard Package",
  "verbatimVersion": "5.0.2018.251",
  "version": "5.0.2018.251",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.collections.specialized",
          "@type": "PackageDependency",
          "id": "Cuemon.Collections.Specialized",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.core",
          "@type": "PackageDependency",
          "id": "Cuemon.Core",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.data",
          "@type": "PackageDependency",
          "id": "Cuemon.Data",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.data.xmlclient",
          "@type": "PackageDependency",
          "id": "Cuemon.Data.XmlClient",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.integrity",
          "@type": "PackageDependency",
          "id": "Cuemon.Integrity",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.io",
          "@type": "PackageDependency",
          "id": "Cuemon.IO",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.net",
          "@type": "PackageDependency",
          "id": "Cuemon.Net",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.reflection",
          "@type": "PackageDependency",
          "id": "Cuemon.Reflection",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.runtime.caching",
          "@type": "PackageDependency",
          "id": "Cuemon.Runtime.Caching",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.runtime",
          "@type": "PackageDependency",
          "id": "Cuemon.Runtime",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.security",
          "@type": "PackageDependency",
          "id": "Cuemon.Security",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.serialization",
          "@type": "PackageDependency",
          "id": "Cuemon.Serialization",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.serialization.xml",
          "@type": "PackageDependency",
          "id": "Cuemon.Serialization.Xml",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.threading",
          "@type": "PackageDependency",
          "id": "Cuemon.Threading",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.web",
          "@type": "PackageDependency",
          "id": "Cuemon.Web",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/cuemon.xml",
          "@type": "PackageDependency",
          "id": "Cuemon.Xml",
          "range": "[5.0.2018.251, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.collections.specialized",
          "@type": "PackageDependency",
          "id": "System.Collections.Specialized",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.componentmodel.typeconverter",
          "@type": "PackageDependency",
          "id": "System.ComponentModel.TypeConverter",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.linq.expressions",
          "@type": "PackageDependency",
          "id": "System.Linq.Expressions",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.diagnostics.fileversioninfo",
          "@type": "PackageDependency",
          "id": "System.Diagnostics.FileVersionInfo",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.reflection.typeextensions",
          "@type": "PackageDependency",
          "id": "System.Reflection.TypeExtensions",
          "range": "[4.5.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.data.common",
          "@type": "PackageDependency",
          "id": "System.Data.Common",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.data.sqlclient",
          "@type": "PackageDependency",
          "id": "System.Data.SqlClient",
          "range": "[4.5.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.reflection.emit",
          "@type": "PackageDependency",
          "id": "System.Reflection.Emit",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.security.cryptography.algorithms",
          "@type": "PackageDependency",
          "id": "System.Security.Cryptography.Algorithms",
          "range": "[4.3.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.xml.xmldocument",
          "@type": "PackageDependency",
          "id": "System.Xml.XmlDocument",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.xml.xmlserializer",
          "@type": "PackageDependency",
          "id": "System.Xml.XmlSerializer",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.xml.xpath",
          "@type": "PackageDependency",
          "id": "System.Xml.XPath",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#dependencygroup/.netstandard1.4/system.runtime.serialization.primitives",
          "@type": "PackageDependency",
          "id": "System.Runtime.Serialization.Primitives",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard1.4"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#Cuemon.Core.Package.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 8053,
      "fullName": "Cuemon.Core.Package.nuspec",
      "length": 35745,
      "name": "Cuemon.Core.Package.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#lib/netstandard1.4/_._",
      "@type": "PackageEntry",
      "compressedLength": 0,
      "fullName": "lib/netstandard1.4/_._",
      "length": 0,
      "name": "_._"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.19.07.21.45/cuemon.core.package.5.0.2018.251.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "extensions",
    "extension",
    "methods",
    "pagedcollection",
    "timemeasure",
    "lambda",
    "profiler",
    "encoding",
    "converters",
    "options",
    "pattern",
    "transient",
    "fault",
    "handling",
    "timeunit",
    "transientoperation",
    "timerange",
    "action",
    "func",
    "factory",
    "utilities",
    "namevaluecollection",
    "datatransfer",
    "inoperator",
    "datamanager",
    "sqldatamanager",
    "datawatcher",
    "watcher",
    "jsonwriter",
    "dependency",
    "xmldatareader",
    "compression",
    "stream",
    "cachevalidator",
    "checksumbuilder",
    "obfuscator",
    "securitytoken",
    "jsontoken",
    "jsonwebtoken",
    "aes",
    "crc32",
    "hash",
    "hmac",
    "hashresult",
    "netdependency",
    "netwatcher",
    "httpmanager",
    "cache",
    "cachingmanager",
    "watchers",
    "dependencies",
    "parallel",
    "for",
    "foreach",
    "while",
    "form",
    "querystring",
    "security",
    "tampering",
    "protected",
    "uri",
    "xmlobfuscator",
    "xmlwrapper",
    "xmlcopier",
    "xmlencoding",
    "xmlreader",
    "xmlwriter",
    "formatter",
    "formatters",
    "dynamic",
    "serializer",
    "deserializer",
    "serialization",
    "deserialization"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}