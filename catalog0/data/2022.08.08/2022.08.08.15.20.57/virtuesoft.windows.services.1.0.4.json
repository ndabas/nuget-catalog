{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "sunyonghuan@virtuesoft.cn",
  "catalog:commitId": "c2e8c635-b6bd-4927-87a3-d7843ffddb57",
  "catalog:commitTimeStamp": "2022-08-08T15:20:57.2597333Z",
  "created": "2020-08-25T11:59:04.513Z",
  "description": "布德软件windows服务集合框架",
  "iconFile": "logo.200.b.png",
  "id": "Virtuesoft.Windows.Services",
  "isPrerelease": false,
  "lastEdited": "2022-08-08T15:20:50.16Z",
  "listed": false,
  "packageHash": "DLTrSEWasDkq2raPzFwESp5NNGTSmERxRZKzM0MRldmUZaBT1mi8LcdQ4eS2aZUR+FIznVpqfOlnWmeKo3riVA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37019,
  "projectUrl": "https://www.virtuesoft.cn/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "布德软件windows服务集合框架\nclass Program\n    {\n        static void Main(string[] args)\n        {\n            foreach (var a in args)\n                Console.WriteLine(a);\n            //实例化宿主程序\n            new ServiceHost()\n                //配置当前服务\n                .Config(option=> {\n                    //名称\n                    option.Name = \"virtuesoft.windows.service.framework\";\n                    //简述\n                    option.Display = \"\";\n                    //详细\n                    option.Description = \"\";\n                    //加载配置\n                    option.UseConfig(c => c.Path = \"h.json\");\n                })\n                //注册服务\n                .Register<TestionService>(option=> {\n                    //配置参数\n                    option\n                    .Add(\"key1\", \"value1\")\n                    //加载配置\n                    .UseConfig(config =>\n                    {\n                        config.Path = \"http://res.b.cn/c.json\";\n                    });\n                })\n                //启动服务\n                .Start(args);\n        }\n    }\n新建服务\npublic class TestionService : IWindowsService\n    {\n        //名称\n        public string Name { get; } = \"virtuesoft.app.notify\";\n        //简介\n        public string Display { get; } = \"app消息通知服务\";\n\n        private string Folder { get; set; }\n        /// <summary>\n        /// 服务启动\n        /// </summary>\n        /// <param name=\"context\"></param>\n        /// <returns></returns>\n        public bool Start(ServiceContext context)\n        {\n            Folder = Path.Combine(context.StartPath,\"db\");\n            if (!Directory.Exists(Folder)) Directory.CreateDirectory(Folder);\n            Task.Run(async () => {\n                while (true) {\n                    await MakeBlock();\n                    context.Log(\"执行成功\");\n                    await Task.Delay(new Random(Guid.NewGuid().GetHashCode()).Next(1*60*1000,5 * 60 * 1000));\n                } \n            });\n            return true;\n        }\n        /// <summary>\n        /// 服务停止\n        /// </summary>\n        /// <param name=\"context\"></param>\n        /// <returns></returns>\n        public bool Stop(ServiceContext context)\n        {\n            context.Log(\"服务停止\");\n            return true;\n        }\n\n        private async Task MakeBlock() {\n            var path = Path.Combine(Folder, $\"{DateTime.Now:mmddHHmmssfff}\");\n            var radom = new Random(Guid.NewGuid().GetHashCode());\n            int[] moneys = new int[] { 10, 20, 50, 100 };\n            //值\n            var m = moneys.OrderBy(t => Guid.NewGuid()).First() ;\n            //时间\n            var tickes =DateTime.Now.Ticks;\n            //生成机器\n            var mchint= Guid.NewGuid().ToByteArray();\n            using (var sw = new FileStream(path, FileMode.OpenOrCreate, FileAccess.Write, FileShare.ReadWrite))\n            {\n                using (var bw = new BinaryWriter(sw, Encoding.UTF8))\n                {\n                    bw.Seek(0, SeekOrigin.End);\n                    bw.Write(m);\n                    bw.Write(tickes);\n                    bw.Write(mchint);\n                }\n            }\n        }\n    }",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.4",
  "version": "1.0.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#dependencygroup/.netcoreapp3.1/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[12.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#dependencygroup/.netcoreapp3.1/system.serviceprocess.servicecontroller",
          "@type": "PackageDependency",
          "id": "System.ServiceProcess.ServiceController",
          "range": "[4.7.0, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#Virtuesoft.Windows.Services.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1600,
      "fullName": "Virtuesoft.Windows.Services.nuspec",
      "length": 4308,
      "name": "Virtuesoft.Windows.Services.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#lib/netcoreapp3.1/Virtuesoft.Windows.Services.dll",
      "@type": "PackageEntry",
      "compressedLength": 13812,
      "fullName": "lib/netcoreapp3.1/Virtuesoft.Windows.Services.dll",
      "length": 45056,
      "name": "Virtuesoft.Windows.Services.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#lib/netcoreapp3.1/Virtuesoft.Windows.Services.xml",
      "@type": "PackageEntry",
      "compressedLength": 1787,
      "fullName": "lib/netcoreapp3.1/Virtuesoft.Windows.Services.xml",
      "length": 19646,
      "name": "Virtuesoft.Windows.Services.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#logo.200.b.png",
      "@type": "PackageEntry",
      "compressedLength": 8218,
      "fullName": "logo.200.b.png",
      "length": 23801,
      "name": "logo.200.b.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.15.20.57/virtuesoft.windows.services.1.0.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}