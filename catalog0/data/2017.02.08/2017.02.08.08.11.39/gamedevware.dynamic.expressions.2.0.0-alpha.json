{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.02.08.08.11.39/gamedevware.dynamic.expressions.2.0.0-alpha.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "GameDevWare",
  "catalog:commitId": "904d7c88-e534-4b43-a2e8-519c4e81f27a",
  "catalog:commitTimeStamp": "2017-02-08T08:11:39.5029007Z",
  "copyright": "Copyright Â© 2016 GameDevWare, Denis Zykov",
  "created": "2017-02-08T08:00:51.72Z",
  "description": "C# expression parser and evaluator for Unity3D.",
  "id": "GameDevWare.Dynamic.Expressions",
  "isPrerelease": true,
  "lastEdited": "2017-02-08T08:11:25.053Z",
  "listed": true,
  "packageHash": "tJ7w6uLe3jhwGTy9qEvEEDFzHHU0HoiKFBe/N3FGLNGJvAmhEsANYfUnUDUkNZ9T5zpkiyRixtkp3IGtT26F1Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 90071,
  "projectUrl": "https://github.com/deniszykov/csharp-eval-unity3d",
  "published": "2017-02-08T08:00:51.72Z",
  "releaseNotes": "- fixed error with wrongly resolved types (only by name) in KnownTypeResolver\n- added more descriptive message to member binding error\n- fixed bug with ACCESS_VIOLATION on iOS (Unity 5.x.x IL2CPP)\n- added autodoc comments for public members\n- hidden ReadOnlyDictionary from public access\n- removed WEBGL check for later version of Unity, because unsigned types bug was fixed\n- fixed few Unity 3.4 related errors in code\n- fixed 'new' expression parsed with error on chained calls new a().b().c()\n- added generic types and generic methods\n- added nullable types via '?' suffix\n- added lambda expression syntax '() => x' and 'new Func(a => x)'\n- added support for expression parameter re-mapping with lambda syntax at beggining of expression\n- added support for Func<> lambda on AOT environments\n\nBreaking changes:\n- ParserNode renamed to ParseTreeNode\n- ExpressionTree renamed to SyntaxTreeNode\n- ExpressionBuilder renamed to Binder\n- ITypeResolutionService renamed to ITypeResolver\n- ITypeResolver.GetType removed\n- ITypeResolver now could be configured with TypeDiscoveryOptions",
  "requireLicenseAcceptance": false,
  "title": "C# Expression Parser for Unity3D",
  "verbatimVersion": "2.0.0.0-alpha",
  "version": "2.0.0-alpha",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.02.08.08.11.39/gamedevware.dynamic.expressions.2.0.0-alpha.json#GameDevWare.Dynamic.Expressions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 925,
      "fullName": "GameDevWare.Dynamic.Expressions.nuspec",
      "length": 1846,
      "name": "GameDevWare.Dynamic.Expressions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.02.08.08.11.39/gamedevware.dynamic.expressions.2.0.0-alpha.json#lib/net35/GameDevWare.Dynamic.Expressions.dll",
      "@type": "PackageEntry",
      "compressedLength": 79714,
      "fullName": "lib/net35/GameDevWare.Dynamic.Expressions.dll",
      "length": 219648,
      "name": "GameDevWare.Dynamic.Expressions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.02.08.08.11.39/gamedevware.dynamic.expressions.2.0.0-alpha.json#lib/net35/GameDevWare.Dynamic.Expressions.XML",
      "@type": "PackageEntry",
      "compressedLength": 6509,
      "fullName": "lib/net35/GameDevWare.Dynamic.Expressions.XML",
      "length": 80032,
      "name": "GameDevWare.Dynamic.Expressions.XML"
    }
  ],
  "tags": [
    "eval",
    "parser",
    "compiler",
    "expressions",
    "unity3d"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}