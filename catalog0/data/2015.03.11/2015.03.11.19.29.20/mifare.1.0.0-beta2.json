{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.03.11.19.29.20/mifare.1.0.0-beta2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Oren Novotny",
  "catalog:commitId": "110dfe66-8171-4ae1-a836-c323f8aa9c84",
  "catalog:commitTimeStamp": "2015-03-11T19:29:20.2162502Z",
  "created": "2015-03-11T19:28:27.72Z",
  "description": "MiFare Classic card support with WP 8.1, Windows Store and Desktop apps",
  "id": "MiFare",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.githubusercontent.com/onovotny/MiFare/master/LICENSE.txt",
  "packageHash": "7/guzINw1bGfKhMJ5wOz1njoVHrCFwkByQtLKK4wjQqnUmi/kgfzBNNcXiV3yOkihVhKMFXchPBWfqzFaUVTLA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 205759,
  "projectUrl": "https://github.com/onovotny/MiFare",
  "published": "2015-03-11T19:28:27.72Z",
  "requireLicenseAcceptance": false,
  "summary": "Read/Write MiFare Classic cards with Windows Phone 8.1. Requires device with NXP547 chip. Lumia 830, 730 and newer.\n      Windows Store support requires enterprise apps as library will not work in public store.",
  "title": "MiFare Classic PC/SC Library",
  "version": "1.0.0-beta2",
  "tags": [
    "mifare",
    "classic",
    "nfc",
    "pcsc",
    "rfid"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}