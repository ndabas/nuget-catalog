{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Artak Hakobyan",
  "catalog:commitId": "7183b7f9-f3a6-4f3a-b749-42ca952cad51",
  "catalog:commitTimeStamp": "2022-01-12T03:36:53.239026Z",
  "copyright": "Copyright 2022 (c) OROptimizer. All rights reserved.",
  "created": "2022-01-12T03:34:25.62Z",
  "description": "ExtendibleTreeStructure is a .NET package that allows easy configuration of tree structures that need to be copied to some other trees with new parents and children.\nThe package allows providing as an input collections (called data stores in subsequent text) of simple objects (called data store items in subsequent text) that have minimum state (id, parent id, priority, id and data store id of copied data store item, etc).\nThe classes in this package construct proper tree structures for each data store.\n\nGood example of application of ExtendibleTreeStructure package is when we want to configure menu structure of a project (say in xml file).\nLets say some part of the menu structure is common for all file types (e.g., File Menu with Exit, Save, SaveAs menu items, Edit menu with search, etc).\nAlso, lets suppose that the project supports C# and image file types, that support some additional functionality, and require new menu items on top of common (shared) menu structure.\nIn this scenario we can provide a menu data store with shared data store items.\nThen we can define two more data stores for these two file types, with additional data store items (menu items) specific to these file types.\nIn these new data stores we can copy the data store items in shared data store while spcifying new parent id (or no parent at all). Say we can copy File menu bar to data store for C# file type, and add new data store item for 'Compile' with parent id equal to id of File menu bar data store item.\nIn other words, we specify copy data store items (data store items that specify the referenced data store item data id), with new parent id (or no parent id at all). Also, we can add new data store items with parent Ids equal to ids of children of copied data store items (i.e., add new children to children of copied data store items).\n\nThe classes in this package will create tree structures in all the specified data stores with proper parent/children relationship, and will make sure the referenced (copied) data store items are copied under new parents (or are copied as top level data store items).\nAlso, the package logs any errors, and prevents circular references that might otherwise result via parent/reference relationships.\n\nThe git repository https://github.com/artakhak/ExtendibleTreeStructure has more detailed documentation, along with the source code and tests project ExtendibleTreeStructure.Tests with good examples.",
  "id": "ExtendibleTreeStructure",
  "isPrerelease": false,
  "lastEdited": "2022-01-12T03:36:27.39Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "1oIdz7w6uWwAXYqDS/NeduHwTnWNxqAfo5snEbV0+TExic52trTlbJZ4T9codD4i0uslNUVY9z9GPsC2nOOi4g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36318,
  "projectUrl": "https://github.com/artakhak/ExtendibleTreeStructure",
  "published": "2022-01-12T03:34:25.62Z",
  "readmeFile": "README.md",
  "releaseNotes": "Couple of typo fixes in description and readme file.",
  "repository": "",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net5.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json#ExtendibleTreeStructure.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1357,
      "fullName": "ExtendibleTreeStructure.nuspec",
      "length": 3368,
      "name": "ExtendibleTreeStructure.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json#lib/net5.0/ExtendibleTreeStructure.dll",
      "@type": "PackageEntry",
      "compressedLength": 16893,
      "fullName": "lib/net5.0/ExtendibleTreeStructure.dll",
      "length": 43008,
      "name": "ExtendibleTreeStructure.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json#lib/net5.0/ExtendibleTreeStructure.xml",
      "@type": "PackageEntry",
      "compressedLength": 4676,
      "fullName": "lib/net5.0/ExtendibleTreeStructure.xml",
      "length": 38333,
      "name": "ExtendibleTreeStructure.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 979,
      "fullName": "README.md",
      "length": 2472,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.12.03.36.53/extendibletreestructure.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "extendible",
    "tree",
    "structure",
    "extendable",
    "extensible"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}