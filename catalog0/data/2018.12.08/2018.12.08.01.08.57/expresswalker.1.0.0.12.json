{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.01.08.57/expresswalker.1.0.0.12.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ivan Kopcanski",
  "catalog:commitId": "bd0a7c42-0d56-4223-b7cf-2ce4ca702fa9",
  "catalog:commitTimeStamp": "2018-12-08T01:08:57.1851146Z",
  "copyright": "Ivan Kopcanski 2016",
  "created": "2016-08-04T12:52:53.643Z",
  "description": "ExpressWalker provides a generic way to examine and change any object graph in fashion similar to \"Visitor Pattern\". You can build generic hierarchy composition (visitor) capable to \"visit\" and change any object's property, basing on configuration. Uses reflection only while building a visitor and relies purely on expression trees while visiting objects. That's why IT IS WAY FASTER than custom solutions usually built with reflection.\n\nIt is optionally protected from circular references so you can avoid StackOverflowException easily. Provides fluent API while building a visitor which increases code readability in terms of recognizing the hierarchy being built right away from the code. Some of functionalities available are visiting properties by matching owner type and name (or only type), specifying depth of visit, custom expression for changing property value, clonging etc.\n\t\n//example of usage:\n\n  var visitor = TypeWalker<Parent>.Create()\n                  .ForProperty<Parent, string>(p => p.TestString1, null, (old, met) => old + met)\n                  .ForProperty<Child, DateTime>(p => p.TestDate1, null, (old, met) => old.AddYears(10))\n                  .ForProperty<CommonType>(null, (old, met) => new CommonType { CommonString = \"...\" })\n                  .Build();\n\n  var parentClone = new Parent();\n\n  visitor.Visit(parentObject, parentClone, 10, new InstanceGuard()); \n\nMany thanks to Francisco José Rey Gozalo for contributing with ideas and solutions.\nRead more on https://github.com/kopalite/ExpressWalker",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.01.08.57/expresswalker.1.0.0.12.json#frameworkassemblygroup",
    "assembly": [
      "System",
      "System.Core",
      "Microsoft.CSharp"
    ]
  },
  "id": "ExpressWalker",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-08T01:08:30.707Z",
  "licenseUrl": "https://github.com/kopalite/ExpressWalker/blob/master/LICENSE",
  "listed": true,
  "packageHash": "wbOH5TRGRlUc5nk4GRsL0J/E+b77H4h/7OVOmVpR6dWUvIjGqXj6bt8PFSjioyEsjTSoiVS5oMmK5xJMEPXaaw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22961,
  "projectUrl": "https://github.com/kopalite/ExpressWalker",
  "published": "2016-08-04T12:52:53.643Z",
  "releaseNotes": "Initial stable version",
  "requireLicenseAcceptance": true,
  "summary": "ExpressWalker provides a generic way to examine and change any object graph in fashion similar to \"Visitor Pattern\". You can build generic hierarchy composition (visitor) capable to \"visit\" and change any property, basing on configuration. Uses refleciton only while building a visitor and relies purely on expression trees while visiting objects (Many thanks to Francisco José Rey Gozalo for contributing with ideas and solutions).",
  "title": "ExpressWalker",
  "verbatimVersion": "1.0.0.12",
  "version": "1.0.0.12",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.01.08.57/expresswalker.1.0.0.12.json#ExpressWalker.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1208,
      "fullName": "ExpressWalker.nuspec",
      "length": 3070,
      "name": "ExpressWalker.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.01.08.57/expresswalker.1.0.0.12.json#lib/ExpressWalker.dll",
      "@type": "PackageEntry",
      "compressedLength": 8102,
      "fullName": "lib/ExpressWalker.dll",
      "length": 18432,
      "name": "ExpressWalker.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.01.08.57/expresswalker.1.0.0.12.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ExpressWalker",
    "Expressions",
    "Visitor"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}