{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.16.14.14.50/recache.4.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jacques Bosch",
  "catalog:commitId": "46c12224-9e09-428f-aec3-9c8cf88a019f",
  "catalog:commitTimeStamp": "2017-01-16T14:14:50.7394754Z",
  "copyright": "Copyright 2015",
  "created": "2017-01-16T14:14:40.893Z",
  "description": "A high performance, in-memory, concurrency safe, transparent generic key / value cache - basically, it makes some stuff a lot faster",
  "id": "ReCache",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/jfbosch/recache/blob/master/LICENSE",
  "listed": true,
  "packageHash": "c9BEsfqXic8LD5jM4VwY1tIC4oiz/KEJSdQZPuoSEBMw5BgBaspjvUhOyB9ZvAhfrRm283qv8UMoOV434A59Uw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23469,
  "projectUrl": "https://github.com/jfbosch/recache",
  "published": "2017-01-16T14:14:40.893Z",
  "releaseNotes": "4.0.1 fixes the nuget package. 3.X and 4.0.0 did not properly include some referenced assemblies.\n\n4.0.0 changes listed again below for easy reference.\nIntroduced item expiry randomization .\nThe percentage of the expiry timespan to randomize, using the endpoint of the timespan as the midpoint of the randomization span. For example, if the CacheItemExpiry is 300 seconds, and the CacheItemExpiryPercentageRandomization is set to 10 (10%, which would be 30 seconds), then the item will be guaranteed to expire anywhere from second number 285 to second number 315. That is, the random expiry window is between 300 -5% and 300 +5%.  So it distributes the 10% to either side of the specified expiry time (15 seconds to either side).\nThis allows the cache to distribute the cost of the reloading of expired items, in the case where many keys were loaded in close succession. The values 0 through 100 are supported. The default is 10.\n\nIf there is a problem with the properties on the CacheOptions, a CacheOptionsException will be thrown now instead of a plain ArgumentException. CacheOptionsException still inherits from ArgumentException.",
  "requireLicenseAcceptance": false,
  "title": "ReCache",
  "verbatimVersion": "4.0.1",
  "version": "4.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.16.14.14.50/recache.4.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.16.14.14.50/recache.4.0.1.json#ReCache.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 984,
      "fullName": "ReCache.nuspec",
      "length": 1985,
      "name": "ReCache.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.16.14.14.50/recache.4.0.1.json#lib/net46/ReCache.dll",
      "@type": "PackageEntry",
      "compressedLength": 18790,
      "fullName": "lib/net46/ReCache.dll",
      "length": 45568,
      "name": "ReCache.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.01.16.14.14.50/recache.4.0.1.json#lib/net46/ReCache.KeyValueStore.dll",
      "@type": "PackageEntry",
      "compressedLength": 1918,
      "fullName": "lib/net46/ReCache.KeyValueStore.dll",
      "length": 5120,
      "name": "ReCache.KeyValueStore.dll"
    }
  ],
  "tags": [
    "Cache",
    ".net",
    "in-memory",
    "performance"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}