{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "HellBrick",
  "catalog:commitId": "69b375b7-1422-46c5-b9ef-83771fa5d70b",
  "catalog:commitTimeStamp": "2019-02-18T00:10:23.3966867Z",
  "created": "2019-02-18T00:05:05.283Z",
  "description": "Diagnostics",
  "id": "HellBrick.Diagnostics",
  "isPrerelease": false,
  "lastEdited": "2019-02-18T00:10:17.427Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "zz7ZgwmY8OVowxMFGHM9Eo5yk/DAJP0Yh7eXblcfMFzxWCCIfO+WnSOExctJjc17aNixKlnZyDk93iwuZ23a5A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52482,
  "projectUrl": "https://github.com/HellBrick/HellBrick.Diagnostics",
  "published": "2019-02-18T00:05:05.283Z",
  "releaseNotes": "v3.2.0:\n      - Changed GetHashCode() and Equals() generators to delegate their logic to tuples of struct fields\n      - Changed ConfigureAwait() analyzer to underline only await keyword (instead of whole await expression) when reporting a warning\n\n      v3.1.1:\n      - Fixed Equals() generator to support generic structs\n      \n      v3.1.0:\n      - Removed the unused references analyzer (it has never worked properly anyway)\n      - Made generated GetHashCode() and Equals() less verbose\n      - Fixed the unused parameter code fix to add the type arguments if they can no longer be inferred after removing the redundant argument\n      - Updated GetHashCode() generator to respect var/int code style preference\n      - Readonly modifier is now enforced on a non-mutated value type field if the type of the field is a readonly struct\n\n      v3.0.2:\n      - Fixed a false positive reported by the unused parameter analyzer for an interface method declaration that has a parameter with a default value\n\n      v3.0.1:\n      - Fixed unused parameter analyzer to examine base calls and expression bodies properly\n      - Fixed unused parameter analyzer not to suggest removing `this` parameter from extension methods\n      - Fixed unused member analyzer to recognize `nameof( Method )` references\n\n      v3.0.0:\n      - Added an analyzer that forces immutable structs to have readonly modifier\n      - Struct equatability analyzer has been changed to ignore structs that don't have a readonly modifier\n      - Fields of non-readonly structs are no longer enforced to be readonly\n      - Struct equatability diagnostics have new shared ID that allows suppressing them all with a single #pragma\n      - Extended ConfigureAwait() analyzer to support arbitrary awaitable types\n\n      v2.0.0:\n      - Migrated to Roslyn 2.0\n      - Updated analyzers and code fixes to respect C# 7.1\n\n      v1.7.1:\n      - fixed an exception caused by the Roslyn type resolve bug\n\n      v1.7.0:\n      - an analyzer that detects struct null comparison\n\n      v1.6.0:\n      - an analyzer that detects unused method parameters\n\n      v1.5.1:\n      - equality and mutability warnings are no longer reported for the struct enumerators\n      - internal members are no longer considered unused if assembly has [InternalsVisibleTo] attribute\n      - private members referenced from other partial class definitions are no longer considered unused\n      - all analyzers use default heuristics to skip generated files\n\n      v1.5.0:\n      - an analyzer that detects unused class members (private and internal only)\n\n      v1.4.5:\n      - disabled formatting analyzer until it can be re-implemented properly\n\n      v1.4.4:\n      - suppressed another format of auto-generated comments\n\n      v1.4.3:\n      - changed diagnsotic IDs to provide compatibility with VS 2015 update 1\n\n      v1.4.2:\n      - an attempt to fix the FormattingAnalyzer warning issued on VS loading it from a nuget package\n\n      v1.4.1:\n      - merged in the analyzer that enforces ConfigureAwait()\n      - fixed a bunch of bugs\n\n      v1.4.0:\n      - an analyzer that enforces explicit access modifiers\n      - an analyzer that enforces immutability and equatability on structs\n      - all analyzers ignore auto-generated code\n\n      v1.3.0:\n      - an analyzer that enforces the proper code formatting\n      - a refactoring to convert one-line properties to expression-bodied properties\n\n      v1.2.1:\n      - fixed Nuget package installation issues\n      - readonly modifier can now be enforced on fields of primitive types\n      - var can be converted to explicit type inside the using declaration block\n      - var can no longer be converted if it's generic type with anonymous arguments\n      - conversion to expression-bodied member is no longer suggested for the methods that can't be converted\n      - the reference is no longer considered unused if a method that returns a type declared in it is invoked\n\n      v1.2.0:\n      - a refactoring to convert String.Format() call to an interpolated string\n      - a refactoring to convert var to explicit type name and back\n\n      v1.1.0:\n      - unused project references are reported to the error/information list\n\n      v1.0.2:\n      - upgraded to VS 2015 RTM\n\n      v1.0.1:\n      - readonly modifier is no longer enforced on value type fields (to avoid SpinLock-like issues)\n\n      v1.0.0:\n      - enforce readonly modifier on fields\n      - convert one-line methods to expression-bodied methods",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "3.2.0",
  "version": "3.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json#dependencygroup/.netstandard1.3",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard1.3"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json#HellBrick.Diagnostics.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1962,
      "fullName": "HellBrick.Diagnostics.nuspec",
      "length": 5378,
      "name": "HellBrick.Diagnostics.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json#tools/install.ps1",
      "@type": "PackageEntry",
      "compressedLength": 400,
      "fullName": "tools/install.ps1",
      "length": 1341,
      "name": "install.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json#tools/uninstall.ps1",
      "@type": "PackageEntry",
      "compressedLength": 426,
      "fullName": "tools/uninstall.ps1",
      "length": 1477,
      "name": "uninstall.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json#analyzers/dotnet/cs/HellBrick.Diagnostics.dll",
      "@type": "PackageEntry",
      "compressedLength": 38247,
      "fullName": "analyzers/dotnet/cs/HellBrick.Diagnostics.dll",
      "length": 89600,
      "name": "HellBrick.Diagnostics.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.02.18.00.10.23/hellbrick.diagnostics.3.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}