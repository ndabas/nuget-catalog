{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.14.56.26/dossier-dot-net.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brad Westness",
  "catalog:commitId": "a92587ff-2cde-47ae-938c-e1d4053408cc",
  "catalog:commitTimeStamp": "2018-12-11T14:56:26.5919372Z",
  "copyright": "2016 Brad Westness",
  "created": "2016-06-27T18:51:04.5Z",
  "description": "Dossier.NET enables an Entity Framework-like experience for transactional operations, for filesystem operations rather than manipulating data in a database. \n\nCreate, copy, move, delete and write to files and directories and safely roll back any changes if the entire transaction does not complete successfully. \n\nUses an in-memory backup for temporary rollback data by default, or optionally use a temporary folder to write temp data to disk until a transaction is committed or rolled back.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.14.56.26/dossier-dot-net.1.1.0.json#frameworkassemblygroup/.netframework4.0",
    "assembly": "System.IO.Compression",
    "targetFramework": ".NETFramework4.0"
  },
  "id": "dossier-dot-net",
  "isPrerelease": false,
  "lastEdited": "2018-12-11T14:56:18.337Z",
  "licenseUrl": "https://github.com/bradwestness/dossier-dot-net/blob/master/LICENSE",
  "listed": true,
  "packageHash": "AsnM44XWa2PGS9d53aTCPvM5CcAyPN5qZi2G0xgBQtg9wJax0NZBCDeJWeK1lAjGdvx1emTaLrycldKv3in70Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35386,
  "projectUrl": "https://github.com/bradwestness/dossier-dot-net",
  "published": "2016-06-27T18:51:04.5Z",
  "releaseNotes": "Added a transaction collection to the IFileSystemContext interface. If you are using TempDirectory rollbacks and existing transaction data exists in the temp directory when the IFileSystemContext is created, the existing transactions will be loaded into the collection. You can then use the .UseTransaction() method to resume an existing transaction.\n\nThis can be used, for example, to clean up partially completed transactions after a power loss.",
  "requireLicenseAcceptance": false,
  "summary": "Transactional file management library for the .NET Framework.",
  "title": "Dossier.NET",
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.14.56.26/dossier-dot-net.1.1.0.json#dossier-dot-net.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 880,
      "fullName": "dossier-dot-net.nuspec",
      "length": 1888,
      "name": "dossier-dot-net.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.14.56.26/dossier-dot-net.1.1.0.json#lib/Dossier.dll",
      "@type": "PackageEntry",
      "compressedLength": 7616,
      "fullName": "lib/Dossier.dll",
      "length": 18944,
      "name": "Dossier.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.14.56.26/dossier-dot-net.1.1.0.json#lib/Dossier.pdb",
      "@type": "PackageEntry",
      "compressedLength": 14321,
      "fullName": "lib/Dossier.pdb",
      "length": 69120,
      "name": "Dossier.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.14.56.26/dossier-dot-net.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}