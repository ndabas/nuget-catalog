{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Antonio Esposito",
  "catalog:commitId": "15ccff5c-a0a5-40be-87a9-29201fe46a88",
  "catalog:commitTimeStamp": "2019-01-30T10:42:31.4629024Z",
  "copyright": "free",
  "created": "2019-01-30T10:38:16.75Z",
  "description": "[.NET 4.6.1+]\n\n- [IObservable].Serialize: wrap all subscriptions into a single ISubject against the sourcing observable\n- [IObservable].AsAsync: execute all functions on TPL\n- [IObservable].AsAsyncAsync: execute all functions on TPL without waiting into the host observble\n- [IObservable].AsParallel: execute multiple subscriptions on PLlinq\n- [IObservable].Fork: add another subscription to the observable creating a new child observable stream\n- [IObservable].Where(filter, elseObservable): apply the where in the usual way, and generate an Else observable to continue work in the other case\n- [IObservable].ToJson: serialize in Json all values\n- [IObservable].ToCSV: serialize in CSV columns all values (configurable delimiter)\n- [IObservable].Sleep: add a Thread.Sleep into the subscription tree\n- [IObservable].OnLastOrDefault: do something when observable completes\n- [IObservable].WriteLine: subscribe to values writing onto the Console.WriteLine\n\n- AsyncAsyncObservableProxy: execute observable methods on TPL against all subscribers without waiting into the hosting observble (with configurable concurrency cap)\n\n- AsyncObservableProxy: execute observble methods on TPL against all subscribers  (with configurable concurrency cap)\n\n- ParallelObservableProxy: execute observable methods in parallel ways against multiple subscribers  (with configurable concurrency cap)\n\n- SerializerProxy: an ISubject for wrapping subscriptions\n\n- SemaphoreScheduler: execute child tasks on the Task pool with a concurrency cap\n\n- ObservableStreamReader: route binary data from a Stream to subscribers",
  "iconUrl": "http://www.tnxconsulting.com/wp-content/uploads/2016/11/tnxsquaresmall.png",
  "id": "TNX.Reactive",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "2019-01-30T10:42:29.5Z",
  "listed": true,
  "packageHash": "6jSOFFfK2LI3KgqI+dHaV2LBfUmEAOnRf92mIktr+DVh11gyyc6NDUN4VZZVsrHxDwUQWTK29jwecL+wDQNBNQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24330,
  "projectUrl": "http://www.tnxconsulting.com/",
  "published": "2019-01-30T10:38:16.75Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.1.0-beta",
  "version": "2.1.0-beta",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#dependencygroup/system.reactive",
          "@type": "PackageDependency",
          "id": "System.Reactive",
          "range": "[4.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#TNX.Reactive.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1067,
      "fullName": "TNX.Reactive.nuspec",
      "length": 2542,
      "name": "TNX.Reactive.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#lib/TNX.Reactive.dll",
      "@type": "PackageEntry",
      "compressedLength": 10571,
      "fullName": "lib/TNX.Reactive.dll",
      "length": 23552,
      "name": "TNX.Reactive.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#lib/TNX.Reactive.xml",
      "@type": "PackageEntry",
      "compressedLength": 811,
      "fullName": "lib/TNX.Reactive.xml",
      "length": 3302,
      "name": "TNX.Reactive.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.30.10.42.31/tnx.reactive.2.1.0-beta.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "reactive",
    "programming",
    "sequence",
    "stream",
    "tcp",
    "listener",
    "network",
    "where",
    "else",
    "TPL",
    "Task",
    "Parallel",
    "async",
    "await",
    "threading"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}