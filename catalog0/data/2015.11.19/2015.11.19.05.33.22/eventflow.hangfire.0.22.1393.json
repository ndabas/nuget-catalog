{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.19.05.33.22/eventflow.hangfire.0.22.1393.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "af498cef-e308-4c49-8445-8fbe43a9a19e",
  "catalog:commitTimeStamp": "2015-11-19T05:33:22.8713429Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-11-19T05:33:11.017Z",
  "description": "Hangfire job scheduling support for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.Hangfire",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": true,
  "packageHash": "beQx66eUocjKKJsNKwo5eZJ+6TKvBNM8/Q8N2GzROEeLp01yvVBcG5vYuJ7Ycr/wdyeEHPc3ImeKHDghEu0Cvg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 7648,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-11-19T05:33:11.017Z",
  "releaseNotes": "New: To customize how a specific read model is initially created, implement\na specific `IReadModelFactory<>` that can bootstrap that read model\nNew: How EventFlow handles MSSQL read models has been refactored to allow\nsignificantly more freedom to developers. MSSQL read models are no longer\nrequired to implement `IMssqlReadModel`, only the empty `IReadModel`\ninterface. Effectively, this means that no specific columns are required,\nmeaning that the following columns are no longer enforced on MSSQL read\nmodels. Use the new required `MsSqlReadModelIdentityColumn` attribute to mark\nthe identity column and the optional (but recommended)\n`MsSqlReadModelVersionColumn` to mark the version column.\n- `string AggregateId`\n- `DateTimeOffset CreateTime`\n- `DateTimeOffset UpdatedTime`\n- `int LastAggregateSequenceNumber`\nObsolete: `IMssqlReadModel` and `MssqlReadModel`. Developers should instead\nuse the `MsSqlReadModelIdentityColumn` and `MsSqlReadModelVersionColumn`\nattributes to mark the identity and version columns (read above).\nEventFlow will continue to support `IMssqlReadModel`, but it _will_ be\nremoved at some point in the future\nFixed: Added missing `UseElasticsearchReadModel<TReadModel, TReadModelLocator>()`\nextension",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.Hangfire",
  "verbatimVersion": "0.22.1393",
  "version": "0.22.1393",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.19.05.33.22/eventflow.hangfire.0.22.1393.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.19.05.33.22/eventflow.hangfire.0.22.1393.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.22.1393, 0.22.1393]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.11.19.05.33.22/eventflow.hangfire.0.22.1393.json#dependencygroup/hangfire.core",
          "@type": "PackageDependency",
          "id": "Hangfire.Core",
          "range": "[1.4.6, )"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "eventstore",
    "hangfire",
    "job",
    "scheduling",
    "tasks"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}