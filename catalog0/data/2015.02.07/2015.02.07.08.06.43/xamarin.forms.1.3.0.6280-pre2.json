{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.08.06.43/xamarin.forms.1.3.0.6280-pre2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Xamarin Inc.",
  "catalog:commitId": "cc6feaaf-b87a-4d05-943d-925ad5f1380e",
  "catalog:commitTimeStamp": "2015-02-07T08:06:43.6403268Z",
  "copyright": "Copyright 2013-2014",
  "created": "2014-12-09T21:46:10.55Z",
  "description": "Build native UIs for iOS, Android, and Windows Phone from a single, shared C# codebase",
  "iconUrl": "http://xamarin.com/content/images/nuget/xamarin.png",
  "id": "Xamarin.Forms",
  "isPrerelease": true,
  "lastEdited": "2014-12-09T21:51:48.253Z",
  "licenseUrl": "http://download.xamarin.com/content/licenses/Xamarin.Forms.rtf",
  "packageHash": "Xvr+L/6vIn8tUNyckWeOvLMqAp5qMXS3XXs8afyqVx8wzfqmXdW7BTVBUzbvxYBvweTL7IKUtWMpP924vWkUUA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1722672,
  "projectUrl": "http://xamarin.com/forms",
  "published": "2014-12-09T21:46:10.583Z",
  "releaseNotes": "## Important Notes\nThis release (1.3.0 final) will be the last release to support the current *Preview* Unified iOS API. The next release will support the *Stable* iOS Unified API, which is not ABI/API compatible. This package is not compatible with the new Stable iOS Unified API. Xamarin.Forms 1.3.1 will be simultaneously released when the Stable Unified API releases to the stable channel.\n\nIf you are using the Classic iOS API this change does not affect you.\n\n## New API\n- MasterDetailPage.MasterBehavior : Used to control how the MasterDetailPage renderers the split view between the Master and Detail. Allowed values are: \n\n```csharp\npublic enum MasterBehavior\n{\n\tSplitOnLandscape,\n\tSplit,\n\tPopover,\n\tSplitOnPortrait\n}\n```\n\n- VisualElement.Navigation now contains overloads for all Pushing and Popping methods that accept a boolean parameter to enable/disable animations.\n- INavigation contains methods needed for more complex navigation scenarios:\n\n```csharp\npublic interface INavigation\n{\n\tIReadOnlyList<Page> NavigationStack { get; }\n\tIReadOnlyList<Page> ModalStack { get; }\n\n\tvoid RemovePage (Page page);\n\tvoid InsertPageBefore (Page page, Page before);\n\n\tTask PushAsync (Page page);\n\tTask<Page> PopAsync ();\n\tTask PopToRootAsync ();\n\tTask PushModalAsync (Page page);\n\tTask<Page> PopModalAsync ();\n\n\tTask PushAsync (Page page, bool animated);\n\tTask<Page> PopAsync (bool animated);\n\tTask PopToRootAsync (bool animated);\n\tTask PushModalAsync (Page page, bool animated);\n\tTask<Page> PopModalAsync (bool animated);\n}\n```\n- New member on Page: `protected virtual bool OnBackButtonPressed ()`: Override in order to handle *physical* back button press events. Events bubble down from root page and back up. Unhandled back button events will cause the app to exit. NavigationPage and the Platform still handle the back button as expected, however it is now possible to intercept and modify these behaviors. Not overriding this method retains the existing back button behavior.\n- DependencyService now has Register methods for users needing more advanced ways to register dependencies.\n- WidthRequest, HeightRequest, MinimumWidthRequest, and MinimumHeightRequest are now BindableProperties\n- IViewController, IVisualElementController, and IElementController now available and explicitly implemented on VisualElement. These interfaces will eventually replace all internal API's currently used to communicate between platform renderers and the frontend API.\n- IElementController.SetValueFromRenderer allows for updating of BindableProperties from renderers without accidentally clearing bindings.\n- XAML now supports text as the content node in Label: `<Label>Hello World</Label>`\n- Pin now has a Clicked property for detecting when the user taps or clicks on a Map pin after the information window is visible.\n- Layout constructor is now marked protected and not internal \n\n## Bug Fixes\n\n### Core\n- Adding a bad Path to a UriImageSource no longer crashes\n- Improved XAML error reporting\n- Fix crash where calling Navigation.PushAsync from re-initialized View sometimes crashed\n- Fix error where cloning a Binding did not clone the Source parameter\n- IsPresented is now respected correctly when using MasterDetailPage. May throw exception now if IsPresented is set to a disallowed value with MasterBehavior.\n- Several bugs relating to culture invariance in XAML parsing.\n- ThicknessConverter no longer depends on device culture\n- Label properly resizes after setting Label.FontSize/Font/FontAttributes [Bug](https://bugzilla.xamarin.com/show_bug.cgi?id=24722)\n- XAML InitializeComponent calls in some apps this will result in a massive performance improvement when loading pages.\n- Serialization now property supports DataMemberAttributes\n- ListView and TableView now return consistent sizing across all platforms. This change should not affect most apps, however some apps suffering from inconsistent sizing with ListViews/TableViews should find the situation better.\n- Small set of changes to Layout to enable performance optimization with unneeded measure invalidation.\n\n### iOS\n- Button.Image is now rendered with original image to match other platforms\n- Editor now scrolls to the correct location when a keyboard is shown\n- Fix NullReferenceException when assigning to SearchBar.BackgroundColor\n- Fix issue where PushModalAsync could sometimes result in a unhandled exception from UIKit.\n- MasterDetailPage now disposes of child renderers correctly, resolves a memory leak.\n- Fix issue where cells could not be unselected using blank rows.\n- WebViewRenderer now uses correct path for finding resources\n- Resolve issue where calling CreateViewController multiple times would cause an exception\n- Use proxy when downloading images if configured on device.\n- Partial swipes on a NavigationPage no longer cause the NavigationPage to get out of sync with the UINavigationController\n- ActionSheet now correctly shows on iOS 8\n- ActionSheet no longer gets incorrectly positions when rotating while visible.\n- Assigning to Application.MainPage now works reliably\n\n### Android\n- MasterDetailPage container width now matches android design guidelines on tablets. (No longer insanely wide).\n- SwitchCell height is no longer squished\n- No longer crashes on Android 5.0\n- No longer renders with a black bar at the bottom of Android 5.0 devices\n- Other compatibility fixes with Android 5.0\n- WebViewRenderer now uses correct path for finding resources\n- Fix issue where calling SetPage multiple times would throw an exception\n- Fix crash when restarting the Activity introduced in last pre-release\n- Assigning to Application.MainPage now works reliably\n\n### WinPhone\n- Assigning to Application.MainPage now works reliably\n- Application.OnStart now is called correctly\n\n## Still to come\nSome things coming post-1.3:\n\n- Android bitmap optimization (automatic downsampling to prevent OOM exceptions with large images)\n- WinRT support (Windows & Windows Phone 8.1)\n- Bug fixes as always\n- CarouselView\n- Much much more\n",
  "requireLicenseAcceptance": false,
  "version": "1.3.0.6280-pre2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.08.06.43/xamarin.forms.1.3.0.6280-pre2.json#dependencygroup/windowsphone8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.08.06.43/xamarin.forms.1.3.0.6280-pre2.json#dependencygroup/windowsphone8.0/wptoolkit",
          "@type": "PackageDependency",
          "id": "WPtoolkit",
          "range": "[4.2013.8.16, )"
        }
      ],
      "targetFramework": "WindowsPhone8.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.08.06.43/xamarin.forms.1.3.0.6280-pre2.json#dependencygroup/monoandroid1.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.08.06.43/xamarin.forms.1.3.0.6280-pre2.json#dependencygroup/monoandroid1.0/xamarin.android.support.v4",
          "@type": "PackageDependency",
          "id": "Xamarin.Android.Support.v4",
          "range": "[19.1.0, )"
        }
      ],
      "targetFramework": "MonoAndroid1.0"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}