{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.03.24.29/tryparsers.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Atif Aziz",
  "catalog:commitId": "9d5d339d-8047-4814-96af-f088aa0d1ce3",
  "catalog:commitTimeStamp": "2015-02-03T03:24:29.4383243Z",
  "copyright": "Copyright (c) 2012 Atif Aziz. All rights reserved.",
  "created": "2013-02-22T18:14:11.77Z",
  "description": "Provides alternate ways to invoke TryParse methods from .NET Framework for use in expressions and functional code like LINQ queries",
  "id": "TryParsers",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/bsd-license.php",
  "packageHash": "zo48nRttVjOnnxg2KeaKkWYmkTwZkTt9aqqfojE5MGg11FRqWSFfSc8fc5zqQsq1f/ecqTcUEyRcA/UudpEvgQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 13711,
  "projectUrl": "http://bitbucket.org/raboof/tryparsers/",
  "published": "2013-02-22T18:14:11.77Z",
  "releaseNotes": "Adds support for Uri and general-purpose TryParse function maker",
  "requireLicenseAcceptance": false,
  "summary": "TryParse from .NET Framework done right",
  "title": "TryParsers",
  "version": "1.2.0",
  "tags": [
    "parser",
    "parsing",
    "linq",
    "functional"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}