{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.20.03.03.00/cowboy.sockets.1.2.8.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dennis Gao",
  "catalog:commitId": "257853b5-7cc7-43af-8034-1888d232241a",
  "catalog:commitTimeStamp": "2016-02-20T03:03:00.3043589Z",
  "copyright": "Copyright Â© 2015-2016 Dennis Gao.",
  "created": "2016-02-20T03:02:34.28Z",
  "description": "Cowboy is a library for building sockets based services.",
  "id": "Cowboy.Sockets",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "MxJHKroUkRhr99hkIpEMFifdUKY2aQCEEPm6kbm7DBh3GJ/ql4jXVfT6nDsfg7/D3RmlVGo2h0Uy59n/U7oU2A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 69149,
  "published": "2016-02-20T03:02:34.28Z",
  "requireLicenseAcceptance": false,
  "title": "Cowboy.Sockets",
  "verbatimVersion": "1.2.8.0",
  "version": "1.2.8",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.20.03.03.00/cowboy.sockets.1.2.8.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}