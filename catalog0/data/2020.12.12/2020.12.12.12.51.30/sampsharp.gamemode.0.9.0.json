{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tim Potze",
  "catalog:commitId": "fda1eb94-9f91-42db-a639-cb46ce579c64",
  "catalog:commitTimeStamp": "2020-12-12T12:51:30.8176026Z",
  "copyright": "Tim Potze",
  "created": "2020-12-12T12:49:19.97Z",
  "description": "A framework for writing SA-MP game modes in C#.",
  "iconUrl": "https://github.com/ikkentim/SampSharp/raw/master/sampsharp.png",
  "id": "SampSharp.GameMode",
  "isPrerelease": false,
  "lastEdited": "2020-12-12T12:51:20.45Z",
  "licenseUrl": "https://raw.githubusercontent.com/ikkentim/SampSharp/master/LICENSE",
  "listed": true,
  "packageHash": "G52IVPi/n1jbJb7TJT1ms/Y0fSFx+Tj3S+EV+ZPs6cOEOZ57dEM+CHh4xSWW7lQguC5BDEngxBau6qp35qJa5w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 198732,
  "projectUrl": "https://github.com/ikkentim/SampSharp",
  "published": "2020-12-12T12:49:19.97Z",
  "releaseNotes": "- Added `Vector3.XY` which returns a `Vector2` with the x and y components (#299/#300)\n- Added `Color.Brightness` property (#309)\n- Added `Color.AddGrammaCorrection`, `Color.RemoveGammaCorrection`, `Color.Grayscale` methods (#309)\n- Added `blendAlpha` option to `Color.Lerp`, `Color.Darken` and `Color.Lighten` (#305/#310)\n- Added `Timer.Run` and `Timer.RunOnce` overloads with an `int` or `double` internal in miliseconds. (#315)\n- Added `BasePlayer.PickUpPickup` event (#319)\n- Added `BasePlayer.CameraTargetPlayerObject` (#320)\n- Added `BasePlayer.SurfingPlayerObject` (#324)\n- Added `Server.GetServerTickRate` (#295)\n- Added automatic detection for command and command group names (#273)\n- Added command parameter attribute `NullableParam` to indicate a `BasePlayer` or `BaseVehicle` argument is allowed to be null, enum values can be marked as nullable by using nullable enums like `VehicleModelType?` (#268/#290)\n- Added `Server.GetWeaponName` (#311)\n- Added `CommandAttribute.IsGroupHelp`, if this value is true, the command will run if the command group is entered by the player without a specified command in the command group\n- *breaking* Added `PlayerCancelClickTextDraw` event which is called when player presses ESC while selecting textdraws, `PlayerClickTextDraw` is no longer called when ESC is pressed (#304/#321)\n- Updated `VehicleModelInfo` to include seat count and a missing entry for ID 611, Utility Trailer (#302)\n- Updated minimum .NET Standard version to 2.0\n- *breaking* Changed `BasePlayer.CameraTargetObject` to `BasePlayer.CameraTargetGlobalObject` (#320)\n- *breaking* Changed `BasePlayer.SurfingObject` to `BasePlayer.SurfingGlobalObject` (#324)\n- *breaking* Changed `BaseMode.PlayerPickUp` event to have event arguments of type `PickUpPickupEventArgs` and changed the sender of event from the pickup to the player (#319)\n- *breaking* Changed `Pickup.PickUp` event to have event arguments of type `PickUpPickupEventArgs` (#319)\n- Fixed `Quaternion` coordinate system not matching SA-MP coordinate system\n- Fixed `Edited` and `Selected` on `GlobalObject` and `PlayerObject` not being fired (#303/#306)\n- Fixed `Color.FromInteger` with `ColorFormat.RGB` returning a value with 0 alpha\n- Fixed conversion from `Color` to `Vector3` not returning decimal values\n- Fixed enum numeric values not being recognized as an command argument if an enum value name contains the numeric value (#274)\n- *breaking* Removed `ObjectModel` enum because it was too big and might not be complete",
  "requireLicenseAcceptance": false,
  "title": "SampSharp GameMode Framework",
  "verbatimVersion": "0.9.0",
  "version": "0.9.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#dependencygroup/.netstandard2.0/sampsharp.core",
          "@type": "PackageDependency",
          "id": "SampSharp.Core",
          "range": "[0.9.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#dependencygroup/.netstandard2.0/system.componentmodel",
          "@type": "PackageDependency",
          "id": "System.ComponentModel",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#SampSharp.GameMode.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1571,
      "fullName": "SampSharp.GameMode.nuspec",
      "length": 3619,
      "name": "SampSharp.GameMode.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#lib/netstandard2.0/SampSharp.GameMode.dll",
      "@type": "PackageEntry",
      "compressedLength": 116139,
      "fullName": "lib/netstandard2.0/SampSharp.GameMode.dll",
      "length": 312320,
      "name": "SampSharp.GameMode.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#lib/netstandard2.0/SampSharp.GameMode.xml",
      "@type": "PackageEntry",
      "compressedLength": 69640,
      "fullName": "lib/netstandard2.0/SampSharp.GameMode.xml",
      "length": 835512,
      "name": "SampSharp.GameMode.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.30/sampsharp.gamemode.0.9.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}