{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.10.20.46.46/henoohdeviceemulator.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Henooh",
  "catalog:commitId": "d71dab4c-bd13-4e80-8397-c20dcb8825db",
  "catalog:commitTimeStamp": "2016-01-10T20:46:46.8755494Z",
  "copyright": "2015",
  "created": "2015-11-07T18:40:23.143Z",
  "description": "Using Windows Forms or Windows WPF SendKey methods can emulate text entry, but not actual key strokes. Other available input simulators or emulators lack ability to send key strokes that is behind DirectX layers, and rarely provides output features as one package. HenoohDeviceEmulator provides easy way to gain hardware access to Keyboard and Mouse devices, both input and output. Henooh Device Emulator is composed of four separate classes each designed to handle their own functionality.",
  "id": "HenoohDeviceEmulator",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2016-01-10T20:46:31.787Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "qohtGdUAcCNOrlAH42Q0uzmTpd/AwBrHuzVLgLFnl1Sdry5RofJKaPH3aXuJY/PrzpUQ9uRkahtA//EccIAYOA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18724,
  "projectUrl": "http://www.minisomaha.com/Portfolio/HenoohDeviceEmulatorDocumentation/",
  "published": "2015-11-07T18:40:23.143Z",
  "requireLicenseAcceptance": false,
  "summary": "HenoohDeviceEmulator provides a simple .NET (C#) interface to emulate Keyboard and Mouse input and output. Input classes are called Controllers and Output classes are called Observers.",
  "title": "HenoohDeviceEmulator",
  "verbatimVersion": "1.00.01",
  "version": "1.0.1",
  "tags": [
    "Henooh",
    "Input",
    "Simualator",
    "Emulator",
    "Keyboard",
    "Mouse",
    "Control"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}