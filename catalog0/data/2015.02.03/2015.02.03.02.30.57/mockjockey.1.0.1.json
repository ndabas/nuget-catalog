{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.02.30.57/mockjockey.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "thoersch",
  "catalog:commitId": "5243b48c-88c3-4434-95f8-60bb8c0e8242",
  "catalog:commitTimeStamp": "2015-02-03T02:30:57.8912968Z",
  "copyright": "2010-2013 Tyler Hoersch",
  "created": "2013-02-13T21:40:08.02Z",
  "description": "MockJockey is a framework written in and for Csharp assemblies with the purpose of allowing engineers to unit test their code in a precise, concise, and quick manner. Using mock objects in unit tests, allows your unit tests to be focused by side-stepping any irrelevancies of the test. Commonly thought as a necessity for doing test driven development, a mock framework will give your tests exactly what they need to be--small and fast! And that's what MockJockey provides us.",
  "id": "MockJockey",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "oXvwSlp9oaG/HXyb7gqVsZ04dhegXRHvpcSNdho+iKhfLClH/YP/jzxCtKdxpcvBwliAuqkLYB1zxwqt3XEbGw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21143,
  "projectUrl": "http://tylerhoersch.com/mockJockey",
  "published": "2013-02-13T21:40:08.02Z",
  "requireLicenseAcceptance": false,
  "title": "MockJockey : Mock Object Framework",
  "version": "1.0.1",
  "tags": [
    "MockJockey",
    "Mock",
    "Objects",
    "Framework",
    "Mocking",
    "Testing"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}