{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.06.38.24/dapper.data.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Maxim Konstantinovski",
  "catalog:commitId": "ea6b9a4c-0f90-40c8-8b82-be7c32d33621",
  "catalog:commitTimeStamp": "2018-11-17T06:38:24.5570589Z",
  "copyright": "Copyright Maxim Konstantinovski 2012",
  "created": "2012-10-10T17:14:26.913Z",
  "description": "Trivial micro-orm implemented on Dapper, streamlines connection and transaction management while preserving flexibility and usability.\n***************************************\n// To create an instance of database context inherit DbContext\nclass TestDb : DbContext\n{\n    private const string ConnectionName = \"DefaultConnection\";\n\n    private TestDb()\n        : base(ConnectionName)\n    { }\n}\n\n// execute multiple statatements using same connection\n// connection and transaction (if needed)\nvar db = new TestDb();\ndb.Batch(s =>\n{\n    s.BeginTransaction();\n    try\n    {\n        s.Execute([Your query]);\n        s.CommitTransaction();\n    }\n    catch\n    {\n        s.RollbackTransaction();\n        throw;\n    }\n});",
  "id": "Dapper.Data",
  "isPrerelease": false,
  "lastEdited": "2018-11-17T06:38:12.793Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "listed": false,
  "packageHash": "+Uwff2K8Gf+SPyOBt+Bc4iEUgeCPfIxQaVQWGbueTFnxv5hz82zJrGxU9Pw5Qahrz7eqCIO2M+GwHYJ/ANy+bw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19353,
  "projectUrl": "https://github.com/mkonstan/dapper-dot-net",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "* 1.0\n* Streamlined connection and transaction management\n* Batch query processing\n* Can use ninject\n* Thread safe\n* Connection can be defined in .config file\nSample:",
  "requireLicenseAcceptance": false,
  "summary": "Trivial micro-orm implemented on Dapper, streamlines connection and transaction management while preserving flexibility and usability.",
  "title": "Dapper.Data",
  "verbatimVersion": "1.1",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.06.38.24/dapper.data.1.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.06.38.24/dapper.data.1.1.0.json#dependencygroup/dapper",
          "@type": "PackageDependency",
          "id": "Dapper",
          "range": "[1.8.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.06.38.24/dapper.data.1.1.0.json#Dapper.Data.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 835,
      "fullName": "Dapper.Data.nuspec",
      "length": 1957,
      "name": "Dapper.Data.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.06.38.24/dapper.data.1.1.0.json#lib/net40/Dapper.Data.dll",
      "@type": "PackageEntry",
      "compressedLength": 5841,
      "fullName": "lib/net40/Dapper.Data.dll",
      "length": 13824,
      "name": "Dapper.Data.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.17.06.38.24/dapper.data.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "orm",
    "sql",
    "micro-orm",
    "ninject",
    "mvc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}