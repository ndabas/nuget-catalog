{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.03.44.06/multiparse.0.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "sboulang",
  "catalog:commitId": "92a83269-d6bc-4614-97cb-58c596071fee",
  "catalog:commitTimeStamp": "2015-02-05T03:44:06.5031933Z",
  "created": "2014-04-07T08:18:47.977Z",
  "description": "* Custom user-defined data types\nC# native data types have been implemented\nBoolean/bool\nByte/byte, Char/char, SByte/sbyte\nInt16/short, UInt16/ushort, Int32/int, UInt32/uint, Int64/long, UInt64/ulong, Decimal/decimal\nString/string (supports C# escape sequences including unicode \\xX(XXX) \\uXXXX and \\UXXXXXXXX)\nSingle/float, Double/double\nDateTime is not implemented as it does not have a literal format in C#. But it can be implemented by the user.\n* Variables, static and dynamic.\n* Custom user-defined operators\nDefault C# binary operators have been implemented for all native data types\nArithmetic operators: +, -, *, /, %\nRelational operators: <=, >=, <, >, ==, !=\nLogical operators: &, |, ^\nConditional operators: ||, &&\nDefault C# unary operators have been implemented for all native data types\nArithmetic operators: +, -\nLogical operators: ~\nConditional operators: !\nExplicit type casts: eg. (Boolean), (int), etc.\n* Customizable functions\nDefault C# Math functions have been implemented\nGeneric functions: Abs(), Ceiling(), Exp(), Floor(), Log(), Log10(), Max(), Min(), Pow(), Round(), Sign(), Sqrt(), Truncate()\nTrigometric functions: Acos(), Asin(), Atan(), Atan2(), Cos(), Sin(), Tan()\nHyperbolic functions: Cosh(), Sinh(), Tanh()\n* Compilation at first evaluation\n* Subsequent evaluations will use the compiled action queue.",
  "id": "MultiParse",
  "isPrerelease": false,
  "lastEdited": "2014-04-07T08:20:13.47Z",
  "packageHash": "mYeQuO/GfiZUmtytnMm9sJ6pnA2zANJLyzwhu/Ehj7DY1PyH2BWfC29kXxVkM4ZT13WXQOGvrXbqhNuF6xwdAA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36034,
  "published": "2014-04-07T08:18:47.977Z",
  "requireLicenseAcceptance": false,
  "summary": "MultiParse is a mathematical expression parser written in the .NET framework. The focus of the project is building a highly customizable expression parser. This involves custom types, custom operators and custom functions. Also dynamic/static variables are perfectly feasible.",
  "title": "MultiParse",
  "version": "0.0.0",
  "tags": [
    "Custom",
    "Math",
    "Expression",
    "Parser"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}