{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Oren Novotny",
  "catalog:commitId": "8494165c-744f-4b97-b93e-7e787c3415b5",
  "catalog:commitTimeStamp": "2018-12-08T23:35:44.1387715Z",
  "created": "2015-03-16T15:25:54.497Z",
  "description": "MiFare Classic card support with WP 8.1, Windows Store and Desktop apps",
  "id": "MiFare",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "2018-12-08T23:35:43.6Z",
  "licenseUrl": "https://raw.githubusercontent.com/onovotny/MiFare/master/LICENSE.txt",
  "listed": true,
  "packageHash": "2AQbPOy3itqiAAc/jH2HhGIX2RV55H1YsZbwYilZIsVsBsueL1j4S9V55KC0bU1+LZFIRyUEu9ZN2D9Gs1b8nQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 222872,
  "projectUrl": "https://github.com/onovotny/MiFare",
  "published": "2015-03-16T15:25:54.497Z",
  "requireLicenseAcceptance": false,
  "summary": "Read/Write MiFare Classic cards with Windows Phone 8.1. Phone requires device with NXP547 chip. Lumia 830, 730 and newer.\n      Windows Store support requires enterprise apps as library will not work in public store.",
  "title": "MiFare Classic PC/SC Library",
  "verbatimVersion": "1.0-beta4",
  "version": "1.0.0-beta4",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#MiFare.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 501,
      "fullName": "MiFare.nuspec",
      "length": 967,
      "name": "MiFare.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/wpa81/MiFareRT.dll",
      "@type": "PackageEntry",
      "compressedLength": 26144,
      "fullName": "lib/wpa81/MiFareRT.dll",
      "length": 59392,
      "name": "MiFareRT.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/wpa81/MiFareRT.pdb",
      "@type": "PackageEntry",
      "compressedLength": 34594,
      "fullName": "lib/wpa81/MiFareRT.pdb",
      "length": 165376,
      "name": "MiFareRT.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/wpa81/MiFareRT.pri",
      "@type": "PackageEntry",
      "compressedLength": 298,
      "fullName": "lib/wpa81/MiFareRT.pri",
      "length": 1168,
      "name": "MiFareRT.pri"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/wpa81/MiFareRT.xml",
      "@type": "PackageEntry",
      "compressedLength": 4546,
      "fullName": "lib/wpa81/MiFareRT.xml",
      "length": 32047,
      "name": "MiFareRT.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/net45/MiFare.Desktop.dll",
      "@type": "PackageEntry",
      "compressedLength": 28212,
      "fullName": "lib/net45/MiFare.Desktop.dll",
      "length": 62976,
      "name": "MiFare.Desktop.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/net45/MiFare.Desktop.pdb",
      "@type": "PackageEntry",
      "compressedLength": 38131,
      "fullName": "lib/net45/MiFare.Desktop.pdb",
      "length": 183808,
      "name": "MiFare.Desktop.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/net45/MiFare.Desktop.xml",
      "@type": "PackageEntry",
      "compressedLength": 4963,
      "fullName": "lib/net45/MiFare.Desktop.xml",
      "length": 33892,
      "name": "MiFare.Desktop.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/win81/MiFare.Win81.dll",
      "@type": "PackageEntry",
      "compressedLength": 28229,
      "fullName": "lib/win81/MiFare.Win81.dll",
      "length": 62976,
      "name": "MiFare.Win81.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/win81/MiFare.Win81.pdb",
      "@type": "PackageEntry",
      "compressedLength": 38148,
      "fullName": "lib/win81/MiFare.Win81.pdb",
      "length": 183808,
      "name": "MiFare.Win81.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/win81/MiFare.Win81.pri",
      "@type": "PackageEntry",
      "compressedLength": 300,
      "fullName": "lib/win81/MiFare.Win81.pri",
      "length": 1184,
      "name": "MiFare.Win81.pri"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#lib/win81/MiFare.Win81.xml",
      "@type": "PackageEntry",
      "compressedLength": 4962,
      "fullName": "lib/win81/MiFare.Win81.xml",
      "length": 33890,
      "name": "MiFare.Win81.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.08.23.35.44/mifare.1.0.0-beta4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "mifare",
    "classic",
    "nfc",
    "pcsc",
    "rfid"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}