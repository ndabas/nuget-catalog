{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gigya Inc.",
  "catalog:commitId": "95ce9d42-6b49-4a86-b979-15caaa0668af",
  "catalog:commitTimeStamp": "2018-11-29T11:13:36.6684921Z",
  "created": "2018-06-13T07:16:19.137Z",
  "description": "Using this component you can find other Microdot services (and any other\nremote system), perform client-side load balancing between multiple\nservers, detect and\tskip unresponsive servers and resume using them\nwhen they return to full operation. Discovery is typically perfomed with\nConsul by HashiCorp\t(http://consul.io) but it also supports manual server\nlists specified in Microdot configuration (see NuGet package\nGigya.Microdot.Configuration) and can be expanded to support additional\nservice discovery systems.",
  "id": "Gigya.Microdot.ServiceDiscovery",
  "isPrerelease": false,
  "lastEdited": "2018-11-29T11:13:09.223Z",
  "licenseUrl": "https://github.com/gigya/microdot/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "D47mEBfiGf9GWNrt2XFL7ri3NiMwwHv88EzSS2tU7/g51TChWjPIcxriMBHG6Bbv5Wm7u6tRfSE81RVGi4oiQQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52506,
  "projectUrl": "https://github.com/gigya/microdot",
  "published": "2018-06-13T07:16:19.137Z",
  "title": "Gigya.Microdot.ServiceDiscovery",
  "verbatimVersion": "1.10.5",
  "version": "1.10.5",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/gigya.servicecontract",
          "@type": "PackageDependency",
          "id": "Gigya.ServiceContract",
          "range": "[2.5.5, 3.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/metrics.net",
          "@type": "PackageDependency",
          "id": "Metrics.NET",
          "range": "[0.5.5, 1.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[9.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/nito.asyncex",
          "@type": "PackageDependency",
          "id": "Nito.AsyncEx",
          "range": "[4.0.1, 5.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/system.collections.immutable",
          "@type": "PackageDependency",
          "id": "System.Collections.Immutable",
          "range": "[1.4.0, 2.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/system.threading.tasks.dataflow",
          "@type": "PackageDependency",
          "id": "System.Threading.Tasks.Dataflow",
          "range": "[4.8.0, 5.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/gigya.microdot.sharedlogic",
          "@type": "PackageDependency",
          "id": "Gigya.Microdot.SharedLogic",
          "range": "[1.10.5, 1.10.5]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#dependencygroup/gigya.microdot.interfaces",
          "@type": "PackageDependency",
          "id": "Gigya.Microdot.Interfaces",
          "range": "[1.10.5, 1.10.5]"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#lib/net451/Gigya.Microdot.ServiceDiscovery.dll",
      "@type": "PackageEntry",
      "compressedLength": 40310,
      "fullName": "lib/net451/Gigya.Microdot.ServiceDiscovery.dll",
      "length": 101376,
      "name": "Gigya.Microdot.ServiceDiscovery.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#Gigya.Microdot.ServiceDiscovery.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 789,
      "fullName": "Gigya.Microdot.ServiceDiscovery.nuspec",
      "length": 1749,
      "name": "Gigya.Microdot.ServiceDiscovery.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.11.13.36/gigya.microdot.servicediscovery.1.10.5.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "gigya",
    "microdot",
    "microservice",
    "microservices",
    "discovery",
    "service-discovery",
    "consul"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}