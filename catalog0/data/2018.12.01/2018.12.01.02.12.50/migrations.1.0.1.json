{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.02.12.50/migrations.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Peter Groenewegen",
  "catalog:commitId": "b1a716cd-200f-4a8c-b4b7-7badb075b204",
  "catalog:commitTimeStamp": "2018-12-01T02:12:50.1612365Z",
  "copyright": "Copyright Â©  2015",
  "created": "2015-12-23T11:51:28.88Z",
  "description": "Migration manager",
  "id": "Migrations",
  "isPrerelease": false,
  "lastEdited": "2018-12-01T02:12:29.12Z",
  "listed": true,
  "packageHash": "/ZHU+IAeYcFGRj5HPNKoJUP/uD8L1pXZjYBA3mEEg4pJFRwSs8Jn/aeGRclVJBBOv4E4FpMWkJK6KVB0zdd8HA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21668,
  "projectUrl": "https://pgroene.wordpress.com/2016/01/09/managing-sql-server-migrations/",
  "published": "2015-12-23T11:51:28.88Z",
  "releaseNotes": "This package will allow manage your database schema by running version scripts on application startup. The sql script will run once on startup of your application. \n\n1. Add Migrations to your project \nAdd a directory Migrations, and add the sql scripts to the directory. Call the scripts 1, 2, 3 etc(or dates like 201521121242). Scripts will run in asc order and only once (numbers only). Embed the scripts as embedded resource in the dll. Make sure your go statements are at the end of the lines. \n\n2. Mark the dll as Mirgration assembly \nTo pickup the migrations add the following attribute to your dll (with embedded migration files): \n[assembly: Migrations.Config.SqlServerMigration()] \n\n3. Call the migrations on startup \nAdd the following line of code in your startup sequence: \nMigrationManager.RunMigrations(); \n\nVersion 1.0.1\nSupport from version .net 4.0 and up\n\nFor more information see:\nhttps://pgroene.wordpress.com/2016/01/09/managing-sql-server-migrations/",
  "requireLicenseAcceptance": false,
  "title": "Migrations",
  "verbatimVersion": "1.0.1.0",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.02.12.50/migrations.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.02.12.50/migrations.1.0.1.json#dependencygroup/log4net",
          "@type": "PackageDependency",
          "id": "log4net",
          "range": "[2.0.5, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.02.12.50/migrations.1.0.1.json#Migrations.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 799,
      "fullName": "Migrations.nuspec",
      "length": 1722,
      "name": "Migrations.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.02.12.50/migrations.1.0.1.json#lib/net40-Client/Migrations.dll",
      "@type": "PackageEntry",
      "compressedLength": 8858,
      "fullName": "lib/net40-Client/Migrations.dll",
      "length": 20992,
      "name": "Migrations.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.02.12.50/migrations.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "sql",
    "migrations"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}