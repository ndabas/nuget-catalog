{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thomas PIERRAIN, Cyrille DUPUYDAUBY, Rui CARVALHO, Marc-Antoine LATOUR",
  "catalog:commitId": "f89956e7-4392-43e8-9d5f-4cbe2b3f98b4",
  "catalog:commitTimeStamp": "2023-10-13T13:44:51.1784131Z",
  "copyright": "Copyright 2013-2022 Thomas PIERRAIN, Cyrille DUPUYDAUBY",
  "created": "2023-10-13T13:41:51.43Z",
  "description": "NFluent is an ergonomic check library which aims to fluent your .NET TDD experience (based on simple Check.That() check statements). NFluent aims your tests to be fluent to write (with an happy 'dot' auto completion experience), fluent to read (i.e. as close as possible to plain English expression), but also fluent to troubleshoot, in a less-error-prone way comparing to the classical .NET test frameworks. NFluent is directly, but also freely, inspired by the awesome Java FEST fluent check/reflection library (http://fest.easytesting.org/).",
  "iconFile": "images\\Icon.png",
  "id": "NFluent",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "2023-10-13T13:44:26.883Z",
  "licenseExpression": "Apache-2.0",
  "licenseUrl": "https://licenses.nuget.org/Apache-2.0",
  "listed": true,
  "packageHash": "k+pH1Mot+hOlB6tFVtdtFyx7xxOD07cHk26CseWrTyE5fCg53k38DoPfW+5V5Z2ALF8gBIsY98/iwRL/GD8f9g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 726306,
  "projectUrl": "http://www.n-fluent.net/",
  "published": "2023-10-13T13:41:51.43Z",
  "readmeFile": "docs\\ReadMe.md",
  "releaseNotes": "# V 3.0.2\n\n## Fix\n\n* Fix `FormatException` for some failure conditions with `Verifies` (issue #340)\n\n# V 3.0.1\n\n## Fix\n\n* Fix `Check.ThatCode` not awaiting `Task` returning lambdas in V3.0.0. Note that `Task<T>` returning lambdas do work in V3.0.0\n\n* an InvalidOperation is thrown when using `Check.ThatCode` on an async void method/lambda (as those cannot be awaited)\n\n# V 3.0.0\n\n## Major changes\n\n* You can execute multiple check as a single batch and get every failures, instead of the first one. This can be achieved using:\n\n* `Check.StartBatch`: stores the result of each subsequent check(s) and notifies all the errors when the returned object is disposed. Such as\n\n`using(Check.StartBatch())\n\n{\n\nCheck.That(sut).....\n\nCheck.That(sut)....\n\n}`\n\nNote that any actual exception thrown during the check phase will prevent any subsequent check from behind executed (1) and may not be reported as it may be replaced by an assertion failure exception.\n\nThis comes from C# exeption handling logic.\n\n* You can provide anonymous types and tuples when using IsEqualTo against any type. The check will be made against all\n\n_sut_'s propertie.\n\n* NFluent supports Net 3.5 SP1, Net. 4.5.2 +, Net Standard 2.0+. Dropped support for Net Framework 2.0, 3.0, and 4.0, as well Net Standard<2.0.\n\nIf you can't upgrade your framework version to a supported one, please use NFluent 2.7.1.\n\n## New Checks\n\n* `Is`: Checks if _sut == expected_. This is a strongly typed equivalent to `IsEqualTo`.\n\n* `IsGreaterOrEqualThan`: Checks if _sut_ >= _expected_.\n\n* `IsLessOrEqualThan`: Checks if _sut_ <= _expected_.\n\n## New feautres\n\n* You can provide custom comparer for any type, using `Check.RegisterComparer` like this `Check.Register<MyType>(MyCustomComparer)`.\n\nYou can also use `RegisterLocalComparer` to limit its usage to a declaration scope.\n\n## Breaking changes\n\n* Equality logic changed for `IDictionary`: dictionaries are considered equals if they have the same keys and\n\nthe same values for each key. In NFluent V2, entries needed to be declared in the some order or else they were considered as **different** but **equivalent**.\n\n* You need to specify\n\n* `IsAnInstanceOf<nullableType>(null)` now fails (with an appropriate message). Previously, it did succeed. But,\n\nas captured in issue #68, this behavior was triggered by a bug and kept due to a poor error message when fixed.\n\n* The `IStructCheck<T>` interface has been removed as well as associated extensibility helper. Those were dedicated\n\nto value `types`, you can migrate your existing extensions to the `ICheck<T>` type instead. Please open an issue if\n\nyou need help.\n\n## Fixes\n\n* HasFieldWithSameValues resulted in false positive when string fields had the same value.\n\n* IsNotEqualTo now properly preserves expected type\n\n* Improved rerporting of differences for enumerations and dictionaries to make them more consistent and fixed some inaccuracies.\n\n## GitHub Issues\n\n* #325, #327, #330, #332\n\n### Obsolete\n\n#### Marked as obsolet\n\n* `ThatAsyncCode`: you can now use `ThatCode` even for async methods.\n\nHere is the list of methods, classes and other obsolete stuff that have been removed in this version as well\n\nas workaround advices.\n\n* Drop support for Net 2.0 and 3.0: keep using NFluent V2.x versions if you support for these.\n\n* `Check.ThatEnum`has been removed. You must use `Check.That` instead.\n\n* `ILambdaCheck`: the definition was kept to prevent breaking build, but it was no longer used. If this is a\n\nproblem for you, open an issue\n\n* `IsPositive` (available for numbers): please use `IsStrictlyPositive` instead.\n\n* `IsNegative` (available for numbers): please use `IsStrictlyNegative` instead.\n\n* `IsLessThan` (available for numbers): please use `IsStrictlyNegative` instead.\n\n* `IsGreaterThan` (available for numbers): please use `IsStrictlyGreaterThan` instead.\n\n* `IsSameReferenceThan`: please use `IsSameReferenceAs` instead.\n\n* `HasFieldsEqualToThose`: please use `HasFieldsWithSameValues` instead.\n\n* `HasFieldsNotEqualToThose`: please use `HasNotFieldsWithSameValues` instead.\n\n* `IsAFaillingCheckWithMessage`: please use `IsAFailingCheckWithMessage` instead.\n\n* `IsAFaillingCheck`: please use `IsAFailingCheck` instead.\n\n* `Properties` (available for enumeration): please use `Extracting` instead.\n\n* `Checker.BuildLinkWhich` (used for custom extension): please use `ExtensibilityHelper.BuildCheckLinkWhich` instead.\n\n* `Checker.ExecuteCheckAndProvideSubItem` (used for custom extension): please 'ExtensibilityHelper' static class methods instead.",
  "requireLicenseAcceptance": false,
  "summary": "NFluent is an ergonomic check library which aims to fluent your .NET TDD experience.",
  "title": "NFluent, smooth your .NET TDD experience!",
  "verbatimVersion": "3.0.2.327-beta",
  "version": "3.0.2.327-beta",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#dependencygroup/.netframework4.6",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework4.6"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#dependencygroup/.netframework3.5",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework3.5"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#NFluent.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2808,
      "fullName": "NFluent.nuspec",
      "length": 6526,
      "name": "NFluent.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#docs/ReadMe.md",
      "@type": "PackageEntry",
      "compressedLength": 4329,
      "fullName": "docs/ReadMe.md",
      "length": 11845,
      "name": "ReadMe.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#images/Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 5085,
      "fullName": "images/Icon.png",
      "length": 5141,
      "name": "Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/netstandard2.0/NFluent.dll",
      "@type": "PackageEntry",
      "compressedLength": 89045,
      "fullName": "lib/netstandard2.0/NFluent.dll",
      "length": 224768,
      "name": "NFluent.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/netstandard2.0/NFluent.xml",
      "@type": "PackageEntry",
      "compressedLength": 30886,
      "fullName": "lib/netstandard2.0/NFluent.xml",
      "length": 349513,
      "name": "NFluent.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/netstandard2.0/NFluent.pdb",
      "@type": "PackageEntry",
      "compressedLength": 36609,
      "fullName": "lib/netstandard2.0/NFluent.pdb",
      "length": 74284,
      "name": "NFluent.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/net46/NFluent.dll",
      "@type": "PackageEntry",
      "compressedLength": 88462,
      "fullName": "lib/net46/NFluent.dll",
      "length": 223232,
      "name": "NFluent.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/net46/NFluent.xml",
      "@type": "PackageEntry",
      "compressedLength": 30828,
      "fullName": "lib/net46/NFluent.xml",
      "length": 349155,
      "name": "NFluent.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/net46/NFluent.pdb",
      "@type": "PackageEntry",
      "compressedLength": 134585,
      "fullName": "lib/net46/NFluent.pdb",
      "length": 677376,
      "name": "NFluent.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/net35/NFluent.dll",
      "@type": "PackageEntry",
      "compressedLength": 86137,
      "fullName": "lib/net35/NFluent.dll",
      "length": 217088,
      "name": "NFluent.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/net35/NFluent.xml",
      "@type": "PackageEntry",
      "compressedLength": 30512,
      "fullName": "lib/net35/NFluent.xml",
      "length": 343382,
      "name": "NFluent.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#lib/net35/NFluent.pdb",
      "@type": "PackageEntry",
      "compressedLength": 172224,
      "fullName": "lib/net35/NFluent.pdb",
      "length": 876032,
      "name": "NFluent.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.13.13.44.51/nfluent.3.0.2.327-beta.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11526,
      "fullName": ".signature.p7s",
      "length": 11526,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "tdd",
    "bdd",
    "test",
    "fluent",
    "check",
    "checks",
    "easy",
    "nunit",
    "xunit",
    "mbunit"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}