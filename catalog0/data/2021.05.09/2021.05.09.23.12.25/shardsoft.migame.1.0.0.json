{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Furlong",
  "catalog:commitId": "88d658c9-0ef0-45c3-b845-6d96be2dce27",
  "catalog:commitTimeStamp": "2021-05-09T23:12:25.5139782Z",
  "copyright": "Copyright (c) Michael Furlong 2021",
  "created": "2021-05-09T23:10:04.907Z",
  "description": "A basic game library for use with SFML.Net.",
  "id": "ShardSoft.MiGame",
  "isPrerelease": false,
  "lastEdited": "2021-05-09T23:12:08.277Z",
  "licenseFile": "licence.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "TFBx2coJ41yD1WHq4OLIXOAQNB9gev0JXuyBm/orIQhxqxno7dW8E/yj4ORyLeLtI+nhOVEifADqTksg/53Ycg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36583,
  "projectUrl": "https://github.com/BrokenShards/MiGame",
  "published": "2021-05-09T23:10:04.907Z",
  "releaseNotes": "### Version 1.0.0\n- `GameState` now provides the `SubscribeEvents()` and `UnsubscribeEvents()` methods for subscribing\n  to window events and have replaced `OnGainFocus(object, EventArgs)`, `OnLoseFocus(object, EventArgs)`\n  and `OnTextEntered(object, TextEventArgs)`.\n- MiGame now targets .Net 5 and has updated code style for C#9.\n- Now depends on MiCore 1.0.0.\n- Now depends on MiInput 1.0.0.\n- Now depends on MiGfx 1.0.0.\n\n### Version 0.5.0\n- Changed SFML source to latest official SFML.Net repository.\n- Updated MiCore to version 0.5.0.\n- Updated MiInput to version 0.9.0.\n- Updated MiGfx to version 0.9.0.\n\n### Version 0.4.0\n- Renamed to `MiGame` and updated to depend on `MiCore`, `MiGfx` and `MiInput`.\n\n### Version 0.3.0\n- `GameWindow.Run(IGameState)` now returns an `ExitCode` that is stored in `GameWindow.ExitCode`.\n- `GameWindow.Exit(int)` has been replaced with `GameWindow.Exit(ExitCode)`.\n- `GameState` now contains the virtual methods `OnGainFocus(object,EventArgs)`,\n  `OnLoseFocus(object,EventArgs)`, `OnCloseRequest(object,EventArgs)` and \n  `OnTextEntered(object,TextEventArgs)` that are called on their respective window events.\n\n### Version 0.2.0\n- `GameWindow.OnUpdate(float)` has been replaced with `GameWindow.PreUpdate(float)` for updating\n  logic before the current game state and `GameWindow.PostUpdate(float)` for updating logic after.\n- `GameWindow.OnDraw()` has been replaced with `GameWindow.PreDraw()` for drawing content \n  before/underneath the current game state and `GameWindow.PostUpdate(float)` for drawing content\n  after/above.\n- When calling `StateManager.Push(IGameState)`, `GameState.OnStore()` is called for the current\n  state before `GameState.OnLoad()` is called for the new state, as originally intended.\n\n### Version 0.1.0\n- Initial release.",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#dependencygroup/net5.0/shardsoft.migfx",
          "@type": "PackageDependency",
          "id": "ShardSoft.MiGfx",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": "net5.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#ShardSoft.MiGame.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1110,
      "fullName": "ShardSoft.MiGame.nuspec",
      "length": 2690,
      "name": "ShardSoft.MiGame.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#lib/net5.0/MiGame.dll",
      "@type": "PackageEntry",
      "compressedLength": 8432,
      "fullName": "lib/net5.0/MiGame.dll",
      "length": 18944,
      "name": "MiGame.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#lib/net5.0/MiGame.xml",
      "@type": "PackageEntry",
      "compressedLength": 3319,
      "fullName": "lib/net5.0/MiGame.xml",
      "length": 26252,
      "name": "MiGame.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#licence.md",
      "@type": "PackageEntry",
      "compressedLength": 12300,
      "fullName": "licence.md",
      "length": 35826,
      "name": "licence.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.09.23.12.25/shardsoft.migame.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}