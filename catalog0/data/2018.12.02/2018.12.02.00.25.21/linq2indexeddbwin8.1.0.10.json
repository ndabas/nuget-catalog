{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.00.25.21/linq2indexeddbwin8.1.0.10.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kristof Degrave,Parashuram Narasimhan",
  "catalog:commitId": "86ace7e1-6710-4033-87fc-04b3f2e95d77",
  "catalog:commitTimeStamp": "2018-12-02T00:25:21.4317943Z",
  "created": "2012-08-02T17:26:43.98Z",
  "description": "With linq2indexeddb developpers can add, update, delete and search data on an easy way without having to think how to put up an connection, handeling transaction, etc. For now this project is still in development, so everything is subject to change.\n\nNow only the basic CRUD operations are supported. In the near future this will be extended to multiple where clauses, joins, ...\n\nSupports: \n- Internet Explorer 10+\n- FireFox 8+\n- Chrome 17+\n- Safari 5+\n- Opera 11.6+\n- iOs Safari 3.2+\n- Opera Mobile 11 +\n- Windows 8 Metro Apps\n\nUsing the Linq2IndexededDB viewer you can view the structure + content of your database while you are debugging your application.",
  "id": "Linq2IndexedDBWin8",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-02T00:25:00.277Z",
  "licenseUrl": "http://linq2indexeddb.codeplex.com/license",
  "listed": true,
  "packageHash": "SNryE/AjSlekN1qfC5CfoYtskzjudrnQsfLvr3XjW4yvb9l+OV1r2x3YcyMxl7xMHjy0B07EPITg/pQF06bcvw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30184,
  "projectUrl": "http://linq2indexeddb.codeplex.com/",
  "published": "2012-08-02T17:26:43.98Z",
  "releaseNotes": "* Added refresh method to the viewer\n* Viewer now gets refreshed when data in the indexeddb gets inserted, changed or deleted\n* Reworked the way where clauses are handled\n** The framework will no longer throw an error when an index doesn't exist and the filter uses an indexeddb filter. In this case the manual filters will be used.\n** The framework will now use the filters on the objectstore if the property to filter on is the keyPath.\n* Added merge posibility to the framework. (possibility to provide data with a key, and this will update the object with the given data for the given key.)",
  "requireLicenseAcceptance": false,
  "summary": "Linq2indexeddb makes it easier for JavaScript developpers to make use of the client side database: IndexedDB.\n\nInclusive a viewer to view the structure + content at all times",
  "title": "Linq2IndexedDB (Win 8)",
  "verbatimVersion": "1.0.10",
  "version": "1.0.10",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.00.25.21/linq2indexeddbwin8.1.0.10.json#Linq2IndexedDBWin8.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1250,
      "fullName": "Linq2IndexedDBWin8.nuspec",
      "length": 2198,
      "name": "Linq2IndexedDBWin8.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.00.25.21/linq2indexeddbwin8.1.0.10.json#content/Scripts/Linq2IndexedDB.js",
      "@type": "PackageEntry",
      "compressedLength": 16214,
      "fullName": "content/Scripts/Linq2IndexedDB.js",
      "length": 131914,
      "name": "Linq2IndexedDB.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.00.25.21/linq2indexeddbwin8.1.0.10.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "IndexedDB",
    "HTML5",
    "LINQ",
    "Linq2IndexedDB",
    "Windows8",
    "Metro"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}