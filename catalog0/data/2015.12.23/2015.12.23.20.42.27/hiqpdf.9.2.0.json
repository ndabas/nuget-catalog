{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.23.20.42.27/hiqpdf.9.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "HiQPdf Software",
  "catalog:commitId": "3cbe9e9c-87bf-4e02-9b55-93ec2f175014",
  "catalog:commitTimeStamp": "2015-12-23T20:42:27.1063268Z",
  "created": "2015-12-23T12:15:40.7Z",
  "description": "The HiQPdf Library for .NET offers you a modern, simple, fast, flexible and powerful tool to create complex and stylish PDF documents in your applications with just a few lines of code.\n\nThis version of the HiQPdf library can run both in 32-bit and 64-bit applications. When you convert very large HTML documents it is possible to run out of memory and in this case you should consider using the special package for x64-based systems.\n\nUsing the high quality HTML to PDF conversion engine you can easily design a document in HTML with CSS3, JavaScript, SVG or Canvas and then convert it to PDF preserving the exact content and style.\n\nThe HiQPdf Library for .NET offers you the fastest and the most precise HTML to PDF conversion technology to use in your Web and Desktop applications. The HTML to PDF Converter can convert to PDF any HTML document or URL that a modern browser can display, preserving all the CSS styles and executing all the JavaScript scripts found in the HTML document.\n\nBesides the common features a HTML to PDF Converter must have, the HiQPdf component has some unique features on the market like the full support for web fonts, the ability to convert only a selected region of the HTML document or the possibility to overlap multiple HTML documents in the same PDF while preserving the transparent backgrounds and images from the HTML document.\n\nThe HiQPdf Library is much more than just a HTML to PDF converter. The HTML to PDF conversion engine is the most important feature, but the HiQPdf software is a complete PDF library for .NET that you can use to create new PDF documents and add text and images at the desired positions in pages in a traditional manner, open and edit external PDF documents by adding new objects, create PDF documents with interactive forms, fill and submit interactive forms, merge and split PDF documents, extract text and images from PDF documents, search text in PDF documents, rasterize PDF pages to images.",
  "iconUrl": "http://www.hiqpdf.com/images/HiQPdf_64x64.ico",
  "id": "hiqpdf",
  "isPrerelease": false,
  "lastEdited": "2015-12-23T20:41:47.937Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://www.hiqpdf.com/SoftwareLicenseAgreeement.aspx",
  "listed": false,
  "packageHash": "T4g9gzS+i5LcvusQxbbPSUlda+McBe8/31aykCKGRQ6QD9XfeXlJzdb5aZDzitqk2DG0p7+yGeQ890xD56Om2w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 41497378,
  "projectUrl": "http://www.hiqpdf.com/",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "The HiQPdf Library for .NET offers you a modern, simple, fast, flexible and powerful tool to create complex and stylish PDF documents in your applications with just a few lines of code.",
  "title": "HiQPdf HTML to PDF Converter",
  "verbatimVersion": "9.2",
  "version": "9.2.0",
  "tags": [
    "HTML",
    "PDF",
    "Converter",
    "Library",
    ".NET",
    "to",
    "HTML-to-PDF",
    "HTML-to-PDF-Converter",
    "HTML-to-PDF-.NET",
    "HTML-to-PDF-Converter-.NET",
    "PDF-Library",
    "PDF-Library-.NET"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}