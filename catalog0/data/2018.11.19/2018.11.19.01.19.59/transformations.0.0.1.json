{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dmitri Rechetilov",
  "catalog:commitId": "e1304fee-807d-4cc5-a7dc-82669134a914",
  "catalog:commitTimeStamp": "2018-11-19T01:19:59.9120803Z",
  "copyright": "Copyright 2014 by Dmitri Rechetilov",
  "created": "2014-04-17T10:15:57.103Z",
  "description": "Conversion between data types. Envisaged as a possible alternative to the Universal Type Converter http://www.codeproject.com/Articles/248440/Universal-Type-Converter, with the provision for default values, and some extra features.",
  "id": "Transformations",
  "isPrerelease": false,
  "lastEdited": "2018-11-19T01:19:49.153Z",
  "listed": false,
  "packageHash": "X30EqTUk/yxsYCbigH6mPxIExR45UZAXn4mbiPZGalMBimtSvpwyuND51lzzzfHupgtrl73kPLS6t5jEWj2tPA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52510,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "\n* You don't need to reference the transformations namespace with Using statement (conversions are meant to be universal if you choose to use this).\n\nGenerally you would just do:\n\n  var newValue = oldValue.ConvertTo<newType>(optionalDefaultValue);\n\n* You can use TryConvertTo if you need to get the result of the conversion process.\n\n* You can do some conversions on DataTables and Lists , for example convert a data table to an object list, if the names of the columns match the object properties.\n\n* The date conversion is set to British date format by default, not the project's current format. This may have to change to make the library more \"universal\".\n\n* From some basic tests I have performed on universal type converter and this library, I found it to be a bit baster than the universal type converter...\n\n\n\nSome examples of use: \n********************************************\nstring valueInput = \"7F8C14B6-B3A8-4F71-8EFC-E5A7B35923B6\";\nGuid actual = valueInput.ConvertTo<Guid>(Guid.Empty);\n********************************************\nstring valueInput = \"0.1\";\nfloat actual = valueInput.ConvertTo<float>(0.0f);\n// result = 0.1f;\n********************************************\nstring valueInput = \"15/02/2014\";\nDateTime actual = valueInput.ConvertTo<DateTime>(new DateTime(2000, 01, 01));\n// result = new DateTime(2014, 02, 15);\n********************************************",
  "requireLicenseAcceptance": false,
  "summary": "Conversion between data types. Envisaged as an alternative to the Universal Type Converter, with additional provision for Guids, setting the default values, DataTable to object list conversion.",
  "title": "Transformations",
  "verbatimVersion": "0.0.1",
  "version": "0.0.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#Transformations.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1069,
      "fullName": "Transformations.nuspec",
      "length": 2531,
      "name": "Transformations.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#lib/Transformations.dll",
      "@type": "PackageEntry",
      "compressedLength": 20772,
      "fullName": "lib/Transformations.dll",
      "length": 60928,
      "name": "Transformations.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#src/BasicTypeConverter.cs",
      "@type": "PackageEntry",
      "compressedLength": 4193,
      "fullName": "src/BasicTypeConverter.cs",
      "length": 95433,
      "name": "BasicTypeConverter.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#src/CollectionConvertor.cs",
      "@type": "PackageEntry",
      "compressedLength": 8907,
      "fullName": "src/CollectionConvertor.cs",
      "length": 80218,
      "name": "CollectionConvertor.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#src/ConfigurationHelper.cs",
      "@type": "PackageEntry",
      "compressedLength": 793,
      "fullName": "src/ConfigurationHelper.cs",
      "length": 3904,
      "name": "ConfigurationHelper.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#src/ExtensionHelper.cs",
      "@type": "PackageEntry",
      "compressedLength": 3326,
      "fullName": "src/ExtensionHelper.cs",
      "length": 22482,
      "name": "ExtensionHelper.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#src/Helper.cs",
      "@type": "PackageEntry",
      "compressedLength": 713,
      "fullName": "src/Helper.cs",
      "length": 2583,
      "name": "Helper.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.19.01.19.59/transformations.0.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "typeconverter",
    "typeconversion",
    "typeconverting",
    "conversion",
    "converting",
    "converter",
    "convert",
    "convertible",
    "type",
    "types",
    "universal"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}