{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.05.47.18/ruleset.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "James Ottaway",
  "catalog:commitId": "b84e90bc-4ada-49a9-af50-e5df96738763",
  "catalog:commitTimeStamp": "2015-02-05T05:47:18.3636059Z",
  "copyright": "Copyright 2014",
  "created": "2014-04-20T23:26:15.36Z",
  "description": "        There are few things more rage-inducing than encountering huge chunks of conditional logic, which are often responsible for hugely important components of a given piece of software.\n        Rather than tightly coupling the given piece of logic with an explicit conditional flow, we can instead define the logic independently of any specific code, allowing for a much more flexible approach.",
  "id": "RuleSet",
  "isPrerelease": false,
  "lastEdited": "2014-04-20T23:30:54.54Z",
  "licenseUrl": "https://github.com/jamesottaway/RuleSet.cs/blob/master/LICENSE.md",
  "packageHash": "3uoGU4CB8w20Ijb48rOoJJqvxPUMkG/y+UuytBQYLMFMH2r9WfNHxcWpMcZIoUdXqOqLlKNfHNn9sl0GRD07ew==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5438,
  "projectUrl": "https://github.com/jamesottaway/RuleSet.cs",
  "published": "2014-04-20T23:26:15.36Z",
  "requireLicenseAcceptance": false,
  "summary": "Simplify hideous conditional blocks with declarative logic",
  "title": "RuleSet",
  "version": "0.0.1",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}