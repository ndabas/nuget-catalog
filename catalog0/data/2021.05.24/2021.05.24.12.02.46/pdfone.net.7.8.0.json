{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gnostice Information Technologies",
  "catalog:commitId": "74e660f2-6d4e-4fa3-a474-8af99880c6eb",
  "catalog:commitTimeStamp": "2021-05-24T12:02:46.6390849Z",
  "copyright": "Â© 2002-2021 Gnostice Information Technologies Private Limited. All rights reserved.",
  "created": "2021-05-24T12:00:23.777Z",
  "description": "Gnostice PDFOne .NET is a versatile PDF component suite for .NET developers to implement PDF-related tasks in their applications. PDFOne .NET can create, edit, view, print, search, redact, encrypt, decrypt, digitally sign, merge, split, reorganize, bookmark, annotate, watermark, and stamp PDF documents. PDFOne .NET can also create, edit, delete, fill and flatten PDF form fields. It also has an AJAX-powered Web-Forms PDF viewer component that can display and print PDF documents on any modern browser. PDFOne .NET is based entirely on managed code. \n\nPDFOne .NET does all of this without any external PDF software such as Adobe PDF library, Adobe Acrobat Professional or Ghostscript. PDFOne .NET can be used with C#, VB.NET, ASP.NET and other .NET development platforms. \n\nPDFOne components come with hundreds of functions and properties that put immense power in the hands of the developer. They hide the complexity of the PDF format and allows developers to quickly implement PDF-related features.",
  "iconUrl": "https://www.gnostice.com/images/ICON_pdfone_dot_net.png",
  "id": "PDFOne.NET",
  "isPrerelease": false,
  "lastEdited": "2021-05-24T12:02:29.17Z",
  "licenseUrl": "https://www.gnostice.com/PDFOne_dot_NET.asp?show=licenses",
  "listed": true,
  "packageHash": "AxAH/qJVHs5UaKME4SKBDn3vLUe6KAzp/sdWmzOgLHvf9avcfPWx19ZrYcZK0kmv2amQZsn3RJ7DDjaljdziCA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 3544365,
  "projectUrl": "http://www.gnostice.com/PDFOne_dot_NET.asp",
  "published": "2021-05-24T12:00:23.777Z",
  "releaseNotes": "Enhancement\n============\n- PDF Processing\n- Support reading of PDF encrypted with Unicode passwords.\n- Added UpdateContentInExistingAppearance flag to Free Text \nannotation to specify whether the existing appearance stream \nof Normal, Down, and Rollover appearances should be updated \nwith the new value set for the Contents property without \noverwriting/removing other elements in the appearance stream.\n- Removed dependency to Gnostice.XtremeImageEngine.dll assembly.\n- Removed dependency to Gnostice.XtremeFontEngine.dll assembly.\n- PDF Creation\n- While drawing TIFF (or TIFF page image of a multi-page TIFF) \nto PDF page the output image compression type is chosen \nautomatically (when the target image compression type is set \nto ImageCompressionFormat.Auto) based on the compression type \nof TIFF page image.\n- Support for adding PieceInfo data to PDF pages.\n\nFixed\n============\n- PDF Processing\n- Throws NPE while importing form fields values from FDF when \nthe FDF contains empty values for a combo box field.\n- Throws DivideByZero error when noItemCanHold is 0.\n- Throws ArrayIndexOutOfRange exception while importing FDF \ndocument into the loaded PDF document.\n- The border of Free Text annotation is getting removed in the \noutput document when the Free Text annotation in the loaded \ndocument does not contain either the Border or the BS entry.\n- Updating Contents value of existing FreeText annotation was \nnot reflected in the output document when the FreeText annotation \ncontains the Contents value in /RC entry (RichText Content) and \nnormal appearance of /AP entry.\n- Callout Line vertices of FreeText annotation are updated with \nincorrect coordinates in the output document when the FreeText \ncontents are modified.\n- Digital signature applied to a blank signature field does not \nshow the validation result appearance (such as tick mark) when \nthe signature field's BackGroundColor property is set with a \nsolid color.\n- Existing Stamp annotations are always updated with NoRotate \nflag resulting in incorrect rotation in the output PDF document.\n- Updated FreeText annotations are not shown or shown at an \nincorrect location in the output PDF document when the existing \nFreeText annotation is rotated which is added on a rotated page.\n- Updated FreeText annotations are rendered blank in the output \ndocument when the existing FreeText annotation's fill color is \nset to white color in the /DA entry of the annotation dictionary.\n- Setting a new font for the existing form field in the loaded \ndocument does not have any effect.\n- Calling Save method subsequently multiple times for form fields \ndocuments results in corrupt output documents that miss some of \nthe form fields' Normal appearance streams.\n- While writing a dictionary if the Value is found null then write \nPDFNull in that place.\n- RedactText method overload which takes replaceString argument \ndoes not write the replaceString at the correct redacted text \nlocation.\n- Throws IndexOutOfRangeException while converting PDF to image, \nwhen the PDF document with text which uses WinAnsi encoded embedded \nTrueType font contains characters that are not available in the \nLatin character set.\n- Throws NullReferenceException while signing documents with custom \nappearance when the custom appearance contains text content that uses \nTrueType fonts.\n- System.ArgumentException when drawing TIFF image to PDF page.\n- Throws System.InvalidCastException while reading actions of Link \nannotation when the action object is of Array type.\n- Memory leak when drawing TIFF images to PDF. Locked bitmap data was \nnot being unlocked causing a leak of system memory.\n- Unexpected stream closure when document is closed.\n- Throws System.IndexOutOfRangeException while drawing TIFF images \non a PDF page when the TIFF image is of Format8bppIndexed pixel format.\n- Drawing TIFF image on PDF page results in blacked out page when the \nTIFF image is of Format4bppIndexed pixel format.\n- While converting from images to PDF, the images with Format1bppIndexed \npixel format are not compressed using CCITTFax decode when the \nImageCompressionType is set to Auto.\n- The value of the parameter 'password' is not used when the methods \nLoad(Stream, password) and Load(byte[], password) in PDFDocument class \nare used, hence throwing the \"InvalidPassword\" exception.\n- Throws OutOfMemoryError while redacting text in the document when \nthere are several thousands of pages in the document.\n- Optimized performance of text search and redaction for the documents \nhaving text contents that use embedded fonts.\n- Occurs StackOverFlow error while reading an object when the object \ncontains an indirect reference number as the content. \n- Throws ArgumentOutOfRangeException while saving the loaded document \nwhen any of the existing objects contains a reference to an object \nnumber which is larger than the MaxValue of integer data type.\n- Invalid password exception when attempting to load some encrypted \nPDF files when the \"revision\" of the encryption is 3 or higher..\n- Changing of Font for an existing form field does not have any \neffect in the output document.\n- Text form fields in the loaded document updated with Unicode \ntext value do not show up correctly in the output document.\n- Throws System.ArgumentException while saving the document for \nthe second time when the document contains a digital signature \nadded to it.\n- Throws XmlException while filling and saving form fields in a \nloaded document when the document contains XFA with XML streams \nhaving Unicode characters.\n- Deletion of one or more form fields and flattening of the \nrest of the form fields in a document results such that the \nform fields marked for deletion have also been flattened, \nhence, deletion is not honored.\n- Flattening of form fields in a document produces a corrupt \noutput document when the loaded document contains /Perms \ndictionary in the Catalog dictionary.\n- PDF Creation\n- Throws NPE while creating a new document with Stamp annotation.\n- Page rotation cannot be set to 0 degrees.\n- Shapes that are drawn using PDFPath class are not filled \nin the output document.\n- Throws \"Parameter is not valid\" exception while creating \nPDFFont object using the parameters fontFamily (string) \nand fontSize (float).\n- While writing text with rotation the text is not rotated \ncorrectly using the default point of rotation (vertically \nand horizontally center).\n- When the document is saved multiple times with new contents \n(such as text, images, and shapes) added between each save, \nthe new contents added after the first save are discarded in \nthe subsequently saved output documents.\n- PDF Rendering\n- Text is rendered with overlapping and spacing issues when \nthe font which is used to render the text does not contain a \nFirstChar entry in the font dictionary.\n- Incorrect color is being rendered for contents that follow \nan unsupported pattern object set in the graphics state.\n- Throws \"A generic error occurred in GDI+\" error when the \npage content stream contains clipping operation with the \noperands specified using large values which can not be \nhandled by GDI+.\n- Images are rendered without honoring the transparency value \nset in the graphics state (i.e., the value set for /ca entry \nin the ExtGState resource dictionary).\n- DCT image having CCITT image as smask is rendered with \ninverted color.\n- 1-BPC Type1 images are not rendered when the ImageMask \nflag in the image dictionary is true.\n- Text content on PDF pages that use embedded OpenType fonts \nare not rendered on some systems.\n- System.AccessViolationException when attempting to extract \nimages.\n- Inline images compressed using the RunLength filter are not \nrendered.\n- Type1 font text with Standard encoding are not rendered.\n- Text extraction results such that space characters are added \nbetween words for Type3 text documents.\n- Text extraction results such that unintended space characters \nare added between characters of words for Identity CID font text \nwhen the text is specified using the TJ operator with individual \nglyph positioning values.\n- Throws ClassCastException while rendering images with Indexed \nColorspace if the Index color values are specified as a string \nobject inside another Indirect Reference object.\n- Several page contents are not rendered when a page content \nstream contains inline image at the end of the stream for which \nRestoreGraphicsState operator is specified in the subsequent \ncontent stream.\n- System.FormatException is thrown when trying to view a PDF \nfile containing a non-standard date-time string.\n- Throws InvalidCastException while rendering form fields \nwhen the values of the Rectangle array in the form field \ndictionary are specified as Indirect Reference objects.\n- Incorrect text rendered when the text uses non-symbolic \nType1 embedded font for which encoding is not specified.\n- Barcode missing some bars when rendering a PDF file.\n- Blurred and overlapped text when converting a PDF to image.\n- Text is not rendered when the text uses a symbolic \nembedded TrueType font for which the embedded font program \nstream is corrupted.",
  "requireLicenseAcceptance": true,
  "summary": "PDFOne .NET can create, edit, view (WinForms and ASP.NET), print, search, redact, encrypt, decrypt, digitally sign, merge, split, reorganize, bookmark, annotate, watermark, and stamp PDF Documents..",
  "title": "Gnostice PDFOne .NET",
  "verbatimVersion": "7.8.0",
  "version": "7.8.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#PDFOne.NET.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4279,
      "fullName": "PDFOne.NET.nuspec",
      "length": 11581,
      "name": "PDFOne.NET.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/Gnostice.PDFOne.dll",
      "@type": "PackageEntry",
      "compressedLength": 2529486,
      "fullName": "lib/net40/Gnostice.PDFOne.dll",
      "length": 7447552,
      "name": "Gnostice.PDFOne.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/Gnostice.PDFOne.PDFPrinter.dll",
      "@type": "PackageEntry",
      "compressedLength": 29594,
      "fullName": "lib/net40/Gnostice.PDFOne.PDFPrinter.dll",
      "length": 52736,
      "name": "Gnostice.PDFOne.PDFPrinter.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/Gnostice.PDFOne.Windows.PDFBookmarks.dll",
      "@type": "PackageEntry",
      "compressedLength": 26491,
      "fullName": "lib/net40/Gnostice.PDFOne.Windows.PDFBookmarks.dll",
      "length": 48128,
      "name": "Gnostice.PDFOne.Windows.PDFBookmarks.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/Gnostice.PDFOne.Windows.PDFViewer.dll",
      "@type": "PackageEntry",
      "compressedLength": 52070,
      "fullName": "lib/net40/Gnostice.PDFOne.Windows.PDFViewer.dll",
      "length": 121856,
      "name": "Gnostice.PDFOne.Windows.PDFViewer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/BouncyCastle.Crypto.dll",
      "@type": "PackageEntry",
      "compressedLength": 746467,
      "fullName": "lib/net40/BouncyCastle.Crypto.dll",
      "length": 2236416,
      "name": "BouncyCastle.Crypto.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/Ionic.Zlib.dll",
      "@type": "PackageEntry",
      "compressedLength": 34342,
      "fullName": "lib/net40/Ionic.Zlib.dll",
      "length": 102400,
      "name": "Ionic.Zlib.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#lib/net40/log4net.dll",
      "@type": "PackageEntry",
      "compressedLength": 108743,
      "fullName": "lib/net40/log4net.dll",
      "length": 275968,
      "name": "log4net.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#Readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 219,
      "fullName": "Readme.txt",
      "length": 314,
      "name": "Readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.05.24.12.02.46/pdfone.net.7.8.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "redact",
    "digitally",
    "create",
    "view",
    "annotate",
    "decrypt",
    "PDF",
    "viewer",
    ".NET",
    "encrypt",
    "reorganize",
    "stamp",
    "bookmark",
    "print",
    "ASP",
    "merge",
    "watermark",
    "search",
    "Viewer",
    "edit",
    "WInforms",
    "split",
    "sign"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}