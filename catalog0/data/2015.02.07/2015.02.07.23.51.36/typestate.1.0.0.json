{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.23.51.36/typestate.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Erik Onarheim",
  "catalog:commitId": "27aaff5b-fa58-4558-80a7-9d112ae000ac",
  "catalog:commitTimeStamp": "2015-02-07T23:51:36.1850927Z",
  "copyright": "2014",
  "created": "2014-05-03T03:25:54.617Z",
  "description": "TypeState is a small finite state machine implemented in TypeScript.",
  "id": "TypeState",
  "isPrerelease": false,
  "lastEdited": "2014-05-03T03:29:12.07Z",
  "licenseUrl": "https://github.com/eonarheim/TypeState/master/blob/LICENSE.md",
  "packageHash": "+T0JJtHv3ATQBwwydJudC2V8XoSXDzP3TFKpGexsvOzZKeYe/kAfrOm8EdhCjxpJkp66d8ExcuKgpjBDFokgXQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8244,
  "projectUrl": "https://github.com/eonarheim/TypeState",
  "published": "2014-05-03T03:25:54.617Z",
  "requireLicenseAcceptance": false,
  "summary": "TypeState is a small finite state machine implemented in TypeScript.",
  "title": "TypeState",
  "version": "1.0.0",
  "tags": [
    "\"Finite",
    "State",
    "Machine\"",
    "TypeScript",
    "JavaScript"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}