{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.20.01.19.53/azure.storage.slazure.1.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SysSurge AS",
  "catalog:commitId": "6433bfc9-9900-43d4-a93c-0735a916d5ac",
  "catalog:commitTimeStamp": "2015-08-20T01:19:53.9349325Z",
  "copyright": "© 2014-2015 SysSurge AS",
  "created": "2015-08-20T01:18:55.1Z",
  "description": "Slazure is a powerful dynamically typed data client library that allows for schema-free access to the Microsoft® Azure Table Service. \n\nReduce development time by writing less code. Slazure's schema-free approach to data eliminates the need for strongly typed entity definitions, ORM's, and ODM's - with Slazure, your code defines your schema.\n\nRun dynamically typed declarative queries on a schema-free data model. Compose dynamically typed LINQ-queries on the fly at run-time with Slazure's powerful Linq Provider.\n\nWriting high-performance queries is easy with Slazure's query optimizer\n\nThe Slazure Linq Provider's query optimizer builds fast OData queries that retrieves only what is requested. Retrieve only the entity properties you need with query projections rather that the whole entity. Retrieve only a subset of the data set rather than the whole set. Skip part of the data set rather than reading from the beginning. Order entities on the storage before they are retrieved rather than retrieving the whole data set and sorting it afterwards.\n\nSlazure's Dynamic Expression API supports Substitution Values through a parameter array. The expression language supports Logical & Additive operators. Accessible types support method & constructor invocations. Use the object model API to query the storage.\n\nSee also the free Slazure Light edition.",
  "iconUrl": "http://meronymy.blob.core.windows.net/publicfiles/www_meronymy_com/slazure/images/nuget-icon-v1-1-0.png",
  "id": "Azure.Storage.Slazure",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://www.syssurge.com/Products/Slazure/Trial-license.aspx",
  "packageHash": "M7OawhfYQMKJ70oIO7BllUFvyklf35VZ+HL7WoIzbzZ7+Q48omFJ4gteGl/9Q5rKa5pMrSl5ADiy5Y4VVM/thg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 478336,
  "projectUrl": "http://www.slazure.com/",
  "published": "2015-08-20T01:18:55.117Z",
  "requireLicenseAcceptance": true,
  "summary": "The most flexible way to work with the Azure Storage, your code defines your schema.",
  "title": "Azure Storage Slazure",
  "version": "1.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.20.01.19.53/azure.storage.slazure.1.1.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.20.01.19.53/azure.storage.slazure.1.1.1.json#dependencygroup/windowsazure.storage",
          "@type": "PackageDependency",
          "id": "WindowsAzure.Storage",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.20.01.19.53/azure.storage.slazure.1.1.1.json#dependencygroup/partial.key.verification",
          "@type": "PackageDependency",
          "id": "Partial.Key.Verification",
          "range": "[1.0.0, )"
        }
      ]
    }
  ],
  "tags": [
    "Azure",
    "Storage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}