{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SIL International",
  "catalog:commitId": "a154615a-850f-4cfb-9b5d-30dedf542aea",
  "catalog:commitTimeStamp": "2024-04-10T07:08:57.0965985Z",
  "contentFiles": "",
  "copyright": "Copyright Â© 2010-2023 SIL International",
  "created": "2023-11-16T21:20:05.44Z",
  "description": "SIL.Archiving contains Windows Forms UI elements and classes for archiving data to REAP using the RAMP application.",
  "id": "SIL.Archiving",
  "isPrerelease": true,
  "lastEdited": "2024-04-10T07:07:37.617Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": false,
  "packageHash": "iXqRReca0HmXTTnjDkbpsoxv5Fp/N7umpTvhegBzmcIW64xnKhX7UF1Ypy2L/LoPqQ1cqpkncgzO50fSKpOrqQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 103579,
  "projectUrl": "https://github.com/sillsdev/libpalaso",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Changes since version 12.0.1\n\nAdded:\n- [SIL.Core] `RobustFile.Open`, `RobustFile.AppendAllText`, `RobustFile.WriteAllLines`, `RobustFile.GetAccessControl`, `RobustIO.EnumerateFilesInDirectory`, `RobustIO.EnumerateDirectoriesInDirectory`, `RobustIO.EnumerateEntriesInDirectory`, `RobustIO.RequireThatDirectoryExists`, `RobustIO.GetFileStream`, `RobustIO.ReadAllTextFromFileWhichMightGetWrittenTo`, and `RobustIO.IsFileLocked` methods\n- [SIL.Core.Desktop] `RobustImageIO.GetImageFromFile` method\n- [SIL.Windows.Forms] `ImageToolboxControl.ImageChanged` (selected or cropped) and `ImageToolboxControl.MetadataChanged` events\n- [SIL.Windows.Forms] Text box to edit `AttributionUrl` in `MetadataEditorControl`\n- [SIL.Windows.Forms] Interop.WIA.dll for MSIL (doesn't seem to work with 32-bit apps, so the existing dll remains unchanged)\n- [SIL.Scripture] Made static methods TryGetVerseNum, ParseVerseNumberRange, and ParseVerseNumber public\n- [SIL.Core] `CanWriteToDirectories` and `CanWriteToDirectory`\n- [SIL.Windows.Forms] `CanWriteToDirectories`, `CanWriteToDirectory` and `ReportDefenderProblem`\n- [SIL.Core] `StrLengthComparer`, IEnumerable<T>.ToString extension methods, IList<T>.ContainsSequence<T> extension method\n- [SIL.Windows.Forms] `ConfirmFileOverwriteDlg`\n- [SIL.Windows.Forms] several constructors and `Restore` method to `WaitCursor`\n- [SIL.Media.NAudio] added an overload to `BeginMonitoring` with `catchAndReportExceptions` parameter\n\nChanged:\n- [SIL.WritingSystems] Updated langtags.json and ianaSubtagRegistry.txt\n- [SIL.Core] Enhanced ErrorReport.GetOperatingSystemLabel method to report Windows 11+ and list the version as well.\n- [SIL.Core] Enhanced RetryUtility.Retry methods to optionally improve debugging messages, and fixed existing RobustFile and RobustIO methods to use the new optional debugging parameter\n- [SIL.Media] Changed the FrameRate reported in VideoInfo from FrameRate to AvgFrameRate.\n- [SIL.Windows.Forms] Fixed spelling error in ImageGalleryControl, renaming SetIntialSearchTerm to SetInitialSearchTerm.\n- [SIL.Windows.Forms] Made `WaitCursor` class (which used to contain only static methods) implement IDisposable\n\nFixed:\n- [SIL.Windows.Forms.ClearShare] Fixed Metadata.LoadProperties to catch the ArgumentOutOfRangeException thrown by TagLib.File.Create when unknown data is found in the IPTC profile segment.  The rest of the metadata (Exif / XMP) is likely to be okay, but won't be available until TagLib is fixed to allow this.  Not having the metadata available shouldn't prevent using the image.  Note that clients can now read the exception caught while loading if so desired.\n- [SIL.Windows.Forms.WritingSystem.WSIdentifiers] Changed ComboBox controls in WSIdentifierView and ScriptRegionVariantView to DropDownList style to prevent accidental editing that shouldn't happen\n- [SIL.Windows.Forms.ClearShare] Make Metadata.Write (and a few other methods) more robust\n- [SIL.Core.Desktop] Make FileUtils.ReplaceFileWithUserInteractionIfNeeded robust\n- [SIL.Core] Make RobustFile.ReplaceByCopyDelete truly robust\n- [SIL.Core] Make RetryUtility retry for exceptions that are subclasses of the ones listed to try. For example, by default (IOException) it will now retry for FileNotFoundException.\n- [SIL.Windows.Forms] Spelling of `CreativeCommonsLicense.IntergovernmentalOrganizationQualifier`\n- [SIL.Windows.Forms] Fixed internationalization problem: SettingsProtection.LauncherButtonLabel was used as ID for two different strings.\n- [SIL.Windows.Forms] Fix 4 img metadata methods that could fail due to cloud or scanning interference\n- [SIL.Windows.Forms] Fixed error in BetterGrid.OnCellContentClick to make it so the delete button works correctly if there is no \"new row.\"\n\nRemoved:\n- [SIL.Windows.Forms] ImageGalleryControl.InSomeoneElesesDesignMode (seemingly unused and misspelled)\n- [SIL.Windows.Forms] Checkbox for `IntergovernmentalOrganizationQualifier` from `MetadataEditorControl`\n\nSee full changelog at https://github.com/sillsdev/libpalaso/blob/master/CHANGELOG.md",
  "repository": "",
  "verbatimVersion": "13.0.0-beta0087",
  "version": "13.0.0-beta0087",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1/sil.core.desktop",
          "@type": "PackageDependency",
          "id": "SIL.Core.Desktop",
          "range": "[13.0.0-beta0087, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1/sil.core",
          "@type": "PackageDependency",
          "id": "SIL.Core",
          "range": "[13.0.0-beta0087, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1/sil.windows.forms",
          "@type": "PackageDependency",
          "id": "SIL.Windows.Forms",
          "range": "[13.0.0-beta0087, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1/sil.writingsystems",
          "@type": "PackageDependency",
          "id": "SIL.WritingSystems",
          "range": "[13.0.0-beta0087, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1/dotnetzip",
          "@type": "PackageDependency",
          "id": "DotNetZip",
          "range": "[1.16.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#dependencygroup/.netframework4.6.1/l10nsharp",
          "@type": "PackageDependency",
          "id": "L10NSharp",
          "range": "[6.0.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.6.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#SIL.Archiving.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2436,
      "fullName": "SIL.Archiving.nuspec",
      "length": 5791,
      "name": "SIL.Archiving.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#lib/net461/SIL.Archiving.dll",
      "@type": "PackageEntry",
      "compressedLength": 83244,
      "fullName": "lib/net461/SIL.Archiving.dll",
      "length": 221696,
      "name": "SIL.Archiving.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#content/IMDI/Schema/IMDI_3_0_Fix.py",
      "@type": "PackageEntry",
      "compressedLength": 1787,
      "fullName": "content/IMDI/Schema/IMDI_3_0_Fix.py",
      "length": 7859,
      "name": "IMDI_3_0_Fix.py"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#contentFiles/any/net461/IMDI/Schema/IMDI_3_0_Fix.py",
      "@type": "PackageEntry",
      "compressedLength": 1787,
      "fullName": "contentFiles/any/net461/IMDI/Schema/IMDI_3_0_Fix.py",
      "length": 7859,
      "name": "IMDI_3_0_Fix.py"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#contentFiles/any/any/SIL.Archiving.dll.config",
      "@type": "PackageEntry",
      "compressedLength": 537,
      "fullName": "contentFiles/any/any/SIL.Archiving.dll.config",
      "length": 1217,
      "name": "SIL.Archiving.dll.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.10.07.08.57/sil.archiving.13.0.0-beta0087.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11514,
      "fullName": ".signature.p7s",
      "length": 11514,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}