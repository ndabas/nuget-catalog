{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "7a90715c-746d-4c0a-94d2-3f61ac5031b9",
  "catalog:commitTimeStamp": "2019-06-10T17:48:43.6791981Z",
  "copyright": "Copyright 2019",
  "created": "2019-06-10T17:41:23.83Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2019-06-10T17:48:34.263Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "7y7aPiLC4a2gntfVizeX45GxyHswt1TVyLPdsllBU8r+Ft4T12ywUN/7u35QYr1mHozPHocBs8u5pS0OMGjHkA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 453430,
  "published": "2019-06-10T17:41:23.83Z",
  "releaseNotes": "Unsigned Assembly\n\nRevised functions x.toString, x.ToFile, new bf(string x...). Added functions string ToFile(string FilePath, int BaseOut, bool Prettify, long Base10Precision, bool PrettifyTheExponent, bool WriteMetadata, string CommentToAdd) and public bf(string FilePath, out FileMetaData MetaData). \nAdded public struct FileMetaData which allows access to the Base, Precision, TimeStamp, AssemblySource information, and Comments which can be added to the begining of an exported file using the previously mention x.ToFile function. The public bf(string FilePath, out FileMetaData MetaData) function gets the necessary Base and Precision information from this metadata. The string returned from functions x.ToFile(..) is text which informs as to whether the output results did not need rounding, or were/were not rounded. (Rounding can be problematic when writing to file a large-Precision value.)\n\nOne of the reasons for the revised functions was to try to minimize errors, inefficiencies, and out-of-memory problems when exporting or importing data with associated Precision setting in excess of 200,000,000 decimal digits.\n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2019) and using Mpir.NET for the underlying integer math, supplies a variety of math functions and utilities with precisions at least as large as 2,000,000 base 10 digits. The underlying objects are bf (for 'big float' real values comprised of an mpz_t extended integer part from Mpir.NET and a base 2 exponent), bcr (for complex numbers expressed in the rectangular coordinates of a bf real part and a bf imaginary part), and bcp (for complex numbers expressed in the polar coordinates of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.4.11",
  "version": "0.4.11",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1509,
      "fullName": "LongCalc.nuspec",
      "length": 3202,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 2659,
      "fullName": "LICENSE.txt",
      "length": 7814,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 40355,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 121856,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.06.10.17.48.43/longcalc.0.4.11.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}