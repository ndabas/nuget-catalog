{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jan-Joost van Zon",
  "catalog:commitId": "3698e126-6343-42a8-b8a0-244d01dc6fe7",
  "catalog:commitTimeStamp": "2018-12-18T14:24:10.0063365Z",
  "copyright": "Copyright Â© 2013 - 2018 Jan-Joost van Zon",
  "created": "2018-03-04T16:28:35.273Z",
  "description": "Contains many exception classes for common basic errors.",
  "iconUrl": "https://raw.githubusercontent.com/jjvanzon/JJ.Framework/master/jj-icon-64x64.png",
  "id": "JJ.Framework.Exceptions",
  "isPrerelease": false,
  "lastEdited": "2018-12-18T14:24:04.413Z",
  "licenseUrl": "https://raw.githubusercontent.com/jjvanzon/JJ.Framework/master/LICENSE.TXT",
  "listed": true,
  "packageHash": "uCRoBJe9twtdoL4spowBciM/qTvEoCHlDOc4OUm3y1HfezhBw7Yhq1fn0CuZmw09eTdQKVylwLeuD0lPl7cq/Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22231,
  "projectUrl": "https://github.com/jjvanzon/JJ.Framework/tree/master/Framework/Exceptions",
  "published": "2018-03-04T16:28:35.273Z",
  "requireLicenseAcceptance": false,
  "summary": "Contains many exception classes for common basic errors, for instance:\n\n* Null errors, null or white space errors, collection contains nulls, etc.\n* Parsing errors, type casting errors\n* Not found, not unique errors\n* Greater than or equal errors and the like\n* Files not found, folder already exists, etc.\n\nThere are several advantages over using these exception types.\n\n* Error messages are clear.\n* Concise syntax, without sacrificing performance.\n* You can pass an expression, whose text becomes part of the message.\n* Lose no time typing and trying to come up with a good message.\n\nFor example:\n\n\tthrow new NullException(() => myParent.MyChildren[0].MyProperty);\n\nWill produce an exception message:\n\n\t\"myParent.MyChildren[0].MyProperty is null.\"\n\nThis is where it surpasses the possibilities of the C#6 nameof operator, which can only mention a name, not a whole expression.\n\nAnother example:\n\n\tthrow new NotFoundException<Customer>(new { customerNumber });\n\nwill produce an exception message:\n\n\t\"Customer with key { customerNumber = 1234 } not found.\"\n\nAs such it is fit for use with any composite key you might have.\n\t\t\t\nSome more examples:\n\t\t\t\n\tthrow new NotUniqueException<Product>(productNumber);\n\tthrow new ValueNotSupportedException(myCountryEnumValue);\n\tthrow new FileAlreadyExistsException(\"text.txt\");\n\tthrow new NullOrWhiteSpaceException(() => myParam.MyProp);\n\nThose produce the exception messages:\n\t\t\t\n\theight is less than 0.\n\tProduct with key A123 not unique.\n\tCountry value 'Undefined' is not supported.\n\tFile 'test.txt' already exists.\n\tmyParam.MyProp is null or white space.\n\nHere is an example with the value check in it:\n\n\tif (height < 0) throw new LessThanException(nameof(height), 0);\n\nThis produces the exception message:\n\t\t\t\t\n\theight is less than 0.",
  "title": "JJ.Framework.Exceptions",
  "verbatimVersion": "1.1.0.31224",
  "version": "1.1.0.31224",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#dependencygroup/system.valuetuple",
          "@type": "PackageDependency",
          "id": "System.ValueTuple",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#dependencygroup/jj.framework.text",
          "@type": "PackageDependency",
          "id": "JJ.Framework.Text",
          "range": "[1.1.0, 1.2.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#dependencygroup/jj.framework.reflection",
          "@type": "PackageDependency",
          "id": "JJ.Framework.Reflection",
          "range": "[1.1.0, 1.2.0)"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#JJ.Framework.Exceptions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1362,
      "fullName": "JJ.Framework.Exceptions.nuspec",
      "length": 3163,
      "name": "JJ.Framework.Exceptions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#README.MD",
      "@type": "PackageEntry",
      "compressedLength": 866,
      "fullName": "README.MD",
      "length": 1865,
      "name": "README.MD"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#lib/net45/JJ.Framework.Exceptions.dll",
      "@type": "PackageEntry",
      "compressedLength": 6895,
      "fullName": "lib/net45/JJ.Framework.Exceptions.dll",
      "length": 23552,
      "name": "JJ.Framework.Exceptions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#lib/net45/JJ.Framework.Exceptions.xml",
      "@type": "PackageEntry",
      "compressedLength": 1542,
      "fullName": "lib/net45/JJ.Framework.Exceptions.xml",
      "length": 24810,
      "name": "JJ.Framework.Exceptions.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.14.24.10/jj.framework.exceptions.1.1.0.31224.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "exceptions",
    "errors",
    "expressions",
    "strongly-typed",
    "null",
    "white",
    "space",
    "parse",
    "type",
    "casting",
    "not",
    "found",
    "unique",
    "comparison",
    "file",
    "folder"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}