{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.09.11.32/nx.dbutility.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tiny",
  "catalog:commitId": "665839a3-8c70-4564-8caf-a87b22d68523",
  "catalog:commitTimeStamp": "2015-02-07T09:11:32.0255176Z",
  "copyright": "Copyright Tiny 2014",
  "created": "2014-12-17T02:44:06.737Z",
  "description": "A db util for easy sql query",
  "iconUrl": "http://sandsea.info/project/dbutility/icon",
  "id": "Nx.DBUtility",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://sandsea.info/project/dbutility/license",
  "packageHash": "EY+fObRVZMHX79e1piHV7xeQ7ap+kntmUyJkeD7MDrm3k+LaUw0GyxvuKvy4qdlMSlDkvtOGY7GV+Z3AYVOLFw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16949,
  "projectUrl": "http://sandsea.info/project/dbutility/",
  "published": "2014-12-17T02:44:06.737Z",
  "releaseNotes": "//先执行存储过程以支持翻页功能，请勿修改存储过程名称\n      \n        --用于DBUtility翻页功能 BEGIN\n        CREATE PROCEDURE [dbo].[sp_DataGroupPageForDuoTable]\n        @rowcount\t\t\t\tint output,\t\t--总记录数，共有几条信息\n        @PageSize\t\t\t\tint,\t\t\t--每页显示记录条数\n        @PageIndex\t\t\t\tint,\t\t\t--第几页\n        @wheresql\t\t\t\tnvarchar(1000),\t--SQL条件语句\n        @ordersql\t\t\t\tnvarchar(200),\t--SQL排序语句\n        @TableName\t\t\t\tnvarchar(1000),\t--查询表名称\n        @filed\t\t\t\t\tnvarchar(1000)\n        \n        AS\n        declare @mainsql\t\tnvarchar(4000)\n        declare @fieldsql\t\tnvarchar(4000)\n        declare @rownumbersql\tnvarchar(4000)\n        declare @exesql\t\t\tnvarchar(4000)\n        declare @countsql\t\tnvarchar(4000)\n\n        set @mainsql = @TableName +' where 1=1 ' + @wheresql\n        set @fieldsql = ' '+@filed+' '\t\t\t\t\t\t   \n        set @rownumbersql = 'select row_number() over('+@ordersql+') as pos,'+@fieldsql+' from '+@mainsql\n        set @exesql = 'SELECT * FROM ('+@rownumbersql+') AS sp WHERE pos BETWEEN '+str((@PageIndex-1)*@PageSize+1)+' AND '+str(@PageIndex*@PageSize)\n        set @countsql='select @totalcount=count(*) from '+ @mainsql\n        print @exesql\n        exec sp_executesql @countsql,N'@totalcount int out',@rowcount output\n        SET NOCOUNT ON;\n        exec (@exesql)\n        SET NOCOUNT OFF;\n        --用于DBUtility翻页功能 END\n        \n      //配置App.config or web.config\n        <configuration>\n          <appSettings>\n            <add key=\"ConnectionString\" value=\"Data Source=192.168.1.99;Initial Catalog=testdb;User ID=sa;Password=yourpwd\"/>\n          </appSettings>\n        </configuration>\n        \n      //Demo  \n      static void Main(string[] args)\n      {\n          //翻页读取数据\n          SqlPagedData pagedData = new SqlPagedData(\n              startPageIndex: 1,\n              pageSize: 200,\n              sqlWhere: \" and cid>10000\",\n              tableName: \"Client\",\n              sqlOrderBy: \" order by cid desc  \",\n              fileds: \"cid,tel,email\");\n\n          while (true)\n          {\n              var item = pagedData.Next();\n              if (item == null)\n              {\n                  break;\n              }\n              //注意这里动态数据的属性，是大小写敏感的。我只测试了sql2005。\n              //情况1：如果构造函数时传入的fields为星号(*), 那么属性名的大小写必须和数据库字段大小写相同。\n              //情况2：如果构造函数时传入的fields为自定义，如本例的（cid,tel,email）那么属性名的大小写必须和构造类时传入的参数相同。\n              Console.WriteLine(\"{0} {1} {2} i:{3}\", item.cid, item.tel, item.email, item.tel + \" i:\" + pagedData.Position.PageIndex);\n          }\n\n          //如果数据源没有改变，可以随时保留位置以便下次继续处理剩余数据\n          var pos = pagedData.Position;\n\n          //模拟下次处理\n          pagedData = new SqlPagedData(pos);\n          while (true)\n          {\n              var item = pagedData.Next();\n              if (item == null)\n              {\n                  break;\n              }\n              Console.WriteLine(\"{0} {1} {2} i:{3}\", item.cid, item.tel, item.email, item.tel + \" i:\" + pagedData.Position.PageIndex);\n          }\n      }",
  "requireLicenseAcceptance": false,
  "title": "Nx.DBUtility",
  "version": "2.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.09.11.32/nx.dbutility.2.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.09.11.32/nx.dbutility.2.1.0.json#dependencygroup/nx",
          "@type": "PackageDependency",
          "id": "Nx",
          "range": "[2.4.1.3, )"
        }
      ]
    }
  ],
  "tags": [
    "DBUtility",
    "DataBase",
    "Sql",
    "Tiny",
    "Nx"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}