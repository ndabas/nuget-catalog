{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ivan Stoychev",
  "catalog:commitId": "e66e96c1-3914-4019-b980-0fb336862ed5",
  "catalog:commitTimeStamp": "2022-05-05T21:07:48.9599171Z",
  "copyright": "Copyright (c) 2022 Ivan Stoychev. All rights reserved.",
  "created": "2022-05-05T21:00:49.97Z",
  "description": "A .Net Core library of useful extension methods for the \"string\" class in C#.",
  "iconFile": "Nuget Icon.png",
  "id": "IvanStoychev.TestPackage",
  "isPrerelease": false,
  "lastEdited": "2022-05-05T21:07:16.46Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": false,
  "packageHash": "gszPsMQ7HNcl8tSsih5SnkFX44q64Xwg6O4YlTN4PP+CPHFTy3iUi0VUBgllrNKBYW0uFwZquDIzR2VeFuiL6w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 29986,
  "projectUrl": "https://github.com/IvanStoychev/IvanStoychev.Useful.String.Extensions/wiki",
  "published": "1900-01-01T00:00:00Z",
  "readmeFile": "NUGET README.md",
  "releaseNotes": "游릭 Updated to .Net 6.\n游릭 Updated NuGet Icon.\n游릭 Added NuGet README.\n游릭 Improved all method validation and thrown exception messages. Now any problems will be caught better and any exceptions caused will contain more useful information.\n游릭 Embedded debug symbols, so that the library source code can be stepped through during debugging.\n游릭 Added `Trim(string trimString, StringComparison stringComparison = StringComparison.CurrentCulture, bool trimWhitespace = false)` and `Trim(string trimString, bool ignoreCase, CultureInfo? culture, bool trimWhitespace = false)` methods that remove leading and tailing occurrences of the given `trimString`.\n\n\n游리 Improved some summaries.\n游리 Fixed `KeepOnlySpecialCharacters()` method only keeping a single instance of each special character.\n游리 Consolidated the `Replace(IEnumerable<string> oldStrings, string newString)` and `Replace(IEnumerable<string> oldStrings, string newString, bool ignoreCase)` methods into `Replace(string newString, IEnumerable<string> oldStrings, StringComparison stringComparison = StringComparison.CurrentCulture)`. This allows more string comparison flexibility and features improved validation of arguments and information in thrown exceptions.\n游리 Consolidated the `Replace(IEnumerable<string> oldStrings, string newString)` and `Replace(IEnumerable<string> oldStrings, string newString, bool ignoreCase)` methods into `Replace(string newString, IEnumerable<string> oldStrings, StringComparison stringComparison = StringComparison.CurrentCulture)`. This allows more string comparison flexibility.\n游리 Consolidated the `Remove(IEnumerable<string> removeStrings)` and `Remove(bool ignoreCase, IEnumerable<string> removeStrings)` methods into `Remove(IEnumerable<string> removeStrings, StringComparison stringComparison = StringComparison.CurrentCulture)`.\n游리 Changed signature of method `Replace(bool ignoreCase, string newString, params string[] oldStrings)` to `Replace(string newString, bool ignoreCase = false, params string[] oldStrings)`.\n游리 Added additional information in ArgumentNullExceptions about the name of the method the exception occurred in.\n      Before the message would be akin to \"The argument given for 'keychars' was null.\", now the message will be akin to \"The argument given for parameter \"keychars\" of method \"Contains\" was null.\".\n      This was done to give more details to developers trying to debug the source of such an exception, as many different methods can have parameters with the same name.\n游리 Added boolean \"trimWhitespace\" parameter and changed parameter \"culture\" of methods `TrimStart(string trimString, bool ignoreCase, CultureInfo culture)` and `TrimEnd(string trimString, bool ignoreCase, CultureInfo culture)` to be nullable. The signatures are now `TrimStart(string trimString, bool ignoreCase, CultureInfo? culture, bool trimWhitespace = false)` and `TrimEnd(string trimString, bool ignoreCase, CultureInfo? culture, bool trimWhitespace = false)`.\n\n\n游댮 Removed methods `Replace(string newString, params string[] oldStrings)`, `Replace(bool ignoreCase, string newString, params string[] oldStrings)`, `Contains(params string[] keywords)`, `Contains(StringComparison comparison, params string[] keywords)`, `Contains(params char[] keychars)`, `Contains(StringComparison comparison, params char[] keychars)`, `Remove(params string[] removeStrings)` and `Remove(bool ignoreCase, params string[] removeStrings)` as they could be, legally, called with no argument for the `params` parameter, which would either do nothing or throw an exception. This is a very confusing and unpleasant behaviour, even when fully documented. It was decided that the convenience of, potentially, saving the user from passing these arguments as an `IEnumerable` is not worth the hassle.\n游댮 Removed methods `Trim(int amount)`, `TrimStart(int amount)` and `TrimEnd(int amount)` as the same functionality can be easily achieved with [indices and ranges](https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/tutorials/ranges-indexes) or the \"Substring\" method.\n游댮 Removed methods `TrimStart(string trimString)` and `TrimEnd(string trimString)` and added default value for parameter `stringComparison` of methods `TrimStart(string trimString, StringComparison stringComparison)` and `TrimEnd(string trimString, StringComparison stringComparison)`.\n\n\nLegend:\n游릭 - New feature\n游댮 - Removed feature\n游리 - Altered existing feature",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "Ivan Stoychev's Useful String Extensions",
  "verbatimVersion": "2.0.3",
  "version": "2.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#IvanStoychev.TestPackage.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1882,
      "fullName": "IvanStoychev.TestPackage.nuspec",
      "length": 5684,
      "name": "IvanStoychev.TestPackage.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#lib/net6.0/IvanStoychev.Useful.String.Extensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 6042,
      "fullName": "lib/net6.0/IvanStoychev.Useful.String.Extensions.dll",
      "length": 15872,
      "name": "IvanStoychev.Useful.String.Extensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#lib/net6.0/IvanStoychev.Useful.String.Extensions.xml",
      "@type": "PackageEntry",
      "compressedLength": 5565,
      "fullName": "lib/net6.0/IvanStoychev.Useful.String.Extensions.xml",
      "length": 62434,
      "name": "IvanStoychev.Useful.String.Extensions.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#Nuget%20Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 3867,
      "fullName": "Nuget Icon.png",
      "length": 3862,
      "name": "Nuget Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#NUGET%20README.md",
      "@type": "PackageEntry",
      "compressedLength": 908,
      "fullName": "NUGET README.md",
      "length": 2532,
      "name": "NUGET README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.05.05.21.07.48/ivanstoychev.testpackage.2.0.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "c#",
    "useful",
    "string",
    "extension",
    "efficient"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}