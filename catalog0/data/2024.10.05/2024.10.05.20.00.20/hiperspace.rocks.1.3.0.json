{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Stephen Channell",
  "catalog:commitId": "632349ab-b008-4a5f-9704-4e33fec47824",
  "catalog:commitTimeStamp": "2024-10-05T20:00:20.1370341Z",
  "copyright": "Cepheis Ltd",
  "created": "2024-10-05T19:57:07.34Z",
  "description": "HiperSpace RocksDB adaptor",
  "iconFile": "Hiper.png",
  "id": "Hiperspace.Rocks",
  "isPrerelease": false,
  "lastEdited": "2024-10-05T20:00:14.883Z",
  "licenseExpression": "GPL-2.0-or-later",
  "licenseUrl": "https://licenses.nuget.org/GPL-2.0-or-later",
  "listed": true,
  "packageHash": "H4DFgJhylnqNBS8eYuDRyu96zM8/0jxwx2MNDzqQjx5O97E1SnfDzMjwHZYujGpWB9Y8FCpEtE0oVE426pXybQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34355,
  "projectUrl": "https://www.cepheis.com/hiperspace/hiperspace-rocks",
  "published": "2024-10-05T19:57:07.34Z",
  "readmeFile": "readme.md",
  "releaseNotes": "## Overview\n      This release provides an overhaul of the LINQ integration, to provide the query execution plaform for **Hiperspace.SQL** SQL query execution against data held in Hiperspace.   The change introduces support for joins that were not previously supported without intermediate code.\n\n      Hiperspace deos not normaly *need* join support because related elements can be retrived through properties transparently without need for additional queries to the store, but are needed to export data to  [Apache Parquet](https://parquet.apache.org/) and[DuckDB](https://duckdb.org/) (for analysis using [jupyter Notebooks](https://jupyter.org/)).  While these tools are excellent for adhoc analysis, they don't have the full point-in-time view that is a available from Subspaces of Hiperspace.\n\n\n      -----\n\n\n      ## Query Provider\n      SubSpace has always supported LINQ expressions from C# and F# (and VB.Net if anyone is still using it), and the queries translated to Domain Space Find requests.  Find searches use the best (*rule based optimiser*) access path to retrieve elements either by key or a sympathetic index.\n      ```\n      var lucy = from p in space.Persons\n      where p.Name == \"Lucy\"\n      select p;\n      // is the same as the direct query\n      var lucy = space.Persons.Find(new Person { Name = \"Lucy\" });\n      ```\n\n      The new query provider supports the full range of SQL-like queries with multiple *from* sources and *joins* (including composite keys), *group by*, *order by* and stream aggregates.\n\n      ```\n      foreach (var j in from p in space.Persons\n      join f in space.Persons on p.Father!.Name equals f.Name\n      join m in space.Persons on p.Mother!.Name equals m.Name\n      where p.Name == lucy\n      select new { p, f, m })\n      {\n      _output.WriteLine($\"{j.p.Name} () has father {j.f.Name} and mother {j.m.Name}\");\n      }\n      // is equvilent to\n\n      foreach (var p in space.Persons.Find(new Person { Name = lucy }))\n      {\n      foreach (var f in space.Persons.Find(new Person { Name = p.Father?.Name }))\n      {\n      foreach (var m in space.Persons.Find(new Person { Name = p.Mother?.Name }))\n      {\n      _output.WriteLine($\"{p.Name} has father {f.Name} and mother {m.Name}\");\n      }\n      }\n      }\n      // this could also be queried directly using Hiperspace native navigation\n      foreach (var p in space.Persons.Find(new Person { Name = lucy }))\n      {\n      _output.WriteLine($\"{p.Name} has father {p.Father!.Name} and mother {p.Mother!.Name}\");\n      }\n      ```\n\n      The advatage of supporting the full range of LINQ expressions is that it is directly eqivilent to SQL, and so provides the basis for a SQL interpreter and external tool integration\n\n\n      -----\n\n      ## Query Explain\n      The new `QueryExplain` class provides SQL Explain functionality to review execution plans for queries\n\n      ```\n      _output.WriteLine($\"{new QueryExplain(join.Expression)}\");\n      // outputs\n      Query\n      Select value(Hiperspace.SetJoin`3[<>f__AnonymousType2`2[<>f__AnonymousType1`2[Cousins.Person,Cousins.Person],Cousins.Person],<>f__AnonymousType1`2[Cousins.Person,Cousins.Person],Cousins.Person]).Where(<>h__TransparentIdentifier1 => (<>h__TransparentIdentifier1.<>h__TransparentIdentifier0.p.Name == value(Cousins.Test+<>c__DisplayClass11_0).lucy)).Select(<>h__TransparentIdentifier1 => new <>f__AnonymousType3`3(p = <>h__TransparentIdentifier1.<>h__TransparentIdentifier0.p, f = <>h__TransparentIdentifier1.<>h__TransparentIdentifier0.f, m = <>h__TransparentIdentifier1.m))\n      Where value(Hiperspace.SetJoin`3[<>f__AnonymousType2`2[<>f__AnonymousType1`2[Cousins.Person,Cousins.Person],Cousins.Person],<>f__AnonymousType1`2[Cousins.Person,Cousins.Person],Cousins.Person]).Where(<>h__TransparentIdentifier1 => (<>h__TransparentIdentifier1.<>h__TransparentIdentifier0.p.Name == value(Cousins.Test+<>c__DisplayClass11_0).lucy))\n      Nested Loop on (.p.Mother.Name = m.Name)\n      Nested Loop on (.Father.Name = f.Name)\n      Key PersonKeyPath as p\n      Person (Name=Lucy, TypeName=Person, SKey=UgYKBEx1Y3k=)\n      Key PersonKeyPath as f\n      Person (Name=left.Name, TypeName=Person, SKey=UgA=)\n      Key PersonKeyPath as m\n      Person (Name=left.Name, TypeName=Person, SKey=UgA=)\n\n      ```\n      In this example the LINQ expression and nested data access is output.  Because the query included a predicate on the key of the first set, the access is via *Key* with the related value provided through to subsequent joins\n\n      ### SetSpace Explain\n      To support `QueryExplain`, an additional function has been added to `SetSpace<>` to retrieve the access path { 'Key', 'Index', 'Scan' } that is used to retrieve data from Hiperspace\n\n      ## IAsyncEnumerable<_>\n\n      [IAsyncEnumerable](https://learn.microsoft.com/en-us/archive/msdn-magazine/2019/november/csharp-iterating-with-async-enumerables-in-csharp-8) is a new feature of .NET 8 that allows asyncronous functiuons that return an enumerable to do so without creating temporary lists.  This capability is used by LINQ, so introduced as a breaking change to the Hiperspace interface with this release.",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "Hiperspace Rocks",
  "verbatimVersion": "1.3.0",
  "version": "1.3.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#dependencygroup/net8.0/hiperspace",
          "@type": "PackageDependency",
          "id": "Hiperspace",
          "range": "[1.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#dependencygroup/net8.0/microsoft.bcl.hashcode",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.HashCode",
          "range": "[1.1.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#dependencygroup/net8.0/rocksdb",
          "@type": "PackageDependency",
          "id": "RocksDB",
          "range": "[9.4.0.50294, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#dependencygroup/net8.0/system.memory",
          "@type": "PackageDependency",
          "id": "System.Memory",
          "range": "[4.5.5, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#dependencygroup/net8.0/protobuf-net",
          "@type": "PackageDependency",
          "id": "protobuf-net",
          "range": "[3.2.30, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#Hiperspace.Rocks.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2497,
      "fullName": "Hiperspace.Rocks.nuspec",
      "length": 6830,
      "name": "Hiperspace.Rocks.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#lib/net8.0/Hiperspace.Rocks.dll",
      "@type": "PackageEntry",
      "compressedLength": 10471,
      "fullName": "lib/net8.0/Hiperspace.Rocks.dll",
      "length": 24064,
      "name": "Hiperspace.Rocks.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#Hiper.png",
      "@type": "PackageEntry",
      "compressedLength": 6176,
      "fullName": "Hiper.png",
      "length": 6209,
      "name": "Hiper.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#readme.md",
      "@type": "PackageEntry",
      "compressedLength": 355,
      "fullName": "readme.md",
      "length": 575,
      "name": "readme.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.10.05.20.00.20/hiperspace.rocks.1.3.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12922,
      "fullName": ".signature.p7s",
      "length": 12922,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}