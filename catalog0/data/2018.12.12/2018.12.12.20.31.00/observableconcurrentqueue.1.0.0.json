{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.12.20.31.00/observableconcurrentqueue.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "cYounes",
  "catalog:commitId": "d77b9edc-cd6e-4050-8d75-51ebab17f252",
  "catalog:commitTimeStamp": "2018-12-12T20:31:00.2824392Z",
  "copyright": "Copyright 2015",
  "created": "2015-01-05T10:47:41Z",
  "description": "Observable Concurrent Queue based on the classic concurrent queue (System.Collections.Concurrent.ConcurrentQueue) Allows to raise events when the queue content is changed with the same events as ObservableCollection",
  "iconUrl": "https://raw.githubusercontent.com/BledSoft/ObservableConcurrentQueue/master/icon.png",
  "id": "ObservableConcurrentQueue",
  "isPrerelease": false,
  "lastEdited": "2018-12-12T20:30:43.93Z",
  "licenseUrl": "https://github.com/BledSoft/ObservableConcurrentQueue/blob/master/license.md",
  "listed": true,
  "packageHash": "1LghlpHkRMMI5P2n0wj5l/XMRd7n+xqYYt7mR8iP8MYd4pgLDrD/oYybCCUOj0QXNIuWbAZVUFJyMtRXoEZNQg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 500060,
  "projectUrl": "https://observableconcurrentqueue.codeplex.com/",
  "published": "2015-01-05T10:47:41Z",
  "releaseNotes": "Concurrent Queue raises event when queue content changed.",
  "requireLicenseAcceptance": true,
  "summary": "The classic ConcurrentQueue raises event when queue content changed.",
  "title": "Observable Concurrent Queue",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.12.20.31.00/observableconcurrentqueue.1.0.0.json#ObservableConcurrentQueue.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 506,
      "fullName": "ObservableConcurrentQueue.nuspec",
      "length": 1231,
      "name": "ObservableConcurrentQueue.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.12.20.31.00/observableconcurrentqueue.1.0.0.json#NuGet.exe",
      "@type": "PackageEntry",
      "compressedLength": 475301,
      "fullName": "NuGet.exe",
      "length": 1664000,
      "name": "NuGet.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.12.20.31.00/observableconcurrentqueue.1.0.0.json#NuGet2.exe",
      "@type": "PackageEntry",
      "compressedLength": 8989,
      "fullName": "NuGet2.exe",
      "length": 18432,
      "name": "NuGet2.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.12.20.31.00/observableconcurrentqueue.1.0.0.json#ObservableConcurrentQueue.dll",
      "@type": "PackageEntry",
      "compressedLength": 2597,
      "fullName": "ObservableConcurrentQueue.dll",
      "length": 6656,
      "name": "ObservableConcurrentQueue.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.12.20.31.00/observableconcurrentqueue.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "Queue",
    "Observable",
    "Concurrent",
    "ConcurrentQueue",
    "Event",
    "Content"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}