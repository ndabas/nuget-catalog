{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael McBride",
  "catalog:commitId": "af6d59ca-f5f1-4e6f-9636-7dce12eb01dc",
  "catalog:commitTimeStamp": "2020-10-01T11:52:56.4428758Z",
  "created": "2020-10-01T11:49:45.71Z",
  "description": "A .NET library which allows you to read and write plain-text minimal syntax configuration files",
  "iconFile": "icon.png",
  "id": "ConfigTextFile",
  "isPrerelease": false,
  "lastEdited": "2020-10-01T11:52:49.253Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "/8613gnorqas8vA7/8CYs+rprh/ypIfBYsKpItzV2MZ7HXzgnXD9KvUi2mDmq0kWLeNQ0MqogHP9cyuomFTIng==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 58183,
  "projectUrl": "https://github.com/Michmcb/ConfigTextFile",
  "published": "2020-10-01T11:49:45.71Z",
  "releaseNotes": "- Improved XML Documentation\n- Consistency for exceptions when using index operators and the Value property\n- ConfigArrayElements can be indexed using integers like a normal list instead of having to use a string key. When indexing using a string key, the string is parsed as an integer and then used to index into the list.\n- getting Value always throws an InvalidOperationException or a ConfigInvalidElementException rather than returning string.Empty\n- ConfigStringElement now has a convenience method to return an alternate value if its Value is null/empty\n- Indexing operator pulled up to IConfigElement for convenience (but it'll throw exceptions if the actual type is not ConfigArrayElement or ConfigSectionElement)\n- Multitargets .netstandard 2.0 and 2.1\n- Fixed a NullReferenceException if a key and = [ { \\r \\n was read, and then the end of file was encountered before finding the next non-whitespace character\n- Empty strings now respect the AlwaysQuoteValues formatting option (they'll be written as \"\")\n- Exception is thrown on trying to write a null/empty string as a key",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.7.0",
  "version": "1.7.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#ConfigTextFile.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1015,
      "fullName": "ConfigTextFile.nuspec",
      "length": 2062,
      "name": "ConfigTextFile.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#lib/netstandard2.0/ConfigTextFile.dll",
      "@type": "PackageEntry",
      "compressedLength": 13705,
      "fullName": "lib/netstandard2.0/ConfigTextFile.dll",
      "length": 32768,
      "name": "ConfigTextFile.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#lib/netstandard2.0/ConfigTextFile.xml",
      "@type": "PackageEntry",
      "compressedLength": 7358,
      "fullName": "lib/netstandard2.0/ConfigTextFile.xml",
      "length": 65902,
      "name": "ConfigTextFile.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#lib/netstandard2.1/ConfigTextFile.dll",
      "@type": "PackageEntry",
      "compressedLength": 13669,
      "fullName": "lib/netstandard2.1/ConfigTextFile.dll",
      "length": 32768,
      "name": "ConfigTextFile.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#lib/netstandard2.1/ConfigTextFile.xml",
      "@type": "PackageEntry",
      "compressedLength": 7358,
      "fullName": "lib/netstandard2.1/ConfigTextFile.xml",
      "length": 65902,
      "name": "ConfigTextFile.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 637,
      "fullName": "LICENSE",
      "length": 1085,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 2516,
      "fullName": "icon.png",
      "length": 2672,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.10.01.11.52.56/configtextfile.1.7.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "config",
    "configuration",
    "text",
    "fluent"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}