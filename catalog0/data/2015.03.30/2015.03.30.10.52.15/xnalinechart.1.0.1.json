{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.03.30.10.52.15/xnalinechart.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tomáš Kučera",
  "catalog:commitId": "1a1092c1-45ee-4711-b954-b6738398593e",
  "catalog:commitTimeStamp": "2015-03-30T10:52:15.7074901Z",
  "copyright": "© 2015 CleverTech s.r.o.",
  "created": "2015-03-27T11:21:23.147Z",
  "description": "XnaLineChart is a real-time chart component (class library, user control) based on XNA framework. It is written in C# for drawing 2D real-time Line Charts containing huge amount of data. It was written for WinForms. It is also used in WPF apps.",
  "id": "XnaLineChart",
  "isPrerelease": false,
  "lastEdited": "2015-03-30T10:51:58.193Z",
  "packageHash": "qCp4FdelPQ9qyFHm2EnPPD6ernxsgAqBuj/kW+15zNpNPdcFjwQ3acmfLzbv6sPgOc9fzA/pX9pzwlZ1icrgRQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 293201,
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "XNA based real-time chart component",
  "title": "XnaLineChart",
  "version": "1.0.1",
  "tags": [
    "XNA",
    "chart",
    "real-time",
    "graph"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}