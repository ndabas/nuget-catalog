{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.13.31.26/nfluent.0.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thomas PIERRAIN, Cyrille DUPUYDAUBY, Marc-Antoine LATOUR, Rui CARVALHO",
  "catalog:commitId": "11b86fec-a83e-453f-9195-676f1bb8bf03",
  "catalog:commitTimeStamp": "2015-02-03T13:31:26.3945683Z",
  "copyright": "Copyright 2013  Thomas PIERRAIN",
  "created": "2013-07-06T11:24:03.863Z",
  "description": "NFluent is an ergonomic check library which aims to fluent your .NET TDD experience (based on simple Check.That() check statements). NFluent aims your tests to be fluent to write (with an happy 'dot' auto completion experience), fluent to read (i.e. as close as possible to plain English expression), but also fluent to troubleshoot, in a less-error-prone way comparing to the classical .NET test frameworks. NFluent is directly, but also freely, inspired by the awesome Java FEST fluent check/reflection library (http://fest.easytesting.org/).",
  "iconUrl": "https://raw.github.com/tpierrain/NFluent/master/Images/Icon.png",
  "id": "NFluent",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "DiiPtbhzdVGd67gute0V2a5zf2yU6v8l0k3bZlHP1+Z5AYHPXM94X7yWLIQkfLKRoZyLnx5PEvLksy7tZMWYsg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 64142,
  "projectUrl": "http://www.n-fluent.net",
  "published": "2013-07-06T11:24:03.863Z",
  "releaseNotes": "New features:\n\n* Now, the Equals() method of the ICheck<T> instances is a real fluent check method (instead of the default object.Equals() one).\n\n* New extensible syntax for Check.That(IEnumerable xxx).Contains(...) that permits to add suffixes narrowing the conditions (e.g.: Check.That(IEnumerable xxx).Contains(...).InThatOrder()). Possible suffixes are (Only, Once or InThatOrder)\n\n* Adds check methods for IDictionary\n\n* Adds more check methods to the IEnumerable (e.g. IsNullOrEmpty)\n\n--------------\n\nChanges:\n\n* New error message structure that clearly states what is wrong.\n\n* Renames the ContainsOnly() method to IsOnlyMadeOf().\n\n* Replaces IFluentAssertion by ICheck; and IChainableFluentAssertion by ICheckLink so that it improves the IntelliSense experience.",
  "requireLicenseAcceptance": false,
  "summary": "NFluent is an ergonomic check library which aims to fluent your .NET TDD experience.",
  "title": "Smooth your .NET TDD experience with NFluent!",
  "version": "0.8.0",
  "tags": [
    "tdd",
    "bdd",
    "test",
    "fluent",
    "check",
    "checks",
    "easy"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}