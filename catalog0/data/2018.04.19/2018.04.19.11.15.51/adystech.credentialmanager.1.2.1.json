{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.19.11.15.51/adystech.credentialmanager.1.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "AdysTech",
  "catalog:commitId": "a2b02bcd-5cd0-4e17-8675-e6d8e55f3bd0",
  "catalog:commitTimeStamp": "2018-04-19T11:15:51.9567686Z",
  "copyright": "Copyright 2017",
  "created": "2018-04-19T11:11:26.527Z",
  "description": "Library to to store and retreive User credentials from Windows Credential Store",
  "id": "AdysTech.CredentialManager",
  "isPrerelease": false,
  "lastEdited": "2018-04-19T11:15:41.413Z",
  "licenseUrl": "https://github.com/AdysTech/CredentialManager/blob/master/License.md",
  "listed": true,
  "packageHash": "YCf5YqNkSQXeMtm5vk7CUkWMMsDBvqklgJ33m3MZNqvcvN4ZXyVBDa5BCcWlixksOmgoxlTcp6augPsEVsYfLg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8689,
  "projectUrl": "https://github.com/AdysTech/CredentialManager",
  "published": "2018-04-19T11:11:26.527Z",
  "releaseNotes": "C# wrapper around CredWrite / CredRead functions to store and retrieve from Windows Credential Store. Windows OS comes equipped with a very secure robust Credential Manager from Windows Xp onwards, and good set of APIs to interact with it. \nHowever .Net framework did not provide any standard way to interact with this vault until Windows 10.          Need: Many web services and REST Urls use basic authentication. .Net does not have a way to generate basic auth text (username:password encoded in Base64) for the current logged in user, with their credentials. ICredential.GetCredential (uri, \"Basic\") does not provide a way to get current user security context either as it will expose the current password in plain text. So only way to retrieve Basic auth text is to prompt the user for the credentials and storing it, or assume some stored credentials in Windows store, and retrieving it. The library provides\n          1. Prompt user for Credentials\n          2. Save Credentials\n          3. Retrieve saved Credentials\nBased on Microsoft Peer Channel blog (WCF team) post from 2005",
  "requireLicenseAcceptance": false,
  "title": "CredentialManager",
  "verbatimVersion": "1.2.1",
  "version": "1.2.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.19.11.15.51/adystech.credentialmanager.1.2.1.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.19.11.15.51/adystech.credentialmanager.1.2.1.json#AdysTech.CredentialManager.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 910,
      "fullName": "AdysTech.CredentialManager.nuspec",
      "length": 1982,
      "name": "AdysTech.CredentialManager.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.19.11.15.51/adystech.credentialmanager.1.2.1.json#lib/net45/AdysTech.CredentialManager.dll",
      "@type": "PackageEntry",
      "compressedLength": 6069,
      "fullName": "lib/net45/AdysTech.CredentialManager.dll",
      "length": 13312,
      "name": "AdysTech.CredentialManager.dll"
    }
  ],
  "tags": [
    "Credential",
    "CredentialManager",
    "Basic",
    "Authentication",
    "BasicAuthentication",
    "Password",
    "UserName"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}