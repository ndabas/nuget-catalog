{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.29.08.40.06/enumstringvalues.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brondahl",
  "catalog:commitId": "45070112-bc83-4b99-8693-920fef89c7d2",
  "catalog:commitTimeStamp": "2015-05-29T08:40:06.9606871Z",
  "copyright": "Copyright 2014",
  "created": "2015-05-29T08:38:53.61Z",
  "description": "Library to allow conversion between an Enum Value and a string, in both directions.",
  "id": "EnumStringValues",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "2qCiXIoUFM/ZiwpS2j9EKvXqqxGTWsPiT8KMGskppSoieNsN32Bz6V/RxrpMae5F3C+mf0UY3u6Ioj22q5/ErA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14738,
  "projectUrl": "https://github.com/Brondahl/EnumStringValues",
  "published": "2015-05-29T08:38:53.61Z",
  "releaseNotes": "Version 2.0 \n       - Make the library use the existing Enum name as its default string value\n       - Exposed the Parse methods as extensions on `String` and `List<string>`\n       - Added a clone of the basic Parse method renamed as `ParseToEnum<T>`\n       - NOTE: The old parse method (`ParseStringValueToEnum`) is now deprecated and will be removed in vNext. ParseToEnum is identical and should be used instead.",
  "requireLicenseAcceptance": false,
  "version": "2.0.0",
  "tags": [
    "Enum",
    "String",
    "StringValue",
    "EnumStringValue",
    "EnumStringValues"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}