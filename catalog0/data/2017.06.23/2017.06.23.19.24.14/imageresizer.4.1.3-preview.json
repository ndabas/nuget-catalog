{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.23.19.24.14/imageresizer.4.1.3-preview.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nathanael Jones, Imazen",
  "catalog:commitId": "7c5c61b8-07ab-4c79-928c-c06584d86958",
  "catalog:commitTimeStamp": "2017-06-23T19:24:14.0715585Z",
  "created": "2017-05-06T03:26:38.47Z",
  "description": "Lightweight HttpModule, REST API, and managed API for *safe* and highly-optimized server-side image processing. \n\nDocs: http://imageresizing.net/\n\nSupport: http://imageresizing.net/support\n\nWorks with .NET 4.5.1+, ASP.NET WebForms, MVC 1-4, WebAPI, Routing, IIS 7, 7.5, & 8, 8.1 and nearly all CMSes.\n\nUse ether the URL API: image.jpg?width=100&height=100 *or* the Managed API: ImageBuilder.Current.Build(source,dest,settings).\n\nImageResizer provides incredible quality and highly-optimized image processing - by default. Don't leak memory by using System.Drawing directly or create horrible previews with GetThumbnailImage. Add the ImageResizer.Plugins.DiskCache package to serve dynamic images as fast as static ones. \n\nWith this library, you can create beautiful image galleries, product thumbnails, and fast, scalable websites *without* sacrificing agility or responsive web design.\n\n## Functionality in this package\n\nThe ImageResizer core package lets you: \n\n1. Decode jpeg, png, gif, tiff, and bmp files from uploads, streams, byte arrays, and files. \n\n2. Pre-rotate or flip (based on gravity sensor OR manual angle).\n\n3. Apply manual cropping in either source or screen coordinates.\n\n4. Efficiently apply width and/or height constraints, using any of several constraint modes: max, pad, crop, or stretch. Provides the highest quality image resampling (bicubic 2-pass) available on the windows platform.\n\n5. Rotate, flip, add borders, padding, margins, with custom colors.\n\n3. Re-compress into jpeg (with adjustable compression) or lossless png form -  as a byte array, stream, or file.\n\nAll through a REST API and Managed API with a symmetrical command set. \n\nURL rewriting, custom authorization, 404 fallbacks, gradient generation, exif stripping, size limiting, and cache-control customization are also included in the core DLL.\n\n## 30+ plugins available\n\nSearch 'ImageResizer' on nuget.org, or visit imageresizing.net to see 40+ plugins. Some offer 4-30x performance improvements; some render PDFs and PSDs; others detect faces and trim whitespace.\nYou'll find  plugins for disk caching, memory caching, Microsoft SQL blob support, Amazon CloudFront, S3, Azure Blob Storage, MongoDB GridFS, automatic whitespace trimming, automatic white balance, octree 8-bit gif/png quantization and transparency dithering, animated gif resizing, watermark & text overlay support, content aware image resizing / seam carving (based on CAIR), grayscale, sepia, histogram, alpha, contrast, saturation, brightness, hue, Guassian blur, noise removal, and smart sharpen filters, psd editing & rendering, raw (CR2, NEF, DNG, etc.) file exposure, .webp (weppy) support, image batch processing & compression into .zip archives, red eye auto-correction,  face detection, and secure (signed!) remote HTTP image processing. Most datastore plugins support the Virtual Path Provider system, and can be used for non-image files as well.\n\n\n\n## Third-party integration\n\nThird parties have made some excellent UI wrappers and plugins, including Eksponent CropUp, FluentExtensions, jQuery NailThumb, WebCropImage, and mindrevolution's ResponsivePresets. Check out our own StudioJS for an amazing image editing studio based on the REST API.",
  "iconUrl": "http://imageresizing.net/images/logos/ImageIconPSD100.png",
  "id": "ImageResizer",
  "isPrerelease": true,
  "lastEdited": "2017-06-23T19:23:28.807Z",
  "licenseUrl": "http://imageresizing.net/licenses/freedom",
  "listed": false,
  "packageHash": "KgXzQn1rm/sb/LMqtRrPFRFXba6nxDDKdh68pD/cLo6jklqEpdRLZ2jXqGu09/gDHkSmSQWuouTTYmrxaA6Ckw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 182003,
  "projectUrl": "http://imageresizing.net",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Lightweight HttpModule, REST API, & managed API for *safe* server-side image processing.",
  "title": "ImageResizer",
  "verbatimVersion": "4.1.3-preview",
  "version": "4.1.3-preview",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.23.19.24.14/imageresizer.4.1.3-preview.json#ImageResizer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2117,
      "fullName": "ImageResizer.nuspec",
      "length": 4149,
      "name": "ImageResizer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.23.19.24.14/imageresizer.4.1.3-preview.json#lib/net45/ImageResizer.dll",
      "@type": "PackageEntry",
      "compressedLength": 126434,
      "fullName": "lib/net45/ImageResizer.dll",
      "length": 302592,
      "name": "ImageResizer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.23.19.24.14/imageresizer.4.1.3-preview.json#lib/net45/ImageResizer.XML",
      "@type": "PackageEntry",
      "compressedLength": 47408,
      "fullName": "lib/net45/ImageResizer.XML",
      "length": 296989,
      "name": "ImageResizer.XML"
    }
  ],
  "tags": [
    "ImageResizer",
    "image",
    "resize",
    "crop",
    "rotate",
    "jpeg",
    "jpg",
    "gif",
    "png",
    "server-safe-imaging",
    "nuget-needs-tokenization",
    "nuget-needs-markdown-descriptions",
    "imaging"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}