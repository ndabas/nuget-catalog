{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "William Chow",
  "catalog:commitId": "234dfe13-33ba-4136-bcde-02d1660104e8",
  "catalog:commitTimeStamp": "2019-08-06T00:48:41.8597607Z",
  "copyright": "Copyright Â© William Chow 2019",
  "created": "2019-08-06T00:43:41.083Z",
  "description": "The extensions for Microsoft.Extensions.DependencyInjection witch can scan specify assemblies or types to inject into ServiceCollection automatically that has implemented from ITransient, IScoped or ISingleton.",
  "id": "Mikpro.AutoInject",
  "isPrerelease": false,
  "lastEdited": "2019-08-06T00:48:14.087Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "KTYZ32eypVQbbDI1C0IAHevLAEK/mSVwVy9TYfKaZ7YTdPmouxRNvTAMzcEoIdOn/SXbN2ykIQCi9HmRJ4JJ9Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18037,
  "published": "2019-08-06T00:43:41.083Z",
  "releaseNotes": "- [Add]`AddAutoInject` extensions method of `IServiceCollection` object.\n- [Add]Resolve the service automatically while the instance implement from `ITransient`,`IScoped` or `ISingleton`.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#dependencygroup/.netstandard2.0/microsoft.extensions.dependencyinjection",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.DependencyInjection",
          "range": "[2.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#Mikpro.AutoInject.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 679,
      "fullName": "Mikpro.AutoInject.nuspec",
      "length": 1346,
      "name": "Mikpro.AutoInject.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#lib/netstandard2.0/AutoInject.dll",
      "@type": "PackageEntry",
      "compressedLength": 4035,
      "fullName": "lib/netstandard2.0/AutoInject.dll",
      "length": 14336,
      "name": "AutoInject.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#lib/netstandard2.0/AutoInject.xml",
      "@type": "PackageEntry",
      "compressedLength": 1096,
      "fullName": "lib/netstandard2.0/AutoInject.xml",
      "length": 7073,
      "name": "AutoInject.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 641,
      "fullName": "LICENSE",
      "length": 1090,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.08.06.00.48.41/mikpro.autoinject.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Dependency",
    "Injection",
    "DI",
    "Services"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}