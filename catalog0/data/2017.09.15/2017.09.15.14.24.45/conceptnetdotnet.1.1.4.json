{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.15.14.24.45/conceptnetdotnet.1.1.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SBen",
  "catalog:commitId": "a9bbb9ee-0552-4159-aa85-1e3b1d013b4a",
  "catalog:commitTimeStamp": "2017-09-15T14:24:45.4098294Z",
  "copyright": "Copyright 2017",
  "created": "2017-09-15T14:19:30.24Z",
  "description": "ConceptNet API wrapper in c# \n------------------------------------------------------------ \nWhat is ConceptNet? \nConceptNet is a freely-available semantic network, designed to help \ncomputers understand the meanings of words that people use.  \n(http://conceptnet.io) \n\n------------------------------------------------------------ \nHow to use this package? \n** var wrapper = new ConceptNetWrapper(\"http://api.conceptnet.io\");  ** \nThe wrapper get as first argument the base URL for the ConceptNet API. \nThe second argument (non-mandatory) is the language, the default is \"en\" (i.e., english). \nThe third argument (non-mandatory) is the filter language results, Filter the results which are not the from the defined language (default is true). \n\nExample: \nGetting the relations for the term 'example' \n** var result = wrapper.GetConceptRelationsAsString(\"example\"); ** \nResults are shown in the following format: \nStart (start node - e.g., 'example'), Rel ('type of relation'), End (end node), Text \n- Rel describes one of the defined relations that connect the nodes of ConceptNet. \n- Some of ConceptNet's data is extracted from natural-language text. The Text value shows you what this text was. \n\nSome Results: \n// apology,IsA,example,[[apology]] is a type of [[example]] \n// example,IsA,admonition,[[example]] is a type of [[admonition]] \n------------------------------------------------------------ \nOther examples: \n\n** var result2 = wrapper.GetConceptRelationsAsString(\"blabla\"); //Return empty string, since this term doesn't exist** \n\n** var result3 = wrapper.GetConceptNetResults(\"dog\", \"bark\"); //Return the relations between these two terms** \n\n** var result4 = wrapper.GetConceptRelationsAsString(\"dog\", \"bark\"); //Return the relations between these two terms as comma separated string ** \n\n** var result5 = wrapper.GetConceptRelationsAsDataTable(\"dog\", \"bark\"); //Return the relations between these two terms in data table format ** \n\n** var result6 = wrapper.GetRelatedTerms(\"Tea Kettle\");  // Return terms related to the term (e.g., \"cat\") ** \n\n** var result7 = wrapper.GetHowTermsRelated(\"tea_kettle\", \"coffee_pot\"); // If you just want to see how related term1 (e.g., \"tea kettle\") is to term2 (e.g., \"coffee pot\") ** \n\n** var result8 = crawler.GetRelationScore(\"tea_kettle\", \"coffee_pot\"); //Return the relation score ** \n\n** \n\tvar result9 = crawler.GetConceptNetQueryResults(\"node=/c/en/dog,other=/c/en/bark\"); //Get results based on query (comma seperated string ) \n\t// You can specify any of the following parameters:  \n\t// start: a URI that the \"start\" or \"subject\" position must match. \n\t// end: a URI that the \"end\" or \"object\" position must match. \n\t// rel: a relation. node: a URI that must match either the start or the end. \n\t// other: a URI that must match either the start or the end, and be different from node. \n\t// sources: a URI that must match one of the sources of the edge. \n\t// For more information, see : https://github.com/commonsense/conceptnet5/wiki/API#complex-queries\n** \n------------------------------------------------------------ \nFor more information, see the API documentation page in GitHub: \nhttps://github.com/commonsense/conceptnet5/wiki/API ",
  "iconUrl": "https://goo.gl/xXZMYJ",
  "id": "ConceptNetDotnet",
  "isPrerelease": false,
  "lastEdited": "2017-09-15T14:24:33.5Z",
  "listed": true,
  "packageHash": "iLbQ55fkeYEaKVRlt9FYqbkwgLCVrfOtybULc5rNj+C88grXFt9MhXuUYnaxt+jVKE5TY3tnbyvtwPY8WfgqYA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9832,
  "published": "2017-09-15T14:19:30.24Z",
  "releaseNotes": "Second Release",
  "requireLicenseAcceptance": false,
  "summary": "ConceptNet API wrapper in c# \n",
  "title": "ConceptNet API wrapper in c#",
  "verbatimVersion": "1.1.4",
  "version": "1.1.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.15.14.24.45/conceptnetdotnet.1.1.4.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.15.14.24.45/conceptnetdotnet.1.1.4.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[8.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.15.14.24.45/conceptnetdotnet.1.1.4.json#dependencygroup/restsharp",
          "@type": "PackageDependency",
          "id": "RestSharp",
          "range": "[104.5.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.15.14.24.45/conceptnetdotnet.1.1.4.json#ConceptNetDotnet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1562,
      "fullName": "ConceptNetDotnet.nuspec",
      "length": 4056,
      "name": "ConceptNetDotnet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.15.14.24.45/conceptnetdotnet.1.1.4.json#lib/net452/ConceptNetDotNet.dll",
      "@type": "PackageEntry",
      "compressedLength": 6660,
      "fullName": "lib/net452/ConceptNetDotNet.dll",
      "length": 16384,
      "name": "ConceptNetDotNet.dll"
    }
  ],
  "tags": [
    "ConceptNet",
    "Concept"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}