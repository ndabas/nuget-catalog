{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "DavidSciMeow",
  "catalog:commitId": "3cded4f6-a798-46fa-a22e-2a315f87b1e7",
  "catalog:commitTimeStamp": "2020-12-11T10:25:49.2664098Z",
  "copyright": "2020 @ Electronicute",
  "created": "2020-12-11T10:23:09.17Z",
  "description": "this is a delegate library for IOTQQBot Invertor which you can use this to connect your IOT backend Easily and this is full Codec comment Inline",
  "id": "MeowIOTBot",
  "isPrerelease": false,
  "lastEdited": "2020-12-11T10:25:40.97Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "YzK74HNZ/j/y58f2PWoWF/CEtqvv3ubBuniSvi9C3J5zFYiFMmFsXp+Yq/jOxP2rNm35Jo60Xmst8tghK+g0Iw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21083,
  "published": "2020-12-11T10:23:09.17Z",
  "releaseNotes": "first time release, comment in Chs and Eng other version Language please notify\nusage:\n            using var recv = new MeowClient(wsurl, qq);\n            var send = new PostHelper(callerurl, qq);\n            recv.Connect().OnServerAction += async (s, e) =>\n            {\n                await send.PrepareSend(PostHelper.UrlType.SendMsgV2).HttpPost(data);\n            };",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json#dependencygroup/.netcoreapp3.1/meowsocketlibraryforrinkoiot",
          "@type": "PackageDependency",
          "id": "MeowSocketLibraryForRinkoIOT",
          "range": "[1.0.1, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json#MeowIOTBot.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 707,
      "fullName": "MeowIOTBot.nuspec",
      "length": 1311,
      "name": "MeowIOTBot.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json#lib/netcoreapp3.1/MeowIOTBot.dll",
      "@type": "PackageEntry",
      "compressedLength": 6031,
      "fullName": "lib/netcoreapp3.1/MeowIOTBot.dll",
      "length": 12800,
      "name": "MeowIOTBot.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json#lib/netcoreapp3.1/MeowIOTBot.xml",
      "@type": "PackageEntry",
      "compressedLength": 2939,
      "fullName": "lib/netcoreapp3.1/MeowIOTBot.xml",
      "length": 15154,
      "name": "MeowIOTBot.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.11.10.25.49/meowiotbot.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}