{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.03.16.24/nchronicle.console.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Andy James",
  "catalog:commitId": "ac7a31c1-30cf-4109-a266-159a46f89e84",
  "catalog:commitTimeStamp": "2018-12-13T03:16:24.6094669Z",
  "copyright": "Copyright 2016",
  "created": "2016-10-05T14:38:58.297Z",
  "description": "NChronicle is an extensible logging and output library allowing centralised management and distribution of log messages to a number of logging destinations (known as 'Libraries'). \n\nNChronicle.Console is a highly configurable console logging Library for the NChronicle logging framework. NChronicle.Console includes options to ignore and/or listen solely to certain log messages via level and/or tags, completely customise the output format (date/time format specification, conditionals, and arguments), specify time zone, and of course complete colour customisations.\n\nFurther Libraries planned for the NChronicle logging framework include NChronicle.File, NChronicle.Email, NChronicle.API and NChronicle.Owin.",
  "iconUrl": "https://git.ikimi.co/uploads/project/avatar/2/NChronicle_simple_square.pn",
  "id": "NChronicle.Console",
  "isPrerelease": false,
  "lastEdited": "2018-12-13T03:16:01.59Z",
  "licenseUrl": "https://git.ikimi.co/andrewj/NChronicle/blob/master/LICENSE",
  "listed": false,
  "packageHash": "bxzLpDPE23aMIFkppj727vw85ww2+7axiqvVD+iR+ct5a+5NLODP81UOblm2/J89LEKG7FIuUja4w1V0YDVO0g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18989,
  "projectUrl": "https://git.ikimi.co/andrewj/NChronicle",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Initial release with NChronicle.Core 1.0.0.",
  "requireLicenseAcceptance": false,
  "summary": "NChronicle is an extensible logging and output library allowing centralised management and distribution of log messages to a number of logging destinations (known as 'Libraries'). NChronicle.Console is a highly configurable NChronicle Library dispatching log messages to STDOUT / the Console.",
  "title": "NChronicle.Console",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.03.16.24/nchronicle.console.1.0.0.json#NChronicle.Console.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 829,
      "fullName": "NChronicle.Console.nuspec",
      "length": 1958,
      "name": "NChronicle.Console.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.03.16.24/nchronicle.console.1.0.0.json#lib/NChronicle.Console.dll",
      "@type": "PackageEntry",
      "compressedLength": 6620,
      "fullName": "lib/NChronicle.Console.dll",
      "length": 16384,
      "name": "NChronicle.Console.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.13.03.16.24/nchronicle.console.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "NChronicle",
    "Events",
    "Audit",
    "Logging",
    "Log",
    "Trail",
    "Recording",
    "History",
    "Tracking",
    "Output",
    "Console",
    "Stdout",
    "Interactive"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}