{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "JamesCurran",
  "catalog:commitId": "fecf1944-ef7d-4492-b0c8-2aa7a941291f",
  "catalog:commitTimeStamp": "2023-07-13T18:23:28.3722264Z",
  "copyright": "Copyright Novel Theory, LLC 2017-2023",
  "created": "2023-07-13T18:20:46.013Z",
  "description": "Takes human names of arbitrary complexity and parses out individual components.",
  "iconFile": "NovelTheoryLogo150.png",
  "id": "NovelTheory.HumanNameParser",
  "isPrerelease": false,
  "lastEdited": "2023-07-13T18:23:19.31Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "8VaF1jxvRZ6QMt2K/aTYUkFaVC91HpzzYebjEoD5HpMP3RofdrritP4eZXAYc18+pvE8vx/rDKq2o3gsHJzwqw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36516,
  "projectUrl": "https://github.com/jamescurran/HumanNameParser",
  "published": "2023-07-13T18:20:46.013Z",
  "readmeFile": "README.md",
  "repository": "",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json#NovelTheory.HumanNameParser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 488,
      "fullName": "NovelTheory.HumanNameParser.nuspec",
      "length": 918,
      "name": "NovelTheory.HumanNameParser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json#lib/netstandard2.0/HumanNameParser.dll",
      "@type": "PackageEntry",
      "compressedLength": 3976,
      "fullName": "lib/netstandard2.0/HumanNameParser.dll",
      "length": 9216,
      "name": "HumanNameParser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json#NovelTheoryLogo150.png",
      "@type": "PackageEntry",
      "compressedLength": 17761,
      "fullName": "NovelTheoryLogo150.png",
      "length": 18647,
      "name": "NovelTheoryLogo150.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 720,
      "fullName": "README.md",
      "length": 1254,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.13.18.23.28/noveltheory.humannameparser.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11514,
      "fullName": ".signature.p7s",
      "length": 11514,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "parser",
    "parsing",
    "name",
    "string",
    "split"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}