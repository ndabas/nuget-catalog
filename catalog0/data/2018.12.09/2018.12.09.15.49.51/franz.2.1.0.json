{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kim Christensen",
  "catalog:commitId": "1d3a8d38-6516-42d7-a614-a4fc419776b8",
  "catalog:commitTimeStamp": "2018-12-09T15:49:51.930695Z",
  "copyright": "Copyright 2015",
  "created": "2016-02-16T10:09:37.79Z",
  "description": "Kafka client for .NET written in F#",
  "iconUrl": "https://raw.githubusercontent.com/Xharze/FSharp.Kafka/master/docs/files/img/logo.png",
  "id": "Franz",
  "isPrerelease": false,
  "lastEdited": "2018-12-09T15:49:41.76Z",
  "licenseUrl": "http://github.com/Xharze/FSharp.Kafka/blob/master/LICENSE.txt",
  "listed": true,
  "packageHash": "KELH8danfeb4/kwQTpM36n6mBjaWJAAzRm8DX8bArWqzru0jILDRklRG8/Qa/CoJVBb+SnbfA71RTHV7C9pXEw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 91612,
  "projectUrl": "http://github.com/Xharze/FSharp.Kafka",
  "published": "2016-02-16T10:09:37.79Z",
  "releaseNotes": "Handle situtation where fetching big messagesets could result in a infinite loop\nFix memory leak\nAllow reusing BrokerRouter to minimize number of TCP connections to the cluster\nImplement IDisposable on consumer, producer, offsetmanagers and brokerrouter to allow closing TCP connections\nAdd support for Snappy and GZip compression",
  "summary": "Kafka cient for .NET",
  "verbatimVersion": "2.1.0",
  "version": "2.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#dependencygroup/snappy.net",
          "@type": "PackageDependency",
          "id": "Snappy.NET",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[4.0.0.1, 4.0.0.1]"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#lib/net45/Franz.xml",
      "@type": "PackageEntry",
      "compressedLength": 6396,
      "fullName": "lib/net45/Franz.xml",
      "length": 49312,
      "name": "Franz.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#lib/net45/Franz.dll",
      "@type": "PackageEntry",
      "compressedLength": 73409,
      "fullName": "lib/net45/Franz.dll",
      "length": 195072,
      "name": "Franz.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#Franz.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 660,
      "fullName": "Franz.nuspec",
      "length": 1281,
      "name": "Franz.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.15.49.51/franz.2.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "kafka",
    "client",
    "f#"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}