{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.25.17.23.35/telerik.dataaccess.core.2015.1.225.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Telerik AD",
  "catalog:commitId": "8bdf5fe4-b6b7-4c92-937c-8a4ced175b33",
  "catalog:commitTimeStamp": "2015-02-25T17:23:35.9518541Z",
  "copyright": "Copyright (C) 1996-2015 Telerik AD",
  "created": "2015-02-25T17:22:49.413Z",
  "description": "The Telerik.DataAccess.Core NuGet package provides the Telerik Data Access runtime assemblies necessary to consume Telerik Data Access persistent objects, without defining any mapping.\n\nIf this project contains persistent classes and defines mapping, the Telerik.DataAccess.Fluent NuGet package is required as well.\n\nTelerik Data Access helps defining mapping and executing create, retrieve, update and delete operations for your data access classes and database tables. It allows you to consume stored procedures and functions.",
  "iconUrl": "http://www.telerik.com/sfimages/default-source/productsimages/openaccess-orm/Resources/nuget-telerik-data-access.png",
  "id": "Telerik.DataAccess.Core",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.telerik.com/purchase/license-agreement/data-access",
  "packageHash": "Oz84eESIEQpg2RqmQqF4Eankgx+YbsaKk6wpZsE/FdIT2OVnDjwbHT7JmO9BFO1Os1OBJYr0xbWwTVTSgMPBpg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4268618,
  "projectUrl": "http://www.telerik.com/data-access",
  "published": "2015-02-25T17:22:49.493Z",
  "releaseNotes": "New\n- Artificial runtime-generated assemblies can be reused - Added the ability to reuse existing runtime-generated artificial assemblies when the defined artificial types are the same. This feature will result in less redundant assemblies that are generated on the disk and should improve the performance of scenarios involving multiple artificial data models.\n- Introduced option to enable/disable saving artificial assemblies on the disk - You can use RuntimeConfiguration.WriteArtificialTypesToDisk to control whether any runtime-created assemblies will be written to the disk or kept just in memory.\n\nFixed\n- Removed potential unhandled NullReferenceException - In certain LINQ queries involving usage of EXISTS and temporary tables there was a scenario that would cause NullReferenceException.\n- Wrong detection of GetObjectByKey when using LINQ query with filter by the primary key and a boolean flag - Queries like context.Orders.Single(o => o.OrderId == id && o.IsActive) previously would result in incorrect behavior because the boolean filter was ignored.\n\nNOTE: These Release Notes include only the runtime changes in the particular Telerik Data Access release. For the full list of changes please refer to the Telerik web site ( http://www.telerik.com/support/whats-new/data-access/release-history ).",
  "requireLicenseAcceptance": true,
  "summary": "The Telerik.DataAccess.Core NuGet package provides the Telerik Data Access runtime assemblies necessary to work with Telerik Data Access persistent objects.",
  "title": "Telerik.DataAccess.Core",
  "version": "2015.1.225.1",
  "tags": [
    "ORM",
    "Fluent",
    "CodeOnly",
    "Entity",
    "Mapping",
    "DataAccess",
    "Database",
    "DAL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}