{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.03.01.56/apitron.pdfkit.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Apitron LTD.",
  "catalog:commitId": "756a9c34-32a0-46b9-a8ac-2c7a84a7a558",
  "catalog:commitTimeStamp": "2015-02-08T03:01:56.2487472Z",
  "copyright": "©Apitron 2014. All Rights Reserved.",
  "created": "2014-12-30T15:49:45.743Z",
  "description": "It’s 100% managed code and doesn’t require special manipulations to run with any .NET framework version starting from 2.0. \n\nPDF standard versions supported are: ALL versions. \nFiles can be normal, linearized, password-protected, signed, incrementally updated.\n\n- We support many possible PDF content manipulations scenarios, below are a few things that worth mentioning:\n- Extract, modify and add graphics (text, images, drawings)\n- Split or merge PDF documents\n- Fill or create PDF forms\n- Add or remove document fields\n- Examine resources within a document - fonts, embedded files\n- Digitally sign and check existing signatures on PDF documents\n- Search for specific text\n- Protect document with a password\n- Work with navigation objects, e.g. create bookmarks or links\n- Full support for annotations\n- Full support for PDF actions\n- All fonts defined by specification are supported\n- Various colorspaces and color profiles are supported, e.g. you may draw in RGB, CMYK, gray, or whatever colorspace you like.\n- Files can be saved to other “subtypes” of PDF – Linearized or PDF/a for example.\n- If you require a specific funtionality and are unsure about whether it is supported, please review our online help you contact support so we'll be able to handle this.\n- Fixed layout API, implemented to be 100% PDF specification compatible, it unlocks full power of the PDF for you. Any complex PDF creation or manipulation task can be completed instantly.\n- Flow layout API, a styles-driven content generation API similar to HTML+CSS provides you with ability to create stunning documents, reports, bills, catalogues an more in minutes. Compact and easy to use, supports creation of XML templates and much more.",
  "iconUrl": "http://apitron.com/Uploads/logo3.png",
  "id": "Apitron.PDFKit",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2014-12-30T15:53:41.167Z",
  "licenseUrl": "http://apitron.com/Income/Income/application-license.txt",
  "packageHash": "RdQW8ZST+Lhx4HJl+h0xZvKlitQLsQFF9cYLFAbChWf6EkQg2037jUQQhHR6I1wLwUx6cg6IRARBV9Am2NZoUw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34034047,
  "projectUrl": "http://apitron.com/pdf-kit",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "- Xamarin.IOS support\n- Xamarin.Android support\n- Text extraction\n- Image extraction\n- Bugfixes.",
  "requireLicenseAcceptance": true,
  "summary": "Apitron PDF Kit is a .NET component that allows you to do whatever you want with PDF files. Add text and images, drawings, sign documents, edit existing content and much more. Royalty-free.",
  "title": "Apitron.PDF.Kit for .NET",
  "version": "1.0.2",
  "tags": [
    "Apitron.Pdf.Kit",
    ".NET",
    "create",
    "pdf",
    "PDF",
    "forms",
    "Library",
    "Xamarin",
    "IOS",
    "Android",
    "editor",
    "Viewer",
    "PDF/A",
    "Print",
    "pdf-generation",
    "pdf-library",
    "encryption",
    "extract",
    "Mono"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}