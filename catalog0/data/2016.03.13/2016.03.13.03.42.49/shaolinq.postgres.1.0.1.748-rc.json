{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.13.03.42.49/shaolinq.postgres.1.0.1.748-rc.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thong Nguyen",
  "catalog:commitId": "1f7b49ec-5d1a-4397-b9cb-de9d9da86b28",
  "catalog:commitTimeStamp": "2016-03-13T03:42:49.9010786Z",
  "copyright": "Copyright (c) 2007-2015 Thong Nguyen (tumtumtum@gmail.com)",
  "created": "2016-03-13T03:42:43.743Z",
  "description": "Shaolinq is a thoughtfully designed ORM and Linq provider for .NET\n    \nUse this package to add Shaolinq and out-of-the-box Postgres support (via Npgsql).\n    \nDesigned to perform super fast and be easy to use, Shaolinq's features also include:\n    \n- First class schema-first ORM with WYSIWYG data access and minipulation.\n- First class LINQ support (not the basic kind you see in most other OSS projects).\n- Single trip updating of objects.\n- Support for Sqlite, MySql and Postgres.\n- Automatic database creation and schema migration.\n- Delete LINQ extension for batch server side deletes.\n- Full support for server side date functions (Date.DayOfWeek etc).\n- Easily extensible with a simple interface for adding support for other ADO.NET compatible databases.\n- Open Source!",
  "id": "Shaolinq.Postgres",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.github.com/tumtumtum/Shaolinq/master/LICENSE.txt",
  "listed": true,
  "packageHash": "Pn64G5UBwm3hKPXBHiStxsYLj14A3uzGeRaAiVrP7Djvq9HVn7tpwMpf0VGAFJaEXZcMhRZliXL3BoiUE/aTDg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18275,
  "projectUrl": "https://github.com/tumtumtum/Shaolinq",
  "published": "2016-03-13T03:42:43.743Z",
  "releaseNotes": "- Support UNION and UNION ALL support (Queryable.Union and Queryable.Concat)\n- Removed requirement for DataAccessObjects and PersistedMembers to be abstract\n-- Previous --\n- ComputedMember language/parser improvements\n- Added support for Queryable.All queries\n- Added async versions of Queryable.Any and Queryable.All queries\n- Added predicate versions of Single, SingleOrDefault, First, FirstOrDefault\n- Support Delete and Delete(predicate) on all compatible Queryables (not just DataAccessObjects)\n- Support GetReference on objects where primary key values are provided using related computed member values\n- Added SumAsync, AverageAsync, MinAsync, MaxAsync methods\n- Better async support when using DataAccessScope\n- Better support for CompleteAsync\n- Functional async support for Postgres\n- Using AsyncRewriter to generate async methods\n- Fixed some nested projection with GroupBy bugs\n- Added DataAccessScope for async commit support\n- Support Include on collections without TransactionScope\n- Lots of Include collection fixes\n- Support joins with multiple join conditions using anonymous types either side of join 'equals' \n- Fixed memory leaks related to lambda projector cache\n- Full support for using Include() on RelatedDataAccessObject properties (collections) including recursive Includes within the collection values.\n- Better/more-complete support for GroupJoins\n- Support for SelectMany returning RelatedDataAccessObjects (Queryable) collections\n- Much improved support/implementation for aggregates and DefaultIfEmpty \n- Improved GroupBy and nested select/projection query support\n- Support implicit joins in many more places that take selectors/predicates such as Queryable.First, Queryable.Single, Queryable.Min, Queryable.Max, Queryable.Count etc.\n- Support join conditions that require implicit joins to resolve\n- Support DataAccessObjects with custom primary keys (inherited from Shaolinq.DataAccessObject instead of Shaolinq.DataAccessObject{T})\n- Support SelectForUpdate, WhereForUpdate on IQueryable\n- Fixed deadlocks in some async calls\n- Fixed inline call to a function returning IQueryable inside a query sometimes fails\n- TransactionContext optimisations\n- Fixed compiled projector lambda cache sometimes not caching due to a bug in SqlExpressionComparer\n- Various async fixes\n- Added NamingTransforms to DataAccessModelConfiguration\n- Fix objects with DAO primary keys using references and anonymous types\n- Better in-scope object caching performance \n- DAO primary keys mostly working with tests",
  "requireLicenseAcceptance": false,
  "summary": "A thoughtful ORM and Linq provider for .NET and Postgres",
  "title": "Shaolinq ORM and Linq provider for Postgres",
  "verbatimVersion": "1.0.1.748-rc",
  "version": "1.0.1.748-rc",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.13.03.42.49/shaolinq.postgres.1.0.1.748-rc.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.13.03.42.49/shaolinq.postgres.1.0.1.748-rc.json#dependencygroup/shaolinq",
          "@type": "PackageDependency",
          "id": "Shaolinq",
          "range": "[1.0.1.748-rc, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.13.03.42.49/shaolinq.postgres.1.0.1.748-rc.json#dependencygroup/npgsql",
          "@type": "PackageDependency",
          "id": "Npgsql",
          "range": "[3.0.5, )"
        }
      ]
    }
  ],
  "tags": [
    "shaolinq",
    "linq",
    "provider",
    "orm",
    "postgres",
    "sql",
    "database"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}