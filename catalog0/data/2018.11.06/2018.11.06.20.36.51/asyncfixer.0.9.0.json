{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Semih Okur",
  "catalog:commitId": "332be372-6fc7-4734-81e2-74fd61df6e34",
  "catalog:commitTimeStamp": "2018-11-06T20:36:51.3815825Z",
  "copyright": "Copyright 2015",
  "created": "2015-02-14T23:14:02.72Z",
  "description": "AsyncFixer helps developers in finding and correcting 3 common async/await misuses (anti-patterns). AsyncFixer was tested with hundreds of C# apps and successfully handles many corner cases. \n\nAsyncFixer (the nuget package) will work as a project-local analyzer that participates in builds. Attaching an analyzer to a project means that the analyzer travels with the project to source control and so it's easy to apply the same rule for the team. It also means that commandline builds report the issues reported by the analyzer.\n\nIf you want AsyncFixer to work just in the IDE and to work as an analyzer on every project you open in Visual Studio, please download the VSIX extension instead of this nuget package from here: https://visualstudiogallery.msdn.microsoft.com/03448836-db42-46b3-a5c7-5fc5d36a8308\n\nHere are 3 misuses that AsyncFixer detects:\n\n1) Unnecessary async/await Methods\n\nThere are some async methods where there is no need to use async/await. It is important to detect this kind of misuse because adding the async modifier comes at a price.\n\nAsyncFixer removes async/await keywords from these methods. \n\n\n2) Using Long-running Operations under Async Methods\n\nDevelopers use some potentially long running or blocking operations under async methods even though there are corresponding asynchronous versions of these methods in .NET or third-party libraries. Some example for such operations: Task.Wait(), Task.Result, Task.WaitAll(...), StreamReader.ReadToEnd(...), Thread.Sleep(...),  etc. \n\nAsyncFixer automatically replaces these operations with their corresponding asynchronous operations and inserts 'await' expression. For instance, it converts Thread.Sleep(...) to await Task.Delay(...).\n\n\n3) Fire & Forget Methods\n\nSome async methods are 'fire&forget', which return void. Unless a method is only called as an event handler, it must be awaitable. Otherwise, it is a code smell because it complicates control flow and makes error detection & correction difficult. \n\nAsyncFixer replaces the return type of the (non-event handler) method with 'Task'.\n\n4) Decide the use of ConfigureAwait(false)\n\nAsyncFixer checks whether the method and its call graph will ever need the UI or Request (ASP.NET) context at all. AsyncFixer decides the need for ConfigureAwait(false) in the await statement(s) in the method body.\n\nIt's coming soon!\n\n*** Important ***\n\nThe detection and fixing of more async/await misuses are being implemented.\nPlease send your bug report or feedback to semih.okur@gmail.com\nLearn more information about these misuses from our website: LearnAsync.NET",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#frameworkassemblygroup",
    "assembly": "System"
  },
  "iconUrl": "http://learnasync.net/icon.png",
  "id": "AsyncFixer",
  "isPrerelease": false,
  "lastEdited": "2018-11-06T20:36:27.35Z",
  "licenseUrl": "http://learnasync.net/license.txt",
  "listed": true,
  "packageHash": "lpYJC1+j3DwSNyvmPmVxWyN/LuHRz8vJPkNhy0Wmk9KhtjhulvDeeK5DKC2FEFnmBQQpslMUe1vVBqJMYZ1PhA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26920,
  "projectUrl": "http://learnasync.net/",
  "published": "2015-02-14T23:14:02.72Z",
  "releaseNotes": "First beta release.",
  "requireLicenseAcceptance": false,
  "summary": "AsyncFixer is an Advanced Async/Await Diagnostics and CodeFixes for the .NET Compiler Platform (\"Roslyn\"). AsyncFixer helps developers in finding and correcting 3 common async/await misuses (anti-patterns)",
  "title": "AsyncFixer",
  "verbatimVersion": "0.9",
  "version": "0.9.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#AsyncFixer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1721,
      "fullName": "AsyncFixer.nuspec",
      "length": 3740,
      "name": "AsyncFixer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#tools/analyzers/AsyncFixer.dll",
      "@type": "PackageEntry",
      "compressedLength": 8910,
      "fullName": "tools/analyzers/AsyncFixer.dll",
      "length": 20480,
      "name": "AsyncFixer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#tools/analyzers/RoslynUtilities.dll",
      "@type": "PackageEntry",
      "compressedLength": 3333,
      "fullName": "tools/analyzers/RoslynUtilities.dll",
      "length": 7680,
      "name": "RoslynUtilities.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#tools/install.ps1",
      "@type": "PackageEntry",
      "compressedLength": 141,
      "fullName": "tools/install.ps1",
      "length": 231,
      "name": "install.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#tools/uninstall.ps1",
      "@type": "PackageEntry",
      "compressedLength": 144,
      "fullName": "tools/uninstall.ps1",
      "length": 234,
      "name": "uninstall.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.06.20.36.51/asyncfixer.0.9.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "async/await",
    "diagnostics",
    "asynchronous",
    "codefix",
    "roslyn",
    "async",
    "codeanalysis",
    "c#"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}