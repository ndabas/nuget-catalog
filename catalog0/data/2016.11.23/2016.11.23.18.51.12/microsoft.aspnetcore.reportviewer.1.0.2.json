{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.18.51.12/microsoft.aspnetcore.reportviewer.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "WeiGe",
  "catalog:commitId": "3fe9f33e-c000-4af1-b706-e6c664890c0b",
  "catalog:commitTimeStamp": "2016-11-23T18:51:12.4760393Z",
  "created": "2016-11-23T18:34:59.7Z",
  "description": "Render Report for .Net Core, MVC from report server",
  "id": "Microsoft.AspNetCore.ReportViewer",
  "isPrerelease": false,
  "lastEdited": "2016-11-23T18:50:23.54Z",
  "listed": true,
  "packageHash": "Fc3UGqAC8pIjSEybIM2K6O5qExV9iEijGnAF67njPdS91uNhEzXUkAG57crifu+IC23Dhj8xsjiSBS6A4I8jRw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 55636,
  "published": "2016-11-23T18:34:59.7Z",
  "releaseNotes": "var settings = new ReportSettings();\n            settings.ReportServer = \"http://localhost/reportserver\";\n            settings.Credential = new NetworkCredential(\"username\", \"password\", \"domain\");\n            settings.RenderType = ReportRenderType.Html4_0;\n            settings.ShowToolBar = false; // if true, will be show the tool bar, but now not implemented any actions. you must implement it by yourself now. will soon coming on\n            settings.SessionId = \"23v1ubmn0k2gzo45jaeaov24\"; //the sessionid is coming after run report.\n            ReportViewer viewer = new ReportViewer(settings);\n            ReportExecuteResult result = viewer.Search(\"/ScheduleReports/OvertimeReport\", \"Main\");// for find text;\n            ReportExecuteResult result1 = viewer.ExecuteReport(\"/ScheduleReports/OvertimeReport\"); // for show report only\n            var contentx=result.Contents; //for display report content, id result.Stream has value, this wiil be null\n            var stream = result.Stream; // for export, if result.Contents has value. this will be null\n            var pageCount = result.PageCount; // the total page;\n            var pageIndex = result.PageIndex; // the current page;",
  "requireLicenseAcceptance": false,
  "summary": "Render Report for .Net Core, MVC from report server.",
  "title": "Microsoft.AspNetCore.ReportViewer",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.18.51.12/microsoft.aspnetcore.reportviewer.1.0.2.json#dependencygroup/.netstandard1.6.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard1.6.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.18.51.12/microsoft.aspnetcore.reportviewer.1.0.2.json#Microsoft.AspNetCore.ReportViewer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 886,
      "fullName": "Microsoft.AspNetCore.ReportViewer.nuspec",
      "length": 1987,
      "name": "Microsoft.AspNetCore.ReportViewer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.18.51.12/microsoft.aspnetcore.reportviewer.1.0.2.json#lib/Microsoft.AspNetCore.Report.dll",
      "@type": "PackageEntry",
      "compressedLength": 52198,
      "fullName": "lib/Microsoft.AspNetCore.Report.dll",
      "length": 303616,
      "name": "Microsoft.AspNetCore.Report.dll"
    }
  ],
  "tags": [
    ".Net",
    "Core",
    "ReportService",
    "SSRS",
    "MVC",
    "ReportViewer",
    "RDLC",
    "RDL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}