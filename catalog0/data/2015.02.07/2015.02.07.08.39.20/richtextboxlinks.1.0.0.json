{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.08.39.20/richtextboxlinks.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "mav.northwind",
  "catalog:commitId": "a1621616-9e84-4394-88ab-b0fb40e36210",
  "catalog:commitTimeStamp": "2015-02-07T08:39:20.9003182Z",
  "copyright": "CPOL",
  "created": "2014-12-12T18:17:10.853Z",
  "description": "From time to time, somebody asks in the forums if it is possible to add links to a RichTextBox that don't start with http://, ftp:// or another one of the 'standard' protocols.\n\nWell, here's the solution.",
  "id": "RichTextBoxLinks",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "BBPF1m/PAo6ah/y8vI+Vwxn5QYnXfLmRTFi+VuvX2bGnLJcVzM5OPn5188TA9X2C2M8ib12xso5IHOQFWASA/Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6666,
  "projectUrl": "http://www.codeproject.com/Articles/9196/Links-with-arbitrary-text-in-a-RichTextBox",
  "published": "2014-12-12T18:17:10.853Z",
  "releaseNotes": "I did not create this control, just packaged it up for NuGet. Here are the sources: http://www.codeproject.com/Articles/9196/Links-with-arbitrary-text-in-a-RichTextBox",
  "requireLicenseAcceptance": false,
  "summary": "An extended RichTextBox that allows to enter links not starting with one of the standard protocols.",
  "title": "Links with arbitrary text in a RichTextBox",
  "version": "1.0.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}