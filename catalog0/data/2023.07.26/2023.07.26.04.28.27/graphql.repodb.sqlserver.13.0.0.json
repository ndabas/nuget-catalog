{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "BBernard / CajunCoding",
  "catalog:commitId": "224f1176-3167-4ee5-98ee-376e078304a4",
  "catalog:commitTimeStamp": "2023-07-26T04:28:27.1076841Z",
  "copyright": "Copyright Â©  2020",
  "created": "2023-07-26T04:25:02.487Z",
  "description": "A set of extensions for working with HotChocolate GraphQL and RepoDb as the data access micro-orm without dependency on IQueryable.  This enables fully encapsulated control over SQL queries in every way within a Service or Repository layer of your application. This extension pack provides a significantly simplified facade to access critial elements such as Selections/Projections, Sort arguments, & Paging arguments with support for mapping them to Models using built in RepoDb functionality.  It also leverages RepoDb to provide a generic, Relay spec compatible, cursor pagination/slice query api for Sql Server.",
  "id": "GraphQL.RepoDb.SqlServer",
  "isPrerelease": false,
  "lastEdited": "2023-07-26T04:27:57.427Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "zMG1KGRn9eqgIL/uUgCFP0EdO6mNK/h3/ApatPh7Cubl+fekJBGV53fldm0EYsG7vY7/ESiz2whvIQMgNtvNyw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 46851,
  "projectUrl": "https://github.com/cajuncoding/GraphQL.RepoDb",
  "published": "2023-07-26T04:25:02.487Z",
  "releaseNotes": "Release Notes:\n\t\t\t- Updated and Optimized now with HC v13 -- leveraging more out-of-the-box features, simplifying code, and improving performance.\n\t\t\t- Update project to .NET 6.0 which is now the minimum version supported by HC v13.\n\t\t\t- Implemented support for dynamic injection of the GraphQL RepoDb Mapper via Resolver parameters.\n\t\t\t- The Field Middleware is now optimized to only resolve and inject IParamsContext or IGraphQLRepoDbMapper when it's actually requested in the signature of the resolver\n\t\t\t- NOTE: There are some breaking changes as part of the simplification such as:\n\t\t\t-    .AsPreProcessedCursorSlice() is replaced by .ToGraphQLConnection() and you can now simply return a normal HC Connection<T> from your resolvers.\n\t\t\t-    .AsPreProcessedPageResults() is replaced by .ToGraphQLCollectionSegment() and you can now simply return a normal HC CollectionSegment<T> from your resolvers.\n\t\t\t-\t Classes & Namespaces have been renamed from 'PreProcessing' to now 'ResolverProcessing'\n\n\t\t\tPrior Releases Notes:\n\t\t\t- Updated to latest version of HC v12.4.1\n\t\t\t- Updated Demo projects to .Net 6.0 and Azure Functions v4.\n\t\t\t- Bump RepoDB (Sql Server) version to v1.1.4 stable\n\t\t\t- Upgraded to now support HotChocolate version 12 with v12.0.1 and synced Nuget Version\n\t\t\t- Bump HotChocolate version to v11.3.8 (latest v11 version before jumping to v12) and synced Nuget Version\n\t\t\t- Added support for raw sql where filtering with Parameterization for complex where filtering and field processing (e.g. LOWER(), TRIM() functions on fields, or Full Text Search via CONTAINS(), FREETEXT(), etc.).\n\t\t\t- Fix bug with TotalCount not returning when pagination or other filtering returns no results.\n\t\t\t- Potential Breaking Change: Fixed method signatures to all consistently support specifying table name; this might potentially have some breaking changes to method signatures, but functionality is compatible once signatures are corrected.\n\t\t\t- Provide RepoDb extension meethod QueryBulkResultsByIdAsync() which enalbes high performance retrieval of very large result sets in bulk based on int Id values; this safely alleviates the limitation of max 2100 parameter bindings on SqlCmd when using Contains() expressions.\n\t\t\t- Breaking change but simplified the RepoDB Custom extension methods for CursorPaging and OffsetPaging to take in IRepoDbCursorPagingParams and IRepoDbOffsetPagingParams respectively instead of discrete values.\n\t\t\t- This helps minimizes the risk of the issue arising from the Optimization to not rely on TotalCount; it introduced a non-intuitive breaking change in the ReboDB Custom extensions whereby the new 'IsTotalCountRequested' param from the GraphQLParamsContext must be explicitly provided.\n\t\t\t- This also makes future enhancements easier and the method signatures more maintainable going forward.\n\t\t\t- Also need to highlight another potential issue from the code optimization: Now the Cursor and Offset paging arguments are fully optional and both will default with consistent behavior to retrieve all data.\n\t\t\t- Therefore Any enforcement to require paging args or limit the data if they are not provided must now be done by the consuming code; this helps the library be less opinionated and flexible but may now open prior uses to selecting more data than intended; this may be improved with configuration value in a future release.\n\t\t\t- Bugfix where Count could be incorrect due to potential null values skipped by Sql Server Count() aggregation over specific field vs '*'.\n\t\t\t- Bump HotChocolate version to v11.2.2 stable and sync Nuget version.\n\t\t\t- Bump RepoDB (Sql Server) version to v1.1.3 stable\n\t\t\t- Optimized paging algorithm to eliminate the dependency on TotalCount for computing HasPreviousPage/HasNextPage paging metadata.\n\t\t\t- Optimized TotalCount query to now only be executed when requested (e.g. User requests totalCount in the GraphQL query).\n\t\t\t- Add full RepoDB support for OffsetPaging (e.g. using Skip/Take instead of Batch Query (Page Size/Page Number).\n\t\t\t- Some code cleanup and optimizations.\n\t\t\t- Sync version with the latest Pre-processing Extensions.\n\t\t\t- Add support (and fix consistency) with CommandTimeout for all query methods.\n\t\t\t- Add .ConfigureAwait(false) to all awaits for performance.\n\t\t\t- Bump version to HotChocolate v11.0.4.\n\t\t\t- Bump to HotChocolate v11.0.2 and sync with ResolverProcessingExtensions issue fix release.\n\t\t\t- Bump to HotChocolate v11.0.1 which now resolves a bug that we helped identify with interfaces in the initial release of v11.0.0.\n\t\t\t- Fix issue with Sort/OrderBy field not working if not also part of Selection. OffsetPaging is not working, it's still work in progress. But this release provides ability to trace log out some details for the query, execution time, etc. Also improves support for cancellation token throughout DB calls and minor optimizations and cleanup.",
  "repository": "",
  "verbatimVersion": "13.0.0",
  "version": "13.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json#dependencygroup/net6.0/graphql.resolverprocessingextensions",
          "@type": "PackageDependency",
          "id": "GraphQL.ResolverProcessingExtensions",
          "range": "[13.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json#dependencygroup/net6.0/repodb.sqlserver",
          "@type": "PackageDependency",
          "id": "RepoDb.SqlServer",
          "range": "[1.1.4, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json#GraphQL.RepoDb.SqlServer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2868,
      "fullName": "GraphQL.RepoDb.SqlServer.nuspec",
      "length": 6578,
      "name": "GraphQL.RepoDb.SqlServer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json#lib/net6.0/GraphQL.RepoDb.SqlServer.dll",
      "@type": "PackageEntry",
      "compressedLength": 30287,
      "fullName": "lib/net6.0/GraphQL.RepoDb.SqlServer.dll",
      "length": 75776,
      "name": "GraphQL.RepoDb.SqlServer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.07.26.04.28.27/graphql.repodb.sqlserver.13.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11526,
      "fullName": ".signature.p7s",
      "length": 11526,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "graphql",
    "graph-ql",
    "hotchocolate",
    "azure",
    "repository",
    "service",
    "repodb",
    "dapper",
    "petapoco",
    "sqlkata",
    "sorting",
    "paging",
    "cursor",
    "resolver"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}