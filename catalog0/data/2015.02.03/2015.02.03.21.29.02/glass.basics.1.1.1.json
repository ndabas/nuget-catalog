{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.21.29.02/glass.basics.1.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jos√© Manuel Nieto (SuperJMN)",
  "catalog:commitId": "65c942a5-bc9a-4f60-980e-8eefeb3f8362",
  "catalog:commitTimeStamp": "2015-02-03T21:29:02.4461589Z",
  "copyright": "Copyright  2013",
  "created": "2013-10-02T08:54:26.133Z",
  "description": "Glass Basics",
  "iconUrl": "http://aventuraspuntonet.files.wordpress.com/2013/03/glass.png?w=128",
  "id": "Glass.Basics",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/Apache-2.0",
  "packageHash": "PEcd577QQAUXWixZdm1RyXrHn8hSovxHdWpG5p9S5N5PH8Daz5NWMMFYPWz3MVeruSCTc9GbRK5hmYHT5eRSvQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 255521,
  "projectUrl": "http://glassnet.codeplex.com/",
  "published": "2013-10-02T08:54:26.133Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "Lots of behaviors, styles, and MVVM artifacts to successfully get your WPF app to the top!",
  "title": "Glass Basics",
  "version": "1.1.1",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}