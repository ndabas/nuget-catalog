{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Lorenz Lo Sauer",
  "catalog:commitId": "20e58256-57f0-468e-a1c5-37ecf750fee0",
  "catalog:commitTimeStamp": "2018-12-07T01:11:43.5945824Z",
  "created": "2016-10-03T08:16:34.913Z",
  "description": "An easy-to-use, portable, tested, documented, serializable, thread-safe, strongly typed library for changing between unrestricted, arbitrary data types",
  "iconUrl": "http://lsauer.github.io/res/github/project/dotnet-portable-type-cast/type-converter-big.png",
  "id": "Core.Cast-Transform-Convert",
  "isPrerelease": false,
  "lastEdited": "2018-12-07T01:11:27.653Z",
  "licenseUrl": "https://lsauer.mit-license.org/",
  "listed": true,
  "packageHash": "4KiW6lgt6S74BYQ5+3T0qXAohTSceDkNKdf0vrWTW2j6axrvY2RcnjVvkXOv/yEirPJcWRjTo2/CxMutVZwMjw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 133558,
  "projectUrl": "https://github.com/lsauer/dotnet-portable-cast-convert-transform",
  "published": "2016-10-03T08:16:34.913Z",
  "releaseNotes": "=== Key Features ===\n\n-Central thread-safe pool of converting functions\n-Data Encapsulation\n-Add converters at runtime or compile-time\n-Consistent exception behavior\n-Optional functions following the \"Try\" convention of .NET\n-Instant improvement of source-code readability and maintainability\n-Low overall performance impact\n-Little to no learning curve\n-Independent, portable library\n\n______________________________________________________\n\n### Getting started in 4 steps\n\n1. *Install* with the <a href=\"http://goo.gl/iekUWH\" target=\"_blank\">NuGet Package manager</a>: `PM> Install-Package Core.TypeCast`.  \n2. *Add the namespace* to your top-listed using directives: `using Core.TypeCast;`.\n3. *Create a class* with one or more methods: `class MyConverter { ... int MyConverter(string argument) ... }`\n4. *Attribute* any class with `[ConverterAttribute]`: _`public class MyConverter { ... }`_.    \n    Subsequently, attribute the converting methods using `[ConverterMethodAttribute]`: _`public int MyConverter(string attribute){ ... }`__\n5. **Done!** \n\nNow, invoke conversions in your code anywhere as follows: \n```cs\n    var castedInt = \"500s\".CastTo<int>();\n    var protein = \"GAGTGCGCCCTCCCCGCACATGCGCCCTGACAGCCCAACAATGGCGGCGCCCGCGGAGTC\".ConvertTo<IProtein>();\n```\nUse library functions which suit the change of type descriptively:\n\n    `var complimentary = \"GAGTGCGCCCTCCCCGCACATGCGCCCTGACAGCCCAACAATGGCGGCGCCCGCGGAGTC\".Transform<Complementary>();`\n\n\n_____________________________________________________\n\n### Code Glance\n\nProvided below is an abbreviated example of what code may look like in your project: \n\n```cs\n    using System.Runtime.CompilerServices;\n    // IPolyNucleotide.cs\n    public interface IPolyNucleotide { ... }\n\n    // used for \"Tranform-Aliasing\"\n    delegate DNA Complimentary(string dnaSequence, AModelClass arguments);\n\n    // DNA.cs\n    [Converter]\n    public class DNA : IPolyNucleotide\n    {\n        [ConverterMethod]\n        protected IProtein ToProtein(string dnaSequence, bool homologyLookup = false)\n        {\n            ... ...\n        }\n\n        [ConverterMethod]\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public static DNA Complimentary(string dnaSequence, AModelClass arguments)\n        {\n            ... ...\n        }\n        ...\n    }\n```",
  "requireLicenseAcceptance": false,
  "summary": "An easy-to-use, portable, tested, documented, serializable, thread-safe, strongly typed library for changing between unrestricted, arbitrary data types",
  "title": ".NET Portable Cast Convert Transform",
  "verbatimVersion": "3.1.0",
  "version": "3.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#dependencygroup/csharp.portable-singleton",
          "@type": "PackageDependency",
          "id": "CSharp.Portable-Singleton",
          "range": "[2.0.0.4, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#Core.Cast-Transform-Convert.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1583,
      "fullName": "Core.Cast-Transform-Convert.nuspec",
      "length": 3672,
      "name": "Core.Cast-Transform-Convert.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#content/CHANGELOG/CHANGELOG.txt",
      "@type": "PackageEntry",
      "compressedLength": 8030,
      "fullName": "content/CHANGELOG/CHANGELOG.txt",
      "length": 28447,
      "name": "CHANGELOG.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#content/LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 719,
      "fullName": "content/LICENSE",
      "length": 1218,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#content/README.md",
      "@type": "PackageEntry",
      "compressedLength": 18682,
      "fullName": "content/README.md",
      "length": 58743,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#lib/portable-windows8%2Bnet45/Core.TypeCast.dll",
      "@type": "PackageEntry",
      "compressedLength": 30349,
      "fullName": "lib/portable-windows8%2Bnet45/Core.TypeCast.dll",
      "length": 72704,
      "name": "Core.TypeCast.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#lib/portable-net45%2Bwin%2Bwp8%2Bwpa81/Core.TypeCast.dll",
      "@type": "PackageEntry",
      "compressedLength": 30349,
      "fullName": "lib/portable-net45%2Bwin%2Bwp8%2Bwpa81/Core.TypeCast.dll",
      "length": 72704,
      "name": "Core.TypeCast.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#lib/portable-net45%2Bsl50%2BMonoAndroid10%2BMonoTouch10/Core.TypeCast.dll",
      "@type": "PackageEntry",
      "compressedLength": 30349,
      "fullName": "lib/portable-net45%2Bsl50%2BMonoAndroid10%2BMonoTouch10/Core.TypeCast.dll",
      "length": 72704,
      "name": "Core.TypeCast.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.01.11.43/core.cast-transform-convert.3.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "cast",
    "convert",
    "transform",
    "PCL",
    "portable",
    "class",
    "library",
    "dotnet",
    "core",
    "xamarin",
    "ios",
    "apple",
    "ease",
    "type",
    "conversion",
    "threading",
    "serialization"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}