{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.02.20.55.54/iformfileextensions.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ahmed Abu El-Nour",
  "catalog:commitId": "ce55b8aa-c085-4b72-a555-d3366560f5cb",
  "catalog:commitTimeStamp": "2017-09-02T20:55:54.7691374Z",
  "copyright": "Free to use, Free to modify!",
  "created": "2017-09-02T20:52:53.723Z",
  "description": "Provide a simple way, to manipulate IFormFiles in ASP.NET Core environment, such as Reading the File content, convert to byte array, check if the current file is actually an image and Store a file in the server",
  "iconUrl": "https://cdn2.iconfinder.com/data/icons/bitsies/128/EditDocument-64.png",
  "id": "IFormFileExtensions",
  "isPrerelease": false,
  "lastEdited": "2017-09-02T20:54:07.243Z",
  "listed": true,
  "packageHash": "jU0+iqJOeGsG2u6kNiTO2pHe0mUKQKdI82hlrRJT3QeHSPsm+lus+7tN+6BKh1XO6GYGAd3KHC833gvWxMxTjA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10437,
  "published": "2017-09-02T20:52:53.723Z",
  "releaseNotes": "Adding support to store a file/image in the server.",
  "requireLicenseAcceptance": false,
  "summary": "Provide a simple way, to manipulate IFormFiles in ASP.NET Core environment, such as Reading the File content, convert to byte array, check if the current file is actually an image and Store a file in the server",
  "title": "IFormFileExtensions",
  "verbatimVersion": "1.2.0",
  "version": "1.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.02.20.55.54/iformfileextensions.1.2.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.02.20.55.54/iformfileextensions.1.2.0.json#dependencygroup/.netstandard2.0/microsoft.aspnetcore.http",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Http",
          "range": "[2.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.02.20.55.54/iformfileextensions.1.2.0.json#IFormFileExtensions.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 613,
      "fullName": "IFormFileExtensions.nuspec",
      "length": 1359,
      "name": "IFormFileExtensions.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.02.20.55.54/iformfileextensions.1.2.0.json#lib/netstandard2.0/IFormFileExtensions.dll",
      "@type": "PackageEntry",
      "compressedLength": 6868,
      "fullName": "lib/netstandard2.0/IFormFileExtensions.dll",
      "length": 15872,
      "name": "IFormFileExtensions.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.02.20.55.54/iformfileextensions.1.2.0.json#lib/netstandard2.0/IFormFileExtensions.xml",
      "@type": "PackageEntry",
      "compressedLength": 1022,
      "fullName": "lib/netstandard2.0/IFormFileExtensions.xml",
      "length": 6497,
      "name": "IFormFileExtensions.xml"
    }
  ],
  "tags": [
    "ASP.NET",
    "Core"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}