{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.04.15.49.05/struct_conv_mainframe_to_pc.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "NM_ACT",
  "catalog:commitId": "75a1efcd-dbda-425d-9d39-0f3accd905d1",
  "catalog:commitTimeStamp": "2019-09-04T15:49:05.0390874Z",
  "created": "2019-06-06T14:58:05.27Z",
  "description": "Converts a Mainframe structure that is saved as a txt file and converts it into a Dictionary object that can be used in a C# application. \n    \n    1) FTP mainframe structures to the lan and save as txt.\n\n    2) Create an ini file inside the debug folder in your C# application.\n        - Open the ini file and set the file path of your structure(s)\n        - For input structures the naming scheme is: input_StructName = filePath\\fileName.txt\n        - For output structures the naming scheme is: output_StructName = filePath\\fileName.txt\n        - NOTE: you can have multiple structures declared in the ini file for both input and output.\n        - When you are done, save your ini file the same name as your projects executable.\n\n    3) Inside of your project add a ref to the package.\n\n    4) After adding the ref go to the class where your app launches from.\n        - Add \"using StructureConverter\" in your main class.\n        - Inside the startup step create a new instance of StructureConverter and select the appropriate creation method for your structures. \n\n    5) Using your created structure\n        - Create a new Dictionary object \n        - Set the Dictionary object equal to the StructureConverter class and the static property that pertains to the structure you want to access.\n        - After selecting the right property pass the input/output structure name you created in your ini file as a [key] as a type string.\n        - ex. StructureConverter.OutputStructures[\"output_TEST\"]\n        - When you want to get the value of particular field you just need to pass the fieldName as a key on your Dictionary object;\n        \n    6) When moving to production remember to copy the ini file to the prod environment. \n\n    WARNING: When trying to create a new dictionary and set it equal to a dictionary that was created from a static property it will create a reference of the\n            dictionary and change the data inside of the static property. \n\n\n            To create a copy of dictionary that was created from a static property use a foreach loop on the keys of the dictionary.",
  "id": "Struct_Conv_Mainframe_to_PC",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2019-09-04T15:48:37.597Z",
  "listed": false,
  "packageHash": "l47SYMRgtiTdYdylkwt6gLm4hidIXNiyiwBc7Jq3GKWFgmZeJomcMigsMTRvIefMQknFqtli+13afQ9TW0Whyg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18224,
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Converts a Mainframe structure that is saved as a txt file and converts it into a Dictionary object that can be used in a C# application.",
  "title": "Structure Converter: Mainframe to PC for C#",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.04.15.49.05/struct_conv_mainframe_to_pc.1.0.0.json#Struct_Conv_Mainframe_to_PC.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1117,
      "fullName": "Struct_Conv_Mainframe_to_PC.nuspec",
      "length": 2777,
      "name": "Struct_Conv_Mainframe_to_PC.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.04.15.49.05/struct_conv_mainframe_to_pc.1.0.0.json#StructureConverter.dll",
      "@type": "PackageEntry",
      "compressedLength": 5115,
      "fullName": "StructureConverter.dll",
      "length": 11776,
      "name": "StructureConverter.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.04.15.49.05/struct_conv_mainframe_to_pc.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}