{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.21.15.51/xbehave.0.10.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Adam Ralph",
  "catalog:commitId": "345534bb-0c41-4486-a19a-daaf4b4d75fe",
  "catalog:commitTimeStamp": "2015-02-01T21:15:51.4932133Z",
  "copyright": "Copyright (c) 2011 - 2012 Adam Ralph (adam@adamralph.com)",
  "created": "2012-05-21T17:56:37.673Z",
  "description": "A BDD/TDD framework based on xUnit.net inspired by the Gherkin behaviour language. Dispenses with the need to map Gherkin feature files to code implementations by allowing the developer to bake the behaviours/specifications directly into code. Designed for use either from day one or as a seamless addition to an existing xUnit.net based workflow.",
  "id": "Xbehave",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://bitbucket.org/adamralph/xbehave.net/src/5b719723bcfe/license.txt",
  "packageHash": "nC6W8Y1r+lKWEoN7sDErwa4rQFiyoc5ROSclik63470q4BuUxYOrvKcc3u++Yp3Qp3DoQBxBGaIWb7p9cZOAVg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 60000,
  "projectUrl": "https://bitbucket.org/adamralph/xbehave.net",
  "published": "2012-05-21T17:56:39.657Z",
  "releaseNotes": "Added And() and But() step definition methods.\nAdded fluent step definition syntax, e.g. _.Given(\"foo\", () => foo()).When(\"bar\", => bar()).Then(\"baz\", ()=> baz()).\nAdded ExampleAttribute and deprecated ScenarioDataAttribute.\nAdded InIsolation() and Skip() fluent step definition methods and deprecated ThenInIsolation() and ThenSkip().\nAdded string substitution of argument values in step names, e.g. [Example(123, 234)]public void SomeScenario(int x, int y) { ... \"Given x is {0} and y is {1}\" ... }.\nChanged to creating a separate test command for each step in a scenario.\nAdded scenario name to test command names.\nAdded scenario parameters and arguments to test command names.\nChanged Given(this string message, Func<IEnumerable<IDisposable>> arrange) to dispose of items in reverse order.\nChanged Given(this string message, Func<IEnumerable<IDisposable>> arrange) to guarantee disposal of remaining items when disposal of a given item throws an exception.\nRemoved unecessary creation of empty disposal test commands.\nBug fixes:-\n#8: infinite loops when running from TD.NET or Resharper and test command creation throws exception",
  "requireLicenseAcceptance": false,
  "title": "xBehave.net",
  "version": "0.10.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.21.15.51/xbehave.0.10.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.21.15.51/xbehave.0.10.0.json#dependencygroup/xunit",
          "@type": "PackageDependency",
          "id": "xunit",
          "range": "[1.9.0.1566, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.21.15.51/xbehave.0.10.0.json#dependencygroup/xunit.extensions",
          "@type": "PackageDependency",
          "id": "xunit.extensions",
          "range": "[1.9.0.1566, )"
        }
      ]
    }
  ],
  "tags": [
    "xUnit.net",
    "BDD",
    "test",
    "TDD"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}