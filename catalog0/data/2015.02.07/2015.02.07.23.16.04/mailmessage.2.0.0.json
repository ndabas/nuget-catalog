{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.23.16.04/mailmessage.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Venetasoft",
  "catalog:commitId": "4a0ba2f2-1c22-4c40-a6e0-d5ec90ee759a",
  "catalog:commitTimeStamp": "2015-02-07T23:16:04.0362191Z",
  "copyright": "Venetasoft",
  "created": "2014-03-02T04:59:49.437Z",
  "description": "WP7 and WP8 SMTP client library to send emails without using the EmailComposeTask, and attach any type of file.\n\nMain Features:\n\n• connects to Microsoft Live, Gmail or to a custom SMTP mail server (SSL/TLS compatible).\n• supports any kind of attachment, from resource or isolated storage: pdf, mp3, wav, mp4, avi, bmp, txt, zip, jpg, etc.\n• sends an email without calling EmailComposeTask and does not need user intervention.\n• multithreaded: will not freeze/block your UI.\n• works on wifi and data connection.\n• comes with a complete VS2012 demo project, a functional demo App ready to be deployed to your phone for testing the library.\n• lifetime upgrades and support via email/forum.\n• supports international charset (Chinese).\n\n\nUsage scenario:\n\n//create a new MailMessage object\nMailMessage mailMessage = new MailMessage();\n\n//set a Live/Hotmail or Gmail, or a custom SMTP account (ssl/tls)\nmailMessage.UserName= \"*****@hotmail.com;\nmailMessage.Password = \"********\";\nmailMessage.AccountType = AccountType.MicrosoftAccount; \nmailMessage.From = \"myapp@mycompany.com\";\n\n//set mail data\nmailMessage.To = \"foo@foo.com\";\nmailMessage.ReplyTo = \"foo5@foo.com\";\nmailMessage.Subject = \"Hello from WP\";\nmailMessage.Body = \"I can send any type of attachment from my app now !!\";   //text or HTML\n\n//attach ANY KIND of file from a resource or IsolatedStorage path\nmailMessage.AddAttachment(\"\\rex\\file.wav\");\nmailMessage.AddAttachment(\"\\myFolder\\file.mp3\"); \nmailMessage.AddAttachment(\"\\downloads\\file.mp4\"); \n//attach from in-memory data:\nmailMessage.AddAttachment(Encoding.UTF8.GetBytes(\"yesssss\".ToCharArray()), \"memoryfile.txt\");\n\n//set message event handlers\nmailMessage.Error +=  mailMessage_Error; \nmailMessage.MailSent += mailMessage_MailSent; \nmailMessage.Progress += mailMessage_Progress;  \n\n//send email (async)\nmailMessage.SendMail();\n\nSupport:  support@venetasoft.it\n",
  "iconUrl": "http://win.venetasoft.it/images/mailmessagelogo.jpg",
  "id": "MailMessage",
  "isPrerelease": false,
  "lastEdited": "2014-03-04T01:45:55.293Z",
  "packageHash": "JOUs9mPY46t+CNaDk9dZpqFjTrnY8pVVc8147USKwLwsEPUffqGS0oYsWOhRhk6G4tzhOe5juJQePBqqarsZcA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1115384,
  "projectUrl": "http://www.geekchamp.com/marketplace/components/livemailmessage",
  "published": "2014-03-02T04:59:49.437Z",
  "releaseNotes": "Component page: \nhttp://www.geekchamp.com/marketplace/components/livemailmessage\n\nFull version: \n• write to buy@venetasoft.it\n• lifetime free updates  and support.\n• use it on as many complete WP apps as you want.",
  "requireLicenseAcceptance": false,
  "summary": "WP7 and WP8 SMTP library to send emails with attachment without using the EmailComposeTask.",
  "title": "MailMessage",
  "version": "2.0.0",
  "tags": [
    "MailMessage",
    "Smtp",
    "SmtpClient",
    "Mail",
    "Email",
    "attachment",
    "attach",
    "windows",
    "phone",
    "WP8",
    "WP7",
    "WP7.1"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}