{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.50.31/lucene.net.linq.3.1.51.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Chris Eldredge",
  "catalog:commitId": "c8a96bbd-cf66-4a93-bdc4-ccfcf259a400",
  "catalog:commitTimeStamp": "2015-02-03T12:50:31.5021613Z",
  "copyright": "Copyright 2012 The Motley Fool, LLC",
  "created": "2013-06-28T20:43:21.137Z",
  "description": "Execute LINQ queries on Lucene.Net complete with object to Document mapping.",
  "iconUrl": "https://svn.apache.org/repos/asf/incubator/lucene.net/trunk/branding/logo/lucene-net-icon-128x128.png",
  "id": "Lucene.Net.Linq",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/themotleyfool/Lucene.Net.Linq/blob/master/LICENSE.txt",
  "packageHash": "hkAjCkLDFI/7xqhKPoDzIkVmJ5Tx3zOAkhW/TxndI7FusMe73j4vv1PcRrX7kIvh3hnx4gGZBJAmHLJY9yq75Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 62704,
  "projectUrl": "https://github.com/themotleyfool/Lucene.Net.Linq",
  "published": "2013-06-28T20:43:21.137Z",
  "releaseNotes": "## Current Release\n\n      * Add support for fluent mapping interface. Example:  https://github.com/themotleyfool/Lucene.Net.Linq/blob/master/source/Lucene.Net.Linq.Tests/Samples/FluentConfiguration.cs\n      * Add DefaultParserOperator property to FieldAttribute to specify QueryParser.DefaultParseOperator for a given property/field.\n      * Performance - Use TotalHits instead of ScoreDocs.length when computing Count()/Any()\n\n      ## 3.1.48\n\n      * Enable analyzing and retrieving term vectors using [Field(TermVector = TermVectorMode.Yes)] and TermFreqVectorDocumentMapper\n      * Enable Field level boosting while indexing using [Field(Boost = 5)]\n\n      ## 3.1.46\n\n      * Open new IndexWriter after ISession.Commit fails and calls Rollback on current IndexWriter\n      * Convert objects and keys to documents and queries before writing to IndexWriter\n\n      ## 3.1.45\n\n      * Automatically creates Analyzer using metadata attributes like [Field(Analyzer=typeof(StandardAnalyzer)]\n      * Store different object types in single index\n      * Prevent documents with null values on key properties from being stored\n      * Enable sorting on types implementing IComparable<T> but not non-generic IComparable\n      * Allow client to provide custom IDocumentMapper<T> implementations",
  "requireLicenseAcceptance": false,
  "summary": "Provides LINQ IQueryable interface and object/document mapping over a Lucene.Net index.",
  "title": "Lucene.Net.Linq",
  "version": "3.1.51",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.50.31/lucene.net.linq.3.1.51.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.50.31/lucene.net.linq.3.1.51.json#dependencygroup/remotion.linq",
          "@type": "PackageDependency",
          "id": "Remotion.Linq",
          "range": "[1.13.183, 2.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.50.31/lucene.net.linq.3.1.51.json#dependencygroup/common.logging",
          "@type": "PackageDependency",
          "id": "Common.Logging",
          "range": "[2.1.2, 3.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.50.31/lucene.net.linq.3.1.51.json#dependencygroup/lucene.net",
          "@type": "PackageDependency",
          "id": "Lucene.Net",
          "range": "[3.0.3, 3.6.0)"
        }
      ]
    }
  ],
  "tags": [
    "lucene.net",
    "lucene",
    "linq",
    "odata",
    "search",
    "nosql"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}