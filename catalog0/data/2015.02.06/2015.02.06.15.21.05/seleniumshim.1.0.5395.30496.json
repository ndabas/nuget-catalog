{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.15.21.05/seleniumshim.1.0.5395.30496.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Vance McCorkle for Experior Technologies LLC Washington USA",
  "catalog:commitId": "525318f6-b660-4a8c-b8dd-a4a7abbdf153",
  "catalog:commitTimeStamp": "2015-02-06T15:21:05.7612834Z",
  "copyright": "Copyright (c) 2014 by Experior Technologies Washington USA",
  "created": "2014-10-10T00:56:57.977Z",
  "description": "[Early Beta] Light object model shim that abstracts Selenium WebDriver operations and simplifies running test automation with multiple browsers.",
  "id": "SeleniumShim",
  "isPrerelease": false,
  "lastEdited": "2014-10-15T16:26:41.643Z",
  "packageHash": "m4oETvPnqoBp5A0wOzkMhpsfgLFVwdyZ2O9FHvDblFx2ijjQZZHyeC2kqZS1E6+2dHIj9MRcirO5snZPpH+/1A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 7858,
  "published": "2014-10-10T00:56:57.977Z",
  "releaseNotes": "Beta release 2",
  "requireLicenseAcceptance": false,
  "summary": "[Early Beta] Light object model shim that abstracts Selenium WebDriver operations and simplifies running test automation with multiple browsers. Use WebBrowser.FindElement(...) which uses a poll on timeout algorithm to eliminate race conditions that plague Selenium (at least until Selenium implements a WaitForAllThreadsComplete() like in CUIT). ",
  "title": "SeleniumShim",
  "version": "1.0.5395.30496",
  "tags": [
    "Selenium"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}