{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.11.07.39.12/xtremedocumentstudio.netconverter.15.13.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gnostice Information Technologies",
  "catalog:commitId": "9ad4da56-eb87-46d5-8856-c48ab5a9c7f5",
  "catalog:commitTimeStamp": "2015-07-11T07:39:12.4469366Z",
  "copyright": "© 2002-2015 Gnostice Information Technologies Private Limited. All rights reserved.",
  "created": "2015-07-11T07:38:36.22Z",
  "description": "Gnostice XtremeDocumentStudio .NET is the next-generation multi-format document-processing component suite for .NET developers. Currently, XtremeDocumentStudio .NET Converter supports converting PDF, DOCX, DOC, BMP, JPEG, PNG, WMF, EMF, TIFF and MTIFF to PDF, DOCX, TXT, HTML, BMP, JPEG, PNG, TIFF and MTIFF. More formats will be introduced in future. It can convert documents such as DOCX-to-PDF or PDF to images without requiring any other external software or libraries. It can also intelligently reconstruct page elements when converting PDF to DOCX.\n\n\t\tXtremeDocumentStudio .NET is 100% managed code. It can natively process supported formats without requiring external software such as Microsoft Word, Open XML SDK, Word Automation Services, Adobe PDF library or GhostScript.",
  "iconUrl": "http://www.gnostice.com/images/ICON_xtremedocumentstudio_dot_net.png",
  "id": "XtremeDocumentStudio.NETConverter",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.gnostice.com/XtremeDocumentStudio_dot_NET.asp?show=licenses",
  "packageHash": "hmYOyecBYv10xRrRjcLTN0C0Evfz6X3r2R1HGqsyRcGyqSd6ELoKMWqvvTRh+xpYRJRC5P5DxmKY3/x7ggUuZQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 3209573,
  "projectUrl": "http://www.gnostice.com/XtremeDocumentStudio_dot_NET.asp",
  "published": "2015-07-11T07:38:36.267Z",
  "releaseNotes": "Version 2015 R13 - July 10, 2015\n================================\nIntroduced\n~~~~~~~~~~\n+ DOCX\n  - [NEW] Added support for the following form fields\n    * Check Box\n    * Dropdown List\nImproved\n~~~~~~~~\n+ Multi-Format Document Converter\n  - EncoderSettings now takes indexer which accepts file extension or mime type as input and returns corresponding encoder settings. This helps to preserve the encoder settings made on a specific format.\n    * example usage: var pdfEncoderSettings = DocumentConverter1.EncoderSettings[“PDF”];\n  - Signature of ConvertToFile and ConvertToStream is altered by interchanging the positions of ConverterSettings and EncoderSettings parameters. EncoderSettings is placed before the ConverterSettinsg as the former parameter is used most often compared to the later. \nFixed\n~~~~~\n+ DOCX\n  - Random lines were drawn when run border was set, but the border width was zero\n  - Current page number field was not displaying value in some cases\n+ PDF \n  - InvalidCastException encountered while loading documents that contain OCGs entry (in OCProperties dictionary of Catalog dictionary) for which the type of the value is IndirectReference.",
  "requireLicenseAcceptance": true,
  "summary": "Convert PDF, DOCX, DOC, BMP, JPEG, PNG, WMF, EMF, and single-page and multi-page TIFF.",
  "title": "Gnostice XtremeDocumentStudio .NET Document Converter",
  "version": "15.13.0",
  "tags": [
    "PDF",
    "DOCX",
    "DOC",
    "TIFF",
    "JPG",
    "BMP",
    "PNG",
    "TXT",
    "HTML",
    "Document",
    "Converter"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}