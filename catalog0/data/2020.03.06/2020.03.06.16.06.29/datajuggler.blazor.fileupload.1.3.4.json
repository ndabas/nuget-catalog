{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "DataJuggler",
  "catalog:commitId": "8d90d899-efa9-4b37-964b-a28d3cee038d",
  "catalog:commitTimeStamp": "2020-03-06T16:06:29.9332036Z",
  "contentFiles": "",
  "created": "2020-03-06T16:04:07.64Z",
  "description": "This package is built upon BlazorInputFile by Steve Sanderson at Microsoft. https://github.com/SteveSandersonMS/BlazorInputFile\n\nAll I did was wrap in it a component to make it easy to use in a Blazor app.\n\nVersion 1.2.0+ has new features that are untested involving image required, min and max height and width values, so use with caution.\n\nI have tested it enough it works for my use cases. Most of the problems I have read about the control involve over 20 meg and multiple file uploads.",
  "iconFile": "BlazorFileUploadIcon.png",
  "id": "DataJuggler.Blazor.FileUpload",
  "isPrerelease": false,
  "lastEdited": "2020-03-06T16:06:08.937Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "DNm1DEOsZFKqm3zZHKX7TkeEu6Uqof/wACrWvrNwXxyThOmlWaQabEP0dnl7sJOB+qEqkt24vZcBliXWnzAL4g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 105125,
  "projectUrl": "https://github.com/DataJuggler/BlazorFileUpload",
  "published": "2020-03-06T16:04:07.64Z",
  "releaseNotes": "Version 1.3.4: I fixed an issue where the AllowedExtensions was failing if a file was named fileName.JPG or filename.PNG, since the extension is upper case.\n\nVersion 1.3.3: I added 3 new properties:\n1. SaveToDisk - Defaults to True\n2. Stream - If SaveToDisk is false, a memory stream is returned.\n3. HasStream - This read only property returns true if the Stream exists (Stream != null);\n\nThis has only been briefly tested.\n\nVersion 1.3.2: Somehow the Parameter Tag from issue 1.3.1 wasn't there. Fixed now.\n\nVersion 1.3.1: \n\n1. While testing I discovered some confusion between ButtonClassName and CustomButtonClassName. As used in the component, ButtonClassName was used for the Reset button only, so I renamed ButtonClassName to ResetButtomClassName.\n\n2. CustomButtonClassName was not a Parameter, now that is fixed.\n\nSorry for the breaking change, but if I am confused between ButtonClassName and CustomButtonClassName, everyone probably is also, so I hope this adds some clarity.\n\nVersion 1.3.0: I think I have the use Custom button simplified, as I added a new property for ShowCustomButton,\nand other properties for ButtonClassName, ButtonTextClassName and some other properties.\n\nThe samples page on GitHub now has a standard button and a custom button on the same page to show how\nto do it.\n\nVersion 1.2.8: I added two new Parameter properties: \n1. InputFileClassName\n2. MessageClassName\n\nThese are designed to make it easier to style in real world components.\n\nVersion 1.2.7: I changed the font style for the Reset button. Testing it now.\n\nVersion 1.2.6: Apparently my 1.2.5 OnReset method isn't working, so I added a string parameter to the event\ndeclaration. I actually tested it this time, and it seems to work with a project reference, so it should work now.\n\nVersion 1.2.5: I added an OnReset event / parameter property so that when the new Reset button is clicked,\nsubscribers to the event can be notified that the UI has been reset.\n\nPossible use cases include a displayed image or attachment might need to be removed when the Reset button\nis clicked.\n\nFix for version 1.2.4: I typed 1.3.3 for the fix for version 1.2.3. Sorry, I can type but my vision is not very good.\n\nFix for version 1.2.3: I created the new property UploadComplete, but I wasn't setting it to true after a\nfile was uploaded.\n\nFix for version 1.2.2: I accidently checked in with a C# comment in a .razor component and it showed up.\nOops. This is now fixed.\n\nNew Features for version 1.2.0:\nI added a method 'IsImageFile', that for now returns true if the extions is .png or .jpg's only.\nThis method is used in conjunction with the following new parameters:\n\n1. RequiredHeight & RequiredWidth, which if set means the uploaded file must exactly match\non height and width, else the CustomRequiredSizeMessage is shown. The CustomRequiredSizeMessage\nmust be set for this validation to take effect.\n\n2. MinHeight & MinWidth, which if set means the uploaded file must be at least this many pixels\non height and width, else the CustomMinSizeMessage is shown. The CustomMinSizeMessage \nmust be set for this validation to take effect.\n\n3. MaxHeight & MaxWidth, which if set means the uploaded file must be less than this many pixels\non height and width, else the CustomMaxSizeMessage is shown. The CustomMaxSizeMessage \nmust be set for this validation to take effect.\n\n4. The Status property is now a public [Parameter], so you can set a variable to Status and set it from \noutside the component.\n\n5. Two new custom [Parameters] were added for int CustomId and string Tag. These values are set\non the FileUploadComponent as parameters, which can help to classify or store informaiton about \nthe uploaded file. These values are returned with UploadedFileInfo.\n\n6. The code was moved to a partial class, which makes it easier to work on.\n\nAll this new code is untested, so please use with caution and report any problems, and feel free to report if \nsomething works also. \n\n\nA new Image Gallery sample and video is in the works, but I needed to upload a new version for testing first.\n\nNew features for version 1.1.0:\n\nThere is a new required parameter called UploadFolder for the constructor of the class UploadFileInfo.\n\nA request came in for returning the FullPath as a property of the class UploadFileInfo, so I added the constructor to make sure the Upload Folder is also available.\n\nThe read only property FullPath is also new, and it returns the full file path on Disc using Path.Combine(UploadFolder, FullName);\n\nI am building a new image gallery sample, and will post a video on YouTube later today if I can finish it.\nPlease visit my YouTube channel and subscribe if you haven't already.\n\nhttps://www.youtube.com/channel/UCaw0joqvisKr3lYJ9Pd2vHA\n\n\nUpdate 1.0.10-Preview: A couple of Microsoft Components that are still in preview were updated.\n\nUpdate 1.0.9-Preview: I added two new properties for FilterByExtension, and AllowedExtensions.\n      If FilterByExtension is true, the uploaded file's extension must be in the AllowedExtensions string.\n      Example: .jpg;.png; (the delimiter really doesn't matter as the compare is a contains operator).\n\n\n\nUpdate 1.0.8-Preview: When I added the check for if file.Size is greater than MaxFileSize, I forgot to check if MaxFileSize is set (greater than zero).\n\nUpdate 1.0.7-Preview: I added a couple of new properties for MaxFileSize and a FileTooLargeMessage to enable you to change the default message of 'The file uploaded is too large' if you want to do so.\n\n      I also added an Aborted property, so the client gets a signal that the upload was aborted, and the Exception is returned that might help with debugging / client validation.\n\nUpdate 1.0.6-Preview: I decided to return more information about the file instead of just the name to make it actually useful.\n\n      I also broke the FileUploaded method, but now is the time to break it before anyone starts using it. Now I return an object called UploadedFileInfo, with 6 properties.\n      1. string Name\n      2. string PartialGuid\n      3. string readonly NameWithPartialGuid (a concatanation of name + \".\" + PartialGuid\n      4. long Size\n      5. datetime LastModified\n      6. string Type\n\n\n      --\n      This is the first working version, that also raises the OnChange event to return the FileName of the file returned.\n\n      I also added a partial Guid to each fileName to ensure uniqueness. You can change the length of the PartialGuid, but the component does expect the PartialGuidLengthParameter to either not be set, which defaults to 12, or atleast be above zero.\n\n      When leaving it as the default value, the filename uploaded is named (filename.extension).partialguidstring\n      Example: JohnSmithResume.sxlasdfc-lae.doc",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.3.4",
  "version": "1.3.4",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#dependencygroup/.netstandard2.1/blazorinputfile",
          "@type": "PackageDependency",
          "id": "BlazorInputFile",
          "range": "[0.1.0-preview-00002, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#dependencygroup/.netstandard2.1/microsoft.aspnetcore.components",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Components",
          "range": "[3.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#dependencygroup/.netstandard2.1/microsoft.aspnetcore.components.web",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Components.Web",
          "range": "[3.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#dependencygroup/.netstandard2.1/system.drawing.common",
          "@type": "PackageDependency",
          "id": "System.Drawing.Common",
          "range": "[4.7.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#DataJuggler.Blazor.FileUpload.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3569,
      "fullName": "DataJuggler.Blazor.FileUpload.nuspec",
      "length": 8900,
      "name": "DataJuggler.Blazor.FileUpload.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#lib/netstandard2.1/DataJuggler.Blazor.FileUpload.dll",
      "@type": "PackageEntry",
      "compressedLength": 9206,
      "fullName": "lib/netstandard2.1/DataJuggler.Blazor.FileUpload.dll",
      "length": 22016,
      "name": "DataJuggler.Blazor.FileUpload.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#build/Microsoft.AspNetCore.StaticWebAssets.props",
      "@type": "PackageEntry",
      "compressedLength": 254,
      "fullName": "build/Microsoft.AspNetCore.StaticWebAssets.props",
      "length": 480,
      "name": "Microsoft.AspNetCore.StaticWebAssets.props"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#build/DataJuggler.Blazor.FileUpload.props",
      "@type": "PackageEntry",
      "compressedLength": 81,
      "fullName": "build/DataJuggler.Blazor.FileUpload.props",
      "length": 91,
      "name": "DataJuggler.Blazor.FileUpload.props"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#buildMultiTargeting/DataJuggler.Blazor.FileUpload.props",
      "@type": "PackageEntry",
      "compressedLength": 83,
      "fullName": "buildMultiTargeting/DataJuggler.Blazor.FileUpload.props",
      "length": 93,
      "name": "DataJuggler.Blazor.FileUpload.props"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#buildTransitive/DataJuggler.Blazor.FileUpload.props",
      "@type": "PackageEntry",
      "compressedLength": 97,
      "fullName": "buildTransitive/DataJuggler.Blazor.FileUpload.props",
      "length": 107,
      "name": "DataJuggler.Blazor.FileUpload.props"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#staticwebassets/background.png",
      "@type": "PackageEntry",
      "compressedLength": 377,
      "fullName": "staticwebassets/background.png",
      "length": 378,
      "name": "background.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#staticwebassets/exampleJsInterop.js",
      "@type": "PackageEntry",
      "compressedLength": 186,
      "fullName": "staticwebassets/exampleJsInterop.js",
      "length": 242,
      "name": "exampleJsInterop.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#staticwebassets/Images/Buttons/BlackButton.jpg",
      "@type": "PackageEntry",
      "compressedLength": 3360,
      "fullName": "staticwebassets/Images/Buttons/BlackButton.jpg",
      "length": 4435,
      "name": "BlackButton.jpg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#staticwebassets/Images/Buttons/BlackButtonWide.jpg",
      "@type": "PackageEntry",
      "compressedLength": 3719,
      "fullName": "staticwebassets/Images/Buttons/BlackButtonWide.jpg",
      "length": 5027,
      "name": "BlackButtonWide.jpg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#staticwebassets/styles.css",
      "@type": "PackageEntry",
      "compressedLength": 722,
      "fullName": "staticwebassets/styles.css",
      "length": 2301,
      "name": "styles.css"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#content/obj/Release/netstandard2.1/staticwebassets/DataJuggler.Blazor.FileUpload.StaticWebAssets.xml",
      "@type": "PackageEntry",
      "compressedLength": 138,
      "fullName": "content/obj/Release/netstandard2.1/staticwebassets/DataJuggler.Blazor.FileUpload.StaticWebAssets.xml",
      "length": 177,
      "name": "DataJuggler.Blazor.FileUpload.StaticWebAssets.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#contentFiles/any/netstandard2.1/obj/Release/netstandard2.1/staticwebassets/DataJuggler.Blazor.FileUpload.StaticWebAssets.xml",
      "@type": "PackageEntry",
      "compressedLength": 138,
      "fullName": "contentFiles/any/netstandard2.1/obj/Release/netstandard2.1/staticwebassets/DataJuggler.Blazor.FileUpload.StaticWebAssets.xml",
      "length": 177,
      "name": "DataJuggler.Blazor.FileUpload.StaticWebAssets.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 642,
      "fullName": "LICENSE",
      "length": 1090,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#BlazorFileUploadIcon.png",
      "@type": "PackageEntry",
      "compressedLength": 68680,
      "fullName": "BlazorFileUploadIcon.png",
      "length": 69264,
      "name": "BlazorFileUploadIcon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.06.16.06.29/datajuggler.blazor.fileupload.1.3.4.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "Blazor",
    "FileUpload",
    "BlazorFileUpload"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}