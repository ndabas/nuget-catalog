{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eric Schneider",
  "catalog:commitId": "2008b403-707e-4a75-9d0e-bad3f4c2c0e6",
  "catalog:commitTimeStamp": "2017-09-12T01:44:37.6330607Z",
  "copyright": "Copyright © 2017 Frozen Elephant Inc.",
  "created": "2017-09-12T01:43:54.177Z",
  "description": "Allows a developer to write database queries using standard .net code, the queries are written in a similar manner as sql except you reference your .net objects instead of tables, the object and properties are mapped to the schema with attributes. This provides an abstraction from the schema/database and also the queries are database agnostic. This method also provides many extra compiler checks to the query. The .net code queries build the database vendor specific sql for execution. The generated sql can easily be reviewed and tested.",
  "iconUrl": "http://frozenelephant.com/Images/app.ico",
  "id": "SymbioticQuery.NetStandard_x64",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "listed": true,
  "packageHash": "LZwFx49r11aobwIYWnB0lw3uyP98XSZ8c7dA6FCTUIx6H2TSbprPZov2de4ncR/YGSpVAz3oEC4a77YymS883g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30651,
  "published": "2017-09-12T01:43:54.177Z",
  "releaseNotes": "' ********************************************************\n' ******  Copyright © 2017 Frozen Elephant Inc.     ******\n' ********************************************************\n\n--------------------------------------------------------------------------------------------\n**** Symbiotic Query Revision Notes ****\n--------------------------------------------------------------------------------------------\n\n\n--------------------------------------------------------------------------------------------\nRelease version 1.0\n--------------------------------------------------------------------------------------------\n\n27-Oct-2016\n\nI began the Symbiotic Query project.\nThe goal of this project will be to write queries in code for the use against a relational database and possibly against object collections.\nOne of the benefits is that the query is written with association to the object/s and it's properties, \nwhereas with the sql queries are written with the association of tables and it's columns.\nWith Symbiotic Query, after the mapping attributes are added, you don't have to think about the schema or the columns, just the objects.\nAlso if the developer using the Symbiotic Query api properly, many parts of the query is compiler checked, so if you change an objects name or property the compiler will show an error.\n\nCurrently it's partially coupled with Symbiotic ORM, and is currently being built as a replacement for embedded sql in code, \nbut I would like it to work seamlessly with the Symbiotic ORM.\nIn the long term it may become to two separate libraries but for now the goal is one library.\n\nThe goal of this library is not to fully support Structured Query Language, but most of the basic features.\n\n5-Jan-2017\nWorking on table alias support, which carries over to joins and where's also.\n\n12-Jan-2017\nWorking on allowing additional select column/s.\n\n14-Jan-2017\nWorking on allowing additional select column/s.\nWorking on Selections and Case support.\nWorking on Group By support.\n\n21-Jan-2017\nAdded support for \"not in\" and \"not between\"\nSome code clean-up and removed some unneeded interfaces.\n\n23-Jan-2017\nFixed a few bugs in the select, group by select columns.\nAdding support for \"Having\".\n\n24-Jan-2017\nFinished support for \"Having\"\n\n25-Jan-2017\nRefactoring the code, moving query/sql building code to separate classes.\n\n\n27-Jan-2017\nAdded comments to queries (sql labels) and parameters (values) to aid in trouble shooting.\n\n28-Jan-2017\nWorking on support for sub selects.\n\n29-Jan-2017\nSub selects for columns and for in() is working.\nAdded support to call function in a select as columns.\n\n30-Jan-2017\nMore refactoring of select classes\nRefactoring to better support unit testing of query builder.\n\n31-Jan-2017\nAdding tracking of types used in queries. Will be used for error handling.\nWould like to reduce the method signature exposure, considering removing some methods for where’s.\n\n24-25-Feb-2017\nFinishing up refactoring of api.\nAdding support for Top/Limit\n\n26-28-Feb-2017\nAdding debugger display attributes to all the query object to aid in debugging.\n\n22-Mar-2017\nFixed the auto group by.\nAdded more unit tests for the query builders.\n\n23-Mar-2017\nReworked the order by, it now allows you to specify a sort direction on the order by.\nFixed support for \"Is Null\" and \"Is Not Null\".\n\n24-Mar-2017\nAdded c# unit tests project\nPreparing for first release to Nuget.\n\n26-Mar-2017\nAdd checks for Equal compares on null/nothing, throws an exception which will force developers to use IsNull or IsNotNull.\n\n\n--------------------------------------------------------------------------------------------\n\n28-Mar-2017\nDebating if it would be useful if there was a simple way to update parameter values?\n\n11-Sept-2017\nRework to use .Net Standard\nDeployed to Nuget.org",
  "requireLicenseAcceptance": false,
  "summary": "Allows a developer to write database queries using standard .net code, the queries are written in a similar manner as sql except you reference your .net objects instead of tables, the object and prope",
  "title": "Symbiotic Query Net Standard x64",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json#dependencygroup/.netstandard2.0/symbiotic_micro_orm_net_standard_x64",
          "@type": "PackageDependency",
          "id": "Symbiotic_Micro_ORM_Net_Standard_x64",
          "range": "[2.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json#dependencygroup/.netstandard2.0/system.data.common",
          "@type": "PackageDependency",
          "id": "System.Data.Common",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json#SymbioticQuery.NetStandard_x64.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2185,
      "fullName": "SymbioticQuery.NetStandard_x64.nuspec",
      "length": 5783,
      "name": "SymbioticQuery.NetStandard_x64.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json#lib/netstandard2.0/SymbioticQuery.NetStandard.dll",
      "@type": "PackageEntry",
      "compressedLength": 22751,
      "fullName": "lib/netstandard2.0/SymbioticQuery.NetStandard.dll",
      "length": 59904,
      "name": "SymbioticQuery.NetStandard.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.09.12.01.44.37/symbioticquery.netstandard_x64.1.0.0.json#lib/netstandard2.0/SymbioticQuery.NetStandard.xml",
      "@type": "PackageEntry",
      "compressedLength": 2355,
      "fullName": "lib/netstandard2.0/SymbioticQuery.NetStandard.xml",
      "length": 15372,
      "name": "SymbioticQuery.NetStandard.xml"
    }
  ],
  "tags": [
    "Symbiotic",
    "Query",
    "ORM",
    "Micro-ORM",
    "Sql",
    "Server",
    "MySql",
    "Sqlite",
    "Oracle",
    "PostgreSql",
    "Frozen",
    "Elephant"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}