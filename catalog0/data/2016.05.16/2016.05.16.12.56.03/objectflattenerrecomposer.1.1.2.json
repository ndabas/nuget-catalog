{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.16.12.56.03/objectflattenerrecomposer.1.1.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dogu Arslan",
  "catalog:commitId": "8474f751-54b4-45fc-b104-e2e3cb6b96d8",
  "catalog:commitTimeStamp": "2016-05-16T12:56:03.6605477Z",
  "copyright": "Copyright 2016",
  "created": "2016-03-14T14:15:46.063Z",
  "description": "Provides functionality to flatten complex objects into EntityProperty dictionary and functionality to recompose original complex object from the flattened property dictionary. One usage is that the API allows writing any complex object with nested properties into Azure Table Storage in flattened form which is not normally possible by using the Azure Storage Client SDK.\n\nThe API also allows you to save Enum, TimeSpan, DateTimeOffset, Nullable property types to Azure Table Storage which is also not possible via Azure Storage Client SDK.\n\nWhat is the Minimum Requirement to flatten my complex object with ObjectFlattenerRecomposer API?\n\nThe minimum requirement is that your properties need to have both Getter and Setter. The Getter and Setter do not need to be public, they can be protected or private. If there is a property that you cannot/do not want to add a Setter even a private one, then you can exclude that property from being flattened by putting the [IgnorePropertyAttribute] to it as explained below. \n\n\n\n\n\nHow do I exclude some properties from being flattened?\n\n\nThere may be some use cases where you may want to exclude certain properties from being flattened ie. you have some Get only properties and you do not want to add even a private Setter for those or you do not want to write certain properties eventually to table storage in that case all you need to do is to add [IgnorePropertyAttribute] attribute to the top of the properties you want to exclude.\n\n\nBlog: https://doguarslan.wordpress.com/2016/02/03/writing-complex-objects-to-azure-table-storage/\n\nUsage: \n\nusing ObjectFlattenerRecomposer;\n\n//Flatten object and convert it to EntityProperty Dictionary\nDictionary<string, EntityProperty> flattenedProperties = EntityPropertyConverter.Flatten(complexObject);\n\n// Create a DynamicTableEntity and set its PK and RK\nDynamicTableEntity dynamicTableEntity = new DynamicTableEntity(partitionKey, rowKey);\n\ndynamicTableEntity.Properties = flattenedProperties;\n\n// Write the DynamicTableEntity to Azure Table Storage using client SDK\n\n//Read the entity back from AzureTableStorage as DynamicTableEntity using the same PK and RK\nDynamicTableEntity entity = [Read from Azure using the PK and RK];\n\n//Convert the DynamicTableEntity back to original complex object.\nImagine original complexObject was of type Order.\n\nOrder order = EntityPropertyConverter.ConvertBack<Order>(entity.Properties);",
  "id": "ObjectFlattenerRecomposer",
  "isPrerelease": false,
  "lastEdited": "2016-05-16T12:55:58.16Z",
  "listed": true,
  "packageHash": "Y/XodnU51AXwv9vlLteJArnPP2vdMa2a0pP9Fg8wkS1/GxatdAtoNZF68AKzx7ZepzVKDYOqd5IrwL/rNuP93g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11986,
  "projectUrl": "https://doguarslan.wordpress.com/2016/02/03/writing-complex-objects-to-azure-table-storage/",
  "published": "2016-03-14T14:15:46.063Z",
  "releaseNotes": "\n- Added Free BSD Licence.txt to the package\n- Fixed a potential arithmetic overflow exception on object recomposition for ulong and uint properties",
  "requireLicenseAcceptance": false,
  "summary": "using ObjectFlattenerRecomposer;\n\n//Flatten object and convert it to EntityProperty Dictionary\nDictionary<string, EntityProperty> flattenedProperties = EntityPropertyConverter.Flatten(complexObject);\n\n// Create a DynamicTableEntity and set its PK and RK\nDynamicTableEntity dynamicTableEntity = new DynamicTableEntity(partitionKey, rowKey);\n\ndynamicTableEntity.Properties = flattenedProperties;\n\n// Write the DynamicTableEntity to Azure Table Storage using client SDK\n\n//Read the entity back from AzureTableStorage as DynamicTableEntity using the same PK and RK\nDynamicTableEntity entity = [Read from Azure using the PK and RK];\n\n//Convert the DynamicTableEntity back to original complex object.\nImagine original complexObject was of type Order.\n\nOrder order = EntityPropertyConverter.ConvertBack<Order>(entity.Properties);\n\nThat's all:)",
  "title": "Object Flattener Recomposer",
  "verbatimVersion": "1.1.2.0",
  "version": "1.1.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.16.12.56.03/objectflattenerrecomposer.1.1.2.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.16.12.56.03/objectflattenerrecomposer.1.1.2.json#dependencygroup/windowsazure.storage",
          "@type": "PackageDependency",
          "id": "WindowsAzure.Storage",
          "range": "[4.3.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.16.12.56.03/objectflattenerrecomposer.1.1.2.json#ObjectFlattenerRecomposer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1381,
      "fullName": "ObjectFlattenerRecomposer.nuspec",
      "length": 4348,
      "name": "ObjectFlattenerRecomposer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.16.12.56.03/objectflattenerrecomposer.1.1.2.json#lib/net45/ObjectFlattenerRecomposer.dll",
      "@type": "PackageEntry",
      "compressedLength": 6607,
      "fullName": "lib/net45/ObjectFlattenerRecomposer.dll",
      "length": 14336,
      "name": "ObjectFlattenerRecomposer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.05.16.12.56.03/objectflattenerrecomposer.1.1.2.json#content/License.txt",
      "@type": "PackageEntry",
      "compressedLength": 801,
      "fullName": "content/License.txt",
      "length": 1504,
      "name": "License.txt"
    }
  ],
  "tags": [
    "Object",
    "Flatten",
    "Recompose",
    "Azure",
    "Table",
    "Storage",
    "EntityProperty",
    "DynamicTableEntity",
    "POCO",
    "Converter"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}