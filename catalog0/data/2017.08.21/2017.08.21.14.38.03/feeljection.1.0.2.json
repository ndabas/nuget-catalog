{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.21.14.38.03/feeljection.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Antonio Bruno",
  "catalog:commitId": "9b57f0fc-a6e6-4e96-9f16-81b9d13a3ea5",
  "catalog:commitTimeStamp": "2017-08-21T14:38:03.1587612Z",
  "copyright": "Copyright 2017",
  "created": "2017-08-21T13:57:14.78Z",
  "description": "Looking for all concrete service that are marked with annotation Service. It fills a pool with any instances that can reuse in the application.\n\nTo use this library, you must perform following steps: \n\n1) Mark the current concrete service. \n\nexample: \n\npublic interface IServiceA{ \n   string GetName(); \n} \n\n[Service] \npublic class ConcreteServiceA : IServiceA{ \n     public string GetName(){ \n           return \"Antonio\"; \n     } \n} \n\nN.B. Only one interface service must be marked with the \"Service\" annotation \n\n2) Start to search all concrete services \n\nInjectManager.Search() \n\nN.B. If you would create all instance of service, you will use this method InjectManager.Search(true) \nN.B. Use this method one time in your application! \n\n3) Inject your service in a property \n\npublic class ServiceController{ \n\n     private IServiceA service = InjectManager.Inject<IServiceA>(); \n\n     ..... \n\n}",
  "iconUrl": "http://i_havent_a_url.com/",
  "id": "FeelJection",
  "isPrerelease": false,
  "lastEdited": "2017-08-21T14:35:05.383Z",
  "licenseUrl": "http://i_havent_a_url.com/",
  "listed": true,
  "packageHash": "mguMWEgdK8c4+fgVnF2FPHcKfEMk2E2kmSRxUC/yh3XoPSkXr2+hZ2tDEp0x4UYXFYGf1szY3SUhWzOpAcr34w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6487,
  "projectUrl": "http://i_havent_a_url.com/",
  "published": "2017-08-21T13:57:14.78Z",
  "releaseNotes": "Beta version",
  "requireLicenseAcceptance": false,
  "summary": "Looking for all concrete service that are marked with annotation Service. It fills a pool with any instances that can reuse in the application.",
  "title": "FeelJection",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.21.14.38.03/feeljection.1.0.2.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.21.14.38.03/feeljection.1.0.2.json#FeelJection.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 786,
      "fullName": "FeelJection.nuspec",
      "length": 1845,
      "name": "FeelJection.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.21.14.38.03/feeljection.1.0.2.json#lib/net452/FeelJection.dll",
      "@type": "PackageEntry",
      "compressedLength": 4042,
      "fullName": "lib/net452/FeelJection.dll",
      "length": 9216,
      "name": "FeelJection.dll"
    }
  ],
  "tags": [
    "Injection",
    "Services",
    "Helper"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}