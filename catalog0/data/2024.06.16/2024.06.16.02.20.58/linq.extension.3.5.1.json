{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nav Malik",
  "catalog:commitId": "7315715a-fe80-4a2b-bf64-720718ce3f9c",
  "catalog:commitTimeStamp": "2024-06-16T02:20:58.1870069Z",
  "copyright": "Nav Malik",
  "created": "2024-06-16T02:18:14.643Z",
  "description": "Linq Extension to provide Dynamic Where Condition with Groups, Child Groups & Filters and Dynamic Select, Dynamic Take If Positive Number, Pagination and Nesting Predicates with parenthesis. Use SearchInput class for Dynamic Where and PaginationInput for pagination (take, skip and sort).",
  "id": "Linq.Extension",
  "isPrerelease": false,
  "lastEdited": "2024-06-16T02:20:48.697Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "j4qaxBblb1YWLpuLBpiLoHe5JLeJf6CYPdnAnX0oh1grg6rMUKNn0dq+Mde6I1XKNQQ+N3CfQnhZWnbSa1s3QQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 35612,
  "projectUrl": "https://github.com/nav-malik/Linq.Extension",
  "published": "2024-06-16T02:18:14.643Z",
  "releaseNotes": "3.5.1 Added overloaded Extension methods for WhereWithDistinctBy,  SortBy, Take, Skip and DisinctIf to take dictionary of string and object pair to get DistinctBy object or Pagination object instead of passing actual type.\n***************-----------****************\n3.5.0 Added Where Extension Methods. Added EF Core DistinctBy Extension Method which List of original type, also added WhereWithDistinctBy which will fetch list of data from distinct by and convert into where expression and then combine it with rest of where expression to make one combine where predicate.\n***************-----------****************\n3.4.0 Added DistinctBySelect which takes comma separted fieldnames as string or list of string for fieldnames and generate distinct select query on input fields only.\nAlso, added distinct extension method which takes bool input distinct with default to true and generate distinct query. \nAslo, added distinct bool input to Pagination extension method with default to false and it applies distinct if input is true before sort, take and skip.\n***************-----------****************\n3.3.1 Added Select extension methods for Dynamic Select Generator as actual type of Entity or Dynamic type.\n***************-----------****************\n3.3.0 Added Dynamic Select Generator expression which return actual type instead of Dynamic type, also added IEnumerable DistinctBy.\n***************-----------****************\nUpdated Dynamic Where Predicate. Now generated sql will not have case statements in where condition.\n\n*************** ----------- ***************\nAdded Child Groups in FilterGroupInput this will allow to create nested 'Parenthesis' () in generated SQL queries. ChildGroups is type of List of FilterGroupInput so it'll generated 'Parenthesis' () with in 'Parenthesis' ()  recursively.\nExcluded the proprties which doesn't exists in the resultset in SortBy extension method. Also, in case of exception return the source.\nFix the sort on nullable fields.\nAdded dynamic Group By with list of strings as names of the fields Group By on.\nMajor change.  \nAdded Filter Groups. This allow to create SQL queries with 'Parenthesis' () and separate And/Or groups with () in SQL.",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "Linq.Extension",
  "verbatimVersion": "3.5.1",
  "version": "3.5.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json#dependencygroup/net6.0/microsoft.entityframeworkcore",
          "@type": "PackageDependency",
          "id": "Microsoft.EntityFrameworkCore",
          "range": "[6.0.31, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json#dependencygroup/net6.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.2, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json#Linq.Extension.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1482,
      "fullName": "Linq.Extension.nuspec",
      "length": 3695,
      "name": "Linq.Extension.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json#lib/net6.0/Linq.Extension.dll",
      "@type": "PackageEntry",
      "compressedLength": 19304,
      "fullName": "lib/net6.0/Linq.Extension.dll",
      "length": 48640,
      "name": "Linq.Extension.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.16.02.20.58/linq.extension.3.5.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12928,
      "fullName": ".signature.p7s",
      "length": 12928,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Linq",
    "Extension",
    "DynamicSelect",
    "DynamicWhere",
    "Linq.Entities",
    "LinqEntity",
    "Linq.Entity",
    "Nesting",
    "Predicates",
    "NestingPredicates"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}