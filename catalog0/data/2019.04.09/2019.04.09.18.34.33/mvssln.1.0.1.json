{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "github.com/3F/MvsSln",
  "catalog:commitId": "80adac03-005e-4d42-b935-28dd244bbaef",
  "catalog:commitTimeStamp": "2019-04-09T18:34:33.8004694Z",
  "copyright": "Copyright (c) 2013-2017  Denis Kuzmin [entry.reg@gmail.com] :: github.com/3F ",
  "created": "2017-07-21T11:19:26.437Z",
  "description": "\n    \n        MvsSln provides logic for complex support of the Visual Studio .sln files and its projects (.vcxproj, .csproj., ...).\n\n        It was as a part of the https://github.com/3F/vsSolutionBuildEvent projects, but now it extracted into the new specially for [DllExport](https://github.com/3F/DllExport/issues/38) and for others.\n        _ _ _ _ _ _\n        Source code and all details here: https://github.com/3F/MvsSln\n        \n        ~~~~~~~~\n        Get it via GetNuTool:\n        ==========================================\n        gnt /p:ngpackages=\"MvsSln/1.0.1\"\n        ==========================================\n        * https://github.com/3F/GetNuTool    \n\n        Build info:  \n  \n    S_NUM:          1.0.1    \n    S_REV:          43422    \n    S_NUM_REV:      1.0.1.43422    \n    bSha1:          acc6957    \n    bName:          master    \n    bRevc:          17    \n    .NET version:   v4.0    \n    .NET stamp:     40    \n    Configuration:  PublicRelease    \n    Platform:       Any CPU    \n    cfgname:        Release    \n    revDeltaBase:   2017/06/22    \n    revDeltaMin:    1000    \n    revDeltaMax:    65534    \n    \n                    :: generated by a vsSolutionBuildEvent v0.12.10.10901\n        \n    ",
  "iconUrl": "https://raw.githubusercontent.com/3F/MvsSln/master/MvsSln/Resources/MvsSln_v1_96px.png",
  "id": "MvsSln",
  "isPrerelease": false,
  "lastEdited": "2019-04-09T18:34:23.267Z",
  "licenseUrl": "https://github.com/3F/MvsSln/blob/master/License.txt",
  "listed": false,
  "packageHash": "aDVEd6WIAN+gQtnfAVeu60rFXwvywcugrE5AzWnE7PLtbMxeDWypIQaQgfh5jkR5VDjJBoB63CONX0OUTiSvuA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 109278,
  "projectUrl": "https://github.com/3F/MvsSln",
  "published": "1900-01-01T00:00:00Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/.json#gpref",
      "reference": {
        "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#gpref/ref/mvssln.dll",
        "file": "MvsSln.dll"
      }
    }
  },
  "releaseNotes": "Public release of the MvsSln - v1.0.1\n\n* FIXED: Fixed possible bug with already loaded project in collection when initializing new instance of Sln.\n* FIXED: Fixed `IXProject.RemoveProperty(PropertyItem property)` & `IXProject.RemoveItem(Item item)` when selected items or properties does not exist.\n* FIXED: Fixed possible exception when disposing object /IsolatedEnv.\n* FIXED: Fixed possible NullReferenceException for IsolatedEnv + Improved layer of IXProject.\n* NEW: Added `localScope` flag for `GetProperty(string name, bool localScope = true)`.\n       If true, will return default value for any special and imported properties type. It's important to use with `RemoveProperty(...)` etc.\n       \n* NEW: Added `SlnItems.LoadMinimalDefaultData` flag to load only minimal default data. For example, the only one configuration for each project.\n       And its alias `EnvWithMinimalProjects` - To prepare environment with minimal loaded projects.\n       \n* NEW: Added `IXProject.Reevaluate()` - To reevaluate data of project if necessary.\n       For example, if project contains 2 or more same properties by name: \n       After `RemoveProperty(...)` the second property still will be unavailable for `GetProperty(...)`\n       because its node does not contain this at all. Use this to update nodes, or `revalue` flag with updated `RemoveProperty(...)`\n       \n* NEW: Added `IXProject.RemoveImport(ImportElement element)` - For additional control of removing elements via IXProject.\n* CHANGED: `IXProject.AddImport(...)` methods - now, does not have any restriction for adding new elements.\n* CHANGED: `AssemblyName` from Projects.Item has been wrapped by `AsmData` for additional work with public key tokens etc.\n* CHANGED: The result of `IXProject.GetImport(...)` has been wrapped by `ImportElement` to avoid using MBE for end user.\n* CHANGED: Other list of changes:\n            * `+IXProject.ProjectPath`\n            * `+IXProject.ProjectFullPath`\n            * `+IXProject.GlobalProperties`\n            * `+IXProject.Save(string path, Encoding enc)`\n            * `+IXProject.GetImport(string project, string label, bool eq = false)`\n            * `+IXProject.GetImports(string project = null)`\n            * `+IXProject.GetImports(string project, string label, bool eq = false)`\n            * `+IXProject.AddReference(string fullpath, bool local, bool? embed = null, bool? spec = null)`\n            * `+IEnvironment.LoadMinimalProjects()`\n            \n* CHANGED: Compatible update of signatures:\n            * `~IXProject.AddImport(string target, bool checking, string label = null)`\n            * `~IXProject.AddImport(string target, string condition, string label = null)`\n            * `~IXProject.GetProperty(string name, bool localScope = true)`\n            * `~IXProject.RemoveProperty(string name, bool revalue = false)`\n            * `~IXProject.RemoveProperty(PropertyItem property, bool revalue = false)`\n            * `~IEnvironment.LoadProjects(IEnumerable<ProjectItemCfg> pItems = null)`\n            \n* CHANGED: Incompatible minor changes with result of `ProjectImportElement GetImport(string project = null)`. \n           It has been wrapped by `ImportElement` to avoid using MBE.",
  "requireLicenseAcceptance": false,
  "summary": "Complex support of the Visual Studio .sln files and its projects (.vcxproj, .csproj., ...) - https://github.com/3F/MvsSln",
  "title": "[ MvsSln ] VisualStudio .sln files and its projects",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#.version",
      "@type": "PackageEntry",
      "compressedLength": 7,
      "fullName": ".version",
      "length": 5,
      "name": ".version"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#build_info.txt",
      "@type": "PackageEntry",
      "compressedLength": 247,
      "fullName": "build_info.txt",
      "length": 521,
      "name": "build_info.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#changelog.txt",
      "@type": "PackageEntry",
      "compressedLength": 1237,
      "fullName": "changelog.txt",
      "length": 3583,
      "name": "changelog.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#License.txt",
      "@type": "PackageEntry",
      "compressedLength": 687,
      "fullName": "License.txt",
      "length": 1145,
      "name": "License.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#MvsSln.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2059,
      "fullName": "MvsSln.nuspec",
      "length": 5684,
      "name": "MvsSln.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#Readme.md",
      "@type": "PackageEntry",
      "compressedLength": 3162,
      "fullName": "Readme.md",
      "length": 8169,
      "name": "Readme.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#lib/net40/MvsSln.dll",
      "@type": "PackageEntry",
      "compressedLength": 30468,
      "fullName": "lib/net40/MvsSln.dll",
      "length": 68608,
      "name": "MvsSln.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#lib/net40/MvsSln.pdb",
      "@type": "PackageEntry",
      "compressedLength": 37641,
      "fullName": "lib/net40/MvsSln.pdb",
      "length": 175616,
      "name": "MvsSln.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#lib/net40/MvsSln.xml",
      "@type": "PackageEntry",
      "compressedLength": 9336,
      "fullName": "lib/net40/MvsSln.xml",
      "length": 104747,
      "name": "MvsSln.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#tools/gnt.bat",
      "@type": "PackageEntry",
      "compressedLength": 3687,
      "fullName": "tools/gnt.bat",
      "length": 10601,
      "name": "gnt.bat"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#tools/hMSBuild.bat",
      "@type": "PackageEntry",
      "compressedLength": 5941,
      "fullName": "tools/hMSBuild.bat",
      "length": 18437,
      "name": "hMSBuild.bat"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.04.09.18.34.33/mvssln.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "sln",
    "visual-studio",
    "projects",
    "visualstudio",
    "sln-files",
    "csproj",
    "vcxproj",
    "vs",
    "vs2015",
    "vs2017",
    "MvsSln"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}