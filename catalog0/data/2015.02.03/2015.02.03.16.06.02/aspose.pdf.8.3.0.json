{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.16.06.02/aspose.pdf.8.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "dc71cd4a-541b-4060-820a-0b42c4f9ccf1",
  "catalog:commitTimeStamp": "2015-02-03T16:06:02.5763494Z",
  "copyright": "Â©Aspose 2002-2013. All Rights Reserved.",
  "created": "2013-08-02T07:01:34.013Z",
  "description": "Aspose.Pdf for .NET is a PDF document creation and manipulation component that enables your .NET applications to read, write and manipulate existing PDF documents without using Adobe Acrobat. It also allows you to create forms and manage form fields embedded in a PDF document. This component is written in managed C# and it allows developers to add PDF creation and manipulation functionality to their Microsoft .NET applications (WinForms, ASP.NET and .NET Compact Framework).\n\tAspose.Pdf for .NET is affordable and offers an incredible wealth of features including PDF compression options; table creation and manipulation; support for graph objects; extensive hyperlink functionality; extended security controls; custom font handling; integration with data sources; add or remove bookmarks; create table of contents; add, update, delete attachments and annotations; import or export PDF form data; add, replace or remove text and images; split, concatenate, extract or inset pages; transform pages to image; print PDF documents and much more.",
  "iconUrl": "http://www.aspose.com/images/products/dotnet/Aspose.Pdf_128x128.png",
  "id": "Aspose.Pdf",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "packageHash": "UQYvoykQUgSn55PQx1CjruJerO7ENQPfzcc8T4HcbOm6k4AOYUt+0tDwfNmO0mOr7+f/3FsZXRLLz9117HQ0/w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 31990032,
  "projectUrl": "http://www.aspose.com/categories/.net-components/aspose.pdf-for-.net/default.aspx",
  "published": "2013-08-02T07:01:37.763Z",
  "releaseNotes": "This release introduces the features, enhancements and bug fixes as detailed below:\n\nNew Features\nPDFNEWNET-11337\tRepair non-standard PDF files and convert to valid PDF files\nPDFNEWNET-33486\tPDF to DOC conversion using Streams\nPDFNEWNET-33864\tAdd TOC in existing PDF documents\nPDFNEWNET-35481\tImplement margin support for TextParagraph\nPDFNEWNET-33544\tAllow to pass font as a stream\n\nEnhancements\nPDFNEWNET-34786\tText to PDF is slow or hangs CPUPDFNEWNET\nPDFNEWNET-35357\tPerformance issue when building PDF with HTML tags\nPDFNEWNET-35520\tSlow Performance when creating big Text in PDF file\nPDFNEWNET-34930\tTXT to PDF: Conversion process is taking too much time\n\nExceptions\nPDFNEWNET-33701\tOutOfMemory exception is occurring when creating large PDF\nPDFNEWNET-35226\tHTML to PDF - StackOverFlow is occurring during conversion process\nPDFNEWNET-35259\tPDF to XPS - OutOfMemoryException during conversion\nPDFNEWNET-35300\tNullReferenceException on PageEditor.GetPageSize\nPDFNEWNET-35362\tWhile converting PDF to TIFF, IndexOutOfRangeException thrown\nPDFNEWNET-35474\tNotImplementedException thrown while extracting bookmarks\n\nBugs\nPDFNEWNET-32755\tCreation and Modified date of PDF setting problem\nPDFNEWNET-34469\tPDF to tiff will loose the bold text\nPDFNEWNET-35186\tProblem while creating PDF Portfolio\nPDFNEWNET-35222\tSVG to PDF - font is not embedded in resultant file\nPDFNEWNET-35448\tProblem converting PDF to PDF/A\nPDFNEWNET-35519\tPdf Form fill issue viewing in Adobe Reader 7\nPDFNEWNET-35524\tFile contents not appearing when embedding GnuMICR Font\nPDFNEWNET-35528\tProblem importing comments from XFDF\nPDFNEWNET-35542\tPdf Form Fill flatten issue\nPDFNEWNET-35559\tImport Annotations - Not all text lines of annotation are visible\nPDFNEWNET-35560\tImport Annotations - Annotation background becomes transparent\nPDFNEWNET-35561\tImport Annotations - Font error when opening resultant file\nPDFNEWNET-35562\tIssues while converting XFA form to PDF/A\nPDFNEWNET-35539\tHTML to PDF - list-style-type is ignored during conversion\nPDFNEWNET-35535\tIssue when images in a PDF use ASCII85Decode\nPDFNEWNET-31684\tsaving resultant file to Stream, automatically closes the stream\nPDFNEWNET-35055\tUpdate/edit an existing Pdf Portfolio\nPDFNEWNET-35087\tXML Template not working with Aspose.Pdf for .NET 7.8.0\nPDFNEWNET-35246\tTextAbsorber not recognizing text with actual spaces\nPDFNEWNET-35282\tWhile converting PDF to XPS, size increased to almost 10 times\nPDFNEWNET-35311\tXPS to PDF conversion, italic font style is not being rendered properly\nPDFNEWNET-35408\tPDFA1B compliance test fails\nPDFNEWNET-35497\tHow to detect PDF document is corrupt\nPDFNEWNET-35500\tGePageRect(bool consdierRotation) method not working correctly\nPDFNEWNET-35540\tCorrupt Pdf file hangs the application\nPDFNEWNET-35563\tInvalid table formatting in inline HTML to PDF conversion",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Pdf for .NET is an amazing component which provides the feature to create and manipulate PDF documents.",
  "title": "Aspose.Pdf for .NET",
  "version": "8.3.0",
  "tags": [
    "Aspose.Pdf",
    "PDF",
    "XFA",
    "XPS",
    "TIFF",
    "PCL",
    "SVG",
    "HTML",
    "XML",
    "XSL-FO",
    "FDF",
    "XFDF",
    "PDF/A",
    "form",
    "Portfolio",
    "to",
    "DOC",
    "DOCX"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}