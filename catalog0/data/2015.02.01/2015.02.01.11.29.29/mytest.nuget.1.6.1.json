{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.11.29.29/mytest.nuget.1.6.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dennis Doomen, Martin Opdam",
  "catalog:commitId": "a8b3ea0f-ce0e-483b-9344-ca642cce8c36",
  "catalog:commitTimeStamp": "2015-02-01T11:29:29.9286763Z",
  "copyright": "Copyright Dennis Doomen 2010-2011",
  "created": "2011-12-08T02:46:30.87Z",
  "description": "A very extensive set of extension methods for .NET 3.5, 4.0 and Silverlight 4.0 that allow you to more naturally specify the expected outcome of a TDD or BDD-style unit test.",
  "id": "mytest.nuget",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://fluentassertions.codeplex.com/license",
  "packageHash": "eXOfRH4DbQgwBbP9tHIqqc5QLt6v7LRv8CzraCuhrUpMg8s5dh0kDZlkEOutvEBoF+XsJ8FgrMYCQzcUPMusUw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8600,
  "projectUrl": "http://fluentassertions.codeplex.com",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "• And() extension method to TimeSpanConversionExtensions to support 4.Hours().And(30.Minutes()).\n         • More TimeSpan extensions to fluently create a TimeSpan like  23.Hours(59.Minutes()).And(20.Seconds()).\n         • Support for Mspec as contributed by Urs Enzler.\n         • Support for the ComparisonMode to assert inner exception messages as well. Also added ComparisonMode Equivalent and EquivalentSubstring to assert that the message of an (inner) exception matches a certain case-insensitive phrase.\n         • Guid assertions like Be(), NotBe(), BeEmpty() and NotBeEmpty().\n         • Support for recursively comparing the properties of nested objects using ShouldHave().AllProperties().IncludingNestedObjects().EqualTo().\n         • Type and MethodInfo assertions for asserting class members are virtual or decorated with specific attributes.\n         • Before and After extensions methods for TimeSpans .\n         • Should().Be() and NotBe() extensions to the TypeAssertions.\n         • PDB files to the release build as another contribution by Urs Enzler.\n         • The name of the property to the ShouldFirePropertyChanged extension method failure message, also contributed by Urs Enzler.\n         • Added comments to some of the assertion classes.\n         • Fixed a stack overflow exception due to a recursive call between the various overloads of floating point extension method BeApproximately()\n         • While comparing two collections for equality, FA didn't check any superfluous items in the expected collection.\n         • Boolean assertions did not properly check against null values.\n         • Fixed a stack overflow exception while creating a displayable representation of an object  that contains circular references.\n         • Fixed some potential memory leaks fix in MonitorEvents() using a patch provided by Remo Gloor.\n         • Sometimes the wrong name of a the property or type was reported in a failure message.\n         • ShouldHave().AllProperties().EqualTo() sometimes treated two objects that are functional equivalent according to their Equals() override as different, simply because they were not of the same type.\n         • Fixed the detection of collection items that appear in the wrong order in Should().ContainInOrder().",
  "requireLicenseAcceptance": false,
  "title": "Fluent Assertions",
  "version": "1.6.1",
  "tags": [
    "MSTest",
    "xUnit",
    "NUnit",
    "MSpec",
    "TDD",
    "BDD",
    "Fluent",
    "Silverlight"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}