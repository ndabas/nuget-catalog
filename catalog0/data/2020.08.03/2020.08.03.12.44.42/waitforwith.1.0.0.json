{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "ProductiveRage",
  "catalog:commitId": "4005f737-2858-4237-a641-7e3a918f38d2",
  "catalog:commitTimeStamp": "2020-08-03T12:44:42.9931462Z",
  "copyright": "Copyright 2020 Productive Rage",
  "created": "2020-08-03T12:42:27.327Z",
  "description": "A library to make it easier to wait for the results of multiple tasks that have different return types in a convenient and type-safe manner",
  "iconFile": "ProductiveRageAvatar.jpg",
  "id": "WaitForWith",
  "isPrerelease": false,
  "lastEdited": "2020-08-03T12:44:30.927Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "n/tAehDbEWsYOHjWqsk3UJj+pniTK+iu3uCWAewEV7aZPhaIfi/9DQWNnTIWDVPz89hvh1VTh8kw/+lrC2N+dQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 43570,
  "published": "2020-08-03T12:42:27.327Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json#WaitForWith.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 498,
      "fullName": "WaitForWith.nuspec",
      "length": 922,
      "name": "WaitForWith.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json#lib/netstandard2.0/WaitForWith.dll",
      "@type": "PackageEntry",
      "compressedLength": 18373,
      "fullName": "lib/netstandard2.0/WaitForWith.dll",
      "length": 41984,
      "name": "WaitForWith.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json#lib/netstandard2.0/WaitForWith.xml",
      "@type": "PackageEntry",
      "compressedLength": 2544,
      "fullName": "lib/netstandard2.0/WaitForWith.xml",
      "length": 64053,
      "name": "WaitForWith.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json#ProductiveRageAvatar.jpg",
      "@type": "PackageEntry",
      "compressedLength": 10599,
      "fullName": "ProductiveRageAvatar.jpg",
      "length": 10744,
      "name": "ProductiveRageAvatar.jpg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.08.03.12.44.42/waitforwith.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9470,
      "fullName": ".signature.p7s",
      "length": 9470,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "task",
    "extension",
    "WhenAll"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}