{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.09.17.28.45/maxsimplesyslognetframework.1.0.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Bjarne Pedersen",
  "catalog:commitId": "b6e5a55d-f2e6-4458-83a6-6bf8ab7b271f",
  "catalog:commitTimeStamp": "2018-02-09T17:28:45.6774484Z",
  "created": "2018-02-09T17:24:53.853Z",
  "description": "The goal is to provide at small and lightweight framework that support Syslog\nI need a small framework that can work with a syslog server and NLog\n\nUsage\nDownlod the zip file or clone the repository.\n\nIf there is a NLog.config file present in the assembly library, it wil automatic start using NLog.\n\nLog level\nThe Log Level is diveded up like this:\n\nEmergency, Alert, Critical is equal to Fatal in NLog\nError is equal to Error in NLog\nWarn is equal to Warn in NLog\nInfo is equal to Info in NLog\nDebug is equal to Debug in NLog\nTrace is equal to Trace in NLog\nNLog Wrapper\nIt's possible to log in the same way as using NLog.\n\nMaxNLog log = new MaxNLog();\nlog.Info(\"Nlog Wrapper - Info\");\nlog.Debug(\"NLog Wrapper - Debug\");\nlog.Error(\"NLog Wrapper - Error\");\nInitialize\nStart with initialize the logging, it's a static class so only do it once.\n\nSyslog.Initialize(\"192.168.0.2\", 514,\"tag\");\nThe complete signature for initialize is:\n\npublic static void Initialize(string hostName, int port, string appName = \"\", Facility facility = Facility.User)\nFacility is a static class with all the provided options.\n\nFor logging you just use:\n\nLogger.Emergency(\"Message\");\nNotice that if you dont supply it with a tag then is use the assembly, class name and method in the tag section.\n\nSyslog server\nI have only tested the framework on Syslog Watcher from https://syslogwatcher.com/\n\nThe framework should be working with any Syslog server, but with Syslog Watcher i can guarantee the framework is working.",
  "id": "MaxSimpleSysLogNetFramework",
  "isPrerelease": false,
  "lastEdited": "2018-02-09T17:28:00.74Z",
  "listed": true,
  "packageHash": "SGwbDZ4/JLL05bAdx0lBAkptM1ZYogE9XyGEQzBJupsbuQNYzxa4K1jzF0XJsPy/iOY4iIleLPOVvA+nYaDP/w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 223458,
  "projectUrl": "https://github.com/maximuss/MaxSimpleSyslogNetFramework",
  "published": "2018-02-09T17:24:53.853Z",
  "requireLicenseAcceptance": false,
  "summary": "The goal is to provide at small and lightweight framework that support Syslog",
  "title": "MaxSimpleSysLogNetFramework",
  "verbatimVersion": "1.0.0.3",
  "version": "1.0.0.3",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.09.17.28.45/maxsimplesyslognetframework.1.0.0.3.json#MaxSimpleSysLogNetFramework.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1014,
      "fullName": "MaxSimpleSysLogNetFramework.nuspec",
      "length": 2177,
      "name": "MaxSimpleSysLogNetFramework.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.09.17.28.45/maxsimplesyslognetframework.1.0.0.3.json#lib/net45/MaxSimpleSysLogNetFramework.dll",
      "@type": "PackageEntry",
      "compressedLength": 4244,
      "fullName": "lib/net45/MaxSimpleSysLogNetFramework.dll",
      "length": 9728,
      "name": "MaxSimpleSysLogNetFramework.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.02.09.17.28.45/maxsimplesyslognetframework.1.0.0.3.json#lib/net45/NLog.dll",
      "@type": "PackageEntry",
      "compressedLength": 214093,
      "fullName": "lib/net45/NLog.dll",
      "length": 612352,
      "name": "NLog.dll"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}