{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.31.10.30.00/koenzomers.onedrive.api.2.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Koen Zomers",
  "catalog:commitId": "918c0674-69b2-496f-9b19-04fcba8cf775",
  "catalog:commitTimeStamp": "2017-10-31T10:30:00.3971545Z",
  "copyright": "Koen Zomers",
  "created": "2017-10-31T10:27:56.383Z",
  "description": "Contains a OneDrive API that can be used to read from and write to the Consumer OneDrive and OneDrive for Business on Office 365. It has support for both using the Azure Active Directory and the Azure Active Directory v2.0 endpoints which allow communication via either the tenant-my.microsoft.com and api.onedrive.com services or through the graph.microsoft.com service.",
  "id": "KoenZomers.OneDrive.Api",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/KoenZomers/OneDriveAPI/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "VcLWRhxOBOyPMZ9XjsJl9txda5jdUu7JALj7mt98ft1BJKEGQEiFpx8AYRggldh4Sn0L5BESfswKcFpC3ez3fw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 59302,
  "projectUrl": "https://github.com/KoenZomers/OneDriveAPI",
  "published": "2017-10-31T10:27:56.383Z",
  "releaseNotes": "- Added the following methods to work with AppFolders: GetAppFolderMetadata, GetAppFolderChildren, GetAllAppFolderChildren, CreateAppFolderFolder, GetAppFolderFolderOrCreate, UploadFileToAppFolder, UploadFileToAppFolderAs, UploadFileToAppFolderViaSimpleUpload, UploadFileToAppFolderViaResumableUpload. All of these only work when connecting through the Graph API. To download files from the AppFolder, you can use the regular DownloadItem methods. To upload a file to a subfolder of the AppFolder you can use the regular UploadFile methods.\n- Added comments to the sourcecode behind every button in the demo application to explain what that specific button/scenario will do",
  "requireLicenseAcceptance": false,
  "summary": "Contains a OneDrive API that can be used to read from and write to the Consumer OneDrive and OneDrive for Business on Office 365",
  "title": "OneDrive API",
  "verbatimVersion": "2.0.3.0",
  "version": "2.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.31.10.30.00/koenzomers.onedrive.api.2.0.3.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.31.10.30.00/koenzomers.onedrive.api.2.0.3.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[8.0.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.31.10.30.00/koenzomers.onedrive.api.2.0.3.json#KoenZomers.OneDrive.Api.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 896,
      "fullName": "KoenZomers.OneDrive.Api.nuspec",
      "length": 2102,
      "name": "KoenZomers.OneDrive.Api.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.31.10.30.00/koenzomers.onedrive.api.2.0.3.json#lib/KoenZomers.OneDrive.Api.dll",
      "@type": "PackageEntry",
      "compressedLength": 55609,
      "fullName": "lib/KoenZomers.OneDrive.Api.dll",
      "length": 163328,
      "name": "KoenZomers.OneDrive.Api.dll"
    }
  ],
  "tags": [
    "OneDrive"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}