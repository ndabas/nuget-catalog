{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dorin Mocan",
  "catalog:commitId": "8801eea2-341b-4673-8d02-803665d8698c",
  "catalog:commitTimeStamp": "2022-04-14T16:53:29.6194521Z",
  "created": "2022-04-14T16:51:03.3Z",
  "description": "This package can be used to intercept attribute param values during serialization/deserialization process.\nNOTES: It's thread safe.\nIMPORTANT: Use this tool when no other option left. Avoid using it, as it drastically hits the performance due to heavy use of reflection behind the scene. Never use it in combo with NewtonsoftJson, as the memory allocated for dynamically generated types will never get cleaned up, because of NewtonsoftJson holding the references to those types in his internal cache for faster contract-resolve operations. You can use any serializer which does not implement any caching or the caching can be disabled. For more information, go to GitHub wiki page: https://github.com/Dorin-Mocan/SerializationInterceptor/wiki.\nLIMITATIONS:\n- Fields not supported. Only public non-static props are serialized/deserialized;\n- Root type and types of the props must be public(not declared in any non-public types either) and have a default parameterless constructor;\n- Only param values of attributes attached to types and properties can be intercepted;\n- Not all enumerables supported. Allowed only arrays of any number of dimensions supported by CLR and types from System.Collections.Generic that implement generic ICollection interface;\n- Inheritance supported partially. If you have a prop of type X and assign to that prop a value of type Y and Y is a subclass of X, then only props of type X will be serialized/deserialized, those of type Y which are not in X will be ignored;",
  "iconFile": "icon.png",
  "id": "SerializationInterceptor",
  "isPrerelease": true,
  "lastEdited": "2022-04-14T16:53:04.55Z",
  "licenseFile": "LICENSE.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "LBQ10Pv65VNdQAUhtSrJACIK2JCCQbL0v+BlG6Yp60w+VCvjZ3AGW0cmLM+ucahi0nymKhfX26TuW/E0hcVc1w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 38437,
  "projectUrl": "https://github.com/Dorin-Mocan/SerializationInterceptor/wiki",
  "published": "2022-04-14T16:51:03.3Z",
  "releaseNotes": "1. Enriched XML documentation\n2. Better API(enhanced security)",
  "repository": "",
  "verbatimVersion": "3.0.0-test",
  "version": "3.0.0-test",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json#SerializationInterceptor.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1280,
      "fullName": "SerializationInterceptor.nuspec",
      "length": 2614,
      "name": "SerializationInterceptor.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json#lib/netstandard2.1/SerializationInterceptor.dll",
      "@type": "PackageEntry",
      "compressedLength": 18758,
      "fullName": "lib/netstandard2.1/SerializationInterceptor.dll",
      "length": 44544,
      "name": "SerializationInterceptor.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 5456,
      "fullName": "icon.png",
      "length": 15322,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json#LICENSE.md",
      "@type": "PackageEntry",
      "compressedLength": 640,
      "fullName": "LICENSE.md",
      "length": 1089,
      "name": "LICENSE.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.04.14.16.53.29/serializationinterceptor.3.0.0-test.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "serialization",
    "deserialization",
    "interceptor",
    "intercept",
    "newtonsoft.json",
    "newtonsoft",
    "json",
    "system.text.json",
    "attribute",
    "serializer",
    "deserializer",
    "dynamic",
    "data",
    "contract",
    "model",
    "dto",
    "property",
    "param",
    "name",
    "value",
    "xml",
    "flexible",
    "override",
    "extension",
    "module",
    "cache",
    "caching",
    "runtime",
    "modify"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}