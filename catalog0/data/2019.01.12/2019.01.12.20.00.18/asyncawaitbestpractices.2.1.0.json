{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.12.20.00.18/asyncawaitbestpractices.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brandon Minnick, John Thiriet",
  "catalog:commitId": "69005135-e39e-4e17-9746-cfa34957b38e",
  "catalog:commitTimeStamp": "2019-01-12T20:00:18.9744019Z",
  "copyright": "Copyright (c) 2018 Brandon Minnick",
  "created": "2019-01-12T19:56:03.027Z",
  "description": "An extension method to safely fire-and-forget a Task",
  "id": "AsyncAwaitBestPractices",
  "isPrerelease": false,
  "lastEdited": "2019-01-12T20:00:15.577Z",
  "licenseUrl": "https://github.com/brminnick/AsyncAwaitBestPractices/blob/master/LICENSE.md",
  "listed": true,
  "minClientVersion": "2.5",
  "packageHash": "aOGEpHNG0sXRczk1yKAeA0xpFPtBpqyFsLp6wfm651y/e0ptKANTMwJ7VgrxZZR2O5KDfM4+6plZWaqg0H9/ug==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17991,
  "projectUrl": "https://github.com/brminnick/AsyncAwaitBestPractices",
  "published": "2019-01-12T19:56:03.027Z",
  "releaseNotes": "New In This Release:\n        - WeakEventManager.AddEventHandler can now be used with Delegate\n        - WeakEventManager.RemoveEventHandler can now be used with Delegate",
  "requireLicenseAcceptance": false,
  "summary": "Task Extensions for System.Threading.Tasks\n\n      Includes an extension method to safely fire-and-forget a Task",
  "title": "Task Extensions for System.Threading.Tasks",
  "verbatimVersion": "2.1.0",
  "version": "2.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.12.20.00.18/asyncawaitbestpractices.2.1.0.json#AsyncAwaitBestPractices.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 573,
      "fullName": "AsyncAwaitBestPractices.nuspec",
      "length": 1227,
      "name": "AsyncAwaitBestPractices.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.12.20.00.18/asyncawaitbestpractices.2.1.0.json#lib/netstandard/AsyncAwaitBestPractices.pdb",
      "@type": "PackageEntry",
      "compressedLength": 1216,
      "fullName": "lib/netstandard/AsyncAwaitBestPractices.pdb",
      "length": 2036,
      "name": "AsyncAwaitBestPractices.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.12.20.00.18/asyncawaitbestpractices.2.1.0.json#lib/netstandard/AsyncAwaitBestPractices.dll",
      "@type": "PackageEntry",
      "compressedLength": 3759,
      "fullName": "lib/netstandard/AsyncAwaitBestPractices.dll",
      "length": 8192,
      "name": "AsyncAwaitBestPractices.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.12.20.00.18/asyncawaitbestpractices.2.1.0.json#lib/netstandard/AsyncAwaitBestPractices.xml",
      "@type": "PackageEntry",
      "compressedLength": 831,
      "fullName": "lib/netstandard/AsyncAwaitBestPractices.xml",
      "length": 3951,
      "name": "AsyncAwaitBestPractices.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.12.20.00.18/asyncawaitbestpractices.2.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9470,
      "fullName": ".signature.p7s",
      "length": 9470,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "task",
    "fire",
    "and",
    "forget",
    "threading",
    "extensions",
    "system.threading.tasks",
    "async",
    "await"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}