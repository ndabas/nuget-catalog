{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.13.50.27/xmlextensionentityframework.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Frans van Ek",
  "catalog:commitId": "98275169-c667-41ae-be26-bc9b2972bef5",
  "catalog:commitTimeStamp": "2016-11-12T13:50:27.5308157Z",
  "copyright": "Copyright ©  2016",
  "created": "2016-11-12T13:20:19.233Z",
  "description": "helps with filtering on a XML field in sql server",
  "id": "XmlExtensionEntityFramework",
  "isPrerelease": false,
  "lastEdited": "2016-11-12T13:50:21.57Z",
  "listed": true,
  "packageHash": "89gbhaKGzMa+9nX+1CV6QfVgYQUI3wl+0EE88z23ZjvEJVJNO73SKelpfaZfbK2TJCtbsOty689OchUTEnpDcQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 7511,
  "projectUrl": "http://www.fransvanek.nl/blogs/beginnen-met-c-programmeren/2016/11/12/xml-extension-for-entity-framework",
  "published": "2016-11-12T13:20:19.233Z",
  "requireLicenseAcceptance": false,
  "summary": "The goal of this exercise is to investigate if it’s possible to get a typed selector on a XML field.\nSo far it isn’t possible to make the query type strongly typed. And as I far as I could find it will not be implemented in the near future. So is it possible to do so ourselves?\nFinal result has to be something like this:\nXMLFilter.Filter(x => x.ID, 636142127126573004, eCompairType.equals)\n                .And(x => x.Test.Name, \"demo\", eCompairType.less)\n                .And(x => x.Test.Time, DateTime.Now, eCompairType.less);\n\nAnd the apply it to the context\n  var whereStatement = XMLFilter`\n.SetXMLColumnName<SimpleItem>(x => x.XMLContent)\n.GetQueryWhereClause();\n  var db = new XMLTestContext();\n  var items = GetItems<SimpleItem>(db.SimpleItems, whereStatement).ToList();\n",
  "title": "Xml Extension Entity Framework",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.13.50.27/xmlextensionentityframework.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.13.50.27/xmlextensionentityframework.1.0.0.json#XmlExtensionEntityFramework.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 855,
      "fullName": "XmlExtensionEntityFramework.nuspec",
      "length": 1602,
      "name": "XmlExtensionEntityFramework.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.12.13.50.27/xmlextensionentityframework.1.0.0.json#lib/net452/XmlExtensionEntityFramework.dll",
      "@type": "PackageEntry",
      "compressedLength": 5003,
      "fullName": "lib/net452/XmlExtensionEntityFramework.dll",
      "length": 11776,
      "name": "XmlExtensionEntityFramework.dll"
    }
  ],
  "tags": [
    "entity",
    "framework",
    "xml",
    "field",
    "filter",
    "query"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}