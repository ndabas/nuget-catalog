{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.17.01.32/indieportable.collections.0.2.6.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "David Eiwen",
  "catalog:commitId": "6a07f773-9464-4199-80d7-51eba31a538b",
  "catalog:commitTimeStamp": "2016-11-23T17:01:32.9193303Z",
  "copyright": "Copyright Â© 2016 by David Eiwen",
  "created": "2016-11-23T16:58:01.293Z",
  "description": "A cross-platform extension to the default set of collections in the System.Collections namespace providing generic array-based lists and dictionaries.",
  "iconUrl": "https://raw.githubusercontent.com/david1995/IndiePortable/master/IndiePortable/Collections/Icon.png",
  "id": "IndiePortable.Collections",
  "isPrerelease": false,
  "lastEdited": "2016-11-23T17:01:08.827Z",
  "licenseUrl": "https://github.com/david1995/IndiePortable/blob/master/LICENSE",
  "listed": true,
  "packageHash": "r8hUlHfBNgjCKVDPzcspIS82ycgHrcdglji+OHMQUm9l888XcPabWx3V/q56WdwWDPtY/WzeebZyJNpR9vofaw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30701,
  "projectUrl": "https://github.com/david1995/IndiePortable",
  "published": "2016-11-23T16:58:01.293Z",
  "releaseNotes": "--------------------------------------------------------------------------------------------\nVersion 0.2.6\n--------------------------------------------------------------------------------------------\nCurrently in progress\n\n--------------------------------------------------------------------------------------------\nVersion 0.2.5\n--------------------------------------------------------------------------------------------\nAdded:\n- Added the DequeueOnlyQueue<T> class.\n- Added the ObservableQueue<T> class.\n- Added a Linq extension class (IndiePortable.Collections.Linq.Enumerable), including a ForEach<T> method that can be applied to any IEnumerable<T>.\n--------------------------------------------------------------------------------------------\nVersion 0.2.4\n--------------------------------------------------------------------------------------------\nBugfixes:\n- Fixed a bug causing blocking when an ObservableDynamicArray<T> has been enumerated from a WPF or UWP Gui (#4)\n\nOther:\n- The Nuget packages have been modified in order to not include their symbols in projects that use the packages.\n\n--------------------------------------------------------------------------------------------\nVersion 0.2.3\n--------------------------------------------------------------------------------------------\nAdds:\n- ObservableListWrapper<T> class. Use it to wrap an existing IList<T> instance making it observable and reacting to collection changes.\n\n--------------------------------------------------------------------------------------------\nVersion 0.2.2\n--------------------------------------------------------------------------------------------\nBugfixes:\n- Solved an issue that does not allow the DynamicArray<T> to be enumerated.\n\n--------------------------------------------------------------------------------------------\nVersion 0.2.1\n--------------------------------------------------------------------------------------------\nBugfixes:\n- Solved an issue when serializing a DynamicArray<T> that caused the whole serialization process to block.\n\nChanges:\n- Changed ArrayDictionary<TKey, TValue>'s and ViewObservableDynamicArray<TIn, TOut>'s synchronization from ReaderWriterLockSlim to SemaphoreSlim\n\n--------------------------------------------------------------------------------------------\nVersion 0.2\n--------------------------------------------------------------------------------------------\nImprovements:\n- Better thread synchronization in collections by using semaphores instead of ReaderWriterLocks.\n\nChanges:\n- Every implementation of IObservableList<T> can now be used for initializing a ReadOnlyObservableDynamicArray<T>.\n- ArrayDictionary key types do not have to implement IComparable<T> any more; they should implement IEquatable<T> instead.",
  "requireLicenseAcceptance": true,
  "title": "IndiePortable Collections Library",
  "verbatimVersion": "0.2.6.1",
  "version": "0.2.6.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.17.01.32/indieportable.collections.0.2.6.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.17.01.32/indieportable.collections.0.2.6.1.json#dependencygroup/indieportable.formatter",
          "@type": "PackageDependency",
          "id": "IndiePortable.Formatter",
          "range": "[0.2.1.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.17.01.32/indieportable.collections.0.2.6.1.json#IndiePortable.Collections.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1249,
      "fullName": "IndiePortable.Collections.nuspec",
      "length": 4093,
      "name": "IndiePortable.Collections.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.17.01.32/indieportable.collections.0.2.6.1.json#lib/portable45-net45%2Bwin8%2Bwpa81/IndiePortable.Collections.dll",
      "@type": "PackageEntry",
      "compressedLength": 16683,
      "fullName": "lib/portable45-net45%2Bwin8%2Bwpa81/IndiePortable.Collections.dll",
      "length": 40448,
      "name": "IndiePortable.Collections.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.23.17.01.32/indieportable.collections.0.2.6.1.json#lib/portable45-net45%2Bwin8%2Bwpa81/IndiePortable.Collections.XML",
      "@type": "PackageEntry",
      "compressedLength": 10746,
      "fullName": "lib/portable45-net45%2Bwin8%2Bwpa81/IndiePortable.Collections.XML",
      "length": 154812,
      "name": "IndiePortable.Collections.XML"
    }
  ],
  "tags": [
    "Collections",
    "Concurrent",
    "Array-based",
    "DynamicArray",
    "Array",
    "Observable",
    "IndiePortable"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}