{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.08.21.37.56/netproperty.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Napen123",
  "catalog:commitId": "83859916-4c43-461e-90ad-db9a1da30014",
  "catalog:commitTimeStamp": "2018-04-08T21:37:56.0335206Z",
  "copyright": "Copyright 2016-2018 Ethan Dagner.",
  "created": "2018-04-08T21:31:12.26Z",
  "description": "A .NET library for reading property files.",
  "id": "NetProperty",
  "isPrerelease": false,
  "lastEdited": "2018-04-08T21:34:23.83Z",
  "licenseUrl": "https://github.com/napen123/NetProperty/blob/master/LICENSE.md",
  "listed": true,
  "packageHash": "mO8/NVssfiR8YEkKDozknB+yTWyRafTs7xVWmSjqI5aSdV0KEfufqZyCmwTyhUXN9vwKzCs/FjRU6AsqBYZHXg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6873,
  "projectUrl": "https://github.com/napen123/NetProperty",
  "published": "2018-04-08T21:31:12.26Z",
  "releaseNotes": "\n    === New in 2.0 ===\n    * Add new constructors to PropertyFile:\n        * PropertyFile(int) to specify initial property capacity.\n        * Updated the file and stream constructors to add the ability to specify an encoding\n          and whether or not to treat empty values as null.\n    * Make some minor changes to and deprecate serialization stuff (for now).\n        * More error checking in PropertyAttribute(string, Type).\n        * Add PropertyAttribute(Type). (This will use the name of field/property when serializing and deserializing).\n        * Add AttributeUsage to PropertyAttribute (fields and properties only).\n        * Add property converters (NetProperty.Serialization.PropertyConverter) for serialization and\n          deserialization.\n        * Ability to deserialize into a provided type.\n    * Make SetProperty and GetProperty return error-values instead of throwing exceptions.\n    * Add the ability to treat empty values as null when loading from files and streams.\n    * Saving properties with null values will result in them having an empty assignment.\n        - For example, if property \"name\" has null as its value, the property's output in a file would look like \"name ~\"\n    * Fix memory leaks in Load(string, Encoding) and Save(string, Encoding).\n    * Documentation updates.\n    * Minor fixes.\n    ",
  "requireLicenseAcceptance": true,
  "title": "NetProperty",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.08.21.37.56/netproperty.2.0.0.json#lib/net45/NetProperty.dll",
      "@type": "PackageEntry",
      "compressedLength": 4377,
      "fullName": "lib/net45/NetProperty.dll",
      "length": 9728,
      "name": "NetProperty.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.08.21.37.56/netproperty.2.0.0.json#NetProperty.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 876,
      "fullName": "NetProperty.nuspec",
      "length": 2023,
      "name": "NetProperty.nuspec"
    }
  ],
  "tags": [
    "c#",
    ".NET",
    "property",
    "properties"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}