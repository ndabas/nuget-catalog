{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.22.35.00/csharp8beta.asynciteratorprerequisites.unofficial.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eduard Dumitru",
  "catalog:commitId": "7c199491-93ce-412c-a7e2-16645b9933b2",
  "catalog:commitTimeStamp": "2018-12-07T22:35:00.4615794Z",
  "created": "2018-12-07T22:29:44.023Z",
  "description": "This package was not created by Microsoft but the source code used to compile the assembly contained within it was written by Microsoft employees.\nI hope I haven't caused any drama or broken any laws, but when C# 8 Beta was released alongside Visual Studio 2019 Preview 1, on the December 4th 2018, writing async iterators and consuming them wasn't possible even though it could have been. The compiler was missing two types: ManualResetValueTaskSourceLogic<T> and IStrongBox<T> which I found here: https://gist.github.com/jcouv/ae7800985e3a8700bb84c6650d25bb69 and put in this nuget package within their designated namespaces. Adding this nuget package will allow you to use C# 8 Beta and write async iterators (methods which generate IAsyncEnumerable<T>).\n\nFurthermore the bug around enumerators ending after two iterations if you're inside an async iterator method can be resolved by turning your foreach statement into an await foreach statement and applying the thin wrapper .ToAsync() on the target enumerable (which will only allocate 2 class instances, one for the call itself and one for the enumeration itself).",
  "id": "CSharp8Beta.AsyncIteratorPrerequisites.Unofficial",
  "isPrerelease": false,
  "lastEdited": "2018-12-07T22:34:54.05Z",
  "listed": true,
  "packageHash": "x5/euhIsctZNNbcUCzD+l8xUdFeYiNnbSMaorAILD5F805bVazlPK5wKRrmhXrFcxjZq3H93Yc1L1H4nOChI3w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16834,
  "published": "2018-12-07T22:29:44.023Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.1.0",
  "version": "1.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.22.35.00/csharp8beta.asynciteratorprerequisites.unofficial.1.1.0.json#dependencygroup/.netcoreapp3.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETCoreApp3.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.22.35.00/csharp8beta.asynciteratorprerequisites.unofficial.1.1.0.json#CSharp8Beta.AsyncIteratorPrerequisites.Unofficial.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 910,
      "fullName": "CSharp8Beta.AsyncIteratorPrerequisites.Unofficial.nuspec",
      "length": 1659,
      "name": "CSharp8Beta.AsyncIteratorPrerequisites.Unofficial.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.22.35.00/csharp8beta.asynciteratorprerequisites.unofficial.1.1.0.json#lib/netcoreapp3.0/CSharp8Beta.AsyncIteratorPrerequisites.Unofficial.dll",
      "@type": "PackageEntry",
      "compressedLength": 3944,
      "fullName": "lib/netcoreapp3.0/CSharp8Beta.AsyncIteratorPrerequisites.Unofficial.dll",
      "length": 9728,
      "name": "CSharp8Beta.AsyncIteratorPrerequisites.Unofficial.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.22.35.00/csharp8beta.asynciteratorprerequisites.unofficial.1.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}