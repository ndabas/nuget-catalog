{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "DataJuggler.PixelDatabase",
  "catalog:commitId": "81615761-2ecd-4a20-8ff2-04ea2cabe712",
  "catalog:commitTimeStamp": "2024-11-03T19:16:39.7036618Z",
  "created": "2024-11-03T19:13:47.517Z",
  "description": "PixelDatabase.Net is an image processing library that uses Bitmap Query Language (BQL). to manipulate\nimages. If you know SQL for databases, you are 90% of the way to BQL.\n\nThis version is for .NET8 only. Use a 7.x version for .NET7. 6.x Version for .NET6.\n\nThis project started off inside a Windows Forms project called Transparency Maker, which I have ported to a Blazor project that is live PixelDatabase.Net https://pixeldatabase.net.\n\nThis project has been tested while I built PixelDatabase.Net, but I am sure more updates may be needed.",
  "iconFile": "PixelDatabaseLogoSmall.png",
  "id": "DataJuggler.PixelDatabase",
  "isPrerelease": false,
  "lastEdited": "2024-11-03T19:16:21.287Z",
  "licenseFile": "License.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "uIa/VPq4poexDLazMijv+NncDbwNtXG296C6m0CvrYWzuYJcP/T+UcUVcuozod2RvOU6O53LlBrFfnwstL+LWQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 209064,
  "projectUrl": "https://github.com/DataJuggler/PixelDatabase",
  "published": "2024-11-03T19:13:47.517Z",
  "readmeFile": "README.md",
  "releaseNotes": "11.22.2023: UltimateHelper was updated.\n\n\t\t11.18.2023\n\t\tVersion 8.0.0: This project has been updated to 8.0.0.\n\n\t\t7.5.2023: I added a Rescale image, which returns the dimensions for a new image by passing in a\n\t\tMaxWidth and MaxHeight value, and the code determins the ratio by taking the lowest of ratio x\n\t\tand ratio y. To actually resize the image, call Resize. I am using this new method in\n\t\tDataJuggler.BlazorGallery project for the FullScreenImageViewer component.\n\t\tLive sample (https://blazorgallery.com).\n\n\t\t4.24.2023: I found a better method of resizing an image, and wrote a new Resize method that returns\n\t\ta loaded PixelDatabase at the new size.\n\n\t\t1.10.2023: I now check for null before calling back to the StatusUpdate delegate.\n\n\t\t11.30.2022: I upgraded the way ImageClassification Works. My old method actually sorted wrong by color\n\t\tname was faoving lower average colors.\n\n\t\t11.8.2022: This project has been updated for .NET 7. Use a 6.x version for .NET 6. All new development will\n\t\tbe on the .NET 7 version.\n\n\t\t10.25.2022: Gradient.CalculateBlue was returning 0 hard coded. I guess I never finished that.\n\n\t\t10.21.2022: This version has been updated for .NET7. It listed as pre-release until .NET7 is out\n\t\tof preview.\n\n\t\t7.12.2022: I removed ImageProcessor. I didn't realize it was a .NET Framework project.\n\t\tI will learn how to do saturation with Primitives.\n\n\n\t\t12.11.2021: I am trying again to target only .Net6.0.\n\n\t\t12.11.2021: I added two overrides to the DrawText method to make it a little easier to call.\n\n\t\t12.10.2021\n\t\tVersion 6.1.0: I added a DrawText method.\n\n\t\t11.17.2021\n\t\tVersion 6.0.7: I changed the project to multi-target .Net5 and .Net6. The problem seems to occur in\n\t\tAspNet.Core.Components in my site PixelDatabase.Net.\n\n\t\tI made a few semi-breaking changes, which is I changed the calculation for the following properties:\n\t\tBlueAverageDifference\n\t\tBlueMaxDifference\n\t\tGreenAverageDifference\n\t\tGreenMaxDifference\n\t\tRedAverageDifference\n\t\tRedMaxDifference\n\n\t\tI made this change, because the name is confusing compared to the calculation, and even I got confused so hopefully\n\t\tthis simplifies it. The only property that is a little confusing, is MinMaxDifference still takes Max - Min, but I justify\n\t\tthis by Abs(Min - Max) is the same as Max - Min.\n\n\n\t\t11.13.2021 (Take Five)\n\t\tVersion 6.0.6: Last and final fix to get Grayscale working. I had a bug in PixelQueryParser caused by\n\t\tcopied code that set TakeMax to TakeMin. Fixed.\n\n\t\t11.13.2021 (Take Four)\n\t\tVersion 6.0.5: I wrote the GetMaxColor method, but I forgot to call it. Now it works for Set Grayscale Max.\n\n\t\t11.13.2021 (Take Three)\n\t\tVersion 6.0.4: Set Grayscale now works for Average (default), Red, Green, Blue, Min, Max and Mean.\n\n\t\t11.13.2021 (Take Two)\n\t\tVersion 6.0.3: Putting back to Any CPU. My mouse changed it to\n\t\tx64 and Visual Studio didn't like it.\n\n\t\t11.13.2021\n\t\tVersion 6.0.2: I added some new options for Set Grayscale for Min, Max and Mean.\n\n\t\t11.11.2021: Back to .Net 5.0, as .Net 6.0 doesn't work at this time.\n\n\t\t11.10.2021: 6.0 version now targets .Net 6.0.\n\n\t\t10.6.2021\n\t\t5.1.12: The previous version had a critical flaw, so please do not use version 5.1.11. I was trying to fix\n\t\tthe Alpha items getting updated on queries, and broke everything due to a copy and paste and not reading\n\t\tthat the Criteria List was being recreated. Now this is fixed, and the Alpha bug is fixed (finally!).\n\n\t\tA new update to PixelDatabase.Net website is coming now.\n\n\t\t10.6.2021\n\t\t5.1.11: I now append Alpha > 1 in all queries that don't have anything to do with Alpha.\nTesting any impact, but I have been adding Alpha > 2 to my queries for a while so this should solve that.\n\n5.1.10: After getting Draw River working, it wasn't worth it, so I took it out. I have a lot of ideas, not all are good.\n\n5.1.9: DrawRiverLeftToRight had an infinite loop. Fixed.\n\n5.1.8: I had made a couple of mistakes on the 5.1.7 release. DrawRiver might work now.\n\n5.1.7: I added a new method DrawRiver, and you pass in a color and a direction.\n\n5.1.6: I added an optional parameter called FastSoftFactor to ImageClassifier.Sort() methods.\nIf FastSortFactor is passed in, the program will compare every 'x' pixel, where x equals fastSortFactor.\n\n5.1.5: I added a new Sort feature, you can sort an entire directory of images by color with one line of code.\n\nImageClassifier.Sort(sourceFolder, outputFolder, UpdateStatus);\n\n5.1.4: Turned out the resize image I copied was private. I changed it to public. Sorry about that.\n\n5.1.3: I added a resize image function.\n\n5.1.2: I fixed a bug with CopySubImage where I was testing the subImage had to be smaller height, width, where in fact it can the same size also. I changed less than to less than or equal to.\n\n5.1.1: I added 2 new methods\n1. CopySubImage\n2. SaveAs\n\n5.1.0: I added a Gradient feature\nUpdate\nCreate Gradient\nSet Color1 Orange X Y\nSet Color2 225 50 120 X Y\n\n1.6.0: I added a new feature called SplitImage.\nUpdate\nSplitImage TakeLeft 2490       \n\nIn the above example, the left half of the image is split to make a full head copy of the good side of an image, used for Character Creator Headshot Plugin.\n\n1.5.0.2: This time it will work. Things are going to change. I can feel it.\n\n1.5.0.1: I tried something that didn't work.\n\n1.3.1: After I published 1.3.0 I realized System.Graphics.Common was updated from \n4.7 to 5.0, so I updated that library.\n\n1.3.0: This version was converted to .Net5. No other code changes were made at this time.\n\n1.2.2: I fixed the way the PixelQueryParser works, and in theory I made it better. \nI also added short cuts so you you can now type MinMaxDiff instead of MinMaxDifference - 6 less pixels, and much easier to spell. This applies to all the Differences: BlueGreenDiff, BlueRedDiff, GreenRedDiff, and MinMaxDiff.\n\n1.2.1: I removed .Net Standard 2.1, since the only purpose for .Net Standard was to allow .Net Framework and .Net Core to work together, but in 3.1 .Net Framework and .Net Core parted for good. If anyone needs it I can put it back.\n\nAlso I added two new features for Scatter and Normalize.\n\n1.2.0: I added a couple of new features and fixed some bugs with the callback delegates if they were null.\nNew methods: \nCreateSubImage - The PixelDatabase must be loaded, pass in the TopLeft point and the rectange size.\nSearchForSubImage - This method returns a SearchResult object with the TopLeft point.\nclass SearchResult - This class contains a Point and a Score. It has a confidence property, but I haven't coded it yet.\n      \nHere is a sample project you can use that takes a screen shot and you click the canvas (PictureBox) \ncontaining the image to create sub images.\nThere is also a Search Mode that demonstrates searching for an image in another image.\n\nhttps://github.com/DataJuggler/SubImageCreator\n\nCode is new, so use at your own risk. I have a sample project on GitHub to test this that takes a screen\nshot and you can click the picture of the screenshot to create sub images. All more of a test than anything\nuseful yet, but I might expand it over time.\n\n\n1.1.6: Added a new method CreateSubImage. Tested and it works, but not tested very thoroughly\n\n1.1.5: I added a new method ApplyPixel, which was added to the .Net Framework version so I can call this from a Paint.Net plug-in\n\n1.1.4: I had to update DataJuggler.UltimateHelper.IsNumeric method to support negative numbers.\n\n1.1.3: I removed Absolute value from BlueRedDifference, BlueGreenDifference and GreenRedDifference.\nAfter working with these values for a few weeks, I discovered there is a difference between blue - red and red - blue, sometimes. \n\n1.1.2: I fixed a bug that has been bugging me for days. Now you apply a color:\nUpdate\nSet Color 98 125 86\n\nI had forgot to set the property SetColor to true.\n\n1.1.1: I have been working with PixelDatabase.Net website, so quite a few chagnes needed to be checked in.\n\n1.1.0: I discovered in my initial testing that the old way was using 7 gigs of memory to hold a list of \nmillions of PixelInformation objects. Now I do the BQL comparisons without instantiating tons of objects and\nthe memory foot print went down to under 300 meg for a Blazor website with a 20 meg image loaded.\n\n1.0.7: I am publishing the version that is going to be on my website https://pixeldatabase.net.\n\nThis version includes many new properties on a PixelInformation object, such as:\n1. Min\n2. Max\n3. Average\n4. MinMaxDiff\n5. RedMinDiff\n6. RedMaxDiff\n7. RedAverageDiff\n8. GreenMinDiff\n9. GreenMaxDiff\n10. GreenAverageDiff\n11. BlueMinDiff\n12. BlueMaxDiff\n13. BlueAverageDiff\n\nThese should all work for queries such as:\n\nHide Pixels Where\nMinMaxDiff > 25\n\nOr\n\nUpdate\nSet Swap Blue Red\nWhere\nRedMinDiff < 10\n\n\nDiff is a shortcut for Difference. Previous docs may use Difference, and I am trying \nto replace them as I see them.\n\n\n\n1.0.6: I have been working on this project for several weeks, and I need to update Nuget.\n\n1.0.5: I fixed a bug where Swap Colors was not taking the Alpha into account from the previous color.\n\n1.0.4: I made some changes while working on the .Net Framework version, and I am trying to keep them in sync. The changes involved I added a new draw line in color feature, a new feature for LastUpdate can always be queried by:\n\nUpdate\nblah blah blah\nWhere\nPixels In LastUpdate\n\nAlso some changes to the Draw Line, which is still very slow, but now a message shows.\nI need to create an abort for Draw Line, just haven't had a chance yet. I will work on this some more next week.\n\n1.0.3: I added a new override to PixelDatabaseLoder for ImageUrl.\n\n1.0.2: I had forgot to list the Project Url, as well as the description changed from untested, to lightly tested.\n\n1.0.1: Changed TargetFramework netcoreapp3.1 to TargetFrameworks netstandard2.1;netcoreapp3.1\n\nFirst release, i will update the rest of the info if it gets past proof of concept.",
  "repository": "",
  "verbatimVersion": "8.3.1",
  "version": "8.3.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#dependencygroup/net8.0/datajuggler.randomshuffler",
          "@type": "PackageDependency",
          "id": "DataJuggler.RandomShuffler",
          "range": "[8.0.6, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#dependencygroup/net8.0/system.drawing.common",
          "@type": "PackageDependency",
          "id": "System.Drawing.Common",
          "range": "[8.0.10, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#dependencygroup/net8.0/system.drawing.primitives",
          "@type": "PackageDependency",
          "id": "System.Drawing.Primitives",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#DataJuggler.PixelDatabase.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4961,
      "fullName": "DataJuggler.PixelDatabase.nuspec",
      "length": 11867,
      "name": "DataJuggler.PixelDatabase.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#lib/net8.0/DataJuggler.PixelDatabase.dll",
      "@type": "PackageEntry",
      "compressedLength": 35307,
      "fullName": "lib/net8.0/DataJuggler.PixelDatabase.dll",
      "length": 84480,
      "name": "DataJuggler.PixelDatabase.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#PixelDatabaseLogoSmall.png",
      "@type": "PackageEntry",
      "compressedLength": 77788,
      "fullName": "PixelDatabaseLogoSmall.png",
      "length": 77763,
      "name": "PixelDatabaseLogoSmall.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 6916,
      "fullName": "README.md",
      "length": 18315,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#Eraser.png",
      "@type": "PackageEntry",
      "compressedLength": 67910,
      "fullName": "Eraser.png",
      "length": 68195,
      "name": "Eraser.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#License.txt",
      "@type": "PackageEntry",
      "compressedLength": 751,
      "fullName": "License.txt",
      "length": 1340,
      "name": "License.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.03.19.16.39/datajuggler.pixeldatabase.8.3.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12924,
      "fullName": ".signature.p7s",
      "length": 12924,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "Imaging",
    "Drawing",
    "Bitmap",
    "Canvas",
    "EditImages",
    "Pixel"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}