{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.28.21.08.02/bancoeventerrorlog.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rohit Kamalnath",
  "catalog:commitId": "29d2cf23-fa9c-478b-9d90-c9a3169c87ba",
  "catalog:commitTimeStamp": "2015-12-28T21:08:02.0327462Z",
  "created": "2015-12-28T21:07:33.743Z",
  "description": "Created a new nuGetPackage for Event Log for logging events to Event Viewer and error Log/send email on exception dll.\n1) Creates and saves event Log.\n2) Sends email on errors.\n\nSample event log: \nEvent log can be written to Windows Event viewer or can also be saved to a text file [managed through settings in config file]\nErrorLogHelper.WriteErrorLog(\"Window service Init\");\n\nSample Error Log during exception:\nErrorLogHelper.LogErrorandSendMail(\"Sample error, also pass the exception that occured\", ex)\n\nThis above exception can be written to an event log and also send an email by implementing below\n\nErrorLogHelper.WriteErrorLog(ErrorLogHelper.LogErrorandSendMail(\"Window service failed to Initialize\", ex), System.Diagnostics.EventLogEntryType.Error);\n\nFollowing are the config settings that need to be set that are specific for the app:\n\nDefault implementation is to write it to a text file, but it can write to an event log and send an email by changing the following\nConfigurationManager.AppSettings[\"LogEvent\"]\nConfigurationManager.AppSettings[\"SendErrorEmail\"]\n\nEvent Viewer Name \n= ConfigurationManager.AppSettings[\"EventViewerName\"]\n\ntext file file path\nConfigurationManager.AppSettings[\"LogFilePath\"]\n\nEmail From and Display Name\nConfigurationManager.AppSettings[\"EmailDisplayName\"].ToString(), ConfigurationManager.AppSettings[\"EmailAddressFrom\"]\nEmail Subject:\nConfigurationManager.AppSettings[\"EmailSubject\"]\nEmail To:\nConfigurationManager.AppSettings[\"EmailAddress\"]",
  "id": "BancoEventErrorLog",
  "isPrerelease": false,
  "lastEdited": "2015-12-28T21:07:46.34Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "listed": true,
  "packageHash": "vw/n/grFSv5KyiRMNSYldGKgeNRP8995NF9DaGXf9Iz50qn2RLXZNNrAOMzP/uF/Cc7H2JTvV6k7EnOnmEBbVg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9795,
  "published": "2015-12-28T21:07:33.743Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "tags": [
    "Event",
    "Log",
    "Error",
    "Send",
    "email",
    "on",
    "exception"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}