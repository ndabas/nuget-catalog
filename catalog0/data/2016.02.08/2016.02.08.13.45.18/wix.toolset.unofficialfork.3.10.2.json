{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.02.08.13.45.18/wix.toolset.unofficialfork.3.10.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rob Mensching,Bob Arnson",
  "catalog:commitId": "b5d491e5-e17e-4121-83ca-8d0e59836ca0",
  "catalog:commitTimeStamp": "2016-02-08T13:45:18.0667564Z",
  "created": "2016-02-08T13:44:49.323Z",
  "description": "This package contains the binaries needed to compile Windows Installer XML (WiX) setup projects. Just add this NuGet package to your WiX setup projects and you're done (no setup required on build servers etc.). Note that you still need to install WiX Toolset in Visual Studio to get the editor experience.\n\n        File issues with the NuGet package at https://github.com/jozefizso/WiX.Toolset.NuGet",
  "iconUrl": "http://wixtoolset.org/Content/logo_framed.png",
  "id": "WiX.Toolset.UnofficialFork",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/jozefizso/WiX.Toolset.NuGet/blob/v3.10.1/LICENSE.md",
  "listed": true,
  "minClientVersion": "2.7",
  "packageHash": "SjPNcaH/dQb5cx0oJ4h6KSXCcrDKgumORLwWhDDuHQ9hLKkmOsi2pME+X+Y+6T9xVQt0cFgsEZjEtmlq078fXw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 28771633,
  "projectUrl": "https://github.com/jozefizso/WiX.Toolset.NuGet",
  "published": "2016-02-08T13:44:49.323Z",
  "releaseNotes": "WiX v3.10.2 is the latest recommended maintenance release of WiX v3.10 with a series of mitigations for a serious Windows vulnerability affecting all bootstrapper bundles. We strongly recommend upgrading to WiX v3.10.2 so you can ship safe bundles.\n\nFor more information about the vulnerabilities, the mitigations, and the release, see https://www.firegiant.com/blog/2016/1/20/wix-v3.10.2-released/\n\nThere are two breaking changes due to this security fix:\n* A bundle cannot be named Setup.exe. When an executable is named Setup.exe, Windows loads additional DLLs in an insecure manner. To prevent such a guaranteed vulnerability, Light.exe now yields an error if the bundle output is named Setup.exe. As Setup.exe might be a common file name, this breaking change is especially annoying. Unfortunately, Windows loads the additional DLLs in a way that Burn code cannot mitigate.\n* The process that loads the bootstrapper application is no longer the process the user started. Attempts to use ::GetModuleFileName to locate the source media (i.e., with loose files next to the bundle .exe) will fail. A workaround is to use the new WixBundleSourceProcessPath and WixBundleSourceProcessFolder variables to find the original process. In general, this shouldn't be a serious problem--bootstrapper applications can already carry all the files they need using Payload elements.",
  "requireLicenseAcceptance": false,
  "summary": "Windows Installer XML (WiX Toolset) binaries for compiling setup projects.",
  "title": "WiX Toolset v3.10 (unofficial)",
  "verbatimVersion": "3.10.2",
  "version": "3.10.2",
  "tags": [
    "WiX",
    "MSI",
    "Installer",
    "XML"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}