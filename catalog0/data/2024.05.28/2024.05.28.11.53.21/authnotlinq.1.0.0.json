{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.11.53.21/authnotlinq.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "AuthNotLinq",
  "catalog:commitId": "7a1a6f70-30e3-49ec-86a8-ea11f2a43891",
  "catalog:commitTimeStamp": "2024-05-28T11:53:21.6010534Z",
  "created": "2024-05-28T00:15:50.217Z",
  "description": "private async void ToAuthorizationButton_Click(object sender, RoutedEventArgs e)\n{\nstring login = LoginTextBlock.Text;\nstring password = PasswordTextBlock.Password;\n\nstring connectionString = @\"Data Source=(localdb)\\mssqllocaldb;Initial Catalog=User19SuperLast;Integrated Security=False; User ID=foder;Password=admin435;\";\nusing (SqlConnection connection = new SqlConnection(connectionString))\n{\nstring query = \"SELECT Users.Id, Users.FIO, UserRole.RoleId FROM Auth \" +\n\"JOIN [Users] ON Auth.Id = [Users].Id \" +\n\"JOIN UserRole ON [Users].Id = UserRole.UserId \" +\n\"WHERE Auth.Login = @Login AND Auth.Password = @Password\";\nSqlCommand command = new SqlCommand(query, connection);\ncommand.Parameters.AddWithValue(\"@Login\", login);\ncommand.Parameters.AddWithValue(\"@Password\", password);\n\ntry\n{\nconnection.Open();\nSqlDataReader reader = command.ExecuteReader();\nif (reader.Read())\n{\nint roleId = (int)reader[\"RoleId\"];\nif (roleId == 3)\n{\nUserInfo.UserId = (int)reader[\"Id\"];\nUserInfo.UserName = reader[\"FIO\"].ToString();\nUserInfo.RoleId = roleId;\nOrganizer organizer = new Organizer();\norganizer.Show();\nthis.Close();\n}\nelse\n{\nMessageBox.Show(\"У вас нет прав для входа\", \"Ошибка\", MessageBoxButton.OK, MessageBoxImage.Error);\n}\n}\nelse\n{\nMessageBox.Show(\"Неверные данные!\");\n}\nreader.Close();\n}\ncatch (Exception ex)\n{\nMessageBox.Show($\"Ошибка подключения к базе данных: {ex.Message}\", \"Ошибка\", MessageBoxButton.OK, MessageBoxImage.Error);\n}\n}\n}",
  "id": "AuthNotLinq",
  "isPrerelease": false,
  "lastEdited": "2024-05-28T11:53:10.593Z",
  "listed": false,
  "packageHash": "QXz1l/zwMx9hhiZ2/63QZSLNtDKtvi6f1RICSG7JhCZhX2/nkDdTnol2X9DcF0K6p3Chnzhs2yqG80IuvjvQPg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19423,
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.11.53.21/authnotlinq.1.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.11.53.21/authnotlinq.1.0.0.json#AuthNotLinq.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 984,
      "fullName": "AuthNotLinq.nuspec",
      "length": 1959,
      "name": "AuthNotLinq.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.11.53.21/authnotlinq.1.0.0.json#lib/net8.0/AuthNotLinq.dll",
      "@type": "PackageEntry",
      "compressedLength": 3076,
      "fullName": "lib/net8.0/AuthNotLinq.dll",
      "length": 8704,
      "name": "AuthNotLinq.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.11.53.21/authnotlinq.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12925,
      "fullName": ".signature.p7s",
      "length": 12925,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}