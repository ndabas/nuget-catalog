{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.09.53.34/chakad.pipeline.core.1.0.8.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Masoud Bahrami",
  "catalog:commitId": "e8c913c8-cd1a-4c1c-a8ac-3cc650625984",
  "catalog:commitTimeStamp": "2018-12-10T09:53:34.8134818Z",
  "copyright": "Copyright 2017",
  "created": "2018-02-10T10:05:22.397Z",
  "description": "Chakad is a Library for use with the Clean and CQRS architectural styles for .NET. The Command Dispatcher pattern is an addition to the Command design pattern that decouples the dispatcher for a service from its execution. A Command Dispatcher component maps commands to handlers. A Command Processor pattern provides a  framework for handling orthogonal concerns such as logging, timeouts, or circuit breakers$",
  "iconUrl": "http://icon_url_here_or_delete_this_line/",
  "id": "Chakad.Pipeline.Core",
  "isPrerelease": false,
  "lastEdited": "2018-12-10T09:53:15.75Z",
  "licenseUrl": "http://license_url_here_or_delete_this_line/",
  "listed": true,
  "packageHash": "ih1gBYPUsv8p+fLYH0L7K56SwxH8QJ9WL218Bmi8u0UG66Yd4GJh+1jFAJKS06fYJam242G9jltluSQQxqa/lw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24947,
  "projectUrl": "http://refactor.ir/",
  "published": "2018-02-10T10:05:22.397Z",
  "releaseNotes": "Handle Exceptions in Pipeline",
  "requireLicenseAcceptance": false,
  "title": "Chakad.Pipeline.Core",
  "verbatimVersion": "1.0.8.1",
  "version": "1.0.8.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.09.53.34/chakad.pipeline.core.1.0.8.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.09.53.34/chakad.pipeline.core.1.0.8.1.json#dependencygroup/chakad.core",
          "@type": "PackageDependency",
          "id": "Chakad.Core",
          "range": "[1.0.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.09.53.34/chakad.pipeline.core.1.0.8.1.json#Chakad.Pipeline.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 669,
      "fullName": "Chakad.Pipeline.Core.nuspec",
      "length": 1389,
      "name": "Chakad.Pipeline.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.09.53.34/chakad.pipeline.core.1.0.8.1.json#lib/net452/Chakad.Pipeline.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 12825,
      "fullName": "lib/net452/Chakad.Pipeline.Core.dll",
      "length": 29696,
      "name": "Chakad.Pipeline.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.09.53.34/chakad.pipeline.core.1.0.8.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Command",
    "CommandDispatcher",
    "CQRS",
    "Pipeline",
    "Query",
    "QueryDispatcher",
    "Clean",
    "CleanArchitecture",
    "Onion",
    "OnionArchitecture",
    "MessagePipeline"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}