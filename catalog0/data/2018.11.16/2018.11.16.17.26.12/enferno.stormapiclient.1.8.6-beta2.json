{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Storm Commerce AB",
  "catalog:commitId": "42d368ac-9629-4e4c-a509-0297326634f1",
  "catalog:commitTimeStamp": "2018-11-16T17:26:12.4867658Z",
  "copyright": "Copyright 2017",
  "created": "2017-06-16T11:28:28.57Z",
  "description": "Enferno Storm Commerce API Client library.",
  "id": "Enferno.StormApiClient",
  "isPrerelease": true,
  "lastEdited": "2018-11-16T17:25:50.917Z",
  "listed": true,
  "packageHash": "SKYILbh9UCVgHfPFE3TkM5BAGT4KiEvKrxmX+aEiWXhcdIeOuSUmYZ3GwXwTWbEnRS8wILc3EPr/vgmvefqDLQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 243428,
  "projectUrl": "https://enfernostormapiclient.codeplex.com/",
  "published": "2017-06-16T11:28:28.57Z",
  "releaseNotes": "What's new?\n\n      ApplicationService:\n      - # 409 We now support applications without any public pricelists. This gives that all calls to methods with pricelistSeed must supply a valid pricelistSeed, or no Products will be fetched. If the application have valid pricelists then pricelistSeed is optional as before. See 1069 below.\n\n      CustomerService:\n      - #1142 Three new methods, ListPriceRules, ListCustomerFlags and ListCompanyFlags, have been added to enable lookup.\n      https://servicesstage.enferno.se/api/1.1/docs/#/Customers/Operations/ListPriceRules\n      https://servicesstage.enferno.se/api/1.1/docs/#/Customers/Operations/ListCustomerFlags\n      https://servicesstage.enferno.se/api/1.1/docs/#/Customers/Operations/ListCompanyFlags\n\n      OrderService:\n      - #1142 A new method, ListOrderStatuses, has been added to enable lookup.\n      https://servicesstage.enferno.se/api/1.1/docs/#/Orders/Operations/ListOrderStatuses\n\n      ProductService:\n      - #1142 Two new methods, ListSkuTypes and ListOnHandInfoTypes, has been added to enable lookup.\n      https://servicesstage.enferno.se/api/1.1/ProductService.svc/rest/ListSkuTypes?cultureCode=\n      https://servicesstage.enferno.se/api/1.1/ProductService.svc/rest/ListOnHandInfoTypes?cultureCode=\n\n      ProductService, ShoppingService:\n      - # 1069 pricelistSeed is now used to filter any valid pricelists. If none is supplied all valid pricelists for applications will be used. Since this changes old behavior we have introduced a feature switch on this for existing applications and they will still be using the old behavior where the pricelistSeed was appended to existing  valid pricelists. The new behavior will be default in a feature version of the API.\n      This feature switch is maintained by Storm.\n\n      - #408: OnHand has been extended with a new property, Info, which holds additional info-fields for OnHand. This property will only be populated when calling any of the Get/ListProductOnHandXXX methods.\n      https://servicesstage.enferno.se/api/1.1/docs/#/Products/Entities/OnHand\n\n      ShoppingService:\n      - #1142 Two new methods, ListBasketStatuses and ListBasketTypes, hve been added to enable lookup.\n      https://servicesstage.enferno.se/api/1.1/ShoppingService.svc/rest/ListBasketStatuses?cultureCode=\n      https://servicesstage.enferno.se/api/1.1/ShoppingService.svc/rest/ListBasketTypes?cultureCode=\n\n      ExposeService:\n      - #406 A new method, ListErrorMessages, lista all available Name/Values for all Bad Requests raised by the API. Later on a list of Exceptions will be provided in the documentation for each method.\n      https://servicesstage.enferno.se/api/1.1/docs/#/Expose%20(Empty)/Operations/ListErrorMessages\n\n      What's fixed?\n\n      ShoppingService:\n      - #410 The creation of our internal OrderRequest, which is used in the payment and order process has been moved to the API from our internal order process. This affects payments and orders, and should improve performance in the checkout process since we now skip remote calls.\n\n      - # 1016 Support for different currencies on Baskets. Previously basket's currency was defaulted to the Application's default currency and used in payments and on order. Now the basket's currency can be set in CreateBasket, by setting Basket.CurrencyId or Basket.CurrencyCode to appropriate values in the supplied basket. If nothing is specified, the default will be used as before. The basket will then be handled in that currency for payments and order. This should not affect existing applications using only the default currency.\n\n      - #1013 DeleteBasket now verifies that only normal baskets (Type = 1) can be deleted. Deleted baskets will not be available through the API and handled as missing and null will be returned when trying to get a deleted basket.\n       \n\n      Miscellaneous changes? \n\n      General:\n      - Improvements in the documentation.\n\n\n      Feedback?\n      Faults and strange behavior can be reported to support@storm.io or to patrik.rosquist@storm.io.\n       \n       \n      Regards,\n      The Storm API Team",
  "requireLicenseAcceptance": false,
  "title": "Enferno Storm Api Client",
  "verbatimVersion": "1.8.6-beta2",
  "version": "1.8.6-beta2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#dependencygroup/enferno.public",
          "@type": "PackageDependency",
          "id": "Enferno.Public",
          "range": "[1.0.17, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#Enferno.StormApiClient.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1768,
      "fullName": "Enferno.StormApiClient.nuspec",
      "length": 4888,
      "name": "Enferno.StormApiClient.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#lib/net45/Enferno.StormApiClient.dll",
      "@type": "PackageEntry",
      "compressedLength": 197354,
      "fullName": "lib/net45/Enferno.StormApiClient.dll",
      "length": 934400,
      "name": "Enferno.StormApiClient.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#lib/net45/Enferno.Web.StormUtils.dll",
      "@type": "PackageEntry",
      "compressedLength": 29670,
      "fullName": "lib/net45/Enferno.Web.StormUtils.dll",
      "length": 73728,
      "name": "Enferno.Web.StormUtils.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#content/net45/Web.config.install.xdt",
      "@type": "PackageEntry",
      "compressedLength": 2077,
      "fullName": "content/net45/Web.config.install.xdt",
      "length": 9493,
      "name": "Web.config.install.xdt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.16.17.26.12/enferno.stormapiclient.1.8.6-beta2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Enferno",
    "Storm",
    "API",
    "Client"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}