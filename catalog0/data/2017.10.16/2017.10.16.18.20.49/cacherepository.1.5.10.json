{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.16.18.20.49/cacherepository.1.5.10.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gary Brunton",
  "catalog:commitId": "a151eeb7-846d-4e8f-a532-7826e07a1f99",
  "catalog:commitTimeStamp": "2017-10-16T18:20:49.9549001Z",
  "copyright": "Copyright 2015",
  "created": "2017-10-16T18:17:37.2Z",
  "description": "Fast and configurable repository implementation for multiple types of data sources.",
  "id": "CacheRepository",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.github.com/gbrunton/CacheRepository/master/license.txt",
  "listed": true,
  "packageHash": "Lx/iIEaOUgIOnV+ViU1PS8ME6kbCPu9oViRX4lTKN3vt7M2cRUmO4I/NOEfq71TUMMui8C9Fb+b/atDd1o57bg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 31831,
  "projectUrl": "https://github.com/gbrunton/CacheRepository",
  "published": "2017-10-16T18:17:37.2Z",
  "releaseNotes": "[1.5.10] Loading entites from persistent storage now builds up indexes directly from them. See issue #15\n[1.5.9] Added the ability to declare a persistent storage as ReadOnly. See issue #14.\t\n[1.5.8] Fixed a bug related to finding duplicate entities based on a key.\n[1.5.7] Fixed a bug related to deserializing.\n[1.5.6] Optimizing the UniqueIndex.\n[1.5.5] Indexes with complex keys should now deserialize correctly.\n[1.5.4] No longer deserializing empty strings to null values.\n[1.5.3] Dropped down to ServiceStack V3 which does not have quotas.\n[1.5.2] Initialized the indexes properly when persisted.\n[1.5.1] Now persistin the indexes should be work.\n[1.5.0] Added the ability to persist data locally after being retreived.\n[1.4.0] Renaming the CustomGetAllQuery.cs and updating the builder to try and be a little more consistent.\n[1.3.19] Handling DBNull values.\n[1.3.18] Allowing nullable types to be set from the CustomGetAllQuery.[1.3.17] Fixed a bug in the CustomGetAllQuery.\n[1.3.16] Created the CustomGetAllQuery because I can't seem to get the Massive one to work like I want.\n[1.3.15] Fixed a bug when trying to use the GetAll strategy.\n[1.3.14] Added a new GetAll strategy that will not throw when trying to retrieve bad values from a DataReader.\n[1.3.13] Added the ability to supply delimited identifiers if you don't want to use Sql Server's square brackets.\n[1.3.12] Fixed bug with trying to dispose a null transaction/connection.\n[1.3.11] Pushed the new GetAll method down to the implementations.\n[1.3.10] Added the ability to get all entities not using a generic.\n[1.3.9] Really fixed the problem with trimming when an empty field delimitor is used. \n[1.3.8] Fixed an issue when the delimited file might not have all of the delimiters on a line. \n[1.3.7] Fixed a problem with trimming when the value to trim is an empty string.\n[1.3.6] Changed the .net target framework from 4.5 to 4.0. This will allow older projects to depend on this library.\n[1.3.5] Fixed a bug within the Repository that would try and get a max id value when an insert is called even if the IdDoesNotExist strategy was declared. This was also causing an unnecessary select * query when ids are guids. \n[1.3.4] Made the SqlWithPassThruConnectionAndTransactionConnectionResolver constructor public. Otherwise its' not useful.\n[1.3.3] Updated the nuspec\n[1.3.2] Created the SqlWithPassThruConnectionAndTransactionConnectionResolver as a way to use this library with an existing IDbConnection and IDbTransaction.\n[1.3.1] Updated FubuCore to 1.0.0.225 version.\n[1.3] Added the ability to insert lines into existing text files by either overwriting or appending.\n[1.2] Expanded the FileRepository's API to now allow you to insert lines into text files.\n[1.1] Made entity id configuration not necessary for most cases.\n[1.0] This is the initial release of the library.",
  "requireLicenseAcceptance": false,
  "title": "CacheRepository",
  "verbatimVersion": "1.5.10.0",
  "version": "1.5.10",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.16.18.20.49/cacherepository.1.5.10.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.16.18.20.49/cacherepository.1.5.10.json#dependencygroup/dapperextensions",
          "@type": "PackageDependency",
          "id": "DapperExtensions",
          "range": "[1.4.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.16.18.20.49/cacherepository.1.5.10.json#dependencygroup/servicestack.text",
          "@type": "PackageDependency",
          "id": "ServiceStack.Text",
          "range": "[3.9.71, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.16.18.20.49/cacherepository.1.5.10.json#CacheRepository.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1672,
      "fullName": "CacheRepository.nuspec",
      "length": 3813,
      "name": "CacheRepository.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.16.18.20.49/cacherepository.1.5.10.json#lib/net45/CacheRepository.dll",
      "@type": "PackageEntry",
      "compressedLength": 27576,
      "fullName": "lib/net45/CacheRepository.dll",
      "length": 63488,
      "name": "CacheRepository.dll"
    }
  ],
  "tags": [
    ".NET",
    "Repository",
    "Cache",
    "ORM",
    "SQL",
    "Flat",
    "File",
    "ETL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}