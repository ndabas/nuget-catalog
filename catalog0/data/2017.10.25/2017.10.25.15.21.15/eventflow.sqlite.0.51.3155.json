{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.25.15.21.15/eventflow.sqlite.0.51.3155.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rasmus Mikkelsen",
  "catalog:commitId": "12aeda8d-39ee-482d-9240-adfcd6127122",
  "catalog:commitTimeStamp": "2017-10-25T15:21:15.1570261Z",
  "copyright": "Copyright (c) Rasmus Mikkelsen 2015 - 2017",
  "created": "2017-10-25T15:20:22.03Z",
  "description": "SQLite event store for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/eventflow/EventFlow/develop/icon-128.png",
  "id": "EventFlow.SQLite",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.githubusercontent.com/eventflow/EventFlow/develop/LICENSE",
  "listed": true,
  "packageHash": "hs9QVZQfbBE+lyMlTwwXLQFCLcrjJgmIRBc3hOaNPEAErymqrx+WLESfAxNQ1Mwsj0xU3nLGb+CysOr0q0gUYA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14447,
  "projectUrl": "http://docs.geteventflow.net/",
  "published": "2017-10-25T15:20:22.03Z",
  "releaseNotes": "New: Removed the `new()` requirement for read models\nNew: If `ISagaLocator.LocateSagaAsync` cannot identify the saga for a given\nevent, it may now return `Task.FromResult(null)` in order to short-circuit\nthe dispatching process. This might be useful in cases where some instances\nof an event belong to a saga process while others don't\nFixed: `StringExtensions.ToSha256()` can now be safely used from\nconcurrent threads.",
  "repository": "",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.SQLite",
  "verbatimVersion": "0.51.3155",
  "version": "0.51.3155",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.25.15.21.15/eventflow.sqlite.0.51.3155.json#dependencygroup/.netframework4.5.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.25.15.21.15/eventflow.sqlite.0.51.3155.json#dependencygroup/.netframework4.5.1/eventflow.sql",
          "@type": "PackageDependency",
          "id": "EventFlow.Sql",
          "range": "[0.51.3155, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.25.15.21.15/eventflow.sqlite.0.51.3155.json#dependencygroup/.netframework4.5.1/system.data.sqlite",
          "@type": "PackageDependency",
          "id": "System.Data.SQLite",
          "range": "[1.0.105, )"
        }
      ],
      "targetFramework": ".NETFramework4.5.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.25.15.21.15/eventflow.sqlite.0.51.3155.json#EventFlow.SQLite.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 847,
      "fullName": "EventFlow.SQLite.nuspec",
      "length": 1674,
      "name": "EventFlow.SQLite.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.25.15.21.15/eventflow.sqlite.0.51.3155.json#lib/net451/EventFlow.SQLite.dll",
      "@type": "PackageEntry",
      "compressedLength": 11969,
      "fullName": "lib/net451/EventFlow.SQLite.dll",
      "length": 25088,
      "name": "EventFlow.SQLite.dll"
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourcing",
    "SQLite"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}