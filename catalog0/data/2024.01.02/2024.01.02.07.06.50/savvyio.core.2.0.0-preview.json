{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "gimlichael",
  "catalog:commitId": "7896b891-c47a-48a8-b497-18cdbd5f7ea8",
  "catalog:commitTimeStamp": "2024-01-02T07:06:50.6571765Z",
  "copyright": "Copyright © Geekle 2021-2024. All rights reserved.",
  "created": "2024-01-02T07:03:56.52Z",
  "description": "Provides the fundamental abstractions and classes for supporting a complete flow of DDD, CQRS and Event Sourcing concepts including the option to scale out using distributed subsystems.",
  "iconFile": "icon.png",
  "id": "Savvyio.Core",
  "isPrerelease": true,
  "lastEdited": "2024-01-02T07:06:46.66Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "wun1e1Q1XknA/Wzm0nXM9gaRb3KwmcSUPy13SCo0pxOwIYjWoZ4jY0h1CRGohElx2xNFno3GHcb/8ogv4JO7xA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 137404,
  "projectUrl": "https://www.savvyio.net/",
  "published": "2024-01-02T07:03:56.52Z",
  "readmeFile": "README.md",
  "releaseNotes": "Version: 1.1.0\nAvailability: .NET 7.0, .NET 6.0\n \n# New Features\n- ADDED IMessage{T} interface in the Savvyio.Messaging namespace that defines a generic way to wrap an IRequest inside a message\n- ADDED IPointToPointChannel{TRequest} interface in the Savvyio.Messaging namespace that defines an interface for a bus that is used for interacting with other subsystems (out-process/inter-application) to do something (e.g., change the state)\n- ADDED IPublisher{TRequest} interface in the Savvyio.Messaging namespace that defines a publisher/sender channel for interacting with other subsystems (out-process/inter-application) to be notified (e.g., made aware of something that has happened)\n- ADDED IPublishSubscribeChannel{TRequest} interface in the Savvyio.Messaging namespace that defines an interface for a bus that is used for interacting with other subsystems (out-process/inter-application) to be notified (e.g., made aware of something that has happened)\n- ADDED IReceiver{TRequest} interface in the Savvyio.Messaging namespace that defines a consumer/receiver channel used by subsystems to receive a command and perform one or more actions (e.g., change the state)\n- ADDED ISender{TRequest} interface in the Savvyio.Messaging namespace that defines a producer/sender channel used for interacting with other subsystems (out-process/inter-application) to do something (e.g., change the state)\n- ADDED ISubscriber{TRequest} interface in the Savvyio.Messaging namespace that defines a subscriber/receiver channel used by subsystems to subscribe to messages (typically events) to be made aware of something that has happened\n- ADDED Message record in the Savvyio.Messaging namespace that provides a default implementation of the IMessage{T} interface\n- ADDED MessageOptions class in the Savvyio.Messaging namespace that is related to wrapping an IRequest implementation inside a message\n- ADDED ReceiveAsyncOptions class in the Savvyio.Messaging namespace that specifies options that is related to implementations of the IReceiver{TRequest} interface\n- ADDED SubscribeAsyncOptions class in the Savvyio.Messaging namespace that specifies options that is related to implementations of the ISubscriber{TRequest} interface\n \nVersion: 1.0.0\nAvailability: .NET 7.0, .NET 6.0\n \n# New Features\n- ADDED HandlerFactory class in the Savvyio namespace that provides access to factory methods for creating and configuring generic handlers that supports MEP\n- ADDED HandlerServicesDescriptor class in the Savvyio namespace that provides information, in a developer friendly way, about implementations of the IHandler{TRequest} interface such as name, declared members and what type of request they handle\n- ADDED IDataSource interface in the Savvyio namespace that defines a marker interface that specifies the actual I/O communication with a source of data\n- ADDED IHandler interface in the Savvyio namespace that defines a marker interface that specifies a handler\n- ADDED IIdentity interface in the Savvyio namespace that an identity typically associated with a storage such as a database\n- ADDED IMetadata interface in the Savvyio namespace that defines a generic way to associate metadata with any type of object\n- ADDED IMetadataDictionary interface in the Savvyio namespace that defines a generic way to support metadata capabilities\n- ADDED IRequest interface in the Savvyio namespace that defines a marker interface that specifies a request/model/event\n- ADDED MetadataDictionary class in the Savvyio namespace that provides a default implementation of the IMetadataDictionary interface\n- ADDED MetadataExtensions class in the Savvyio namespace that consist of extension methods for the IMetadata interface: GetCausationId, GetCorrelationId, SetCausationId, SetCorrelationId, SetEventId, SetTimestamp, SetMemberType, SaveMetadata, MergeMetadata\n- ADDED MetadataFactory class in the Savvyio namespace that provides access to factory methods for maintaining metadata in models\n- ADDED Request record in the Savvyio namespace that represents the base class from which all implementations of the IRequest interface should derive\n- ADDED SavvyioOptions class in the Savvyio namespace that specifies options that is related to setting up Savvy I/O services\n- ADDED SavvyioOptionsExtensions class in the Savvyio namespace that consist of extension methods for the SavvyioOptions class: AddDispatchers, AddHandlers\n- ADDED TaskExtensions class in the Savvyio namespace that consist of extension methods for the Task{T} class: SingleOrDefaultAsync\n- ADDED IDataStore interface in the Savvyio.Data namespace that defines a marker interface that specifies an abstraction of persistent data access based on the Data Access Object pattern\n- ADDED IDeletableDataStore interface in the Savvyio.Data namespace that defines a generic way of abstracting deletable data access objects (cruD)\n- ADDED IPersistentDataStore interface in the Savvyio.Data namespace that defines a generic way of abstracting persistent data access objects (CRUD)\n- ADDED IReadableDataStore interface in the Savvyio.Data namespace that defines a generic way of abstracting readable data access objects (cRud)\n- ADDED ISearchableDataStore interface in the Savvyio.Data namespace that defines a generic way of abstracting searchable data access objects (cRud)\n- ADDED IWritableDataStore interface in the Savvyio.Data namespace that defines a generic way of abstracting writable data access objects (CrUd)\n- ADDED Dispatcher class in the Savvyio.Dispatchers namespace that represents the base class from which all implementations of the dispatcher concept should derive\n- ADDED FireForgetDispatcher class in the Savvyio.Dispatchers namespace that provides a generic dispatcher that uses Fire-and-Forget/In-Only MEP\n- ADDED IDispatcher interface in the Savvyio.Dispatchers namespace that defines a marker interface that specifies a dispatcher that encapsulates how a set of objects interact\n- ADDED IServiceLocator interface in the Savvyio.Dispatchers namespace that provides a generic way to locate implementations of service objects\n- ADDED RequestReplyDispatcher class in the Savvyio.Dispatchers namespace that provides a generic dispatcher that uses Request-Reply/In-Out MEP\n- ADDED ServiceLocator class in the Savvyio.Dispatchers namespace that provides a default implementation of the IServiceLocator interface\n- ADDED DomainException class in the Savvyio.Domain namespace that is the exception that is thrown when a domain model is not in a valid state\n- ADDED IDeletableRepository interface in the Savvyio.Domain namespace that defines a generic way of abstracting deletable repositories (cruD)\n- ADDED IPersistentRepository interface in the Savvyio.Domain namespace that defines a generic way of abstracting persistent repositories (CRUD)\n- ADDED IReadableRepository interface in the Savvyio.Domain namespace that defines a generic way of abstracting readable repositories (cRud)\n- ADDED IRepository interface in the Savvyio.Domain namespace that defines a marker interface that specifies an abstraction of persistent data access based on the Repository Pattern\n- ADDED ISearchableRepository interface in the Savvyio.Domain namespace that defines a generic way of abstracting searchable repositories (cRud)\n- ADDED IUnitOfWork interface in the Savvyio.Domain namespace that defines a transaction that bundles multiple IRepository{TEntity,TKey}\" calls into a single unit\n- ADDED IWritableRepository interface in the Savvyio.Domain namespace that defines a generic way of abstracting writable repositories (CrUd)\n- ADDED FireForgetRegistryExtensions class in the Savvyio.Handlers namespace that consist of extension methods for the IFireForgetRegistry{TRequest} interface: RegisterAsync\n- ADDED IFireForgetActivator interface in the Savvyio.Handlers namespace that specifies a way of invoking Fire-and-Forget/In-Only MEP delegates that handles TRequest\n- ADDED IFireForgetHandler interface in the Savvyio.Handlers namespace that defines a generic handler that uses Fire-and-Forget/In-Only MEP\n- ADDED IFireForgetRegistry interface in the Savvyio.Handlers namespace that specifies a Fire-and-Forget/In-Only MEP registry that store delegates responsible of handling type TRequest\n- ADDED IRequestReplyActivator interface in the Savvyio.Handlers namespace that specifies a way of invoking Request-Reply/In-Out MEP delegates that handles TRequest\n- ADDED IRequestReplyHandler interface in the Savvyio.Handlers namespace that defines a generic handler that uses Request-Reply/In-Out MEP\n- ADDED IRequestReplyRegistry interface in the Savvyio.Handlers namespace that specifies a Request-Reply/In-Out MEP registry that store delegates responsible of handling type TRequest\n- ADDED OrphanedHandlerException class in the Savvyio.Dispatchers namespace that provides the exception that is thrown when an IHandler{TRequest} implementation cannot be resolved\n- ADDED RequestReplyRegistryExtensions class in the Savvyio.Handlers namespace that consist of extension methods for the IRequestReplyRegistry{TRequest} interface: RegisterAsync",
  "repository": "",
  "verbatimVersion": "2.0.0-preview",
  "version": "2.0.0-preview",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net6.0/cuemon.extensions.collections.generic",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Collections.Generic",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net6.0/cuemon.extensions.core",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Core",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net6.0/cuemon.extensions.reflection",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Reflection",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net6.0/cuemon.security.cryptography",
          "@type": "PackageDependency",
          "id": "Cuemon.Security.Cryptography",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": "net6.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net7.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net7.0/cuemon.extensions.collections.generic",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Collections.Generic",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net7.0/cuemon.extensions.core",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Core",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net7.0/cuemon.extensions.reflection",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Reflection",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net7.0/cuemon.security.cryptography",
          "@type": "PackageDependency",
          "id": "Cuemon.Security.Cryptography",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": "net7.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net8.0/cuemon.extensions.collections.generic",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Collections.Generic",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net8.0/cuemon.extensions.core",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Core",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net8.0/cuemon.extensions.reflection",
          "@type": "PackageDependency",
          "id": "Cuemon.Extensions.Reflection",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#dependencygroup/net8.0/cuemon.security.cryptography",
          "@type": "PackageDependency",
          "id": "Cuemon.Security.Cryptography",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#Savvyio.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2604,
      "fullName": "Savvyio.Core.nuspec",
      "length": 11782,
      "name": "Savvyio.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#lib/net6.0/Savvyio.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 26201,
      "fullName": "lib/net6.0/Savvyio.Core.dll",
      "length": 57856,
      "name": "Savvyio.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#lib/net6.0/Savvyio.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 11626,
      "fullName": "lib/net6.0/Savvyio.Core.xml",
      "length": 115034,
      "name": "Savvyio.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#lib/net7.0/Savvyio.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 26200,
      "fullName": "lib/net7.0/Savvyio.Core.dll",
      "length": 57856,
      "name": "Savvyio.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#lib/net7.0/Savvyio.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 11626,
      "fullName": "lib/net7.0/Savvyio.Core.xml",
      "length": 115034,
      "name": "Savvyio.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#lib/net8.0/Savvyio.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 26026,
      "fullName": "lib/net8.0/Savvyio.Core.dll",
      "length": 57344,
      "name": "Savvyio.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#lib/net8.0/Savvyio.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 11626,
      "fullName": "lib/net8.0/Savvyio.Core.xml",
      "length": 115034,
      "name": "Savvyio.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 6489,
      "fullName": "icon.png",
      "length": 6484,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 705,
      "fullName": "README.md",
      "length": 3308,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.01.02.07.06.50/savvyio.core.2.0.0-preview.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11514,
      "fullName": ".signature.p7s",
      "length": 11514,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ddd",
    "domain-driven-design",
    "dispatchers",
    "dispatcher",
    "data-store",
    "repository",
    "dao",
    "data-access-object",
    "handler",
    "handlers",
    "fire-forget-handler",
    "request-reply-handler",
    "message-exchange-pattern",
    "request",
    "metadata",
    "messaging",
    "microservice",
    "microservices",
    "queue",
    "bus",
    "pub-sub",
    "p2p"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}