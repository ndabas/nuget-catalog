{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.24.20.35.19/eventflow.owin.0.11.751.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "db493f41-5b74-4438-bfff-fa6753b9c6f5",
  "catalog:commitTimeStamp": "2015-08-24T20:35:19.3537529Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-08-24T20:34:22.74Z",
  "description": "OWIN support for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.Owin",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "packageHash": "N5skMLI3Wn9jc9Fn/hmfCCEmdjG3Sa3eE/J+AX9LdYAWEWp+qkGIxRwRMaqdCAvJAC9BkJB6uFbn0C51/kHXZA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8677,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-08-24T20:34:22.74Z",
  "releaseNotes": "Breaking: `EventFlowOptions.AddDefaults(...)` now also adds event\ndefinitions\nNew: [RabbitMQ](http://www.rabbitmq.com/) is now supported through the new\nNuGet package called `EventFlow.RabbitMQ` which enables domain events to be\npublished to the bus\nNew: If you want to subscribe to all domain events, you can implement\nand register a service that implements `ISubscribeSynchronousToAll`. Services\nthat implement this will automatically be added using the\n`AddSubscribers(...)` or `AddDefaults(...)` extension to `EventFlowOptions`\nNew: Use `EventFlowOptions.UseAutofacAggregateRootFactory(...)` to use an\nAutofac aggregate root factory, enabling you to use services in your\naggregate root constructor\nNew: Use `EventFlowOptions.UseResolverAggregateRootFactory()` to use the\nresolver to create aggregate roots. Same as\n`UseAutofacAggregateRootFactory(...)` but for when using the internal IoC\ncontainer\nNew: Use `EventFlowOptions.AddAggregateRoots(...)` to register aggregate root\ntypes\nNew: Use `IServiceRegistration.RegisterType(...)` to register services by\ntype",
  "requireLicenseAcceptance": true,
  "title": "EventFlow.Owin - OWIN support",
  "version": "0.11.751",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.24.20.35.19/eventflow.owin.0.11.751.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.24.20.35.19/eventflow.owin.0.11.751.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.11.751, 0.11.751]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.24.20.35.19/eventflow.owin.0.11.751.json#dependencygroup/owin",
          "@type": "PackageDependency",
          "id": "Owin",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.08.24.20.35.19/eventflow.owin.0.11.751.json#dependencygroup/microsoft.owin",
          "@type": "PackageDependency",
          "id": "Microsoft.Owin",
          "range": "[3.0.1, )"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "owin"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}