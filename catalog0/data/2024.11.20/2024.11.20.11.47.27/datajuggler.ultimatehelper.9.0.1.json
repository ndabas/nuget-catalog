{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Data Juggler",
  "catalog:commitId": "a4c9747e-4e24-4d8e-ae2b-f5246c354c01",
  "catalog:commitTimeStamp": "2024-11-20T11:47:27.9601563Z",
  "copyright": "Data Juggler 2010 - 2024",
  "created": "2024-11-20T11:44:20.267Z",
  "description": "DataJuggler.UltimateHelper is a collection of C# classes to simplify many things.\n\nThis package has been upgraded for .NET 9. Use a 8.x version for .NET 8, Use a 7.x version for .NET 7, etc.\n\nThis is a port of DataJuggler.UltimateHelper.Net that was ported to\nDataJuggler.UltimateHelper for .Net Core. To be consistent with Microsoft\nI am dropping Core from all my packages.",
  "iconFile": "DataJuggler128.png",
  "id": "DataJuggler.UltimateHelper",
  "isPrerelease": false,
  "lastEdited": "2024-11-20T11:46:55.287Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "RWIXsABt2UTgCDhpcS066qn7NErp1Z61OjzUo4m48+ETzJFQG8Dtp5682nh+XQpmRsgvrEY70/uOxOj/if23Lw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 50947,
  "projectUrl": "https://github.com/DataJuggler/DataJuggler.UltimateHelper",
  "published": "2024-11-20T11:44:20.267Z",
  "readmeFile": "README.md",
  "releaseNotes": "# 11.20.2023: Added a new method to TextHelper - ExportWords.\n\t\tI updated to version 8.0.2, with the addition of Index added to Word and TextLine objects. \n\t\tThese values are now set in GetTextLines and GetWords method of TextHelper.\n\n\t\t# 11.14.2023: This project has been updated to .NET8!\n\n\t\t# 8.14.2023 New Video\n\n\t\tCreate a Stock Predictor With C# and ML.NET Part I\n\t\thttps://youtu.be/hF8LkvwOXQY\n\n\t\t8.13.2023 - Added a new method to TextHelper - GetTextLinesFromFile. I also modified the method\n\t\tGetTextLines, to have an option to parse the words foreach line. The new method GetTextLinesFromFile\n\t\treads the text from the file, and then calls GetTextLines with optional parameters to also get the words\n\t\tand pass in your own delimiter. I added an Icon for the project.\n\n\t\t8:11.2023 - Added a new method to DateHelper - ParseEightDigitDate.\n\t\tParses a date in the fromat yyyymmdd.\n\n\t\t6.21.2023: I added FileHelper.RemovePartialGuid method, and I updated the ReadMe file\n\t\twith some sample projects that use this project. I also realized the ReadMe was not being packed\n\t\twith the package and have now fixed this.\n\n\t\t3.13.2023: I added System.Configuration Nuget package. I thought this was already present, but wasn't.\n\t\tI also updated EnvironmentVariableHelper to have a Set method and now the GetEnvironmentVariable\n\t\tand SetEnvironmentVariable now have a target parameter (Machine, User or Process).\n\n\t\t2.23.2023: I added a new CodeHelper to help with formatting code (C# code for now).\n\t\tVersion 7.1.1 Fixes an issue where in a web project, new lines are not added, only \\n.\n\n\t\t10.19.2022: First release for .NET 7. The only reason this version has a -rc is so it doesn't show up\n\t\tin Nuget package feeds until .NET 7 is released next month.\n\n\t\t5.4.2022\n\t\tVersion 6.0.5: Last and final override for NullHelper.IsNull and Exists methods.\n\n\t\t5.3.2022\n\t\tVersion 6.0.4: I added a couple of overrides for IsNull and Exists methods for NullHelper.cs\n\n\t\tVersion 6.0.0: This version is for 6.0.\n\n\t\tVersion 1.7.1: I updated Nuget Packages for this release, and System.Configuration was updated recently, so I\n\t\tupdated.\n\n\t\tVersion 1.7.0: I updated the package to multi-target .Net5.0 and .Net6.0\n\n\t\tVersion 1.6.9: Boolean Helper Upgrade described below had some flaws. Hopefully fixed now.\n\n\t\tVersion 1.6.8 - After 11 years, BooleanHelper got an upgrade.\n\n\t\tVersion 1.6.7 - I added a couple of read only properties for IsComment, IsPartialComment, PartialCommentText, PartialCommentCode.\n\n\t\tVersion 1.6.6 - I added a GetWordsAsStrings, because sometimes you just need a list of strings.\n\n\t\tVersion 1.6.5 - After years of writing this, I found a safer way of getting the FileNameWithoutExtension. My previous method failed if a fileName passed in doesn't have an extension.\n\n\t\tVersion 1.6.4 - I added a new method FileHelper.Exists. System.IO.File.Exists will return true if you pass in an empty string. My version will return true only if the string exists and the File exists on disk.\n\n\t\tVersion 1.6.3 - I updated FileHelper.CreateFileNameWithPartialGuid method to have a couple of optional\n\t\tparameters to set whether includeExtension is true or fileNameOnly.\n\n\t\tVersion 1.6.2 - I changed FileHelper.CreateFileNameWithPartialGuid method, to have an optional parameter to return the fileName only.\n\n\t\tVersion 1.6.1 - I realized my method FileHelper.CreateFileNameWithPartialGuid had a hard coded number of\n\t\tcharacters (bad enough) but also had .png extension hard coded. I am guilty of a specific use method here, sorry.\n\t\tIt did work for .png's I tested.\n\n\t\tVersion 1.6.0 - I removed SQLParameterHelper, which had a dependency on System.Data.SQLClient.\n\t\tI moved SQLParameterHelper to its own project DataJuggler.UltimateHelper.SQL\n\t\tI also added another override for the CheckInRange and the EnsureInRange to NumericHelper, where\n\t\tyou can now pass in a list of integers, doubles or decimals to work with sets of numbers.\n\n\t\tVersion 1.5.12 - I added a new method IsInRange to NumericHelper.\n\n\t\tVersion 1.5.11 - I added a new method EnsureInRange to NumericHelper.\n\n\t\tVersion 1.5.8 - I added a couple of methods to DateHelper to get the month names and GetDateShortText\n\n\t\tVersion 1.5.7 - Oops. I forgot to make the new ExportTextLines static.\n\n\t\tVersion 1.5.6 - I did two things. One I got rid of WordParser, even though it breaks many of my own apps.\n\t\tTextHelper has the exact two methods for GetTextLines and GetWords.\n\t\tThe other thing I added was a new method called ExportTextLines, to make it easy to reassemble a List of\n\t\tTextLines back into a File or block.\n\n\t\tVersion 1.5.5 - I had been working on a method in the Word Parser, and I had to make a change to parse some text that didn't end in new line characters. I fixed and checked it right back in, so hopefully\n\t\tno one downloaded this package in the last 5 minutes.\n\n\t\tVersion 1.5.4 - Remove the code that create the symbols package, as someone updated the project with\n\t\tit and I didn't ask for it and it didn't work to allow you to step through the code.\n\n\t\tDownload the code from Git Hub if you need to debug.\n\n\t\tVersion 1.5.3 - I am trying to be somewhat consistent, and the 5 stand for .Net 5.\n\n\t\tVersion 1.5.1 - I am trying to be somewhat consistent, and the 5 stand for .Net 5.\n\n\t\tVersion 1.3.1 - I realized I had forgotten to drop the .Core.\n\n\t\tThe new namespace is just DataJuggler.UltimateHelper (no .Net or .Core Yay!).\n\n\t\tVersion 1.5.3 - Brought over EnumHelper from .Net Framework version now that I am converting DB Compare\n\t\tto .Net 5, I needed this.\n\n\t\tVersion 1.5.0 - .Net 5 Port.\n\n\t\tVersion 1.3.0 - Converted to .Net 5.0 and dropped the .Core name.\n\n\t\tVersion 1.2.6 - Not sure if a publish was needed for this, but the project file now has Source Link enabled, so source stepping should be possible.\n\n\t\tVersion 1.2.5 - I changed NumericHelper.IsNumeric to include 3 new optional parameters.\n\t\tbool RemoveDash, true by default. - numbers are removed for this test.\n\t\tdouble defaultValue, -2,000,000 default value.\n\t\tdouble errorValue, -2,000,001 default value.\n\n\t\tIf the number parses to greater than, it is numeric.\n\t\tMy old way didn't work for negative numbers, and I need them now.\n\n\t\tVersion 1.2.4 - I added a 5th parameter override to NullHelper.Exists and NullHelper.IsNull\n\n\t\tVersion 1.2.3 - I accidently had LastIndexOf instead of Index of when I created a new file name in CreateFileNameWithPartialGuid method.\n\n\t\tVersion 1.2.2 - I added a new method to FileHelper, CreateFileName with PartialGuid.\n\n\t\tVersion 1.2.1\n\t\tI brought over WordParser.cs.\n\n\t\tVersion 1.2.0 This is my first attempt at Multi-Targeting so this application is availaable to .Net Core 3.1 and .Net Standard 2.1.",
  "repository": "",
  "verbatimVersion": "9.0.1",
  "version": "9.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#dependencygroup/net9.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#dependencygroup/net9.0/system.configuration.configurationmanager",
          "@type": "PackageDependency",
          "id": "System.Configuration.ConfigurationManager",
          "range": "[9.0.0, )"
        }
      ],
      "targetFramework": "net9.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#DataJuggler.UltimateHelper.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 3301,
      "fullName": "DataJuggler.UltimateHelper.nuspec",
      "length": 8264,
      "name": "DataJuggler.UltimateHelper.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#lib/net9.0/DataJuggler.UltimateHelper.dll",
      "@type": "PackageEntry",
      "compressedLength": 13630,
      "fullName": "lib/net9.0/DataJuggler.UltimateHelper.dll",
      "length": 30720,
      "name": "DataJuggler.UltimateHelper.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#DataJuggler128.png",
      "@type": "PackageEntry",
      "compressedLength": 16051,
      "fullName": "DataJuggler128.png",
      "length": 16046,
      "name": "DataJuggler128.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 2128,
      "fullName": "README.md",
      "length": 4896,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 641,
      "fullName": "LICENSE",
      "length": 1090,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.20.11.47.27/datajuggler.ultimatehelper.9.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12924,
      "fullName": ".signature.p7s",
      "length": 12924,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "Helper",
    "Classes"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}