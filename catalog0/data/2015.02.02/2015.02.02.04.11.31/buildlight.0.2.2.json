{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.04.11.31/buildlight.0.2.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tom Cabanski",
  "catalog:commitId": "ccfbf2aa-dd7b-413a-9b08-9d9d2ba6cc7d",
  "catalog:commitTimeStamp": "2015-02-02T04:11:31.4173245Z",
  "created": "2012-09-17T00:31:46.76Z",
  "description": "BuildLight provides an extensible framework for connecting a build server status to a build light/lamp, audible notification and other sorts of things like mobile alerts. \n\tRight now it only supports TeamCity and a red/green/blue LED light made by Delcom that connects to the USB port.",
  "id": "BuildLight",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "l+c2lefc9hY7AiBas3Im5b2+NIcvsoVqpoooQRtc6SePsOPw6WO39nLM6rcSZlkxIoavNRGDpy6B5PLE8M0ZSA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 3727,
  "projectUrl": "http://southsidesoft.com/BuildLight/",
  "published": "2012-09-17T00:31:46.76Z",
  "requireLicenseAcceptance": false,
  "summary": "A Windows Service to update a physical build indicator based on the status of one or more projects in a continous integration build server",
  "title": "Build indicator for build server.",
  "version": "0.2.2",
  "tags": [
    "TeamCity",
    "Cruise",
    "Control",
    "Build",
    "Lamp",
    "Indicator"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}