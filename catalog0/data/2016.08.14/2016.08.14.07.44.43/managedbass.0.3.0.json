{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.14.07.44.43/managedbass.0.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mathew Sachin",
  "catalog:commitId": "a902228b-41c1-42de-8ecf-9b99f1cc398a",
  "catalog:commitTimeStamp": "2016-08-14T07:44:43.2454552Z",
  "copyright": "(c) 2015 Mathew Sachin",
  "created": "2015-12-17T05:23:18.24Z",
  "description": "An OpenSource Managed Wrapper around un4seen Bass and some of its addons.\nThis project is currently in development.\nYou can contribute to it on GitHub https://github.com/Revica/ManagedBass/.\n\nThe Library is compiled for AnyCPU.\nBut the Bass dlls need to be checked for x64 or x86.\nPut the Bass dlls in the same folder as ManagedBass.dll.\nManagedBass does not need to be licensed for Commercial use, but bass and many of the addons have to be.\nCheck the below website for more details\nBass dlls are available at http://www.un4seen.com/bass\nBass and its Addons are trademarks of their respective owners.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.14.07.44.43/managedbass.0.3.0.json#frameworkassemblygroup/.netframework4.0",
    "assembly": "System",
    "targetFramework": ".NETFramework4.0"
  },
  "id": "ManagedBass",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "2016-08-14T07:44:37.737Z",
  "licenseUrl": "http://mit-license.org/",
  "listed": false,
  "packageHash": "FNr1GLjgj6CtM3ArFQdHdAl15ax3cwkskM2jysROD+ViucgYekW8EDvldvOTWLS3RjwQ8GcoV1pr9+b0fw8uLQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 50067,
  "projectUrl": "https://github.com/Revica/ManagedBass/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "•Bass.PluginLoadDirectory()\n•Added Extensions class\n•Load() method on wrapper classes to load from custom folders\n•More Bass Methods wrapped, including 3D\n•Some more methods wrapped in BassEnc\n•Added abstract BassDevice, inherited by PlaybackDevice and RecordingDevice\n•Bass.Configure(), Bass.GetConfig(), Bass.GetConfigBool(), Bass.GetConfigPtr(), enum Configuration made internal. Configuration values are provided on the respective static wrapper classes.\n•While using strings with Bass.SetConfigPtr(), strings need not be held alive manually as is the case with Bass.Net. ManagedBass handles it automatically.\n•Added BassAac and BassAc3 for configuration.",
  "requireLicenseAcceptance": false,
  "summary": "An OpenSource Managed Wrapper around un4seen Bass",
  "title": "ManagedBass",
  "verbatimVersion": "0.3",
  "version": "0.3.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.14.07.44.43/managedbass.0.3.0.json#ManagedBass.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1039,
      "fullName": "ManagedBass.nuspec",
      "length": 2209,
      "name": "ManagedBass.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.14.07.44.43/managedbass.0.3.0.json#lib/ManagedBass.dll",
      "@type": "PackageEntry",
      "compressedLength": 46081,
      "fullName": "lib/ManagedBass.dll",
      "length": 117248,
      "name": "ManagedBass.dll"
    }
  ],
  "tags": [
    "C#",
    "Bass",
    "Bass.Net",
    "ManagedBass",
    "Audio",
    "un4seen"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}