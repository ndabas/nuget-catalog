{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Alexander Paskhin/ paskhin@hotmail.co.uk",
  "catalog:commitId": "c5cde08c-e1a2-439a-941d-f6a1f83ee81a",
  "catalog:commitTimeStamp": "2015-02-04T08:08:04.6944464Z",
  "copyright": "Copyright 2013 Alexander Paskhin",
  "created": "2013-12-08T15:58:30.097Z",
  "description": "MVVM pattern is widely used in developing of XAML-based GUI applications. Without using this pattern it is impossible to provide the quality UX design implementations. Quality of UX design directly depends on the techniques or features that used for implementing the MVVM pattern. The most important features are to solve the “clear” separation tasks between View (the XAML code coupled with its code-behind) and ViewModel. \nDigital agencies are very often involved in providing the quality UX design solutions for application products. This process is based on separated development by two companies’ one application. Design agency develops View (XAML) part and Technology or Business Company concentrates on developing functional parts: View Model and Model. \nHere we have got a task when two different languages XAML and C# contracted together delivered by different companies. \nThis project provides the transparent and professional package for developing quality UX design solutions. Without using these features or similar it is impossible to say that your XAML UX design has a quality. \nWell known Binding markup extension can bind only two properties together. The source property can be located either in Resources or either in code-behind. These standard framework features don’t allow developers to separate View from View Model. The volume of code behind development decrease quality of GUI, increase complicity and cost of maintainability. Change in View can cause the dramatic change of the code behind layer. \nFor high quality UX implementation with XAML you need separate or by other words bind over the framework XAML with ICommand and RoutedEventHandler which are located in the View Model.",
  "id": "MvvmBindingPackNoIoc",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "minClientVersion": "1.4.7.0",
  "packageHash": "wx7lfFUnndIy5iNSGPP2l7okiq3BXey/rgHDAZyEeyEqlGvB3TOL1MIxL7z129s+Bo2lq+4SCTkw2wyilzDVlA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 106088,
  "projectUrl": "http://wpfmvvmbindingext.codeplex.com",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Release:\n.NET 4.0\n.NET 4.5\n.NetCore 4.5\nSilverlight5.0",
  "requireLicenseAcceptance": true,
  "summary": "Special Edition with Limited distribution. For XAML UX quality solutions.",
  "title": "MVVM-WPF-SL-WinRt Markup Binding Extensions.",
  "version": "1.4.7",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/.netframework4.5/commonservicelocator",
          "@type": "PackageDependency",
          "id": "CommonServiceLocator",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/.netframework4.0/commonservicelocator",
          "@type": "PackageDependency",
          "id": "CommonServiceLocator",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/silverlight5.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/silverlight5.0/commonservicelocator",
          "@type": "PackageDependency",
          "id": "CommonServiceLocator",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": "Silverlight5.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/.netcore4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.08.08.04/mvvmbindingpacknoioc.1.4.7.json#dependencygroup/.netcore4.5/unity",
          "@type": "PackageDependency",
          "id": "Unity",
          "range": "[3.0.1304, )"
        }
      ],
      "targetFramework": ".NETCore4.5"
    }
  ],
  "tags": [
    "MVVM",
    "XAML",
    "Binding",
    "markup-extension"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}