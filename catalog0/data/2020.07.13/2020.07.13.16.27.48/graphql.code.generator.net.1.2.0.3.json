{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.13.16.27.48/graphql.code.generator.net.1.2.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nav Malik",
  "catalog:commitId": "b08f3a60-3be4-4b83-93ee-c5e7ed7576d7",
  "catalog:commitTimeStamp": "2020-07-13T16:27:48.5588993Z",
  "copyright": "Nav Malik",
  "created": "2020-07-13T16:25:23.243Z",
  "description": "This package will generate GraphQL classes (Type, Query, and Repository) dynamically from Domain Entity classes. This package is for .Net Framework projects and can only gernerate classes for assembly created from .Net Framework. The GraphQL.Code.Generation.Core package is for .NetCore and can generate classes for assembly created from .NetCore or .Net Framework. Use the Configuration class and sub classes to provide the inputs to the Generator.",
  "id": "GraphQL.Code.Generator.Net",
  "isPrerelease": false,
  "lastEdited": "2020-07-13T16:27:27.07Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "xEaoa3A0lZk6mV0mVF8kdBWZEi74tv5MYrldPLG5TThinwS+yywNSfX27i2L6f2uvXfFLFCVaXpbxUEwbVvrAg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27342,
  "published": "2020-07-13T16:25:23.243Z",
  "releaseNotes": "Changed the filtering totally. Added PaginationInputType and SearchInputType from package GraphQL.Extension.Types.Net. Now from backend(in-memory or actual Db) only requested fields will be fetched.",
  "requireLicenseAcceptance": false,
  "title": "GraphQL.Code.Generator.Net",
  "verbatimVersion": "1.2.0.3",
  "version": "1.2.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.13.16.27.48/graphql.code.generator.net.1.2.0.3.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.13.16.27.48/graphql.code.generator.net.1.2.0.3.json#dependencygroup/entityframework",
          "@type": "PackageDependency",
          "id": "EntityFramework",
          "range": "[6.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.13.16.27.48/graphql.code.generator.net.1.2.0.3.json#GraphQL.Code.Generator.Net.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 712,
      "fullName": "GraphQL.Code.Generator.Net.nuspec",
      "length": 1596,
      "name": "GraphQL.Code.Generator.Net.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.13.16.27.48/graphql.code.generator.net.1.2.0.3.json#lib/net452/GraphQL.Code.Generator.Net.dll",
      "@type": "PackageEntry",
      "compressedLength": 15161,
      "fullName": "lib/net452/GraphQL.Code.Generator.Net.dll",
      "length": 38400,
      "name": "GraphQL.Code.Generator.Net.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.13.16.27.48/graphql.code.generator.net.1.2.0.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "GraphQL",
    "GraphQL.Code.Generator",
    "GraphQL-dotnet",
    "GraphQL.dotnet",
    "GraphQL-Schema",
    "GraphQL.Schema.Generator",
    "GraphQL.EnitityFramework",
    "GraphQLEntity",
    "GraphQL.Entity",
    "EnitityFramework.GraphQL",
    "Entity.GraphQL",
    "EntityGraphQL"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}