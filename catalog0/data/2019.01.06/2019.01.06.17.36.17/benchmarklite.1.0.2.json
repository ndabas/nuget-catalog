{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.06.17.36.17/benchmarklite.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Greg Mulvihill",
  "catalog:commitId": "5751bc1b-da99-4d11-9933-76c5c1c4aa8c",
  "catalog:commitTimeStamp": "2019-01-06T17:36:17.4536877Z",
  "copyright": "Copyleft (ɔ) ∞",
  "created": "2016-12-02T21:05:37.037Z",
  "description": "A lightweight and simple benchmark tool.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.06.17.36.17/benchmarklite.1.0.2.json#frameworkassemblygroup/.netframework2.0",
    "assembly": "System",
    "targetFramework": ".NETFramework2.0"
  },
  "id": "BenchmarkLite",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2019-01-06T17:36:13.943Z",
  "licenseUrl": "https://www.gnu.org/licenses/gpl-3.0.txt",
  "listed": false,
  "packageHash": "sxzEKJyB3z1hIa1rE6BP6Gcd7/L1KTlcx83Xz3EtEdfOck6qk53U1rEMb3u+2YeMTXw6RVKkXzuvwJ9lJNfhtg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14942,
  "projectUrl": "https://github.com/gregmulvihill/BenchmarkLite",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Example:\n\n    using System;\n    using System.Threading;\n\n    public class BenchmarkLiteDemo\n    {\n        public static void Run()\n        {\n            var oRandom = new Random();\n\n            BenchmarkLite.Instance\n                .Title(\"Benchmark 1\")\n                .Add(() =>\n                {\n                    Thread.Sleep(oRandom.Next(10));\n                })\n                .Add(() =>\n                {\n                    Thread.Sleep(oRandom.Next(10));\n                })\n                .Add((x) =>\n                {\n                    Console.Write($\"{x}          \\r\");\n                    Thread.Sleep(oRandom.Next(Math.Min(x, 10)));\n                })\n                .Add((x) =>\n                {\n                    Console.Write($\"{x}          \\r\");\n                    Thread.Sleep(oRandom.Next(Math.Min(x, 10)));\n                })\n                .Run(250, 1, Environment.ProcessorCount * 2 / 3)\n                .ShowResults(false, true);\n\n            BenchmarkLite.Instance.Reset();\n\n            BenchmarkLite.Instance\n                .Title(\"Benchmark 2\")\n                .Add(() =>\n                {\n                    Thread.Sleep(oRandom.Next(10));\n                },\n                () => { Console.WriteLine(\"Setup action 0\"); },\n                () => { Console.WriteLine(\"Cleanup action 0\"); },\n                \"Action 0\")\n                .Add(() =>\n                {\n                    Thread.Sleep(oRandom.Next(10));\n                })\n                .Add((x) =>\n                {\n                    Console.Write($\"{x}          \\r\");\n                    Thread.Sleep(oRandom.Next(Math.Min(x, 10)));\n                },\n                () => { Console.WriteLine(\"Setup action 2\"); },\n                () => { Console.WriteLine(\"Cleanup action 2\"); },\n                \"Action 2\")\n                .Add((x) =>\n                {\n                    Console.Write($\"{x}          \\r\");\n                    Thread.Sleep(oRandom.Next(Math.Min(x, 10)));\n                })\n                .Run(250, 1, Environment.ProcessorCount * 2 / 3)\n                .ShowResults(true, true);\n\n            Console.WriteLine(\"Press any key to continue\");\n            Console.ReadKey();\n        }\n    }\n\nOutput:\n\n    --------------------------- Benchmark 1 ---------------------------\n                                       Label  = Ave Sec    Percent Order\n    [                                      0] =   0.295    100.94%     1\n    [                                      1] =   0.304    104.04%     3\n    [                                      2] =   0.302    103.10%     2\n    [                                      3] =   0.293    100.00%     0\n\n    Setup action 0\n    Cleanup action 0\n    Setup action 0\n    Cleanup action 0\n    Setup action 2\n    Cleanup action 2\n    Setup action 2\n    Cleanup action 2\n    --------------------------- Benchmark 2 ---------------------------\n                                       Label  = Ave Sec    Percent Order\n    [                               Action 0] =   0.298    100.00%     0\n    [                                      1] =   0.299    100.33%     1\n    [                               Action 2] =   0.306    102.41%     2\n    [                                      3] =   0.310    104.06%     3\n\n    Press any key to continue",
  "requireLicenseAcceptance": false,
  "title": "BenchmarkLite",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.06.17.36.17/benchmarklite.1.0.2.json#BenchmarkLite.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1034,
      "fullName": "BenchmarkLite.nuspec",
      "length": 4316,
      "name": "BenchmarkLite.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.06.17.36.17/benchmarklite.1.0.2.json#content/BenchmarkLite.cs",
      "@type": "PackageEntry",
      "compressedLength": 1921,
      "fullName": "content/BenchmarkLite.cs",
      "length": 7676,
      "name": "BenchmarkLite.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.06.17.36.17/benchmarklite.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Benchmark"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}