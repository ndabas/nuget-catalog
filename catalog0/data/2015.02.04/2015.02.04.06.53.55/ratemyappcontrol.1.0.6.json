{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.06.53.55/ratemyappcontrol.1.0.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "martin esmann",
  "catalog:commitId": "e97becc0-dd58-4e30-a377-4a2b11e19559",
  "catalog:commitTimeStamp": "2015-02-04T06:53:55.4708378Z",
  "copyright": "martin esmann",
  "created": "2013-12-02T07:26:36.273Z",
  "description": "Rate My Application Control is an easy to use app reminder control for windows phone and windows store.",
  "id": "RateMyAppControl",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MS-PL",
  "packageHash": "VmSI9QjSqEuMV4dprcX7Z+9MXux7jLIwpAiIwBuiBmb6aaNa53ddsH/pwUpKZnFAlg0VUmlilZaF5fahW2/i5Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 54292,
  "published": "2013-12-02T07:26:36.273Z",
  "releaseNotes": "how to use the Control\n\nWindows Store - Code snippet:\n\n  protected override void OnLaunched(LaunchActivatedEventArgs e)\n        {\n   .\n   .\n   .\n   .\n   .\n   .\n            // Ensure the current window is active\n            Window.Current.Activate();\n        \n   RateMyApp.WS.Core.RateMyAppControl control = new RateMyApp.WS.Core.RateMyAppControl();\n            \n   // auto language (english only, more languages to come later)\n            control.Start(false,\"8fb5ebf0-3ba8-4d68-9f2a-7154d8c0ac6a_70rq6xpyaxwzy\",null);\n\n            // debug = true + 'Debug build' => \n            // Review will apear after 10 sec. regardless of previous state \n            // Callback: this metod is called everytime the Control changes \"review\" state.\n            // Exposure Pattern: in this sample the Rate control will be shown \n            // the first 6 times that app has been used for more than 10 sec. \n            // or until the review has been completed. \n            control.Start(true, \"8fb5ebf0-........-yaxwzy\", new RateMyApp.Core.Rate.RateControlLanguagePack\n            {\n                RateMyAppCancelText = \"No\",\n                RateMyAppFeedbackEmail = \"my-app@email.com\",\n                RateMyAppHeader = \"Header\",\n                RateMyAppText = \"text body\",\n                RateMyAppThridOptionText = \"Send feedback by e-mail\",\n                RateMyAppYesText = \"yes\"\n            }, null, new int[] { 1, 2, 3, 4, 5, 6 });\n  }\n\nWindows Phone - Code snippet:\n\n  private void Application_Launching(object sender, LaunchingEventArgs e)\n        {\n            RateMyApp.WP.Core.RateMyAppControl control = new RateMyApp.WP.Core.RateMyAppControl();\n\n            // debug = true + 'Debug build' => \n            // Review will apear after 10 sec. regardless of previous state \n            // Callback: this metod is called everytime the Control changes \"review\" state.\n            // Exposure Pattern: in this sample the Rate control will be shown \n            // the first 6 times that app has been used for more than 10 sec. \n            // or until the review has been completed. \n            control.Start(true, new RateMyApp.Core.Rate.RateControlLanguagePack { \n                RateMyAppCancelText=\"No\",\n                RateMyAppFeedbackEmail = \"not implemented on WP yet\",\n                RateMyAppHeader=\"Header\",\n                RateMyAppText=\"text body\",\n                RateMyAppThridOptionText = \"not implemented on WP yet\",\n                RateMyAppYesText=\"yes\"\n            },null, new int[]{1,2,3,4,5,6});\n        }",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "RateMyApp",
  "version": "1.0.6",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}