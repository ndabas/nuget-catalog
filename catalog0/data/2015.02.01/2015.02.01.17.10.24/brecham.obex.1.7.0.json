{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.17.10.24/brecham.obex.1.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Andy Hume",
  "catalog:commitId": "5d9df7e5-302a-4721-bf36-30ed9a63b25c",
  "catalog:commitTimeStamp": "2015-02-01T17:10:24.091533Z",
  "copyright": "Copyright © Andy Hume",
  "created": "2012-03-14T09:54:23.55Z",
  "description": "The library provides very broad client-side OBEX support, providing not just the ‘Put’ operation that most libraries and applications support, but also the complete set of operations: Connect, Put, Get, SetPath, Delete, and Abort. This is accessed through a session based interface. All errors communicating to the peer OBEX server are exposed to the calling application. \nAs well as the ‘on-the-wire’ protocol support there is also broad support for the objects defined in the OBEX specification, for instance the Folder Listing XML documents as used by the Folder-Browsing service. A full parser, returning an array of folder and file objects, is included",
  "id": "Brecham.Obex",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "cbN/sXE26NYGOmODXEBBRyiuKnxRT/TG3yAFHYkAS4ZkCTtDRakA0AyEidN6WPISNRzI6tLWBFtPAX7SSfHpsA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 129183,
  "projectUrl": "http://inthehand.co.uk/forums/72.aspx",
  "published": "2012-03-14T09:54:23.55Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "version": "1.7.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}