{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "equadrat",
  "catalog:commitId": "29f9631b-9e4f-47a6-87a9-09b36d03992d",
  "catalog:commitTimeStamp": "2024-02-16T09:53:29.6663535Z",
  "created": "2023-02-16T09:50:03.887Z",
  "description": "The framework core part.",
  "iconFile": "images\\equadrat.Framework.Icon.png",
  "iconUrl": "https://www.equadrat.net/wp-content/uploads/equadrat.Framework.Icon.png",
  "id": "equadrat.Framework.Core.Logging.Microsoft.AppInsights",
  "isPrerelease": false,
  "lastEdited": "2024-02-16T09:53:28.94Z",
  "licenseFile": "equadrat.Framework.Core.License.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": false,
  "packageHash": "gwdxL3wvqjfOuRSsxc/GdjtyfUTKWjAczBsQmQnb/3OJktl/RqohciQ77nPnrIk3K8Dq58FCu4b+CSlC/TJBLA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 67596,
  "projectUrl": "https://www.equadrat.net/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "====\nv5.8.6\n====\n- Extended ICoreTokenFactory, ICoreTaskFactory, ICoreTaskQueue and ICoreDispatcher to support ValueTask.\n- Extended ICoreLockFactory to support CoreSemaphore as an alternative to the .net Semaphore[Slim] to support FIFO and LIFO and a configurable MaxCount.\n- Fixed bug in CoreServiceProviderFactory (Microsoft.Extensions.DependencyInjection) when registering transient implementation factories.\n- Improved filtering of duplicate service descriptors when using CoreServiceProviderFactory (Microsoft.Extensions.DependencyInjection).\n====\nv5.8.5\n====\n- Added async overloads for write methods to ICoreHashProcessor and ICoreHashContinuousProcessor.\n- Added ICoreLoggingCategoryNameSubstitutionRegistry to be registered by CoreMicrosoftExtensionsLoggingBootstrapperModule. Can be used to register substitutions BEFORE any app/host builder is created.\n- CoreMicrosoftExtensionsLoggingTarget will output the event name by default. Set CoreMicrosoftExtensionsLoggingTarget.OutputEventName = false to output the event specific content only.\n====\nv5.8.4\n====\n- Added value converters for Thickness values (WPF, Xamarin.Forms, MAUI, Avalonia UI).\n- Added ICoreIndexOfRange and ICoreLastIndexOfRange.\n- Added LastIndexOf to ICoreList and ICoreReadOnlyList.\n- Extended collection factory to create CoreRelay[ReadOnly]List with support for the range versions of (last-)index-of.\n- Added a parameter to ICoreLockFactory.CreateExclusiveLock to create a lock with thread-affinity.\n- Added optional parameter to specify the flush interval for CoreLoggingTextFileTarget. That interval represents the max. time until the logging data gets persisted on disk even when the buffer is not full.\n- Removed the DebuggerStepThrough attribute from all classes/structs.\n====\nv5.8.3\n====\n- Fixed broken NuGet package release.\n====\nv5.8.2\n====\n- Changed priority of detected constructors for IOC to try using the constructor with most possible parameters resolvable by IOC. Order: 1. DI-constructor y/n, 2. #parameters, 3. public constructor, 4. internal constructor\n- Added logging target to route Core logging events to Microsoft.Extensions.Logging.\n====\nv5.8.1\n====\n- Changed default value of ICoreTaskSchedulerBase.Register waitOnDispose parameter to false to let the registered tasks behave as before.\n- Added CoreTaskCancelledException to allow task scheduler tasks to cancel/unregister themselves.\n- Added ICoreLoggingCategoryNameSubstitutionRegistry to substitute Microsoft.Extensions.Logging category names with product names for Core logging.\n====\nv5.8\n====\n- Aligned the logging levels with Microsoft.Extensions.Logging. Added: Trace, Critical and None.\n- Added product specific logging level filters which are used the the logging products/events.\n- Added project Microsoft.Extensions.Configuration to provide CoreAppSettingsLoggingLevelFilter to use the logging section in appsettings file to configure the logging verbosity.\n- Aligned ICoreTaskSchedulerBase.Register parameter names. Some overloads used customThreadPool instead of threadPool.\n- Added waitOnDispose parameter for ICoreTaskSchedulerBase.Register. By default it is true. Will wait for the timer to complete execution when executed while unregistering the timer token.\n- Added overload on ICoreTokenFactory to create dispose tokens without instance.\n- Added maxFileSize parameter to CoreLoggingTextFileTarget.\n- Added factory methods for CoreLoggingTextFileTarget.\n====\nv5.7\n====\n- Renamed package to equadrat.Framework.Core (removed the major version from the name).\n- Refactored ICoreEventImplementationProperty to use the more precise name EventImplementation.\n- Added support for weak events to ICoreCollectionFactory.CreateObservableCollection.\n====\nv5.6.4\n====\n- Implemented CoreEventHandlerInterruptRegistry and CoreEventFactory as more generic solutions to replace CoreNotifyCollectionChangedHandler and CoreWeakEventFactory.\n- Refactored all usings of ICoreNotifyCollectionChangedHandler to use ICoreEventHandlerInterruptRegistry instead.\n- Refactored all usings of ICoreWeakEventFactory to use ICoreEventFactory instead.\n- ICoreNotifyCollectionChangedHandler is now obsolete and will be removed in a future release.\n- ICoreWeakEventFactory is now obsolete and will be removed in a future release.\n====\nv5.6.3\n====\n- Added support to attach or replace Microsoft.Extensions.Logging.\n- Added extension methods for ICoreBootstrapperModuleRegistry to register well-known bootstrapper modules.\n- Improved hash algorithm of EqualityComparers for ICoreTuple to reduce hash collisions.\n- Fixed bug in CoreSharedWaitHandle when a \"fixed\" wait handle was reused for other shared wait handles.\n====\nv5.6.2\n====\n- Added Microsoft.Extensions.AspNetCore.App project to support ASP.net Core (WebApplication|Builder).\n- Cleaned NuGet package tags.\n====\nv5.6.1\n====\n- Added Microsoft.Extensions.AspNetCore.WebAssembly to support Microsoft.AspNetCore.Components.WebAssembly (Blazor).\n====\nv5.6\n====\n- Added support for IOC scopes.\n- Added support for IServiceScopeFactory (Microsoft.Extensions.DependencyInjection).\n- Breaking changes in ICoreIOCInstanceProvider to be more aligned with ICoreIOCFactory.\n- Breaking changes in eCoreIOCMappingFilter, eCoreIOCNameResolving and eCoreIOCRouteMode due to new IOC scopes.\n====\nv5.5.3\n====\n- Added .net 7 support.\n====\nv5.5.2\n====\n- Refactored ICoreCommand and ICoreCommandFactory to provide stateful and stateless commands.\n====\nv5.5.1\n====\n- Added ICoreDedicatedLoggingContext and registered as InstancePerCall to IOC.\n- Added logging target for Serilog.\n- Added adapter for Microsoft.Extensions.DependencyInjection.\n- Added multi-constructor support for IOC.\n- Added default generic registration for IEnumerable<> to represent the registered instances of the specified type and derived types.\n====\nv5.5\n====\n- Removed ThemeResourceDictionary.\n- Simplified SharedResourceDictionary.\n====\nv5.4.7\n====\n- Updated NLog version.\n====\nv5.4.6\n====\n- Added ICoreLoggingEvent.IfEnabled property to shorten logging statements when checking whether the event is enabled by using null conditional operator (?).\n====\nv5.4.5\n====\n- Extended ICoreDispatcherScheduler and ICoreTaskSchedulerBase to support async callbacks.\n- Extended CoreAsync[Reusable]RelayTask to support async callbacks.\n- Refactored CoreUIDispatcher implementations to share more code in base classes.\n- Fixed bug in Core[XamarinForms|Maui]Dispatcher to reschedule the dispatcher processing when reaching the max-processing time.\n====\nv5.4.4\n====\n- Moved the .net MAUI AppBuilder extension methods to a separate assembly (equadrat.Framework.5.Core.UI.Maui.AppBuilder).\n- Refactored FilterNullValueConverter to use [Dependency|Bindable|Avalonia]Property.Unset value as default replacement.\n- Added FirstSetValueConverter which behaves similar to the PriorityBinding in WPF.\n- Added Relay[Multi]ValueConverter which can be used to combine static resource value converters.\n- Added FilterUnsetValueConverter to replace the [Dependency|Bindable|Avalonia]Property.Unset value by a custom replacement.\n- Added DurationToTimeSpanConverter for WPF.\n- Extended PassthroughValueConverter to consider the converter parameter as Trace.Category if nothing else is defined.\n- Added AutoDataTemplateSelector and RelayDataTemplate for Avalonia UI.\n- Added PropertySetterBehavior to set a property of a target object. This behavior can construct bindings from the specified parameters.\n- Added BooleanSwitchPropertySetterBehavior to set a property of a target object based on a true/false switch. Works similar as PropertySetterBehavior.\n- Added VisualTreeMemberHelperBehavior for Xamarin.Forms to track whether an element is part of the visual tree or not.\n- Added ZOrderBehavior for Xamarin.Forms to order the children of a panel by an attached ZIndex property.\n- Added ContentControl for Xamarin.Forms and .net MAUI.\n- Added ItemsControl for Xamarin.Forms and .net MAUI.\n- Added ContentSizeLimiter for Xamarin.Forms to have a similar functionality to [Min|Max][Width|Height] of Grid[Column|Row]Definition on other UI frameworks.\n- Added CoreListWrapper to wrap IList<T> as ICoreList<T>.\n- Added extension methods for DependencyObject (WPF), BindableObject (Xamarin.Forms, .net MAUI), IAvaloniaObject (Avalonia UI).\n====\nv5.4.3\n====\n- Refactored MultiValueConverter to make targetType check optional.\n====\nv5.4.2\n====\n- Refactored ValueConverter to make targetType check optional.\n- Added DoubleToGridLengthConverter.\n- Added BooleanToVisibilityConverter and made BooleanVisibilityConverter obsolete.\n====\nv5.4.1\n====\n- Added WPF CollectionView support when using CoreObservableCollection (custom NotifyCollectionChangedHandler required).\n- Fixed BooleanVisibilityConverter, ValueConverterChain, PassthroughValueConverter to use the proper base class.\n====\nv5.4\n====\n- Added TryRunSync methods to ICoreDispatcher and ICoreTaskQueue. Calls will not be dispatched if the caller is sync to the dispatcher/task queue and will be run synchronously instead.\n- Extended ICoreCommandFactory to provide a name for the command (optional, null by default) which will be used in ToString instead of the type name. Added a switch to enforce validation on command initialization (optional, false by default).\n- Extended ICoreCommand to provide AwaitValidation[Async] methods to await a pending validation.\n- Extended CoreSharedWaitHandle to provide WaitAsync methods.\n====\nv5.3.7\n====\n- Compatibility release.\n- Added more value converters.\n- Added .net MAUI projects again.\n- Added extension method to use bootstrapper modules for .net MAUI projects.\n====\nv5.3.6\n====\n- Removed XmlNamespaces from Xamarin.Forms projects.\n- Removed .net MAUI projects (for now).\n====\nv5.3.5\n====\n- Fixed missing interface on ValueConverterChain.\n- Added namespace aliases for .net MAUI.\n====\nv5.3.4\n====\n- Added support for Avalonia UI.\n- Added support for .net MAUI.\n- Added value converters.\n- Added value converter wrappers for WPF, Xamarin.Forms, Avalonia UI and .net MAUI.\n- Added behavior base classes and helpers for WPF, Xamarin.Forms, Avalonia UI and .net MAUI.\n- Added extension method CreateInstance(...) for System.Type to use System.Activator to create an instance of that type.\n- Added extension method GetDefaultValue() for System.Type to get the default value for that type.\n- Added eCoreDispatcherPriority.Layout as an extra priority below DataBind but above Render.\n- Extended ICoreDispatcher.VerifyAccess to throw an exception if the current thread is not sync to the dispatcher.\n- Added CoreCrossThreadCallException.\n====\nv5.3.3\n====\n- Added SharedResourceDictionary and ThemeResourceDictionary to improve memory usage and performance of WPF resource dictionaries.\n- Added AutoDataTemplateSelector, RelayDataTemplate and AutoStyleSelector for WPF to have type based selectors.\n- Fixed ObjectDisposedException in CoreLicenseOperator which occured sometimes when using .net Framework 4.* x86 runtime.\n====\nv5.3.2\n====\n- Extended ICoreCollectionObserverFactory.CreateCollectionMerger to support a minimum merge level and a custom filter (by level/item type) to have more control when merging collection trees.\n====\nv5.3.1\n====\n- Added ICoreExpressionHelper.ConvertToStaticInvokeExpressionExt to support custom delegates.\n====\nv5.3.0\n====\n- Added coalesce modes for dispatcher signals: 'Unique', 'Sequence', 'UniqueAndLast'. 'Unique' represents the previously existing behavior when using coalescing for dispatcher signals.\n====\nv5.2.13\n====\n- Added operator to create, sign and validate licenses.\n====\nv5.2.12\n====\n- Added support for generic type definitions to IOC.\n====\nv5.2.11\n====\n- Reverted changes of release v5.2.10.\n====\nv5.2.10\n====\n- Broken release.\n====\nv5.2.9\n====\n- Extended ICoreOwnerToken to support IAsyncDisposable.\n- Extended ICoreTokenFactory to support creating IAsyncDisposable tokens.\n- Extended ICoreInstancePoolFactory to support IAsyncDisposable instances.\n- Removed class/IDisposable restrictions from ICoreInstanceFactory and ICoreInstancePoolFactory.\n- Added extension methods to support IAsyncEnumerable - should work now as expected.\n====\nv5.2.8\n====\n- Removed helper extension methods for IAsyncEnumerable - didn't work as expected.\n====\nv5.2.7\n====\n- Fixed bug in CoreLoggingTextFileTarget to not delete all log files when NOT specifying maxBackupFiles.\n- Fixed misleading exception messages when creating an IOC registration for an already existing registration.\n- Added helper extension methods for IAsyncEnumerable.\n- Added NCObject.Null to be used as placeholder in position based calls to not have the need to use object null.\n- Added route for ICoreRandomDataGenerator to ICoreRandomDataProvider.\n====\nv5.2.6\n====\n- Fixed bug in CoreIOCInstanceFactory to support multi-threaded access on first call of CreateInstance.\n====\nv5.2.5\n====\n- Extended ICoreSerializer to support encodings (if supported by the underlying serializer).\n- Added default instance pool for ICoreStreamWriter to have a shared pool of StringBuilder/TextWriter instances.\n- Fixed bug when CoreXmlClassicSerializer wrote encoding detection marks to the stream.\n====\nv5.2.4\n====\n- Extended ICoreIOCFactory to support creating instance factories for custom types.\n====\nv5.2.3\n====\n- Added bootstrapper module (interface) for the native libraries loader.\n- Added support for implicit bootstrapper module interface types. (CoreImplicitBootstrapperModuleInterfaceAttribute)\n====\nv5.2.2\n====\n- Added loader for native libraries (Windows only).\n====\nv5.2.1\n====\n- Added [Try]ResolveRegistration methods to ICoreIOCFactory.\n====\nv5.2.0\n====\n- Refactored exceptions.\n====\nv5.1.15\n====\n- Extended ICoreTaskQueue to provide methods to wait for activity/idle state.\n====\nv5.1.14\n====\n- Added Xamarin.Forms IDispatcher relay to IOC.\n- Added base classes for value converters.\n====\nv5.1.13\n====\n- Fixed target frameworks of equadrat.Framework.5.Core.UI.Xamarin.Forms.\n====\nv5.1.12\n====\n- Added support for ICoreIOCInstanceFactory<> and ICoreInstanceFactory<> to IOC parameter resolving.\n- Added UI dispatcher for Xamarin.Forms.\n- Added support for Xamarin.Forms dependency injection.\n====\nv5.1.11\n====\n- Added ICoreLoggingContext.GetAttachedLoggingTargets[Of] to get a list of the attached logging targets.\n- Added Roles to LoggingTargets.\n- Extended ICoreBootstrapperDependencyTracker to skip specific register/initialization methods of the current and/or other modules.\n- Extended CoreBootstrapperModule to support auto detection of register/initialization methods.\n====\nv5.1.10\n====\n- Added symbol packages.\n====\nv5.1.9\n====\n- Added CoreDispatcherRelayFactory.\n- Extended CoreFrameworkBootstrapperModule behavior when registering the default dispatcher(s) to use the registered dispatcher (UI/thread) as a fallback dispatcher for a missing dispatcher type (UI/thread) registration.\n====\nv5.1.8\n====\n- Extended CoreBsonNewtonsoftSerializer, CoreJsonNewtonsoftSerializer and CoreProtobufSerialzer to support implicitly referenced known/included types.\n====\nv5.1.7\n====\n- Added ICoreReflectionHelper.GetGenericTypeArguments.\n====\nv5.1.6\n====\n- Fixed CoreNLogTarget to support NLog 5.*\n====\nv5.1.5\n====\n- Minor change to the constructor of CoreLoggingTextFileTarget.\n====\nv5.1.4\n====\n- Added logging target for Application Insights.\n- Fixed bug in CoreLoggingAsyncTarget to ensure the correct calling order of PrepareAsync and CleanupAsync.\n====\nv5.1.3\n====\n- Changed default vaule of setStaticIocResolver parameter (CoreMicrosoftExtensionsHostBuilderHelper.UseBootstrapper) from true to false.\n- CoreIOCHelper.SetResolver checks for ICoreTokenFactory as an optional component.\n- Fixed bug in CoreLoggingContext.Append to check IsEnabled of product and event.\n====\nv5.1.2\n====\n- Added parameterless ICoreTokenFactory.CreateDummyToken.\n====\nv5.1.1\n====\n- Added CoreAutofacExtensions to create Autofac modules to easily integrate the core framework in projects using Autofac.\n====\nv5.1.0\n====\n- Added CoreFrameworkBootstrapperModule.\n- Added CoreBsonNewtonsoftSerializerBootstrapperModule.\n- Added CoreJsonNewtonsoftSerializerBootstrapperModule.\n- Added CoreProtobufSerializerBootstrapperModule.\n- Added CoreNLogBootstrapperModule.\n- Added CoreWpfBootstrapperModule.\n- Removed almost all default registrations from CoreIOCRegistry.\n====\nv5.0.8\n====\n- Fixed bug in CoreExclusiveDebugLockSlim to work properly with the TPL but still support recursive lock detection.\n====\nv5.0.7\n====\n- Fixed bug in bootstrapper. The configuration methods were not called when there was a single registered module only.\n====\nv5.0.6\n====\n- Added Asp.net Core OpenApi support.\n====\nv5.0.5\n====\n- Added logging target for NLog.\n====\nv5.0.4\n====\n- Improved the bootstrapper module handling to preserve the implicit order of depending modules.\n====\nv5.0.3\n====\n- Fixed load order in equadrat.Framework.5.Core.Microsoft.Extensions.Hosting to run the bootstrapper before initializing the web host.\n- Added equadrat.Framework.5.Core.Microsoft.Extensions.AspNetCore.Mvc to integrate custom serializers for ASP.net Core.\n====\nv5.0.2\n====\n- Added equadrat.Framework.5.Core.Microsoft.Extensions.Hosting to use the equadrat Framework IOC with the Microsoft hosting extensions.\n====\nv5.0.1\n====\n- Hotfix to include the correct license for NuGet.\n====\nv5.0.0\n====\n- Initial Release",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "5.8.6",
  "version": "5.8.6",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.0/equadrat.framework.core.interfaces",
          "@type": "PackageDependency",
          "id": "equadrat.Framework.Core.Interfaces",
          "range": "[5.8.6, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.0/equadrat.framework.core",
          "@type": "PackageDependency",
          "id": "equadrat.Framework.Core",
          "range": "[5.8.6, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.0/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[2022.3.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.0/microsoft.applicationinsights",
          "@type": "PackageDependency",
          "id": "Microsoft.ApplicationInsights",
          "range": "[2.21.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.0/microsoft.bcl.asyncinterfaces",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.AsyncInterfaces",
          "range": "[7.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.1/equadrat.framework.core.interfaces",
          "@type": "PackageDependency",
          "id": "equadrat.Framework.Core.Interfaces",
          "range": "[5.8.6, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.1/equadrat.framework.core",
          "@type": "PackageDependency",
          "id": "equadrat.Framework.Core",
          "range": "[5.8.6, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.1/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[2022.3.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#dependencygroup/.netstandard2.1/microsoft.applicationinsights",
          "@type": "PackageDependency",
          "id": "Microsoft.ApplicationInsights",
          "range": "[2.21.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#equadrat.Framework.Core.Logging.Microsoft.AppInsights.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 6178,
      "fullName": "equadrat.Framework.Core.Logging.Microsoft.AppInsights.nuspec",
      "length": 19608,
      "name": "equadrat.Framework.Core.Logging.Microsoft.AppInsights.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#lib/netstandard2.0/equadrat.Framework.Core.Logging.Microsoft.AppInsights.dll",
      "@type": "PackageEntry",
      "compressedLength": 10435,
      "fullName": "lib/netstandard2.0/equadrat.Framework.Core.Logging.Microsoft.AppInsights.dll",
      "length": 24064,
      "name": "equadrat.Framework.Core.Logging.Microsoft.AppInsights.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#lib/netstandard2.0/equadrat.Framework.Core.Logging.Microsoft.AppInsights.xml",
      "@type": "PackageEntry",
      "compressedLength": 2291,
      "fullName": "lib/netstandard2.0/equadrat.Framework.Core.Logging.Microsoft.AppInsights.xml",
      "length": 23992,
      "name": "equadrat.Framework.Core.Logging.Microsoft.AppInsights.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#lib/netstandard2.1/equadrat.Framework.Core.Logging.Microsoft.AppInsights.dll",
      "@type": "PackageEntry",
      "compressedLength": 10441,
      "fullName": "lib/netstandard2.1/equadrat.Framework.Core.Logging.Microsoft.AppInsights.dll",
      "length": 24064,
      "name": "equadrat.Framework.Core.Logging.Microsoft.AppInsights.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#lib/netstandard2.1/equadrat.Framework.Core.Logging.Microsoft.AppInsights.xml",
      "@type": "PackageEntry",
      "compressedLength": 2291,
      "fullName": "lib/netstandard2.1/equadrat.Framework.Core.Logging.Microsoft.AppInsights.xml",
      "length": 23992,
      "name": "equadrat.Framework.Core.Logging.Microsoft.AppInsights.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#images/equadrat.Framework.Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 15249,
      "fullName": "images/equadrat.Framework.Icon.png",
      "length": 15280,
      "name": "equadrat.Framework.Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#equadrat.Framework.Core.License.md",
      "@type": "PackageEntry",
      "compressedLength": 459,
      "fullName": "equadrat.Framework.Core.License.md",
      "length": 936,
      "name": "equadrat.Framework.Core.License.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#equadrat.Framework.Core.ReleaseNotes.txt",
      "@type": "PackageEntry",
      "compressedLength": 5663,
      "fullName": "equadrat.Framework.Core.ReleaseNotes.txt",
      "length": 17946,
      "name": "equadrat.Framework.Core.ReleaseNotes.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.02.16.09.53.29/equadrat.framework.core.logging.microsoft.appinsights.5.8.6.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11512,
      "fullName": ".signature.p7s",
      "length": 11512,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "equadrat",
    "framework",
    "core",
    "logging",
    "appinsights"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}