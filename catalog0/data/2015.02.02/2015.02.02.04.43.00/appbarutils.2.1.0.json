{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.04.43.00/appbarutils.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Allen Lee",
  "catalog:commitId": "0969a1ee-92b9-4550-bec5-0deb366a7efb",
  "catalog:commitTimeStamp": "2015-02-02T04:43:00.4774035Z",
  "copyright": "",
  "created": "2012-09-25T00:35:53.063Z",
  "description": "AppBarUtils provides out-of-box application bar behaviors/triggers/actions for Windows Phone SDK 7.1 or higher.",
  "id": "AppBarUtils",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://appbarutils.codeplex.com/license",
  "packageHash": "VsRJLCFXrdnWJVuAYC/z0IkLATrrU3ys9i+u5G3uNS5EVdnOFdxG2nSZKRPoJrqTrXxPih11unUOglcsJUU1NA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 12722,
  "projectUrl": "http://appbarutils.codeplex.com/",
  "published": "2012-09-25T00:35:53.063Z",
  "releaseNotes": "This release includes a StateChangedTrigger for defining multiple app bars within a page where different state shows different app bar. An examples is the built-in email page where there're two different app bars for both reading and selecting items.\n\nThe State property of StateChangedTrigger can be bound to int, bool, enum, or string property of a view model class. false and true will be interpreted as 0 and 1 respectively. int and enum will be used as int (conversion will be performed for enum). String will be parsed as int. The result will be used for SwitchAppBarAction to find the corresponding app bar.\n\nFor navigation actions, please try the WPUtils instead which also contains many other useful behaviors, such as ChoosePhotoBehavior and PinToStartAction, and so on.",
  "requireLicenseAcceptance": true,
  "summary": "",
  "title": "AppBarUtils",
  "version": "2.1.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}