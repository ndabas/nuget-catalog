{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Paul Kolozsvari",
  "catalog:commitId": "29a13197-a8e1-47f1-9d0b-7af200230bcc",
  "catalog:commitTimeStamp": "2023-08-24T08:44:22.8365462Z",
  "created": "2023-08-24T08:41:04.513Z",
  "description": ".NET Toolkits (class libraries) containing reusable code for speeding up development of any .NET applications.\n\t\tNKit.Standard is the .NET Standard compatible version of NKit.\n\t\tNKit.Windows is the .NET Framework compatbile version of NKit.\n\t\tNKit.Core is the latest .NET Core compatible version of NKit.",
  "frameworkReferences": "",
  "id": "NKit.Core",
  "isPrerelease": false,
  "lastEdited": "2023-08-24T08:44:08.143Z",
  "listed": true,
  "packageHash": "vZtQwMvLbV7k+D4WHzSm4C4auLc7p1Lfbc6ecGd8TKzjbMOdkkPSN5biShSW1tpZRzxDWfU3CzCuIXPMlmNkoA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 90780,
  "projectUrl": "https://github.com/PaulKolozsvari/NKit",
  "published": "2023-08-24T08:41:04.513Z",
  "releaseNotes": "*   2022-04-22:\n\n\t\t-   Fixed the SqliteDatabaseWindows.TableExistsInDatabase to check if the reader is not null before reading.\n\t\t-   Fixed the DatabaseWindows.GetTablesMentionedInQuery to return an empty list instead of throwing an exception.\n\n\t\t*   2022-04-03:\n\n\t\t-   Added overloads for NKitMvcController to allow reading parent and second parent surrogate keys without startDate and endDate.\n\n\t\t*   2022-05-12:\n\n\t\t-   Implemented option on the NKitMvcController to select whether or not to filter by the date range and on the FilterModel etc.\n\n\t\t*   2022-05-14:\n\n\t\t-   Implemented SqlTableExists in LinqEntityContextWindows.\n\t\t-   Implemneted stubs in LinqEntityContextWindows for logging messages, actions and exceptions. These methods need to be implemented by sub classes.\n\n\t\t*   2022-05-15:\n\t\t-   Implemented ViewModels, CsvModels, data queries for grid and paging in the NKitDbContext and a controller for NKitLogEntry models.\n\n\t\t*   2022-05-23:\n\t\t-   Implemented NKitLoggingManager which is a wrapper around an ILogger and also logs to the database.\n\n\t\t*   2022-05-31:\n\t\t-   Implemented minor fixes across multiple utilities.\n\t\t-   Fixed the GetEntitiesByField in the NKitDbContext which was making a call to a method via reflection and using the wrong signature.\n\n\t\t*   2022-06-03:\n\t\t-   Implemented fix for DataValidator where the ValidateGuidNotEmpty method was not set to static.\n\n\t\t*   2022-08-08:\n\t\t-   Changed the Windows Exception Handler to allow providing a parameter to override the global setting for GOC.Instance.ShowMessageBoxOnException i.e. even if the global settings is set to false,\n\t\tit can be overridden for a specific call to the ExceptionHandler to display an exception with a message box.\n\n\t\t*   2022-09-01:\n\t\t-   Added indexers to all EntityCaches and including integer based indexers on the generic entity cache where a dictionary is used.\n\n\t\t*   2022-09-09:\n\t\t-   Implemented a cancel feature on the Wcf rest service on the before put and before post action methods to allow the subscribers to the event to cancel the put or post.\n\n\t\t*   2022-09-13:\n\t\t-   Fixed issue where the .NET Core project was referencing the Windows project which it shouldn't have been.\n\n\t\t*   2022-09-18:\n\t\t-   Changed the EntityReader ConvertValueTypeTo method to check if the input value is a string and null or empty. If it is, it returns the default\n\t\tvalue type of the type that it needs to convert to.\n\n\t\t*   2022-10-15:\n\t\t-   Upgraded Newtonsoft.Json from version 12 to 13.\n\t\t-   Added an extra property SecondOther to the ConfirmationModel.\n\n\t\t*   2022-10-18:\n\n\t\t-   Added MVC extension method for querying the application's version from the main assembly.\n\n\t\t*   2022-11-08:\n\t\t-   Changed the NKit EmailClient to not send emails if there are no To email recipients specified on the call.\n\n\t\t*   2022-11-30:\n\n\t\t-   Added extra overloads to the GetConfirmationModelFromSearchParametersString in the NKitMvcController to be able to pull other fields from searcg strings.\n\t\t-   Added extra third parent fields to the ConfirmationDialog.\n\t\t-   Added extra ConvertEmptyGuidToNull overload to allow converting a string that contains an empty GUID to null.\n\n\t\t*   2022-12-02:\n\n\t\t-   Fixed the GenerateSimplePassword in DataShaperWindows which was not using the correct password length parameter.\n\t\t-   Fixed the GenerateSimplePassword in DataShaperWindows to not append special characters if it's set to 0.\n\n\t\t*   2022-12-06:\n\n\t\t-   Added method in DataShaper to replace new lines in text.\n\n\t\t*   2022-12-14:\n\n\t\t-   Added method ParseEmailAddressesFromText to DataShaperWindows and DataShaperCore to read email addresses from an input text.\n\t\t-   Added method ParsePhoneNumbersFromText to DataShaperWindows and DataShaperCore to read phone numbers from an input text.\n\t\t-   Added method GetCsvOfStringList to DataShaperWindows and DataShaperCore to convert a list of strings to a single CSV string.\n\n\t\t*   2022-12-17:\n\t\t-   Changed the AppSingletonWindows.InitializeLogger to initialize both the GOCWindows.Instance.Logger as well as the GOC.Instance.Logger\n\t\tin order to apply the settings to both loggers depending on whether users are using GOC or GOCWindows.\n\n\t\t*   2022-12-19:\n\t\t-   Fixed the DataShaper.ParsePhoneNumbersFromText to split text by commas instead of spaces.\n\t\t-   Fixed the DataShaper.ParseEmailAddressesFromText to not include duplicate email addresses.\n\n\t\t*   2022-12-20:\n\t\t-   Fixed issue with PhoneNumberValidator.GetConsecutiveCharsInPhoneNumberStr to cater for phone numbers that are less than 10 or 11 characters long.\n\n\t\t*   2022-12-21:\n\t\t-   Added methods GngetAppVersionNumbersFromString and IsAppVersionGreaterThan to the DataShaper to extract the integer values out of an app version string\n\t\tas well be able to compare two version strings. For method IsAppVersionGreaterThan: major, minor, build and revision of the versionString need to be greater\n\t\tthan those of versionStringToCompare to in order for the result to be true.\n\n\t\t*   2023-01-13:\n\t\t-   Changed the LinqEntityContextWindows and settings file classes to allow for configuring of whether basic CRUD operations should run under transactions or not.\n\t\tAdded setting UseTransactionsOnCrudOperations on the Database settings for this configuration.\n\n\t\t*   2023-01-19:\n\t\t-   Added IdentifierInt and IdentifierString on the ConfirmationDialog for entities that have string and integer surrogate keys.\n\t\t-   Added GetCsvFileResult to NKitControllerWindows to allow converting an entity cache with integer surrogate keys to a csv file.\n\n\t\t*   2023-04-10:\n\t\t-   Added overload to GetConfirmationModelFromSearchParametersString to parse thirdParentId.\n\n\t\t*   2023-05-11:\n\t\t-   Added methods to DataShaper class to shape URL with or without an http or https prefix.\n\n\t\t*   2023-06-12:\n\t\t-   Added AppendHttpsPrefixToUrl to shape URL with or without an http or https prefix.\n\n\t\t*   2023-07-10:\n\t\t-   Fixed the EntityCache to do a null check if a en entity is null and if so it must exclude it from searching through it.\n\n\t\t*   2023-07-20:\n\t\t-   Fixed the SqliteDatabaseTableWindows.AddColumnsByEntityType to exclude any properties for which it cannot find an equivalent Sqlite type.\n\t\t-   Fixed the ParseReaderToEntities method of Sqlite to check if the type is DateTime and if it is it will pull the string out of the reader and then convert to DateTime.\n\t\t-   Fixed the SqliteDatabaseTableWindows.Query method to convert the a Guid value to query by to a string because Sqlite cannot query by guid or uniqueidentifier, it will query those columns by a string.\n\n\t\t*   2023-07-22:\n\t\t-   Added SqliteEntityContext, SqliteSettings and SqliteIndexer classes to perform basic CRUD operations on a Sqlite database based on entities.\n\n\t\t*   2023-07-23:\n\t\t-   Added DateTimeHelper class in the standard library to try convert a a string to a DateTime based on a list of different date time formats.\n\t\t-   Changed the DataHelperWindows.ParseReaderToEntities to use this DateTimeHelper to convert strings to DateTime.\n\t\t-   Changed the SqliteEntityContext CreateTable, DropTable and CreateIndexers to use an existing connection and transaction when running the SQL instead of creating a new connection and transaction every time.\n\t\t-   Added more descriptive error message on DataHelperWindows.ParseReaderToEntities when we cannot find a column for on a reader: $\"Could not find column {p.Name} for entity {entityType.Name} on reader.\"\n\n\t\t-   Changed the SqliteDatabaseTableColumnWindows to read from the schema whether a column is a primary key or not.\n\t\t-   Changed the SqliteDatabaseTableWindows to not call a sproc to determine whether columns are key or foreign keys.\n\t\t-   Changed the SqliteEntityContext to load a SqliteDatabaseWindows and populate the columns from the schema to compare against columns added by entities.\n\t\t-   Changed SqliteEntityContext to use the SqliteDatabaseTableWindows read from the schema before running CRUD queries to use the columns based on what exists in the database instead of properites from entities which may not exist in the database.\n\t\t-   Changed the SqliteDatabaseTableWindows to ignore properties that exist on the entity but don't exist in the database.\n\t\t-   Added Sqlite type \"integer\" to SqliteTypeConverterWindows because only \"int\" was understood previously.\n\n\t\t*   2023-07-24:\n\t\t-   Fixed the SqliteTypeConverterWindows to map uniqueidentifier and booleans to strings because Sqlite doesn't support those types.\n\t\t-   Fixed the DataHelperWindows.ParseReaderToEntities to not throw exception an exception if a column doesn't exist on the DataReader, instead it will ignore it.\n\t\t-   Fixed the SqliteEntityContext Update and Delete to not commit transactions. Instead the callers of the methods should commit the transaction.\n\t\t-   Fixed the SqliteDatabaseTableWindows Delete method convert Guid to strings when filtering by a column because Sqlite cannot query by a Guid or uniqueidentifier.\n\t\t-   Upgraded to System.Data.SQLite.Core package to 1.0.118 in the Windows version of NKit.\n\n\t\t*   2023-07-25:\n\t\t-   Changed the SqliteEntityContext allow for reseting the SqliteDatabaseWindows from the outside in case the database schema changes.\n\t\t-   Fixed the SqliteEntityContext to check if a database table exists running any CRUD queries on it because run SQL scripts on a table that doesn't exist.\n\t\t-   Changed Sqlite type \"binary\" to blob which is the correct type in Sqlite to store byte[].\n\n\t\t*   2023-07-26:\n\t\t-   Changed the SqliteDatabaseTableWindows to save datetime values to a a default string format (stored in SqliteTypeConverterWindows) to match Android apps with that format.\n\t\t-   Changed to set the TypeName of parameters to the DataType of a column instead of the DbType to the SqlDbType of the column.\n\n\t\t*   2023-07-29:\n\t\t-   Changed the SqliteDatabaseTableWindows to convert bool values to strings before saving or querying out of the Sqlite database.\n\t\t-   Changed the SqliteDatabaseTableWindows to convert char values to strings before saving or querying out of the Sqlite database.\n\n\t\t*   2023-07-30:\n\t\t-   Added method AddColumn to SqliteDatabaseTableWindows and SqlDatabaseTableWindows to be able tadd additional columns to a table that may not exist on an entity.\n\t\t-   Added option on CreateTable method of SqliteEntityContext to be able to specify additional columns that are not on the entity.\n\n\t\t*   2023-08-15:\n\t\t-   Upgraded System.Linq.Dynamic.Core to 1.3.4.\n\n\t\t*   2023-08-19:\n\t\t-   Extended lengths of NKitLogEntry and NKitHttpExceptionResponse string field to varchar max.\n\n\t\t*   2023-08-24:\n\t\t-   Removed the NKit.Windows.Standalone project as it's never used.\n\t\t-   Upgraded System.Drawing.Comming from 5.0.0 to 7.0.0 on NKit.Standard.",
  "repository": "",
  "verbatimVersion": "1.4.1",
  "version": "1.4.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/nkit.standard",
          "@type": "PackageDependency",
          "id": "NKit.Standard",
          "range": "[1.4.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/dapper",
          "@type": "PackageDependency",
          "id": "Dapper",
          "range": "[2.0.78, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/microsoft.aspnetcore.mvc.core",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Mvc.Core",
          "range": "[2.2.5, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/microsoft.data.sqlite",
          "@type": "PackageDependency",
          "id": "Microsoft.Data.Sqlite",
          "range": "[5.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/microsoft.entityframeworkcore",
          "@type": "PackageDependency",
          "id": "Microsoft.EntityFrameworkCore",
          "range": "[5.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/microsoft.entityframeworkcore.sqlserver",
          "@type": "PackageDependency",
          "id": "Microsoft.EntityFrameworkCore.SqlServer",
          "range": "[5.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/microsoft.entityframeworkcore.sqlite",
          "@type": "PackageDependency",
          "id": "Microsoft.EntityFrameworkCore.Sqlite",
          "range": "[5.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/system.linq.dynamic.core",
          "@type": "PackageDependency",
          "id": "System.Linq.Dynamic.Core",
          "range": "[1.3.4, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#dependencygroup/.netcoreapp3.1/system.security.cryptography.algorithms",
          "@type": "PackageDependency",
          "id": "System.Security.Cryptography.Algorithms",
          "range": "[4.3.1, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#NKit.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4270,
      "fullName": "NKit.Core.nuspec",
      "length": 12914,
      "name": "NKit.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#lib/netcoreapp3.1/NKit.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 58626,
      "fullName": "lib/netcoreapp3.1/NKit.Core.dll",
      "length": 161280,
      "name": "NKit.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#lib/netcoreapp3.1/NKit.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 14388,
      "fullName": "lib/netcoreapp3.1/NKit.Core.xml",
      "length": 159639,
      "name": "NKit.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.08.24.08.44.22/nkit.core.1.4.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11526,
      "fullName": ".signature.p7s",
      "length": 11526,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    ".NET",
    "Toolkit"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}