{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.11.30.12.03.41/dotnetbrowser.1.14.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "dab155c1-e261-4cb5-8b6a-cfc3e0292862",
  "catalog:commitTimeStamp": "2017-11-30T12:03:41.165827Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2017-11-30T11:58:08.66Z",
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2017-11-30T12:02:47.277Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "eXDNJDdiy0HslpVj6MZR4lnuF1cvKlQVgv1cJuE+l9u40PEzHTLr71i0OVpXxoeonaw9vMTAUalnt/M1lU0xqg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52816142,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2017-11-30T11:58:08.66Z",
  "releaseNotes": "With this DotNetBrowser update we focused on enhancements for browsing privacy, and HTML5 handling.\n\nIncognito Mode\nBy default, each Browser instance stores all user data such as history, cookies, cache on the disk. Starting from version 1.14 you can configure Browser to store all user data in memory (Chromium's \"Incognito\" mode), so that all user data will be cleared once your .NET application is terminated.\n\nThe following example demonstrates how to configure the Browser instance to work in \"Incognito\" mode and store all user data in memory: \nBrowserContextParams parameters = new BrowserContextParams(\"data-dir\")\n    { StorageType = StorageType.MEMORY };\nBrowserContext context = new BrowserContext(parameters);\nBrowser browser = BrowserFactory.Create(context);\n\nHTML5 Color Picker\nDotNetBrowser now supports HTML Input element with type=color and displays the default color chooser dialog where the user can select the required color. You can override this default behavior by registering your own DialogHandler implementation with overridden OnColorChooser() method where you can set the required color programmatically without displaying any UI dialogs. \n\nHere is the code for this: \ninternal class DefaultDialogHandler : WinFormsDefaultDialogHandler\n{\n    public DefaultDialogHandler(Control view) : base(view)\n    {\n    }\n\n    public override CloseStatus OnColorChooser(ColorChooserParams parameters)\n    {\n        parameters.Color = Color.Blue;\n        return CloseStatus.OK;\n    }\n}\n\nImprovements:\nIn this version we have improved performance of the JavaScript-.NET bridge, and of the DOM events processing.  \n\nFixed issues:\nAn internal compiler error resulting from compiling a C++/CLI application that references DotNetBrowser. This issue was caused by the obfuscator settings.\nA UI thread deadlock sometimes caused by scrolling the web page with the mouse wheel. This issue was reproducible in the heavyweight rendering mode.\nThe Chromium process crashing during filling in the credit card data on the payment web page.\nThe custom SSL certificates not recognized by the Chromium engine properly. This issue was reproducible if the certificate was never installed in the certificate storage.\nThe render process crash due to JavaScript context being destroyed. In the multithreaded environment, it was possible that the JavaScript context is destroyed after the check of its existence is performed and before making an actual JavaScript call. This led to unexpected crashes in Chromium render process.",
  "requireLicenseAcceptance": true,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser",
  "verbatimVersion": "1.14",
  "version": "1.14.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.11.30.12.03.41/dotnetbrowser.1.14.0.json#DotNetBrowser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1888,
      "fullName": "DotNetBrowser.nuspec",
      "length": 4215,
      "name": "DotNetBrowser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.11.30.12.03.41/dotnetbrowser.1.14.0.json#lib/DotNetBrowser.Chromium.dll",
      "@type": "PackageEntry",
      "compressedLength": 51580582,
      "fullName": "lib/DotNetBrowser.Chromium.dll",
      "length": 51678208,
      "name": "DotNetBrowser.Chromium.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.11.30.12.03.41/dotnetbrowser.1.14.0.json#lib/DotNetBrowser.dll",
      "@type": "PackageEntry",
      "compressedLength": 1138647,
      "fullName": "lib/DotNetBrowser.dll",
      "length": 2008064,
      "name": "DotNetBrowser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.11.30.12.03.41/dotnetbrowser.1.14.0.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 91745,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 742848,
      "name": "DotNetBrowser.xml"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}