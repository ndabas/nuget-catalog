{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "MLL",
  "catalog:commitId": "7c5f42ad-03e0-4926-b68e-231d4cc5e6fe",
  "catalog:commitTimeStamp": "2024-11-26T02:25:26.6174265Z",
  "copyright": "MLL",
  "created": "2024-11-26T01:16:09.183Z",
  "description": "基于MQTTNet二次开发的MQTTClient（MQTT客户端）\n\t\t***************************说明**************************************************\n\t\t1.0.2：\n\t\t去掉 Microsoft.Extensions.DependencyInjection 的依赖避免出现兼容性问题\n\t\t1.0.3\n\t\t解决多层继承前端无法获取到数据的问题\n\t\t1.0.4\n\t\t1、增加标识（int类型）使用多个MQTTClient时 使各个连接对象过滤掉不必要监听的主题\n\t\t2、基类中增加连接对象 可通过this.Client 直接调用\n\t\t3、增加 PublishBinary 发布函数\n\t\t4、增加 MpscChannel 信号通道 用来跨线程通讯\n\t\t1.0.5\n\t\t1、RouterAttribute 标识位放在最后一位\n\t\t2、MQTTNetClient InitMQTTClient 函数中增加MQTT版本选择 3.10 3.11 5.00\n\t\t\n\t\t\n\t\t********************************************************************************\n\t\t使用示例(示例所用为WorkService)：\n\t\t********************************************************************************\n\t\tProgram.cs\n\t\tusing example;\n\t\tusing MQTTNet.Client;\n\n\t\tvar builder = Host.CreateApplicationBuilder(args);\n\t\tvar service = builder.Services;\n\t\tservice.AddHostedService<Worker>();\nvar host = builder.Build();\nhost.Run();\n********************************************************************************\nWorker.cs\n\nusing MQTTNet.Client.Attributes;\nusing MQTTNet.Client.Model;\nusing MQTTNet.Client.Common;\nusing MQTTNet.Client.Enums;\n\nnamespace example\n{\n    public class Worker : BackgroundService\n    {\n        private readonly ILogger<Worker> _logger;\n\n        public Worker(ILogger<Worker> logger)\n\t\t{\n\t\t_logger = logger;\n\t\t}\n\t\tIMQTTNetClient client = null;\n\t\tprotected override async Task ExecuteAsync(CancellationToken stoppingToken)\n\t\t{\n\t\tIMQTTNetClient client = new MQTTNet.Client.MQTTNetClient(\"127.0.0.1\", 6688, UserName: \"admspay\", Password: \"admscarpays\", Identity: 2);\n\t\tif (await client.Connection())\n\t\t_logger.LogInformation(\"连接成功\");\n\t\tIMQTTNetClient clients = new MQTTNet.Client.MQTTNetClient(\"127.0.0.1\", 9900, UserName: \"\", Password: \"\",Identity: 0);\n\t\tawait clients.Connection();\n\t\t}\n\t\t}\n\t\tpublic class MQTTData : ReceivedModel {\n\t\t[Router(\"+/device/message/up/ivs_result\" ,_qos:QOSEnum.ExactlyOnce, _identity:0)]\n\t\tpublic async Task GetData(test resultR3)\n\t\t{\n\t\tif (resultR3 == null)\n\t\treturn;\n\t\tConsole.WriteLine($@\"a：{resultR3.ObjectToJson()}\");\n\t\tConsole.WriteLine($@\"主题：{this.Topic}\");\n\t\tConsole.WriteLine($@\"原始字符串：{this.Content}\");\n\t\tawait Task.CompletedTask;\n\t\t}\n\n\t\t[Router(\"+/Synchronous/VehicleRegist\", _qos: MQTTNet.Client.Enums.QOSEnum.ExactlyOnce,_identity: 2)]\n\t\tpublic async Task Env_VehicleRegistMQTT(ReceeivedProgramdata obj)\n        {\n           this.Client.Publish(obj.ReTopic, new\n            {\n                Tag = 0,\n                Message = \"123321\",\n                Description = string.Empty,\n                Total = 0\n                \n            }.ObjectToJson());\n        }\n\t\t}\n\t\tpublic class test\n\t\t{\n\t\tpublic Guid strc { get; set; }\n\t\tpublic string? strs { get; set; }\n\t\tpublic string? stra { get; set; }\n\t\tpublic List<test1> array { get; set; }\n    }\n}",
  "id": "MQTTNet.Client",
  "isPrerelease": false,
  "lastEdited": "2024-11-26T02:25:19.9Z",
  "listed": false,
  "packageHash": "+nNmZnZp9pizCzpn6k2AiQjw2ZqJKeRI8uSLejfXRzr400+3B7x4hCGRJByoaPXQav6s4zHSb/tBIxvZzFf+yg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37507,
  "projectUrl": "https://gitee.com/IThanfengxue/mqttnet-client.git",
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "verbatimVersion": "1.0.5",
  "version": "1.0.5",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json#dependencygroup/.netstandard2.1/mqttnet",
          "@type": "PackageDependency",
          "id": "MQTTnet",
          "range": "[4.3.7.1207, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json#dependencygroup/.netstandard2.1/system.text.json",
          "@type": "PackageDependency",
          "id": "System.Text.Json",
          "range": "[8.0.5, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json#MQTTNet.Client.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1809,
      "fullName": "MQTTNet.Client.nuspec",
      "length": 3894,
      "name": "MQTTNet.Client.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json#lib/netstandard2.1/MQTTNet.Client.dll",
      "@type": "PackageEntry",
      "compressedLength": 19636,
      "fullName": "lib/netstandard2.1/MQTTNet.Client.dll",
      "length": 46080,
      "name": "MQTTNet.Client.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.11.26.02.25.26/mqttnet.client.1.0.5.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12923,
      "fullName": ".signature.p7s",
      "length": 12923,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}