{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "d8d5a28f-d8c0-4343-962a-5c552dfb3e85",
  "catalog:commitTimeStamp": "2022-07-14T11:03:36.6213306Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2017-08-14T15:44:40.313Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json#deprecation",
    "message": "DotNetBrowser 1.x is no longer officially supported by TeamDev:\nhttps://dotnetbrowser-support.teamdev.com/docs/guides/migration/v1-v2.html#how-long-will-dotnetbrowser-version-1x-be-supported",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate\n\nChromium\n\nAll required Chromium binaries are deployed with the library. You don't need to install Google Chrome to work with DotNetBrowser. DotNetBrowser uses Chromium build 55.0.2883.87.\n\nRendering\n\nEverything you see on the loaded web page inside the browser is rendered by the Chromium engine. DotNetBrowser just displays web page parts rendered by the Chromium engine, which makes the web page look exactly as in Google Chrome.\n\nMulti-Process Architecture\n\nDotNetBrowser inherits Chromium's Multi-Process Architecture. Each web page is rendered in a separate native process (dotnetbrowser-chromium.exe). JavaScript and plugins on the web page are executed in separate native processes as well. If an unexpected error happens in the web page's plugin or DOM, your application will continue working. You can listen to events about unexpected termination of Chromium process and restore the Browser component if necessary.\n\nMemory Usage\n\nSince all Chromium functionality runs in separate native processes, the Chromium engine doesn't use the memory of your .NET application.\n\nBidirectional JavaScript to .NET Bridge\n\nDotNetBrowser supports two-way communication with a loaded web page. The component's API makes any part of the HTML document accessible from your C# or VB.NET code. Moreover, it is possible to register an event handler on particular DOM elements and be notified about the occurred events.\n\nIn addition DotNetBrowser provides ability to execute JavaScript code on the loaded web page. This ability can be used to call any JavaScript function and obtain the result of its execution at the .NET side. It is also possible to do the opposite - the C# or VB.NET method can be called from the JavaScript code as a regular JavaScript function.\n\nWPF and WinForms Support\n\nThe browser component has two separate views, one for WPF applications and another one for WinForms. It is also possible to use it without a view at all - DotNetBrowser is not required to be displayed to work properly. Each view is a control that supports a set of properties and events that are basic for the corresponding toolkit.",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2022-07-14T11:03:22.52Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "YmjgxrRbe7S6gl8r4GLLyhs7JvbdTEgGe9JZUHWQlsyq8+kEk865Zaq+b0busQtUZKyAl0GjmGiD6zSJF2gO0g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 49332310,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2017-08-14T15:44:40.313Z",
  "releaseNotes": "DotNetBrowser 1.11.1\nResolved issues:\n-DownloadHandler not working if the DotNetBrowser assembly was loaded via Assembly.Load().\n-Sporadic Chromium crashes for BrowserView running in the lightweight mode.\n.NET memory leak in the ImageProvider implementation.\n-WPFBrowserView focus stealing issue (reproducible for WPF ToolBar buttons in the same window).\n",
  "requireLicenseAcceptance": false,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser",
  "verbatimVersion": "1.11.1",
  "version": "1.11.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json#DotNetBrowser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1828,
      "fullName": "DotNetBrowser.nuspec",
      "length": 4166,
      "name": "DotNetBrowser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json#lib/DotNetBrowser.Chromium.dll",
      "@type": "PackageEntry",
      "compressedLength": 48192112,
      "fullName": "lib/DotNetBrowser.Chromium.dll",
      "length": 48312832,
      "name": "DotNetBrowser.Chromium.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json#lib/DotNetBrowser.dll",
      "@type": "PackageEntry",
      "compressedLength": 1035939,
      "fullName": "lib/DotNetBrowser.dll",
      "length": 1989632,
      "name": "DotNetBrowser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 89578,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 721154,
      "name": "DotNetBrowser.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.07.14.11.03.36/dotnetbrowser.1.11.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}