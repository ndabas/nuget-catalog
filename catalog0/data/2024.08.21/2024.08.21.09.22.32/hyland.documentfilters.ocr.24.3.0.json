{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Hyland Software, Inc.",
  "catalog:commitId": "3ff11b68-24e5-4702-9a3f-d8d491db57e5",
  "catalog:commitTimeStamp": "2024-08-21T09:22:32.6084042Z",
  "contentFiles": "",
  "copyright": "(c) 2024 Hyland Software, Inc. and its affiliates. All rights reserved.",
  "created": "2024-08-21T09:19:35.993Z",
  "description": "Document Filters is a toolkit that allows application developers to identify and extract metadata, as well as convert and render almost any file type. It is a core component of many products, but can also be leveraged as a stand-alone service for organizations or application developers.",
  "iconFile": "hyland.png",
  "id": "Hyland.DocumentFilters.OCR",
  "isPrerelease": false,
  "lastEdited": "2024-08-21T09:22:17.89Z",
  "licenseUrl": "https://docs.hyland.com/DocumentFilters/en_US/Print/nuget-license.html",
  "listed": true,
  "packageHash": "WAqOJJpwmj3ctr5WSQq4Imt1WQdAYut2kpJ/7WpM0X9qNjTqHa/emPGVzaFBOnEjsoaGCSmAsaQP53tfVqugbQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 13825723,
  "projectUrl": "https://www.hyland.com/en/products/document-filters",
  "published": "2024-08-21T09:19:35.993Z",
  "releaseNotes": "# Enhancements\n\n- Introduced option \"HTML_IMAGES_SCALE_TO_FIT\" to control whether images attached to email messages are scaled to fit the page. Defaults to OFF, resulting in no scaling. (DF-1907)\n- Introduced support for HD rendering of Hancom Hangul HWPX files, enabling enhanced rendering and improved fidelity for these document types. This update ensures accurate display and processing of HWPX documents, maintaining their original formatting and layout. (DF-1932)\n- Introduced support for a new JSON output canvas type that structures document data in a detailed, hierarchical format for seamless integration with AI and other JSON-compatible applications. This enhancement ensures efficient parsing and utilization of document content, improving AI-driven data analysis and processing. (DF-2043)\n- Introduced support for a new Markdown output canvas type. This allows users to seamlessly convert documents to Markdown, providing an efficient way to present basic formatting, along with content. Markdown's lightweight nature makes it ideal for various applications, including displaying content in wiki systems, as well as interactions with AI systems.  (DF-2015)\n- Introduced support for accessing \"IGR_Get_Page_Elements\" in the .NET, Java, and Python APIs. (DF-2044)\n- Introduced support for accessing the \"MIMEType\" property through the \"Extractor\" class in the .NET, Java, and Python APIs. (DF-2042)\n- Introduced support for enumerating supported configuration options in the Java APIs using the new \"GetAvailableOptions\" method. (DF-2041)\n- Introduced support for enumerating supported file types in the Java APIs using the new \"GetSupportedFormats\" method. (DF-2041)\n- Introduced support for extracting links to external workbooks within XLSX files using the \"SHOWHIDDEN_EXCEL_REFS\" option, defaulting to OFF. (DF-1902)\n- Introduced support for identification and text extraction support for Hancom Hangul HWPX files. (DF-1258)\n- Introduced support for sub-file extraction for MSI Installer files. (DF-2038)\n- Introduced support to be able to determine if a subfile is password protected, before extracting the file. For the C API, IGR_SUBFILE_INFO_FLAG_PASSWORD_PROTECTED will be set on the flags of the IGR_Subfile_Info structure. For Object APIs, the IsEncrypted property has been added to the SubFile object. (DF-1968)\n- Introduced support to identify and extract tables from untagged PDF files, preserving the logical structure of tables, rows, and cells for enhanced AI data analysis. This feature ensures accurate table detection for vector-based PDFs, facilitating better utilization in AI and other applications. It can be enabled using the \"PDF_TABLE_DETECTION\" option, defaulting to OFF. (DF-2045)\n\n# Updates\n\n- HD Mode: Resolved a condition for DOCX files where illustrations (pictures, shapes, etc.) vertically positioned with \"Margin\" could be placed incorrectly. (DF-1839)\n- HD Mode: Resolved a condition for DOCX files where images with a single textbox/graphic in a table resulted in an incorrect size of the row containing the object. (DF-1874)\n- HD Mode: Resolved a condition for HTML files where styles on form elements may not be rendered. (DF-1840)\n- HD Mode: Resolved a condition for RTF files where content with nested table may not render as expected. (DF-2095)\n- HD Mode: Resolved a condition for RTF files where line spacing inherited from styles may render differently than MS Word. (DF-1702)\n- HD Mode: Resolved a condition where converting DOCX files with images and setting the GRAPHIC_DPI option resulted in the images being shifted. (DF-1983)\n- HD Mode: Resolved a condition where converting a text document to HDHTML may result in text placed in incorrect locations. (DF-1708)\n- HD Mode: Resolved a condition where converting an RTF file could result in a crash when using an object API. (DF-2085)\n- HD Mode: Resolved a condition where converting to HTML5 may cause some images to have an empty 'idf-graphic-data' tag. (DF-1999)\n- HD Mode: Resolved a condition where having multiple threads convert text files to PDF could cause a segmentation fault. (DF-2075)\n- HD Mode: Resolved a condition where style inheritance could be incorrectly applied for paragraph and character styles in Office Open XML documents (e.g. MS Word .docx, MS Excel .xlsx, MS Powerpoint .pptx). (DF-2009)\n- HD Mode: Resolved a condition where text with automatic font color or no font color on dark fill/background would render with font color black instead of white. (DF-1986)\n- HD Mode: Resolved a potential memory leak for PDFs when converting to TIFF. (DF-2010)\n- HD Mode: Resolved an issue where converting a file with text in tables could overflow its cell and overlap with content in adjacent cells. (DF-2051)\n- HD mode: Resolved a condition for PDF files where too large input pages resulted in failed memory allocation. Output page size is limited to 200 inches in any dimension for xpdf engine. (DF-2099)\n- HD mode: Resolved a condition for XLSX files where conversion of large files with a large number of duplicated rows resulted in long processing time and large memory usage, while adding the \"SPREADSHEET_COLLAPSE_ROWS\" option, defaulting to 100. (DF-1996)\n- Security: PDFium: CVE-2024-5846: patched: applied security patch to address this issue. (DF-2089)\n- Security: PDFium: CVE-2024-5847: patched: applied security patch to address this issue. (DF-2088)\n- Security: libtiff: CVE-2024-7006: patched: applied security patch to address this issue. (DF-2137)\n- Security: xpdf: CVE-2024-4141: not-exploitable: issue is already mitigated; does not impact document filters.  (DF-1993)\n- Security: xpdf: CVE-2024-4568: not-exploitable: issue is already mitigated; does not impact document filters. (DF-2108)\n- Security: xpdf: CVE-2024-4976: not-exploitable: issue is already mitigated; does not impact document filters. (DF-2109)",
  "requireLicenseAcceptance": true,
  "summary": "An SDK to identify, extract and view hundreds of file formats. Contains the data files required for OCR to function.",
  "title": "Hyland.DocumentFilters.OCR",
  "verbatimVersion": "24.3.0",
  "version": "24.3.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json#Hyland.DocumentFilters.OCR.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2900,
      "fullName": "Hyland.DocumentFilters.OCR.nuspec",
      "length": 7265,
      "name": "Hyland.DocumentFilters.OCR.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 606,
      "fullName": "LICENSE.txt",
      "length": 1084,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json#contentFiles/ISYSreadersocr.dat",
      "@type": "PackageEntry",
      "compressedLength": 13804103,
      "fullName": "contentFiles/ISYSreadersocr.dat",
      "length": 13849388,
      "name": "ISYSreadersocr.dat"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json#build/Hyland.DocumentFilters.OCR.targets",
      "@type": "PackageEntry",
      "compressedLength": 216,
      "fullName": "build/Hyland.DocumentFilters.OCR.targets",
      "length": 280,
      "name": "Hyland.DocumentFilters.OCR.targets"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json#hyland.png",
      "@type": "PackageEntry",
      "compressedLength": 2695,
      "fullName": "hyland.png",
      "length": 2785,
      "name": "hyland.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.21.09.22.32/hyland.documentfilters.ocr.24.3.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12934,
      "fullName": ".signature.p7s",
      "length": 12934,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "docfilters",
    "linux",
    "windows",
    "cross-platform"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}