{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jan-Joost van Zon",
  "catalog:commitId": "cae44ee5-fb71-4b3c-9352-b2e591575086",
  "catalog:commitTimeStamp": "2018-10-15T21:05:58.4862629Z",
  "copyright": "Copyright Â© 2013 - 2018 Jan-Joost van Zon",
  "created": "2018-10-15T20:45:13.817Z",
  "description": "Contains various basic file functions, functions for working with streams and working with CSV's.",
  "iconUrl": "https://raw.githubusercontent.com/jjvanzon/JJ.Framework/master/jj-icon-64x64-margin4.png",
  "id": "JJ.Framework.IO",
  "isPrerelease": false,
  "lastEdited": "2018-10-15T21:05:55.793Z",
  "licenseUrl": "https://raw.githubusercontent.com/jjvanzon/JJ.Framework/master/LICENSE.TXT",
  "listed": false,
  "packageHash": "TTCh4J3w5xtJ0U4XKiEq9PtNCu4CYHBGu2LRN9+WNj9lk6kRJoHITCAewO6065d68cIQvyxczrs3Q6qMXwMO3g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24434,
  "projectUrl": "https://github.com/jjvanzon/JJ.Framework/tree/master/Framework/IO",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "Contains various file functions, functions for working with streams and working with CSV's.\n\n* `CsvReader`: A class for reading out CSV files.\n* `StreamHelper`: Converts between string, Stream and byte[]. Surprisingly different code is required for converting between those three, and this helper class makes it a bit more consistent.\n* `BinaryWriterExtensions`: Contains some methods for reading and writing structs to a stream.\n* `GetNumberedFilePath`: A method for inserting numbers in file paths in case the file name already exists.\n* `ClearFolder` / `ClearFolderRecursive`: Recursively clearing a directory, whereas Directory.Delete(path, bool recursive) would delete the directory itself.\n* `ApplicationFolderPath`: Gets that path without command line parameters, or executable file name, etc.\n* `GetFolderSize` / `GetFolderSizeRecursive`: Methods for counting the total number of bytes in a folder, including a recursive variation.\n* `CountFilesRecursive`\n* `IsFolder` / `IsFile`: Checks if a path is regarded to be a folder or a file, which is not always obvious.\n* `FolderIsEmpty` method.\n* Easily working with file attributes.\n* Converting between relative path and absolute path.\n* A method for comparing two paths, regardess of them being absolute or relative.\n* `PathParser`: Neatly splits up a file path into its smaller parts.\n* `SafeFileOverwriter`: First writes to a temporary file and only when all went well, the original file is overwritten. The security settings and file attributes and file properties are retained as the temp file replaces the original.",
  "title": "JJ.Framework.IO",
  "verbatimVersion": "1.4.6862.40452",
  "version": "1.4.6862.40452",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#dependencygroup/jj.framework.exceptions",
          "@type": "PackageDependency",
          "id": "JJ.Framework.Exceptions",
          "range": "[1.4.0, 1.5.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#dependencygroup/jj.framework.platformcompatibility",
          "@type": "PackageDependency",
          "id": "JJ.Framework.PlatformCompatibility",
          "range": "[1.4.0, 1.5.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#dependencygroup/jj.framework.text",
          "@type": "PackageDependency",
          "id": "JJ.Framework.Text",
          "range": "[1.4.0, 1.5.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#dependencygroup/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[2018.2.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#JJ.Framework.IO.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1329,
      "fullName": "JJ.Framework.IO.nuspec",
      "length": 3030,
      "name": "JJ.Framework.IO.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#README.MD",
      "@type": "PackageEntry",
      "compressedLength": 810,
      "fullName": "README.MD",
      "length": 1629,
      "name": "README.MD"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#lib/net461/JJ.Framework.IO.dll",
      "@type": "PackageEntry",
      "compressedLength": 9482,
      "fullName": "lib/net461/JJ.Framework.IO.dll",
      "length": 21504,
      "name": "JJ.Framework.IO.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#lib/net461/JJ.Framework.IO.xml",
      "@type": "PackageEntry",
      "compressedLength": 1271,
      "fullName": "lib/net461/JJ.Framework.IO.xml",
      "length": 5300,
      "name": "JJ.Framework.IO.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.15.21.05.58/jj.framework.io.1.4.6862.40452.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "file",
    "functions",
    "attributes",
    "stream",
    "csv",
    "binarywriter",
    "numbered",
    "path",
    "folder",
    "recursive",
    "relative",
    "absolute",
    "compare",
    "safe",
    "overwrite",
    "temp"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}