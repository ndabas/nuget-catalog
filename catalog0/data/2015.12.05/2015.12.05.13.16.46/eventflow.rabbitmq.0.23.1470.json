{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.05.13.16.46/eventflow.rabbitmq.0.23.1470.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "rasmus",
  "catalog:commitId": "8e927bf7-2f40-4ab8-af4a-3c0593d19b70",
  "catalog:commitTimeStamp": "2015-12-05T13:16:46.191232Z",
  "copyright": "Copyright (c) 2015 Rasmus Mikkelsen",
  "created": "2015-12-05T13:16:38.15Z",
  "description": "RabbitMQ integration for EventFlow",
  "iconUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/icon-256.png",
  "id": "EventFlow.RabbitMQ",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/rasmus/EventFlow/master/LICENSE",
  "listed": true,
  "packageHash": "LD7Ax1voS9eCJRMCujZ5FZJZInfmfBLz2O0ilUtx7aLUGL78SjFkJG+NoGKalMt3XHIZY5hu4mWstSaAtXP7LA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 13875,
  "projectUrl": "https://github.com/rasmus/EventFlow",
  "published": "2015-12-05T13:16:38.15Z",
  "releaseNotes": "Breaking: EventFlow no longer ignores columns named `Id` in MSSQL read models.\nIf you were dependent on this, use the `MsSqlReadModelIgnoreColumn` attribute\nFixed: Instead of using `MethodInfo.Invoke` to call methods on reflected\ntypes, e.g. when a command is published, EventFlow now compiles an expression\ntree instead. This has a slight initial overhead, but provides a significant\nperformance improvement for subsequent calls\nFixed: Read model stores are only invoked if there's any read model updates\nFixed: EventFlow now correctly throws an `ArgumentException` if EventFlow has\nbeen incorrectly configure with known versioned types, e.g. an event\nis emitted that hasn't been added during EventFlow initialization. EventFlow\nwould handle the save operation correctly, but if EventFlow was reinitialized\nand the event was loaded _before_ it being emitted again, an exception would\nbe thrown as EventFlow would know which type to use. Please make sure to\ncorrectly load all event, command and job types before use\nFixed: `IReadModelFactory<>.CreateAsync(...)` is now correctly used in\nread store mangers\nFixed: Versioned type naming convention now allows numbers",
  "requireLicenseAcceptance": true,
  "title": "EventFlow - RabbitMQ integration",
  "verbatimVersion": "0.23.1470",
  "version": "0.23.1470",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.05.13.16.46/eventflow.rabbitmq.0.23.1470.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.05.13.16.46/eventflow.rabbitmq.0.23.1470.json#dependencygroup/eventflow",
          "@type": "PackageDependency",
          "id": "EventFlow",
          "range": "[0.23.1470, 0.23.1470]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.05.13.16.46/eventflow.rabbitmq.0.23.1470.json#dependencygroup/rabbitmq.client",
          "@type": "PackageDependency",
          "id": "RabbitMQ.Client",
          "range": "[3.5.4, )"
        }
      ]
    }
  ],
  "tags": [
    "CQRS",
    "ES",
    "event",
    "sourceing",
    "eventstore",
    "rabbitmq"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}