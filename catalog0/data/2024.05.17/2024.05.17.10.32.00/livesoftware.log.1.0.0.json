{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.17.10.32.00/livesoftware.log.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "David Soros",
  "catalog:commitId": "02423005-618d-4104-aa65-7e463ba1e921",
  "catalog:commitTimeStamp": "2024-05-17T10:32:00.3069088Z",
  "created": "2024-02-16T15:36:29.117Z",
  "description": "# LiveSoftwareLog\n\n            The goal is an easy to use logging library.\n\n            The `Logger` interface provides a simple logger specification.\n            Currently, a basic console logger implementation exists. You can either construct this directly, or use the `LoggerFactory`\n            provided. Like so:\n            `LoggerFactory.createLogger(LoggingLevel.Info)` for only logging info logs.\n            > **_NOTE:_**  Using `LoggingLevel.None` will create a no-op logger instead, which will eat every log instead of\n            > publishing it.\n\n            To use the created logger, simply call the method with the appropriate log level. Example usage:\n            ```csharp\n            var logger = LoggerFactory.createLogger(LoggingLevel.Info); // Creates a logger which will pring logs of level INFO or higher\n            logger.error(\"Some error {0}\", error); // Will print and error message\n            logger.debug(\"Some debug message {0}\", \"for you\"); // Will not print the message, because DEBUG is of lower level than INFO\n            ```\n\n            ### Available logging levels:\n            * Debug\n            * Info\n            * Warning\n            * Error\n            * None",
  "id": "LiveSoftware.Log",
  "isPrerelease": false,
  "lastEdited": "2024-05-17T10:31:39.773Z",
  "listed": false,
  "packageHash": "T0r/jfInkwkJhKsxXjMhrirGOH2/vHZMXPUS8OmTUe5pt/J+3dflgKJs0hWUIdZCbqYuMHI5uDtG+ItvsRJGvQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18276,
  "published": "1900-01-01T00:00:00Z",
  "repository": "",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.17.10.32.00/livesoftware.log.1.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.17.10.32.00/livesoftware.log.1.0.0.json#LiveSoftware.Log.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 816,
      "fullName": "LiveSoftware.Log.nuspec",
      "length": 1654,
      "name": "LiveSoftware.Log.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.17.10.32.00/livesoftware.log.1.0.0.json#lib/net8.0/Log.dll",
      "@type": "PackageEntry",
      "compressedLength": 3748,
      "fullName": "lib/net8.0/Log.dll",
      "length": 9728,
      "name": "Log.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.17.10.32.00/livesoftware.log.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11515,
      "fullName": ".signature.p7s",
      "length": 11515,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}