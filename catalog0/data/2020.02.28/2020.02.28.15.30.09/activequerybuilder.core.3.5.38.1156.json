{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "ActiveDBSoft",
  "catalog:commitId": "99948281-81d6-4b3a-986c-255583fb7977",
  "catalog:commitTimeStamp": "2020-02-28T15:30:09.8529747Z",
  "copyright": "Copyright 2007-2020 ActiveDBSoft. All rights reserved.",
  "created": "2020-02-28T15:28:06.517Z",
  "description": "SQL Query Parser, Analyzer and Generator for .NET (Mono-compatible) with full support of all popular database servers and appropriate SQL dialects. Active Query Builder allows for parsing of complex SQL queries for programmatic analysis and seamless modification. Active Query Builder lets prevent SQL injection attacks, deny access to unauthorized data on a row level, and get detailed information about user queries.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#frameworkassemblygroup",
    "assembly": "System.Data"
  },
  "iconUrl": "https://www.activequerybuilder.com/i/ico32.gif",
  "id": "ActiveQueryBuilder.Core",
  "isPrerelease": false,
  "lastEdited": "2020-02-28T15:30:08.74Z",
  "licenseFile": "License.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "nPiKxY/0hYYqSfnKoOq4+Y/4qtErjyhQ8sjBDLJgpXKVy4mtrFQPcDqEsUS6sgcZADrc0EeP0PQxEGTB2i2PLA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 2318963,
  "projectUrl": "https://www.activequerybuilder.com/product_net.html",
  "published": "2020-02-28T15:28:06.517Z",
  "releaseNotes": "+ SQLite: add WINDOW clause, analytic expressions, FILTER clause support\n+ PostgreSql: add FILTER clause and fix PRECEDING parsing\n+ add SqlTextEditor/SinglelineSqlTextEditor new methods ShowSuggestionWindow and HideSuggestionWindow\n= Teradata, Sql89: add keywords and functions list to SqlTextEditor suggestions\n= SQLite, Teradata, Generic: add REPLACE function support\n= MsSql: add \"connection\" component support in qualified names\n= PosgreSql: fix non-keywords list\n= Sql89,Sql92,Sql2003: add support of parsing object names with \"connection\" component\n= QueryColumnListItem: refactoring to follow \"model-UI controller\" design: QueryColumnListItem.AddExpression\n  throws if passed value is not a valid expression, queryBuilder.SQLQuery.SetExpressionString tries to\n  guess expression from passed value\n- fix hotkey command Control+Alt+Insert in QueryColumnListControl\n- QueryUIEventsDemo: fix NRE on checking *\n- Wf,Dx: fix data source control LeftToRight\n- fix loading queries with new Connection object references\n- do not detect server version if metadataProvider == null",
  "requireLicenseAcceptance": true,
  "summary": "A full-featured API to parse, analyse, modify or create SQL queries from scratch.",
  "title": "Active Query Builder 3 Core",
  "verbatimVersion": "3.5.38.1156",
  "version": "3.5.38.1156",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#ActiveQueryBuilder.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1311,
      "fullName": "ActiveQueryBuilder.Core.nuspec",
      "length": 2679,
      "name": "ActiveQueryBuilder.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#lib/net/ActiveQueryBuilder.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 1133053,
      "fullName": "lib/net/ActiveQueryBuilder.Core.dll",
      "length": 3967408,
      "name": "ActiveQueryBuilder.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#lib/net/ActiveQueryBuilder.EventMetadataProvider.dll",
      "@type": "PackageEntry",
      "compressedLength": 32124,
      "fullName": "lib/net/ActiveQueryBuilder.EventMetadataProvider.dll",
      "length": 59824,
      "name": "ActiveQueryBuilder.EventMetadataProvider.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#lib/netstandard2.0/ActiveQueryBuilder.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 1133053,
      "fullName": "lib/netstandard2.0/ActiveQueryBuilder.Core.dll",
      "length": 3967408,
      "name": "ActiveQueryBuilder.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#ReadMe.txt",
      "@type": "PackageEntry",
      "compressedLength": 674,
      "fullName": "ReadMe.txt",
      "length": 1376,
      "name": "ReadMe.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#License.txt",
      "@type": "PackageEntry",
      "compressedLength": 6743,
      "fullName": "License.txt",
      "length": 19486,
      "name": "License.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.02.28.15.30.09/activequerybuilder.core.3.5.38.1156.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "SqlQueryBuilder",
    "VisualQueryBuilder",
    "SqlDesigner",
    "AdHocQueryBuilder"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}