{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "JackerKun",
  "catalog:commitId": "2b75f430-d6d9-4ee8-a963-f8360139cb2e",
  "catalog:commitTimeStamp": "2020-07-08T09:34:16.5591998Z",
  "created": "2020-07-08T09:31:36.3Z",
  "description": "删除，支持查询条件\t List<Model.modelTableQuery>\n查询，支持数组modelArrayQuery对象\n查询，支持支持sql语句\n插入，支持是否去重：如果存在可以不插入\n初始化，支持modelDB一次性初始化模型 private modelDB DB = opeSqlDB.Init(modelTable, constring);",
  "iconFile": "icon.png",
  "id": "YTKDBlibrary",
  "isPrerelease": false,
  "lastEdited": "2020-07-08T09:34:08.743Z",
  "listed": true,
  "packageHash": "DCsKmYh7BVzDYe6tMLxZQQfykdXY4QvVvxHaT86jhn+3AzN1jlKQy/CktYaK3UPD0wbi84XWVcTvZobHTJ8IKw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34398,
  "published": "2020-07-08T09:31:36.3Z",
  "releaseNotes": "//查询——————————自定义模型\n            //创建查询条件\n            tb_test _seq = new tb_test() { pwd = \"aaaaaa\", name = \"yinlik\" };\n\n            //创建分页对象\n            modelPage _page = new modelPage() { isPage = true, pageNum = 1, rowCount = 2 };\n\n            //创建排序条件\n            List<modelOrder> _order = new List<modelOrder>();\n            _order.Add(new modelOrder() { orderColum = \"usrid\", orderType = YTKDBlibrary.Enum.enmOrderType.DESC });\n\n            modelSqlObj mdlCount = _sql.SelectCount(_seq);\n            int count = _exe.SelectCount(mdlCount);\n            List<tb_test> res = _exe.Select<tb_test>(_sql.Select(_seq, _page, _order));\n            ResultObj<SearchResultObj<tb_test>> result = new ResultObj<SearchResultObj<tb_test>>() { data = new SearchResultObj<tb_test>() { pageList = res, itemTotal = count } };\n            Console.ReadKey();\n\n\n            //查询：包含 查询类型————————返回自定义模型\n            List<modelTableQuery> _query = new List<modelTableQuery>();\n            _query.Add(new modelTableQuery() { columName = _m.tableColum[1].columName, queryType = YTKDBlibrary.Enum.enmQueryType.like, columValue = \"a\" });\n            //创建分页对象\n            modelPage _page = new modelPage() { isPage = true, pageNum = 1, rowCount = 2 };\n            //创建排序条件\n            List<modelOrder> _order = new List<modelOrder>();\n            _order.Add(new modelOrder() { orderColum = _m.tableColum[0].columName, orderType = YTKDBlibrary.Enum.enmOrderType.DESC });\n            //查询总数\n            int count = _exe.SelectCount(_sql.SelectCount(_query));\n            //查询结果集合：tb_test 是表结构 模型 需要自己定义\n            List<tb_test> res = _exe.Select<tb_test>(_sql.Select(_query, _page, _order));\n            Console.ReadKey();\n\n\n            //查询：sql语句返回——————————返回自定义模型\n            List<tb_test> rrr = _exe.Select<tb_test>(\"select * from tb_test;\", null);\n            Console.ReadKey();\n\n            // 插入————————————自定义模型\n            tb_test _ins = new tb_test() { pwd = \"测试啊啊啊啊啊3啊测试啊啊啊啊dd啊啊啊\" };\n            modelSqlObj sqlIns = _sql.Insert(new List<object>() { _ins }, true);\n            int id = _exe.Insert(sqlIns);\n            Console.ReadKey();\n\n\n            //更新————————————自定义模型\n            tb_test _ups = new tb_test() { pwd = \"aaaaaa\", name = \"yinlik\" };\n            modelSqlObj sqlUpdate = _sql.Update(_ups, \"usrid\", 2);\n            _exe.Update(sqlUpdate);\n            Console.ReadKey();\n\n\n            //删除————————————自定义模型\n            modelDel mdlDel = new modelDel();\n            mdlDel.isLogic = true;\n            mdlDel.delColum = \"country\";\n            mdlDel.logicValue = 1;\n            mdlDel.query = new tb_test() { usrid = 2 };\n            modelSqlObj obj = _sql.Delete(mdlDel);\n            bool r = _exe.Delete(obj);\n            Console.ReadKey();",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.0.6",
  "version": "1.0.0.6",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json#dependencygroup/.netstandard2.0/mysql.data",
          "@type": "PackageDependency",
          "id": "MySql.Data",
          "range": "[8.0.20, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json#YTKDBlibrary.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1422,
      "fullName": "YTKDBlibrary.nuspec",
      "length": 4231,
      "name": "YTKDBlibrary.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json#lib/netstandard2.0/YTKDBlibrary.dll",
      "@type": "PackageEntry",
      "compressedLength": 16299,
      "fullName": "lib/netstandard2.0/YTKDBlibrary.dll",
      "length": 41472,
      "name": "YTKDBlibrary.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 5150,
      "fullName": "icon.png",
      "length": 5145,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.07.08.09.34.16/ytkdblibrary.1.0.0.6.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}