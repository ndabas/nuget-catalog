{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "5185d6e0-d936-4466-85a9-7be68f3a30a7",
  "catalog:commitTimeStamp": "2019-05-13T17:35:01.7644437Z",
  "copyright": "Copyright 2019",
  "created": "2019-05-13T17:30:43.213Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2019-05-13T17:34:52.5Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "MUKtP30dkFb7dFfk2dFwZRYCn6Y+b57kMAbcdXe0ZzKUTgv1hy4EUZ9uBWX3BnP8HgKrvODs9n0avMrSJznaPw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 453344,
  "published": "2019-05-13T17:30:43.213Z",
  "releaseNotes": "Unsigned Assembly\n\nAdded function x.ToFile to directly export a bf object to an ASCII-encoded file, much like the x.toString capability.\nAdded 'public bf(uint _base, string FilePath, long Base10Precision)' to import a bf object directly from an ASCII-encoded file.\n\nModified, such that a call to x.Bernoulli(y...) caches all Bernoulli Numbers B for y0 less or equal y, and caches Bernoulli polynomial coefficients for y0 = y. Run time is thus reduced for subsequent calls to x.Bernoulli(y0..) for y0 less or equal y, and especially for y0 equal y, within a range of Precisions. \n\nAdded functions to clear any saved data caches if no longer needed, to free up resources:\nClearCacheBernoulliCoef()\nClearCacheBernoulliNumbers()\nClearCacheGammaShort()\nClearCacheGammaLong()\n\nThe ClearCacheGamma...() functions clear associated Spouge constants used in computing Gamma for a range of Precisions (Short / Long).\n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2017) and using Mpir.NET for the underlying integer math, supplies a variety of math functions and utilities with precisions at least as large as 2,000,000 base 10 digits. The underlying objects are bf (for 'big float' real values comprised of an mpz_t extended integer part from Mpir.NET and a base 2 exponent), bcr (for complex numbers expressed in the rectangular coordinates of a bf real part and a bf imaginary part), and bcp (for complex numbers expressed in the polar coordinates of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.4.10",
  "version": "0.4.10",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1421,
      "fullName": "LongCalc.nuspec",
      "length": 2987,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 2659,
      "fullName": "LICENSE.txt",
      "length": 7814,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 40357,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 121856,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.05.13.17.35.01/longcalc.0.4.10.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}