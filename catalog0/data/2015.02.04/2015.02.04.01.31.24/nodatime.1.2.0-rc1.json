{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.01.31.24/nodatime.1.2.0-rc1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jon Skeet",
  "catalog:commitId": "fd7412aa-c4ef-47ed-abf3-3dbacc927954",
  "catalog:commitTimeStamp": "2015-02-04T01:31:24.387463Z",
  "created": "2013-11-01T14:15:01.917Z",
  "description": "Noda Time is a date and time API acting as an alternative to the built-in DateTime/DateTimeOffset etc types built into the .NET framework. It's based on the \"engine\" of Joda Time, the popular Java library - but with an API designed from the ground up.",
  "id": "NodaTime",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "packageHash": "WJpXccjTw7vsChHA2fiFrX9Cn6QQHGrhOL/TGuTaSLOULnFi3up/hLl4gtxXG9uYreTyYyB1Ztxnu4b8o6ydGQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 501007,
  "projectUrl": "http://noda-time.googlecode.com",
  "published": "2013-11-01T14:15:01.917Z",
  "requireLicenseAcceptance": false,
  "version": "1.2.0-rc1",
  "tags": [
    "date",
    "time",
    "timezone",
    "calendar"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}