{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.09.29.39/dw.codedui.beta.2.5.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "David Wendland",
  "catalog:commitId": "a748d9b0-7872-4f53-9ea9-e60a77fec82e",
  "catalog:commitTimeStamp": "2018-12-11T09:29:39.7412719Z",
  "copyright": "2012-2015 David Wendland",
  "created": "2015-12-23T18:11:39.827Z",
  "description": "DW.CodedUI - Test your UI fast and easy.\n\nChanges see changelog.\n\n* Will run in all Visual Studio version up from 2010\n* Its written in .Net 4.0\n* Its developed under the MIT license\n\nThis beta is the preview of a version which is planned to work stand-alone in all visual studio versions.\nLike for all my assemblies, even minor versions are releases, odds are betas like this one.\n\nStand-alone download: http://libs.my-libraries.com/DW.CodedUI/v2.5.0/Assembly.zip\nChangelog: http://libs.my-libraries.com/DW.CodedUI/v2.5.0/Changelog.txt\nDocumentation: http://libs.my-libraries.com/DW.CodedUI/v2.5.0/Documentation\n\n\nInstallation:\n1. Organize following files from VS 2013 Premium or Ultimate (Demo is enough!)\na. Interop.UIAutomationClient.dll\nb. UIAComWrapper.dll\n2. Create a new unit test project (or edit the references)\n3. Reference the DW.CodedUI\n4. Reference UIAComWrapper.dll\n5. Add Interop.UIAutomationClient.dll as existing file to the project with build action on \"None\" and \"Copy Always\". Or do a postbuild event, the file just need to lay beside the DW.CodedUI.dll in the output directory.\n\n=> Now you can execute UI tests in usual [TestClass] objects.",
  "id": "DW.CodedUI.Beta",
  "isPrerelease": false,
  "lastEdited": "2018-12-11T09:29:34.23Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": false,
  "packageHash": "t6SNSOHHFLJtAciwcuX3btiCKnFjIEWrmUmiOecIPOtuP4wu0rmt+mp14WPePNzmAw89oS8YzyQeJkLhd9u7eg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 215571,
  "projectUrl": "http://www.my-libraries.com/",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.5.1",
  "version": "2.5.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.09.29.39/dw.codedui.beta.2.5.1.json#DW.CodedUI.Beta.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 870,
      "fullName": "DW.CodedUI.Beta.nuspec",
      "length": 1739,
      "name": "DW.CodedUI.Beta.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.09.29.39/dw.codedui.beta.2.5.1.json#content/DW.CodedUI.XML",
      "@type": "PackageEntry",
      "compressedLength": 25086,
      "fullName": "content/DW.CodedUI.XML",
      "length": 326671,
      "name": "DW.CodedUI.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.09.29.39/dw.codedui.beta.2.5.1.json#lib/DW.CodedUI.dll",
      "@type": "PackageEntry",
      "compressedLength": 59304,
      "fullName": "lib/DW.CodedUI.dll",
      "length": 166400,
      "name": "DW.CodedUI.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.09.29.39/dw.codedui.beta.2.5.1.json#lib/DW.CodedUI.pdb",
      "@type": "PackageEntry",
      "compressedLength": 116138,
      "fullName": "lib/DW.CodedUI.pdb",
      "length": 570880,
      "name": "DW.CodedUI.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.09.29.39/dw.codedui.beta.2.5.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}