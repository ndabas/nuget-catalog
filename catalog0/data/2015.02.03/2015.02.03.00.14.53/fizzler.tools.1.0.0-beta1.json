{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.00.14.53/fizzler.tools.1.0.0-beta1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Atif Aziz, Colin Ramsay",
  "catalog:commitId": "0e3950e4-d5b1-4cf5-a5f2-704147c4dc16",
  "catalog:commitTimeStamp": "2015-02-03T00:14:53.5796408Z",
  "copyright": "Copyright (c) 2009 Atif Aziz, Colin Ramsay. All rights reserved.",
  "created": "2013-01-20T18:16:40.28Z",
  "description": "Fizzler is a CSS Selector parser and generic selector framework for document hierarchies. Fizzler also comes with a default implementation over HTMLAgilityPack that enables QuerySelector and QuerySelectorAll (from Selectors API Level 1) for HtmlNode objects.",
  "id": "Fizzler.Tools",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.gnu.org/licenses/lgpl.html",
  "packageHash": "KnkeowTOVH+wmnuKBkvh6tDD8ka+dW5PG46jWKdbbQZJfrBtZ1R8SgRwZtX04zMA3Ixiv0H6sr3Om49gIchgJQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 285087,
  "projectUrl": "https://fizzler.googlecode.com/",
  "published": "2013-01-20T18:16:40.28Z",
  "requireLicenseAcceptance": false,
  "summary": "CSS Selector Engine for Microsoft .NET Framework",
  "title": "Fizzler Tools",
  "version": "1.0.0-beta1",
  "tags": [
    "htmlagility",
    "fizzler",
    "css",
    "html"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}