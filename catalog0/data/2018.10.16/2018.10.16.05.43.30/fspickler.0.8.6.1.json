{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.16.05.43.30/fspickler.0.8.6.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nessos Information Technologies, Eirik Tsarpalis",
  "catalog:commitId": "2e8f5fe5-b9b9-4ac2-a137-d88f6fcbedeb",
  "catalog:commitTimeStamp": "2018-10-16T05:43:30.6527093Z",
  "copyright": "Copyright 2014",
  "created": "2014-04-01T21:49:57.533Z",
  "description": "A fast, general-purpose binary serializer for .NET written in F# that doubles as a pickler combinator library.  * Based on the notion of pickler combinators.  * Provides an automated, strongly typed, pickler generation framework.  * Full support for .NET types, including classes and open hierarchies.  * Compatible with all serializable types, including the ISerializable interface.  * Highly optimized for F# core types.  * Performance about 5-20x faster than the default .NET serializers.  * Full support for the mono framework.",
  "iconUrl": "http://www.m-brace.net/media/pickler.jpg",
  "id": "FsPickler",
  "isPrerelease": false,
  "lastEdited": "2018-10-16T05:43:28.023Z",
  "licenseUrl": "https://github.com/nessos/FsPickler/blob/master/License.md",
  "listed": true,
  "packageHash": "A0hR2uQO6+E/ALzOm8MzKCdsFijVxOt/+bQTyTIvIwkeya5KmfiLzTztdWyixBiXpA6GHlkM6hJShUh8es50SA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 264469,
  "projectUrl": "https://github.com/nessos/FsPickler",
  "published": "2014-04-01T21:49:57.533Z",
  "releaseNotes": "Support .NET 4.0 runtimes Add FAKE support",
  "requireLicenseAcceptance": false,
  "summary": "A fast binary serializer and pickler combinator library for F#",
  "verbatimVersion": "0.8.6.1",
  "version": "0.8.6.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.16.05.43.30/fspickler.0.8.6.1.json#FsPickler.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 687,
      "fullName": "FsPickler.nuspec",
      "length": 1448,
      "name": "FsPickler.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.16.05.43.30/fspickler.0.8.6.1.json#lib/net45/FsPickler.dll",
      "@type": "PackageEntry",
      "compressedLength": 149085,
      "fullName": "lib/net45/FsPickler.dll",
      "length": 389632,
      "name": "FsPickler.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.16.05.43.30/fspickler.0.8.6.1.json#lib/net45/FsPickler.xml",
      "@type": "PackageEntry",
      "compressedLength": 6280,
      "fullName": "lib/net45/FsPickler.xml",
      "length": 61773,
      "name": "FsPickler.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.16.05.43.30/fspickler.0.8.6.1.json#lib/net45/FsPickler.pdb",
      "@type": "PackageEntry",
      "compressedLength": 95596,
      "fullName": "lib/net45/FsPickler.pdb",
      "length": 448000,
      "name": "FsPickler.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.10.16.05.43.30/fspickler.0.8.6.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "F#",
    "fsharp",
    "serializer",
    "binary",
    "pickler"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}