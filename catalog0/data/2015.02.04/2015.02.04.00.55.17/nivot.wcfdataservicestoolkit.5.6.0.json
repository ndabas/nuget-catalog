{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.00.55.17/nivot.wcfdataservicestoolkit.5.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jonathan Carter, Oisin Grehan",
  "catalog:commitId": "80813eb0-aaa7-475b-9405-1408c384bc8a",
  "catalog:commitTimeStamp": "2015-02-04T00:55:17.5913886Z",
  "created": "2013-10-29T18:03:35.46Z",
  "description": "The WCF Data Services Toolkit is a set of extensions to WCF Data Services (the .NET implementation of OData) that attempt to make it easier to create OData services on top of arbitrary data stores without having deep knowledge of LINQ.\n\nIt was born out of the needs of real-world services such as Netflix, eBay, Facebook, Twitpic, etc. and is being used to run all of those services today. We've proven that it can solve some interesting problems, and it's working great in production, but it's by no means a supported product or something that you should take a hard commitment on unless you know what you're doing.\n\nIn order to know whether you qualify for using the toolkit to solve your solution, you should be looking to expose a non-relational data store (EF + WCF Data Services already solves the relational scenario) as an OData service.\n\nMore info: http://lostintangent.tumblr.com/post/3189655590/you-want-to-wrap-odata-around-what\n(this does not cover my enhancements to enable odata v3)",
  "iconUrl": "http://static.tumblr.com/hgchgxz/9ualgdf98/icon.png",
  "id": "Nivot.WCFDataServicesToolkit",
  "isPrerelease": false,
  "language": "es-US",
  "lastEdited": "2013-10-30T15:56:39.627Z",
  "licenseUrl": "http://opensource.org/licenses/MS-PL",
  "packageHash": "QgwQvBO557cmAE66EDE4M7E53aN1o7jb+nZX0MX6FIPntCerCYFLCsQijJe4zySirurHAz+51I3SMjt9J1eYDw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 63716,
  "projectUrl": "https://github.com/oising/WCFDS-Toolkit",
  "published": "2013-10-29T18:03:35.46Z",
  "releaseNotes": "This package's version number will be keyed against Microsoft's own OData packages, so this package is compiled against their latest and greatest OData v3 implementation, 5.6.0. It is built against the latest source code at wcfdstoolkit.codeplex.com and also includes all currently unintegrated bug fixes submitted as patches/pull requests.",
  "requireLicenseAcceptance": false,
  "summary": "A set of extensions to WCF Data Services make it easier to create OData services on top of arbitrary data stores. It is an updated fork of a now dormant codeplex project, licensed MS-PL.\n\nMore info: http://lostintangent.tumblr.com/post/3189655590/you-want-to-wrap-odata-around-what\n(this does not cover my enhancements to enable odata v3)\n",
  "title": "WCF Data Services Toolkit (OData v3)",
  "version": "5.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.00.55.17/nivot.wcfdataservicestoolkit.5.6.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.00.55.17/nivot.wcfdataservicestoolkit.5.6.0.json#dependencygroup/microsoft.data.services",
          "@type": "PackageDependency",
          "id": "Microsoft.Data.Services",
          "range": "[5.6.0, 5.6.0]"
        }
      ]
    }
  ],
  "tags": [
    "net40",
    "wcf",
    "dataservices",
    "odata",
    "odatalib",
    "edmlib",
    "odatav3"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}