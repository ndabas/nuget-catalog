{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.03.28.00.19.01/filedb.net.standard.7.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brett Goodman (EzTools Software)",
  "catalog:commitId": "35cf57af-3f04-4a88-b68c-625ac4651ae4",
  "catalog:commitTimeStamp": "2019-03-28T00:19:01.6953677Z",
  "copyright": "Copyright Â© EzTools Software - all rights reserved",
  "created": "2019-03-28T00:14:48.867Z",
  "description": "A portable NoSql database for .NET applications with a single table per file.  The field types are native CLR types, and arrays of the same, eg: Int32, Boolean, Byte[].  Multiple databases can be joined using LINQ.",
  "id": "FileDb.Net.Standard",
  "isPrerelease": false,
  "lastEdited": "2019-03-28T00:19:00.75Z",
  "licenseUrl": "https://github.com/eztools-software/FileDb/blob/master/LICENSE",
  "listed": true,
  "packageHash": "6yKymsLy1wGm0qvHs1ot+5M/mLBxKGvAPYGBkhWeKcogaX9IfUHTl7DUB1xbAvgihNbXVZ+KZwl8tV93jT25kg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 59457,
  "projectUrl": "http://eztools-software.com/tools/FileDb",
  "published": "2019-03-28T00:14:48.867Z",
  "releaseNotes": "The DB now stores a flag indicating if the data is encrypted and throws an exception if opened without an encryptor.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "7.0.0",
  "version": "7.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.03.28.00.19.01/filedb.net.standard.7.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.03.28.00.19.01/filedb.net.standard.7.0.0.json#FileDb.Net.Standard.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 694,
      "fullName": "FileDb.Net.Standard.nuspec",
      "length": 1315,
      "name": "FileDb.Net.Standard.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.03.28.00.19.01/filedb.net.standard.7.0.0.json#lib/netstandard2.0/FileDb.Standard.dll",
      "@type": "PackageEntry",
      "compressedLength": 36119,
      "fullName": "lib/netstandard2.0/FileDb.Standard.dll",
      "length": 86528,
      "name": "FileDb.Standard.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.03.28.00.19.01/filedb.net.standard.7.0.0.json#lib/netstandard2.0/FileDb.Standard.xml",
      "@type": "PackageEntry",
      "compressedLength": 11090,
      "fullName": "lib/netstandard2.0/FileDb.Standard.xml",
      "length": 100244,
      "name": "FileDb.Standard.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.03.28.00.19.01/filedb.net.standard.7.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "FileDb",
    "Database",
    "NoSql",
    "Linq",
    "portable",
    "class",
    "library",
    "pcl",
    "xamarin",
    "android",
    "iphone",
    "mobile"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}