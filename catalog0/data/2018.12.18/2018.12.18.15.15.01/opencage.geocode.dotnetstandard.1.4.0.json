{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.15.15.01/opencage.geocode.dotnetstandard.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brian Norman",
  "catalog:commitId": "4f885500-a144-46cb-a721-dfe4b03f0a0f",
  "catalog:commitTimeStamp": "2018-12-18T15:15:01.7813929Z",
  "copyright": "earthware",
  "created": "2018-06-19T14:20:21.423Z",
  "description": "A .NET Standard library (works in .Net core, .Net 4.6.1 and Xamarin projects) that provides geocoding and reverse geocoding of locations using the OpenCage Geocoder(http://geocoder.opencagedata.com/)",
  "id": "OpenCage.Geocode.DotNetStandard",
  "isPrerelease": false,
  "lastEdited": "2018-12-18T15:14:40.513Z",
  "listed": true,
  "packageHash": "6SKpCUvk+e4YUUx6bkZZ66HZ7XfC8SxwalOO9qXy3m4AHAttpIL0PTRf3JlC5TmBfeTtpQzdDwcfczmTyqTaHg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22315,
  "projectUrl": "https://github.com/gingemonster/dotnet-opencage-geocode",
  "published": "2018-06-19T14:20:21.423Z",
  "releaseNotes": "Added possibility to retrieve any value which is present in components hashset as a new ComponentsDictionary property. This means if new components are added by opencage you can access them without a new version of this library needing to be released each time. Thanks to ivan.shelest for the work",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.4.0",
  "version": "1.4.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.15.15.01/opencage.geocode.dotnetstandard.1.4.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.15.15.01/opencage.geocode.dotnetstandard.1.4.0.json#dependencygroup/.netstandard2.0/servicestack.text.core",
          "@type": "PackageDependency",
          "id": "ServiceStack.Text.Core",
          "range": "[1.0.44, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.15.15.01/opencage.geocode.dotnetstandard.1.4.0.json#OpenCage.Geocode.DotNetStandard.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 713,
      "fullName": "OpenCage.Geocode.DotNetStandard.nuspec",
      "length": 1393,
      "name": "OpenCage.Geocode.DotNetStandard.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.15.15.01/opencage.geocode.dotnetstandard.1.4.0.json#lib/netstandard2.0/OpenCage.Geocode.dll",
      "@type": "PackageEntry",
      "compressedLength": 10243,
      "fullName": "lib/netstandard2.0/OpenCage.Geocode.dll",
      "length": 25600,
      "name": "OpenCage.Geocode.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.15.15.01/opencage.geocode.dotnetstandard.1.4.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "geocoding",
    "location",
    ".net",
    "standard"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}