{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.12.10.58/sqlexecution.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "James Igoe",
  "catalog:commitId": "06b88585-dc18-4d9a-9928-d9bfc0e3506e",
  "catalog:commitTimeStamp": "2018-12-09T12:10:58.0561686Z",
  "copyright": "Copyright @ Comparative-Advantage",
  "created": "2015-05-15T11:54:25.98Z",
  "description": "A library that can easily provide threaded execution of SQL statements and commands. It can be used to expose an interface to Microsoft Excel clients, providing threaded, async operations to a single-thread application.\n\nExamples:\n\nSimplifies SQL execution, encapsulating construction, execution, and destruction of SQL elements.",
  "id": "SQLExecution",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-09T12:10:33.24Z",
  "licenseUrl": "http://opensource.org/licenses/ms-pl",
  "listed": false,
  "packageHash": "X6KwRAM+x0eUK+SBmwhBSVSgycZSNr+x0ZTBq3yz3DWYGA6q51KB+1nYlp4DPdnHUQtNiTbjSAt0FD0SoN1CEQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20762,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "This is a first time package publish for me, so use at your own risk, but feel free to contact me if you have issues.\n\nYou will need to build this on a computer with the MS Office DLL's and/or PIA's.\n\n//Usage: \n\nISqlCommandParameters param = new SqlCommandParameters(); \nparam.CommandTimeOut = 60; \nparam.DatabaseName = \"%db name%\"; \nparam.SqlServerInstance = @\"%server name%\"; \nparam.StoredProcedure = \"SELECT * FROM %table%\"; \n\nISqlCommandExecution exec = new SqlCommandExecution(param); \n\nexec.Execute(); \nSystem.Data.DataSet set = exec.Data; \nint rowCount = set.Tables[0].Rows.Count; \n\nexec.Dispose(); \n\n//Alt Usage (with Using): \n\nusing (ISqlCommandExecution execUsing = new SqlCommandExecution(new SqlCommandParameters() \n{ \n   CommandTimeOut = 60, \n   DatabaseName = \"%db name%\", \n   SqlServerInstance = @\"%server name%\", \n   StoredProcedure = \"SELECT * FROM %table%\" \n})) \n{ \n   execUsing.Execute(); \n   System.Data.DataSet setUsing = execUsing.Data; \n\n   //verify it works \n   return setUsing.Tables[0].Rows.Count; \n}",
  "requireLicenseAcceptance": true,
  "summary": "Threaded execution of SQL statements and commands, and with a fa√ßade, exposed to Microsoft Excel clients.",
  "title": "SQL Execution",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.12.10.58/sqlexecution.1.0.0.json#SQLExecution.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 980,
      "fullName": "SQLExecution.nuspec",
      "length": 2178,
      "name": "SQLExecution.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.12.10.58/sqlexecution.1.0.0.json#lib/SQLExecution.dll",
      "@type": "PackageEntry",
      "compressedLength": 7598,
      "fullName": "lib/SQLExecution.dll",
      "length": 17920,
      "name": "SQLExecution.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.12.10.58/sqlexecution.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Excel",
    "add-in",
    "thread",
    "asynchronous",
    "SQL",
    "command"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}