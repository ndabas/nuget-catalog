{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sajith",
  "catalog:commitId": "8769d42a-bdb5-4993-85f5-558c94d7d7bb",
  "catalog:commitTimeStamp": "2020-06-01T07:09:39.893832Z",
  "copyright": "Copyright 2020",
  "created": "2020-06-01T05:57:00.93Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#deprecation",
    "alternatePackage": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#deprecation/alternatePackage",
      "id": "AzureSearch.OData.Filter.Query",
      "range": "*"
    },
    "reasons": [
      "CriticalBugs"
    ]
  },
  "description": "A Helper library to create filter query for Microsoft Azure Cognitive search service",
  "id": "AzureSearch.OData.FilterQuery",
  "isPrerelease": false,
  "lastEdited": "2020-06-01T07:09:31.527Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": false,
  "packageHash": "mpjWGFGrs5ek28ALc8giNXMUvT95/EmcTcxn2ztfKOZeUiURM03iZqD21RsTZG/HhCFRV8tru//m8g8HAVmAHg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14133,
  "projectUrl": "https://github.com/sajith-v/AzureSearch.oData.QueryBuilder",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Support to more operators added",
  "requireLicenseAcceptance": false,
  "title": "AzureSearch.OData.FilterQuery",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#dependencygroup/frameworkdependency",
          "@type": "PackageDependency",
          "id": "FrameworkDependency",
          "range": "[1.0.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#AzureSearch.OData.FilterQuery.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 470,
      "fullName": "AzureSearch.OData.FilterQuery.nuspec",
      "length": 933,
      "name": "AzureSearch.OData.FilterQuery.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#lib/netcoreapp2.1/AzureSearch.OData.Expression.dll",
      "@type": "PackageEntry",
      "compressedLength": 2362,
      "fullName": "lib/netcoreapp2.1/AzureSearch.OData.Expression.dll",
      "length": 6144,
      "name": "AzureSearch.OData.Expression.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.01.07.09.39/azuresearch.odata.filterquery.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}