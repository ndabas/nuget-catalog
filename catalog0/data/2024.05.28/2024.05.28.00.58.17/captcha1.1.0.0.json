{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.00.58.17/captcha1.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "CaptchaSolver",
  "catalog:commitId": "b5547e78-5082-434a-b88e-0a6ae1ed09d8",
  "catalog:commitTimeStamp": "2024-05-28T00:58:17.0531402Z",
  "created": "2024-05-28T00:55:40.517Z",
  "description": "// Окно Авторизации\n\n    public static int countOfErrors = 0;\n    public Authorization()\n    {\n        InitializeComponent();\n    }\n\n    private string GenerateCaptcha()\n    {\n        Random random = new Random();\n        const string chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        return new string(Enumerable.Repeat(chars, 4).Select(s => s[random.Next(s.Length)]).ToArray());\n    }\n\n    private async void ToAuthorizationButton_Click(object sender, RoutedEventArgs e)\n    {\n        if ....\n        {\n            ......\n\n            string connectionString = ....\n            using (SqlConnection connection = new SqlConnection(connectionString))\n            {\n                ....\n\n                try\n                {\n                    connection.Open();\n                    ....\n                    if (reader.Read())\n                    {\n                        ....\n                        if (roleId == 3)\n                        {\n                            .....\n                        }\n                        if (roleId == 1)\n                        {\n                            .....\n                        }\n                    }\n                    else\n                    {\n                        countOfErrors++;\n                        if (countOfErrors >= 3)\n                        {\n                            MessageBox.Show(\"Программа остановлена на 10 сек\");\n                            await Task.Delay(10000);\n                            countOfErrors = 0;\n                        }\n                        else\n                        {\n                            string captcha = GenerateCaptcha();\n                            Captcha captchaWindow = new Captcha(captcha);\n                            captchaWindow.Show();\n                            this.Close();\n                        }\n                    }\n                    ....\n                }\n                catch (Exception ex)\n                {\n                    ....\n                }\n            }\n        }\n        else\n        {\n            ....\n        }\n    }",
  "id": "Captcha1",
  "isPrerelease": false,
  "lastEdited": "2024-05-28T00:58:12.08Z",
  "listed": true,
  "packageHash": "0u+zkEsjvROOhy3LkGyShRbr5BOk50qgLUtLyShr/XUSMM+HIs1yWDtoV1Lb3FzVbtAJBHaJt5P8JV6Cb39Y1Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19199,
  "published": "2024-05-28T00:55:40.517Z",
  "repository": "",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.00.58.17/captcha1.1.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.00.58.17/captcha1.1.0.0.json#Captcha1.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 929,
      "fullName": "Captcha1.nuspec",
      "length": 2622,
      "name": "Captcha1.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.00.58.17/captcha1.1.0.0.json#lib/net8.0/CaptchaSolver.dll",
      "@type": "PackageEntry",
      "compressedLength": 2976,
      "fullName": "lib/net8.0/CaptchaSolver.dll",
      "length": 10752,
      "name": "CaptchaSolver.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.05.28.00.58.17/captcha1.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12924,
      "fullName": ".signature.p7s",
      "length": 12924,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}