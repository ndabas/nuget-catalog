{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "gimlichael",
  "catalog:commitId": "05ee133d-e969-4707-8118-6669ee6b6c87",
  "catalog:commitTimeStamp": "2021-03-07T02:50:51.8740698Z",
  "copyright": "Copyright © Geekle 2009-2021. All rights reserved.",
  "created": "2021-03-07T02:48:35.343Z",
  "description": "The Cuemon namespace contains fundamental factories, classes and base classes that define invaluable reference and value types that greatly extends the System namespace. Abundant support for delegates and functional programming.",
  "iconUrl": "https://nblcdn.net/cuemon/128x128.png",
  "id": "Cuemon.Core",
  "isPrerelease": true,
  "lastEdited": "2021-03-07T02:50:25.377Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "zmdyLh7Min3qj0Tot0K9CXmKHd6CCZFEbarWLsD2wLBsd0bQ+fiHIqFtJ3qWLgBOQGYt/BssaJ2j+y5v+dkhMw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 427788,
  "projectUrl": "https://www.cuemon.net/",
  "published": "2021-03-07T02:48:35.343Z",
  "releaseNotes": "Version: 6.0.0\nAvailability: NET Standard 2.0, NET 5.0\n \n# Upgrade Steps\n- To use the earlier built-in support for transient fault handling, please refer to the Cuemon.Resilience namespace, as it has been merged and refactored out of this assembly\n- To use the earlier built-in support for time-measuring and describing exceptions, please refer to the Cuemon.Diagnostics namespace, as it has been merged and refactored out of this assembly\n- To use the earlier built-in support for a computed checksum operation, please refer to the Cuemon.Data.Integrity namespace, as it has been merged and refactored out of this and the Cuemon.Integrity assembly\n- To use the earlier built-in support for I/O operations, please refer to the Cuemon.IO namespace, as it has been merged and refactored out of this assembly\n- Any former extension methods of the Cuemon namespace (and related) was either removed completely or merged into their respective Cuemon.Extensions.* namespace equivalent\n- The extent of refactoring applied to this project resulted in so many breaking changes that a git diff is advisable\n- Parts of the deprecated Cuemon.Runtime assembly was merged and refactored into this assembly keeping its original namespace (Cuemon.Runtime)\n- Parts of the deprecated Cuemon.Security assembly was merged and refactored into this assembly keeping its original namespace (Cuemon.Security)\n \n# Breaking Changes\n- REMOVED StringFormatter class from the Cuemon namespace\n- REMOVED StandardizedDateTimeFormatPattern enum from the Cuemon namespace\n- MOVED AsyncOptions class from the Cuemon.Threading namespace to its own assembly (by the same name and namespace)\n- REMOVED ComparisonUtility class from the Cuemon.Collections.Generic namespace\n- REMOVED DictionaryConverter class from the Cuemon.Collections.Generic namespace\n- REMOVED DictionaryUtility class from the Cuemon.Collections.Generic namespace\n- REMOVED EnumerableConverter class from the Cuemon.Collections.Generic namespace\n- REMOVED EnumerableUtility class from the Cuemon.Collections.Generic namespace\n- REMOVED ISortableTable interface from the Cuemon.Collections.Generic namespace\n- REMOVED ListUtility class in from Cuemon.Collections.Generic namespace\n- REMOVED PartitionCollection class from the Cuemon.Collections.Generic namespace\n- REMOVED MethodBaseConverter class from the Cuemon.Reflection namespace\n- REMOVED ReflectionUtility class from the Cuemon.Reflection namespace\n- REMOVED JsonConverter class from the Cuemon.Runtime.Serialization namespace\n- REMOVED JsonInstance class from the Cuemon.Runtime.Serialization namespace\n- REMOVED JsonInstanceCollection class from the Cuemon.Runtime.Serialization namespace\n- REMOVED JsonTextWriter class from the Cuemon.Runtime.Serialization namespace\n- REMOVED JsonWriter class from the Cuemon.Runtime.Serialization namespace\n- REMOVED EncodingConverter class from the Cuemon.Text namespace\n- REMOVED EncodingUtility class from the Cuemon.Text namespace\n- REMOVED JsonWebToken class from the Cuemon.Security.Web namespace\n- REMOVED JsonWebTokenHashAlgorithm class from the Cuemon.Security.Web namespace\n- REMOVED JsonWebTokenHashAlgorithmConverter class from the Cuemon.Security.Web namespace\n- REMOVED JsonWebTokenHeader class from the Cuemon.Security.Web namespace\n- REMOVED JsonWebTokenPayload class from the Cuemon.Security.Web namespace\n- REMOVED Obfuscator class from the Cuemon.Security namespace\n- REMOVED ObfuscatorMapping class from the Cuemon.Security namespace\n- REMOVED SecurityToken class from the Cuemon.Security namespace\n- REMOVED SecurityTokenSettings class from the Cuemon.Security namespace (replaced with SignedUriOptions in the Cuemon.Extensions.Net.Security namespace)\n- REMOVED SecurityUtility class from the Cuemon.Security namespace\n- MOVED PreambleSequence enum from the Cuemon namespace to the Cuemon.Text namespace\n- REMOVED ArgumentEmptyException class from the Cuemon namespace\n- RENAMED AssignmentUtility class in the Cuemon namespace to Calculator\n- REMOVED ByteConverter class from the Cuemon namespace\n- REMOVED ByteUtility class from the Cuemon namespace\n- REMOVED CharConverter class from the Cuemon namespace\n- REMOVED ConditionBuilder class from the Cuemon namespace\n- REMOVED Converter class from the Cuemon namespace\n- REMOVED ConvertibleConverter class from the Cuemon namespace\n- REMOVED DateTimeConverter class from the Cuemon namespace\n- REMOVED DelegateUtility class from the Cuemon namespace\n- REMOVED DoubleConverter class from the Cuemon namespace\n- REMOVED EnumUtility class from the Cuemon namespace\n- REMOVED EventUtility class from the Cuemon namespace\n- REMOVED ExceptionUtility class from the Cuemon namespace\n- REMOVED GuidConverter class from the Cuemon namespace\n- REMOVED GuidUtility class from the Cuemon namespace\n- REMOVED HierarchySerializer class from the Cuemon namespace\n- REMOVED HierarchyUtility class from the Cuemon namespace\n- REMOVED LoopUtility class from the Cuemon namespace\n- REMOVED MethodWrappedException class from the Cuemon namespace\n- REMOVED NumberUtility class from the Cuemon namespace\n- REMOVED ObjectConverter class from the Cuemon namespace\n- REMOVED RandomSeverity enum from the Cuemon namespace\n- REMOVED StandardizedDateTimeFormatPattern enum from the Cuemon namespace\n- REMOVED StringConverter class from the Cuemon namespace\n- REMOVED StringFormatter class from the Cuemon namespace\n- REMOVED StringUtility class from the Cuemon namespace\n- REMOVED StructUtility class from the Cuemon namespace\n- REMOVED TesterDoer class from the Cuemon namespace\n- REMOVED TesterFuncUtility class from the Cuemon namespace\n- REMOVED TimeSpanConverter class from the Cuemon namespace\n- REMOVED TupleUtility class from the Cuemon namespace\n- REMOVED TypeCodeConverter class from the Cuemon namespace\n- REMOVED TypeUtility class from the Cuemon namespace\n- REMOVED UriConverter class from the Cuemon namespace\n- REMOVED UriUtility class from the Cuemon namespace\n- REMOVED VersionUtility class from the Cuemon namespace\n- MOVED LatencyException class from the Cuemon namespace to its own assembly and namespace (Cuemon.Resilience)\n- MOVED TransientOperation class from the Cuemon namespace to its own assembly and namespace (Cuemon.Resilience)\n- MOVED TransientFaultEvidence class from the Cuemon namespace to its own assembly and namespace (Cuemon.Resilience)\n- MOVED TransientFaultException class from the Cuemon namespace to its own assembly and namespace (Cuemon.Resilience)\n- MOVED TransientOperation class from the Cuemon namespace to its own assembly and namespace (Cuemon.Resilience)\n- MOVED TransientOperationOptions class from the Cuemon namespace to its own assembly and namespace (Cuemon.Resilience)\n- REMOVED IMessageLocalizer interface from the Cuemon.Globalization namespace\n \n# New Features\n- ADDED ResourceAttribute class in the Cuemon.Globalization namespace that provides a generic way to support localization on attribute decorated methods\n- ADDED Arguments class in the Cuemon.Collections.Generic namespace that provides a set of static methods for both typing (no conversion) and converting a variable number of arguments into its equivalent T:object[], IEnumerable{T} and T:T[]\n- ADDED EnumReadOnlyDictionary class in the Cuemon.Collections.Generic namespace that represents a read-only collection of key/value pairs that provides information about the specified TEnum\n- ADDED PartitionerCollection class in the Cuemon.Collections.Generic namespace that represents a generic and read-only collection that is iterated in partitions\n- ADDED PartitionerEnumerable class in the Cuemon.Collections.Generic namespace that exposes the enumerator, which supports iteration in partitions over a collection of a specified type\n- ADDED HierarchySerializer class in the Cuemon.Runtime.Serialization namespace that provides a way to serialize objects to nodes of IHierarchy{T}\n- ADDED Formatter class in the Cuemon.Runtime.Serialization.Formatters namespace that is an abstract class that supports serialization and deserialization of an object, in a given format\n- ADDED CyclicRedundancyCheck64 class in the Cuemon.Security namespace that provides a CRC-64 implementation of the CRC (Cyclic Redundancy Check) checksum algorithm for 64-bit hash values\n- ADDED CyclicRedundancyCheckAlgorithm enum in the Cuemon.Security namespace that provides different models of the CRC algorithm family\n- ADDED CyclicRedundancyCheckOptions class in the Cuemon.Security namespace that specifies options related to CyclicRedundancyCheck\n- ADDED FowlerNollVo1024 class in the Cuemon.Security namespace that provides an implementation of the FVN (Fowler–Noll–Vo) non-cryptographic hashing algorithm for 1024-bit hash values\n- ADDED FowlerNollVo128 class in the Cuemon.Security namespace that provides an implementation of the FVN (Fowler–Noll–Vo) non-cryptographic hashing algorithm for 128-bit hash values\n- ADDED FowlerNollVo256 class in the Cuemon.Security namespace that provides an implementation of the FVN (Fowler–Noll–Vo) non-cryptographic hashing algorithm for 256-bit hash values\n- ADDED FowlerNollVo32 class in the Cuemon.Security namespace that provides an implementation of the FVN (Fowler–Noll–Vo) non-cryptographic hashing algorithm for 32-bit hash values\n- ADDED FowlerNollVo512 class in the Cuemon.Security namespace that provides an implementation of the FVN (Fowler–Noll–Vo) non-cryptographic hashing algorithm for 512-bit hash values\n- ADDED FowlerNollVo64 class in the Cuemon.Security namespace that provides an implementation of the FVN (Fowler–Noll–Vo) non-cryptographic hashing algorithm for 64-bit hash values\n- ADDED FowlerNollVoAlgorithm enum in the Cuemon.Security namespace that defines the algorithms of the Fowler-Noll-Vo hash function\n- ADDED FowlerNollVoHash class in the Cuemon.Security namespace that represents the base class from which all implementations of the Fowler–Noll–Vo non-cryptographic hashing algorithm must derive\n- ADDED FowlerNollVoOptions class in the Cuemon.Security namespace that specifies options related to FowlerNollVoHash\n- ADDED Hash class in the Cuemon.Security namespace that represents the base class from which all implementations of hash algorithms and checksums should derive\n- ADDED HashFactory class in the Cuemon.Security namespace that provides access to factory methods for creating and configuring Hash instances\n- ADDED IHash interface in the Cuemon.Security namespace that defines the bare minimum of both non-cryptographic and cryptographic transformations\n- ADDED NonCryptoAlgorithm enum in the Cuemon.Security namespace that specifies the different implementations of a non-cryptographic hashing algorithm\n- ADDED ByteOrderMark class in the Cuemon.Text namespace that provides a set of static methods for Unicode related operations\n- ADDED EnumStringOptions class in the Cuemon.Text namespace that specifies options related to ParserFactory.FromEnum\n- ADDED GuidStringOptions class in the Cuemon.Text namespace that specifies options related to ParserFactory.FromGuid\n- ADDED IConfigurableParser interface in the Cuemon.Text namespace that defines methods that converts a string to an object of a particular type having a way to configure the input\n- ADDED IEncodingOptions interface in the Cuemon.Text namespace that defines configuration options for Encoding\n- ADDED IParser interface in the Cuemon.Text namespace that defines methods that converts a string to an object of a particular type\n- ADDED ParserFactory class in the Cuemon.Text namespace that provides access to factory methods that are tailored for parsing operations adhering IParser and IConfigurableParser{TOptions}\n- ADDED ProtocolRelativeUriStringOptions class in the Cuemon.Text namespace that specifies options related to ParserFactory.FromProtocolRelativeUri\n- ADDED Stem class in the Cuemon.Text namespace that provides a way to support assigning a stem to a value\n- ADDED UriStringOptions class in the Cuemon.Text namespace that specifies options related to ParserFactory.FromUri\n- ADDED Alphanumeric class in the Cuemon namespace that provides a set of alphanumeric constant and static fields that consists of both letters, numbers and other symbols (such as punctuation marks and mathematical symbols)\n- ADDED BinaryPrefix class in the Cuemon namespace that defines a binary unit prefix for multiples of measurement for data that refers strictly to powers of 2\n- ADDED BitMultipleTable class in the Cuemon namespace that represent a table of both binary and metric prefixes for a BitUnit\n- ADDED BitUnit class in the Cuemon namespace that represents a unit of measurement for bits and is used with measurement of data\n- ADDED ByteMultipleTable class in the Cuemon namespace that represent a table of both binary and metric prefixes for a ByteUnit\n- ADDED ByteMultipleTable class in the Cuemon namespace that represents a unit of measurement for bytes and is used with measurement of data\n- ADDED Convertible class in the Cuemon namespace that provides a set of static methods, suitable for verifying integrity of data, that convert IConvertible implementations to and from a sequence of bytes\n- ADDED ConvertibleConverterDictionary class in the Cuemon namespace that represents a collection of function delegates that converts an IConvertible implementation to its T:byte[] equivalent\n- ADDED ConvertibleOptions class in the Cuemon namespace that specifies options related to Convertible\n- ADDED DecimalPrefix class in the Cuemon namespace that defines a decimal (metric) unit prefix for multiples and submultiples of measurement that refers strictly to powers of 10\n- ADDED Decorator class in the Cuemon namespace that provides a way to dynamically enclose/wrap an object to support the decorator pattern\n- ADDED DelimitedString class in the Cuemon namespace that provides a set of static methods to convert a sequence into a delimited string and break a delimited string into substrings\n- ADDED DelimitedStringOptions class in the Cuemon namespace that specifies options related to DelimitedString.Split\n- ADDED Disposable class in the Cuemon namespace that provides a mechanism for releasing both managed and unmanaged resources with focus on the former\n- ADDED DisposableOptions class in the Cuemon namespace that specifies options related to Disposable\n- ADDED EndianOptions class in the Cuemon namespace that specifies options related to BitConverter\n- ADDED Endianness class in the Cuemon namespace that defines the order in which a sequence of bytes are represented\n- ADDED Eradicate class in the Cuemon namespace that provides a set of static methods for eradicating different types of values or sequences of values\n- ADDED ExceptionCondition class in the Cuemon namespace that provides a fluent and generic way to setup a condition for raising an Exception\n- ADDED ExceptionInsights class in the Cuemon namespace that provides a set of static methods for embedding environment specific insights to an exception\n- ADDED FinalizeDisposable class in the Cuemon namespace that provides a mechanism for releasing both managed and unmanaged resources with focus on the latter\n- ADDED FormattingOptions class in the Cuemon namespace that specifies options related to IFormatProvider\n- ADDED Generate class in the Cuemon namespace that provides a set of static methods for generating different types of values or sequences of values\n- ADDED GuidFormats enum in the Cuemon namespace that specifies allowed GUID formats in parsing related methods\n- ADDED IDecorator interface in the Cuemon namespace that defines a decorator that exposes the inner decorated type\n- ADDED IPrefixMultiple interface in the Cuemon namespace that defines a unit prefix that can can be expressed as a either a multiple or a submultiple of the unit of measurement\n- ADDED IUnit interface in the Cuemon namespace that defines a unit of measurement that is used as a standard for measurement of the same kind of quantity\n- ADDED MultipleTable class in the Cuemon namespace that defines a unit of measurement that provides a way to represent a table of both binary and metric prefixes that precedes a unit of measure to indicate a multiple of the unit\n- ADDED MultipleTableOptions class in the Cuemon namespace that specifies options related to MultipleTable\n- ADDED NamingStyle enum in the Cuemon namespace that specifies ways that a string must be represented in terms of naming style\n- ADDED ObjectFormattingOptions class in the Cuemon namespace that specifies options related to ParserFactory.FromObject\n- ADDED ObjectPortrayalOptions class in the Cuemon namespace that specifies options related to Generate.ObjectPortrayal\n- ADDED Patterns class in the Cuemon namespace that provides a generic way to support different types of design patterns and practices with small utility methods\n- ADDED StringFactory class in the Cuemon namespace that provides access to factory methods for creating and configuring encoded string instances\n- ADDED SystemSnapshot enum in the Cuemon namespace that specifies the system states to capture runtime\n- ADDED UnitFormatOptions class in the Cuemon namespace that specifies options related to BitUnit and ByteUnit\n- ADDED UnitPrefix class in the Cuemon namespace that specifies the two standards for binary multiples and decimal multiples\n- ADDED UnitPrefixFormatter class in the Cuemon namespace that defines the string formatting of objects having an implementation of either IPrefixUnit or IUnit\n \n# Bug Fixes\n- FIXED critical bug in the DateSpan struct located on the Cuemon namespace\n- Several; please do a git diff.\n \n# Improvements\n- CHANGED HashResult class in the Cuemon.Security namespace to implement IEquatable{HashResult} as well as other improvements\n- EXTENDED Condition class in the Cuemon namespace with several new static members: Query, IsEnum, IsProtocolRelativeUrl, IsUri, HasConsecutiveCharacters, IsBase64, IsBinaryDigits, IsPrime, IsEven, IsOdd, IsCountableSequence (Query makes this class extensible - enabling you to write your own conditions)\n- REFACTORED TaskActionFactory class in the Cuemon namespace to have CancellationToken support\n- REFACTORED TaskFuncFactory class in the Cuemon namespace to have CancellationToken support\n- EXTENDED Validator class in the Cuemon namespace with several new static members: ThrowIf, ThrowWhenCondition, ThrowIfNumber, ThrowIfNotNumber, ThrowIfNull, ThrowIfSequenceEmpty, ThrowIfEmpty, ThrowIfContainsInterface, ThrowIfNotContainsInterface, ThrowIfNotContainsType, ThrowIfEnumType, ThrowIfNotBinaryDigits, ThrowIfNotBase64String, ThrowIfTrue, ThrowIfFalse, ThrowIfSequenceNullOrEmpty\n \n# Quality Analysis Actions\n- JUSTIFIED several ROSLYN analysis findings\n- CHANGED SystemSnapshot enum in the Cuemon namespace to SystemSnapshots (https://rules.sonarsource.com/csharp/RSPEC-2342)\n- CHANGED Validator class in the Cuemon namespace to be compliant with https://rules.sonarsource.com/csharp/RSPEC-4136\n- CHANGED Hierarchy class in the Cuemon namespace to be compliant with https://rules.sonarsource.com/csharp/RSPEC-1066\n- CHANGED Hierarchy class in the Cuemon namespace to be compliant with https://rules.sonarsource.com/csharp/RSPEC-4456\n- FIXED UnitPrefixFormatter class in the Cuemon namespace to be compliant with https://rules.sonarsource.com/csharp/RSPEC-927\n- JUSTIFIED https://rules.sonarsource.com/csharp/RSPEC-3925 on DataPairDictionary class in the Cuemon.Collections namespace\n- CHANGED CyclicRedundancyCheck class in the Cuemon.Security namespace to be compliant with https://rules.sonarsource.com/csharp/RSPEC-1264\n- CHANGED Arguments class in the Cuemon.Collections.Generic namespace to be compliant with https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1825\n- CHANGED ProcessInfo class in the Cuemon.Diagnostics namespace to be compliant with https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1834\n \n# Other Changes\n- Several ;-)",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "6.0.0-rc.16",
  "version": "6.0.0-rc.16",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net5.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#Cuemon.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 5016,
      "fullName": "Cuemon.Core.nuspec",
      "length": 22019,
      "name": "Cuemon.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#lib/net5.0/Cuemon.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 130597,
      "fullName": "lib/net5.0/Cuemon.Core.dll",
      "length": 343040,
      "name": "Cuemon.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#lib/net5.0/Cuemon.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 74901,
      "fullName": "lib/net5.0/Cuemon.Core.xml",
      "length": 1144441,
      "name": "Cuemon.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#lib/netstandard2.0/Cuemon.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 130387,
      "fullName": "lib/netstandard2.0/Cuemon.Core.dll",
      "length": 342528,
      "name": "Cuemon.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#lib/netstandard2.0/Cuemon.Core.xml",
      "@type": "PackageEntry",
      "compressedLength": 74901,
      "fullName": "lib/netstandard2.0/Cuemon.Core.xml",
      "length": 1144441,
      "name": "Cuemon.Core.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.03.07.02.50.51/cuemon.core.6.0.0-rc.16.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "action-factory",
    "bit-unit",
    "byte-unit",
    "calculator",
    "configure",
    "configure-revert",
    "configure-exchange",
    "configurable",
    "condition",
    "options-pattern",
    "data-reader",
    "decorator",
    "delimited-string",
    "disposable",
    "finalize-disposable",
    "safe-invoke",
    "safe-invoke-async",
    "func-factory",
    "patterns",
    "reference-project",
    "clean-architecture",
    "clean-code",
    "task-action-factory",
    "task-func-factory",
    "template",
    "template-factory",
    "time-range",
    "time-unit",
    "validator",
    "guard",
    "text-encoding",
    "parser-factory",
    "security",
    "aes-cryptor",
    "cyclic-redundancy-check",
    "fowler-noll-vo-hash",
    "hash-factory",
    "hash-result",
    "hmac-message-digest",
    "hmac-secure-hash-algorithm",
    "keyed-crypto-hash",
    "keyed-crypto-algorithm",
    "message-digest",
    "non-crypto-algorithm",
    "secure-hash-algorithm",
    "unkeyed-crypto-hash"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}