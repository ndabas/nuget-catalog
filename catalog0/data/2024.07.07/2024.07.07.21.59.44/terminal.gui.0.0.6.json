{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Miguel de Icaza, Charlie Kindel (@tig), @BDisp",
  "catalog:commitId": "c9741780-c159-4bea-be7d-96860a7aadec",
  "catalog:commitTimeStamp": "2024-07-07T21:59:44.1568479Z",
  "created": "2022-05-27T02:23:55.73Z",
  "description": "Cross Platform Terminal UI toolkit for .NET",
  "iconFile": "logo.png",
  "id": "Terminal.Gui",
  "isPrerelease": false,
  "lastEdited": "2024-07-07T21:57:57.197Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": false,
  "packageHash": "J0NRTXRyS0kOSLILL5xMv1d9G8Ca9WePnXueczXv80/4+u1xPYMdALQbAXWy3AtIArB0yKk20CKRYEgt/Di2jw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 973318,
  "projectUrl": "https://github.com/migueldeicaza/gui.cs/",
  "published": "1900-01-01T00:00:00Z",
  "readmeFile": "README.md",
  "releaseNotes": "v1.6.0\n      * Adds ColorPicker control\n      * Adds Context Menu to TreeView\n      * Adds support for custom colors in TreeView\n      * Adds Data field to MenuItem\n      * Adds Timeout thread safety\n      * Adds better docs for Application.Shutdown ()\n      * Fixes #1699. Menu closes on button press and menu hot-key text renders correctly\n      * Fixes #1675. ContextMenu MenuItems typo\n      * Fixes #1715. UI Catalog about box version\n      * Fixes #1712. Intermittent Github Action build failures\n      * Fixes remaining wide runes render issues including #1693 Character Map\n      * Fixes the draw clip bounds issue visible on ScrollView.\n      * Fixes UpdateScreen running twice on Application.Refresh because Driver. Refresh already does.\n      * Fixes TextView throwing when WordWrap is true on constructor initialization.\n      * Fixes RunTimers not checking for key collisions in list when adding to timeouts\n      * Fixes erroneous namespace on LineView to match other views\n      * Fixes #1723. ProgressBar with Percentage has extra spaces on the right\n      * Fixes nullref on unclean shutdown\n      * Fixes Thin tabview\n      * Fixes #1732. Toplevel shouldn't clear the buffer.\n      * Fixes #1730. AllViewsTester throw exception on Dim.Percent.\n\n      v1.5.0\n      * Localization support added. en-US, Japanese, fr-FR, and pt-PT\n      * Adds Key Binding support. Also refactors Autocomplete.\n      * Adds a popup ContextMenu feature. Implements ContextMenu for TextField.\n      * Adds HistoryText class for undo and redo text.\n      * Adds mouse support and more features to the HexView.\n      * Adds feature to display the sub-menus on a single frame instead multiple frames.\n      * Adds Support for Colored ListView Items\n      * Adds context menu and localization on TextView.\n      * Cleanup of UI Catalog scenarios\n      * #1666  Fixes the MenuIem Width for wider runes\n      * #1658  Fixes wide runes not render well on NetDriver.\n      * #1656  Cursor visibility fix.\n      * #1652  Fixed Axis.Text being a field while every other class member is a property\n      * #1651  Dispose `FileSystemWatcher` instance before creating another in `FileDialog`\n      * #1639  Fixed TableView when redrawing a System.DataTable that has no columns\n      * #1633  Fixes the WindowsDriver dirty redrawn on resizing if HeightAsBuffer is true.\n      * #1630  Fixes TextField context menu not showing with the current localization.\n      * #1629  Bump actions/checkout from 2 to 3\n      * #1627  Table scroll fix\n      * #1622  Changed Button Text property to use override instead of new.\n      * #1614  Fixes the ProcessHotKey event.\n      * #1612  Fixes the CanFocus equal to false from setting HasFocus to true again.\n      * #1608  Implementing undo/redo to back tab key.\n      * #1606  Fixes ComboBox text and list if the height is equal to one.\n      * #1603  Fixes the auto-size text bug.\n      * #1600  Fixes FileSystemWatcher exception on Linux.\n      * #1599  Adding unit test for the ListView RowRender event.\n      * #1596  Standalone update fix\n      * #1595  Fixes #1588 - Documentation for keybinding\n      * #1593  Fixes TableView not activating after keybinding refactor\n      * #1586  fixing #1560 - Fix docfx errors and warnings\n      * #1585  Fixes #1584 - ComboBox is hiding elements below from being clicked/focused\n      * #1574  Use custom resolver for libcoreclr.so also for .NET 6.0\n      * #1572  Added MenuOpened event and others bug fixes.\n      * #1564  Fixes #1525 - Gives TextField the same backspace behavior as TextView\n      * #1563  Fixes #1557 - Border and PanelView fixes\n      * #1562  Fixes #1560. Documentation link broken.\n      * #1561  Fixes #1559 - Added DesiredCursorVisibility to TreeView\n      * #1550  Adding Application.Shutdown and updating ReactiveUI.Fody.\n\n      v1.4.0\n      * #1546  Fixes #1535. Added IsMouseDisabled prop to Application\n      * #1515  Upgrading to Net6.0\n      * #1508  Allows ListView trigger the Enter and Leave events.\n      * #1506  Prevents a Process breaks rendering on Linux.\n      * #1505  Fixes #1499. Allowing border settings for the MessageBox.\n      * #1504  Fixes #1502. Prevents high CPU usage.\n\n      v1.3.0\n      * #1491  Fix link to MainLoop docs in README.md\n      * #1489  Dynamic menu/statusbar and Enable property fix.\n      * #1488  Fixed label positions to begin at Margins not just bottom left of screen\n      * #1486  Scrollbarview ensures host always focused.\n      * #1484  NetDriver fixes keys modifiers not reseting and enter key on Windows Terminal.\n      * #1479  Trying updating FSharpExample to net5.0\n      * #1478  Fixes #1475. Selection ending with a white space error.\n      * #1476  Added PoshRedisViewer to the list of Showcases/Examples\n      * #1473  Bump ReportGenerator from 4.8.12 to 4.8.13\n      * #1472  ComboBox cursonDownKey nullref fix\n      * #1468  Fixes #1467. AlternateForward/BackwardKey bypasses dialog modality\n      * #1466  Fixes WindowsDriver HeightAsBuffer set to false.\n      * #1450  Added Application.QuitKey property to allow change the quitting application key.\n      * #1449  Bump ReactiveMarbles.ObservableEvents.SourceGenerator from 1.1.3 to 1.1.4\n      * #1448  Fixes #1445. Fixing more the Curses and WSL clipboard.\n      * #1447  Fixes #1446. Added more features to the Border and Toplevel focus.\n      * #1441  Fixes #1438. Backspace not redrawing screen under some situations.\n      * #1440  feature: Don't pull Terminal.Gui from NuGet, use ReactiveMarbles.ObservableEvents\n      * #1437  Fixed bug setting ColorScheme on Autocomplete\n      * #1436  Border feature\n      * #1432  tweaked readme\n\n      v1.2.1\n      * Fixes code block fencing\n      * NetDriver triple click mouse bug fix.\n      * WindowsDriver double click mouse bug fix.\n      * Fixes CursesDriver mouse and reset issue.\n      * Correctly mark the .NET Framework reference assemblies as private.\n      * Fix version conflicts caused by PR#1412\n      * Autocomplete for TextView\n      * Fixes #1402. Only WindowsDriver supports horizontal scroll.\n      * Fixes #1396. Using the Loaded event instead the Ready event.\n      * Fixes #1394. Added ReflectedType to check for overridden.\n      * Fixes #1389. Added a unidirectional feature to the Marquee styles to the ProgressBar.\n      * Fixes #1387. Allowing the UnitTests project to test internal keywords.\n      * Fixes #1384. Added a VisibleChanged event on the View class.\n      * Fixes #1381. Unit tests to demonstrate the Key enum ambiguity check.\n      * Fixes #546. Enhancement ProgressBar.\n      * Disables MinVer on Debug builds\n      * Adds Lineview\n      * CheckBox AutoSize should initialize with the Label default.\n      * Fixes to avoid exception with the ComboBox in All Views Tester.\n      * Simplifying FrameView constructors avoiding redundant code.\n      * Button text should be centered by default.\n      * Fixes #1078. ColorScheme setter now calls SetNeedsDisplay.\n      * Bump ReportGenerator from 4.8.11 to 4.8.12\n      * Fixes #1314. TextView now exposes file exceptions from callers.\n      * Prevents application crash if OS clipboard is not supported.\n      * Fixes #1358. Attribute.Foreground / Attribute.Background now working with CursesDriver\n      * Added support for coloring cells in TableView\n      * More unit test for issue #1344, testing IsVertical as False.\n      * Fix for #1353 (tab view not refreshing in some circumstances)\n      * Fixes #1344. Setting showBothScrollIndicator to false on the constructor don't throws NullReferenceException anymore.\n      * Fixes #1341. Now if AutoSize is true the Bounds size is always updated by using the Dim.Fill or the Dim.Absolute.\n      * Resolves: Add GitHub Codespaces configuration\n      * Expose TextView color methods as protected virtual (allows custom colors)\n      * Fixes InvalidOperationException from throwing when removing the label on the LabelsAsLabels scenario.\n      * Added a Initialize method to the Window to simplify the constructors.\n      * Fixes GetCurrentWidth and GetCurrentHeight providing the correct current values.\n      * Fixes CursesDriver resize issue.\n      * Toplevel improvement as a subviews container without frame borders.\n      * Prevents ListView top to be less than zero if source count is zero.\n      * Fixes #1326. Prevent selected item to be equal to the source count.\n      * Fixes #1327. Fixes TextField backspace and canceling TextChanging.\n      * Prevents WindowSize event from being always triggered in Netdriver unnecessarily.\n      * Fix bug where series/annotations are added during render\n      * Fixes #1318. Ensures that the OS clipboard is always sets.\n      * Fixes #983. Improving clipboard with interaction with the OS.\n      * Added Attributes tests; balanced Application.Init/Shutdown\n\n      v1.1.1\n      * Fixes #1307 - MainLoop timeouts duplicate keys error.\n\n      v1.1.0\n      * TextView CursorLeft/CursorRight change focus when at start/end #1271\n      * Fixes #1273 - Add direction summaries\n      * Fixes #1276 - Added TextDirection constructor to View and Label and improving AutoSize\n      * Fixes #1272 - Fixes Linux/Mac window sizing\n      * Fixes #1281 - Fixed CursesDriver colors. Added BasicColors scenario\n      * Fixes #1266 - Using Ctrl+PageUp/PageDown to allowing navigate through windows.\n      * TableView - adds last column dividing line #1289\n      * Fixes #1291. Combining two PosAbsolute or two DimAbsolute result on a PosAbsolute or DimAbsolute\n      * Changed Console.WriteLine to ITestOutputHelper in tests #1305\n\n      v1.0.0\n      * Version 1.0 Release!!! - Thank you to @migueldeicaza, @tig, @bdisp, @tznind, @jmprricone, and many more!\n\n      v1.0.0-rc.13\n      * NEW CONTROL: GraphView - thanks @tznind!\n      * Fixes #1256 - OutConsoleGridView no longer works - ENTER does not work\n\n      v1.0.0-rc.12\n      * Fixes #1257 - ListView's ProcessKey should return false if no OpenSelectedItem handler is defined\n\n      v1.0.0-rc.10\n      * Fixes #931. Fixed the limit 25 lines issue\n      * Fixes #1251. Fixes TextValidateProvider exception on the All View Tester scenario.\n\n      v1.0.0-rc.9\n      * Fixes #1210. Added AllowsReturn, AllowsTab and Multiline into the TextView.\n      * Fixes #1241. Added SendKeys feature to the ConsoleDriver.\n      * Fixes #418 and #931. Unix terminal hangs after exit.\n\n      v1.0.0-rc.7\n      * Added TextValidateField - Enables masked and validated text input. Thanks @jmperricone!\n      * Refactored TreeView and TabView to reduce api surface area\n      * Added code coverage reporting\n\n      v1.0.0-rc.1\n      * Added Dependabot support and updated dependencies\n      * Renamed master branch to main\n      * Fixes #1211. Added support to TextView for word based operations Ctrl+Del and Ctrl+Backspace\n      * Fixes #1208. Now the selected text is overwritten if SelectedStart is greater than CursorPosition.\n      * Fixes #1206. NetDriver now print the selected text. Attribute struct now create a valid Value for the current driver. Insert key is detected by NetDriver.\n      * Fixes #1202. CheckBox now deals with a functional '_' underscore hotkey.\n      * Fixes #1199. Normalize views constructors and did some typo fixing.\n      * Fixes #1197. Prevents width negative value if added directly to the A\n      * Added Vertical Alignment and Text Direction + UICatalog Demo (thanks @jmprricone!)\n      * Fixes #1193. A non auto size default Button now preserves his width and thus the text alignment now work.\n      * Fixes #1187. Prevents WordBackward throwing an exception if point is greater than the text length\n      * Fixes #1185. Button click is only processed if there are no mouse mov\n      * Fixes #1183. ListView now return true on the handled keys\n      * Fixes #1179. TextView does not copy to the clipboard on deleting\n      * Fixes #1177. Now is possible to copy or cut on the TextView with the...\n      * Fixes #1175. demo.cs editor now implement \"Copy\", \"Cut\" and \"Paste\".\n      * Fixes #1173. TextField only need to handle a single line.\n      * Fixes #1171. Delete and Backspace now deletes the selected text\n      * Fixes #1167. Application.Run method with #DEBUG can be simplified.\n      * Fixes #1165. Changing the directory name label or the field name crashes\n      * Fixes #1159. Dialog must have a default button if none is provided.\n\n      v1.0.0-beta.11\n      * NEW CONTROL: Tabview - thanks @tznind!\n      * UI Catalog now shows correct Terminal.gui.dll version\n      * Fixes #939 - README sample does not compile - thanks @buzzfrog!\n      * Fixes #1154 - FileDialog blank constructor results in unstable window\n      * Fixes #1155 - MoveForward/MoveBackward not bound on Text controls.\n      * Fixes #1152 - Generic TreeView`1 breaks upon selection in All Views Tester)\n      * Fixes #1148 - TextFormatter.Format does not keep the end spaces on wrapped text.\n      * Fixes #134 - (HUGE) TextView: Add line wrapping.\n      * Fixes #1145 - ScrollBar down arrow is not showing.\n      * Fixes #1143 - Cannot change the MenuBar's background color.\n      * Fixes #1141 - Cannot change the StatusBar's background color.\n      * Fixes #1048 - BrighCyan to BrightCyan spelling\n      * Fixes #1130 - Broken Table/TreeView links in docs.\n\n      v1.0.0-beta.8\n      * Now using MinVer to generate version numbers from git tags.\n      * Updated publish-to-nuget to work with minver\n\n      v1.0.0-pre.9\n      * NEW CONTROL: TreeView - Thanks @tznind!\n      * Fixes #1066. View sizing across the various terminals has been fixed; works in Windows Terminal again - thanks @bdisp\n      * Fixes #1117. Newfile Modal.\n\n      v1.0.0-pre.8\n      * NOTE: Windows Terminal is broken - see #1099\n      * NEW CONTROL: TableView - Thanks @tznind!\n      * NetDriver is signficantly imporved - thanks @bdisp!\n      * Fixes #1016. Window is drawing its frame over the menu.\n      * Fixes #1018. Since childNeedsDisplay is used outside the View class it must to be a property.\n      * Fixes #1024. TextView is printing theFixes #1030. Getting colors from the Attributes of a ColorScheme. new line character \"\\n\" with a symbol\n      * Fixes #1030. Getting colors from the Attributes of a ColorScheme.\n      * Fixes #1034. The NuGet packages need to be updated.\n      * Fixes #1043. The menu separator is being printed in the wrong place.\n      * Fixes #93. Audit TextView just like we did TextField to ensure proper treatment of Unicode.\n      * Fixes #1050. ScrollView takes too long to scroll enormous content size.\n      * BREAKING CHANGE - Fixes #1052. Application.CurrentView looks unused.\n      * Fixes #1053. ProcessMouseEvent seems to initialize MouseEvent incorrectly.\n      * Fixes #1056. Window doesn't redraw his SuperView properly.\n      * Fixes #1061. ComputerLayout scenario does not drawn correctly.\n      * Added unhandled exception handling in Application.Run (#1063)\n      * Fixes #1068. The ResizeView doesn't handle the AutoSize properly.\n      * Fixes #1071. Toplevel.GetTopLevelSubviews (). Changed from HashSet to IList.\n      * Fixes #1073, #1058, #480 #1049. Provides more automation to the ScrollBarView, allowing easily implement on any view.\n      * Application.Shutdown() does not reset SynchronizationContext (#1085).\n      * Fixes #1088. On WindowsDriver moving the mouse with a button pressed, when it is released, the button clicked event is fired, causing an unintentional event.\n      * Fixes #1091. Continuous button pressed not working properly on Linux.\n      * Fixes #1100. TextFormatter doesn't handle ColumnWidth greater than 1.\n      * Cursor shape and visibility #1102\n\n      v1.0.0-pre.6\n      * If StatusBar.Visible is set to false, TopLevel resizes correctly enabling hiding/showing of a StatusBar. UICatalog demonstrates.\n      * New sample/demo app - ReactiveExample - Shows how to use reactive extensions and ReactiveUI with gui.cs. (Thanks @worldbeater)\n      * BREAKING API CHANGE - Removed IEnumerable from View and Window. Use Subviews property instead. See #950.\n      * Fixes #998. Added a cancelable TextChanging event to prevent the TextChanged event being called if the changing is canceled.\n      * Fixes #1002. Added a AutoSize property to the View class.\n      * Fixes #1009. AutoHideScrollBars is causing ScrollView always redrawing.\n      * Update to .NET 5 RTM\n      * Fixes #995. Improving TextField to work properly with Unicode characters\n      * Fixes #999. Toplevel should only redraw the subviews if !NeedDisplay.IsEmpty or layoutNeeded.\n      * Fixes #992. TextFormatter class now respect the view dimensions. Some typo fixing too.\n      * Fixes #990. Pos and Dim only can be properly used when all the views are totally initialized.\n      * Fixes #979. Force call LayoutSubviews to perform layout.\n      * Fixes #988. Update NStack.Core to version 0.15.0\n      * Fixes #41 and #949. Unit test to compare the difference between System.Rune and System.Text.Rune.\n      * Fixes #881, #928. Allowing more key combinations.\n      * Fixes #976. Mouse prints sequence characters on the terminal and the screen is not fully cleared. Only for netcoreapp3.1.\n      * BREAKING API CHANGE - #950 - Remove IEnumerable from View and Window\n      * Fixes #959. CursorPosition with hotkeys.\n      * Fixes #963. Added support for Unicode in TextField.\n      * Fixes #961. Recreates the Frame when necessary.\n      * Fixes #957. Terminal.Gui nuget package in Reactive example version.\n      * Fixes #933. Updated to work with libncurses 6.2\n      * Fixes #225 and maybe #41. Allowing Rune.ColumnWidth greater than one.\n      * Use glyphs for checkmarks and selection.\n\n      v0.90 - \"Feature Complete\" pre-release of Terminal.Gui (aka gui.cs) 1.0. This release is a signficant upgrade from the previous published release (0.81). Most of the major changes and bug fixes are listed below. NOTE: This release includes breaking changes to the API; we will strive to avoid any more breaking changes before 1.0.\n\n      What's new:\n      * New sample/demo app - UI Catalog - Replaces demo.cs with an easy to use and extend set of demo scenarios. (Thanks @tig!)\n      * The API documentation is completely revamped and updated. Readme upated. Contributors guide added (Thanks @tig!)\n      * MenuBar can now have MenuItems directly (enables top-level menu items with no submenu). (Thanks @tig!)\n      * API semantics are much more consistent across classes. For example, all events are now defined in terms of event Action instead of EventHanlder. BREAKING CHANGE. (Thanks @bdisp, @worldbeater, and @tig!)\n      * The project has been refactored an reorganized to reduce risk of bugs and make it easier to contribute.\n      * Symbols are now included with the nuget package.\n\n      Fixes/Improvements (partial list; see Github issues for complete list):\n      * Fixes #396 - Text alignnment issues.  (Thanks @tig!)\n      * Fixes #423 - Fix putting results of ocgv on command line erases cursor. (Thanks @tig!)\n      * Apps can now get KeyUp/KeyDown events. (Thanks @tig!)\n      * Example/Designer csproj files updated to latest Visual Studio model. (Thanks @tig!)\n      * Adjusted the default colors for Windows to make more readable. (Thanks @tig!)\n      * Toplevel.Ready event - Fired once the Toplevel's MainLoop has started (#445). (Thanks @tig!)\n      * All compile warnings fixed. (Thanks @tig!)\n      * Fixed a crash in EnsureVisibleBounds. (Thanks @tig!)\n      * Application.Init/Shutdown are more robust. (Thanks @tig!)\n      * New \"Draw Window Frame\" code; consistent across Window, FrameView, and Menu. Fixes many drawing bugs. (Thanks @tig!)\n      * Fixes #522 - Last view of Frameview not drawn. (Thanks @tig!)\n      * Clipping has been fixed/restored - it now works properly. (#586) (Thanks @tig!)\n      * Added a View.LayoutComplete event (#569). (Thanks @tig!)\n      * Fixes #299 - MessageBox now auto sizes. (Thanks @tig!)\n      * Fixes #557 - MessageBoxes on small screens. (Thanks @tig!)\n      * Fixes #432 - MessageBox does not deal with long text; width/height params are goofy. (Thanks @tig!)\n      * Fixes #35 - Dialog should have 1 char padding. (Thanks @tig!)\n      * `MessageBox.Query` called with `width` and `height` == 0 get auto-size behavior. A new constructor is added making this easy to use. (Thanks @tig!)\n      * Multi-line `MessageBox`es are now supported. Just use `\\n` to add lines. The height of the MessageBox will adjust automatically. (Thanks @tig!)\n      * The `MessageBoxes` Scenario in UI Catalog provides a full demo/test-case. (Thanks @tig!)\n      * `Dialog` called with `width` and `height` == 0 are sized to 85% container. A new constructor is added making this easy to use. (Thanks @tig!)\n      * Dialog (and MessageBox `Buttons` are now dynamically laid out using Computed layout. (Thanks @tig!)\n      * A `Dialogs` Scenario has been added to UI Catalog making it easy to test the API. (Thanks @tig!)\n      * `Button` now supports BOTH specifying a hotkey with '_' and the old behavior of using the first uppercase char (if '_' is not found). (Thanks @tig!)\n      * All UI Catalog scenarios that use `Dialog` or `MessageBox` now use the simplified API. (Thanks @tig!)\n      * `Terminal.Gui.dll` now has version metadata and UI Catalog's about box displays it as a test case. (Thanks @tig!)\n      * Button, Dialog, and MessageBox API documentation has been updated/revised. (Thanks @tig!)\n      * `View`, `Window`, `FrameView`, and `Dialog` have been upgraded to use the new `ConsoleDriver.DrawFrameWindow` API directly. (Thanks @tig!)\n      * New ComboBox control (Thanks @fergusonr!)\n      * ConsoleDriver now supports improved KeyModifers (shift keys) with an expanded Keys Sceanrio in UI Catalog. (Thanks @bdisp!)\n      * Tons of mouse handling improvements. (Thanks @bdisp!)\n      * Fsharp sample updated. (Thanks @bdisp!)\n      * Fixes #562 - Background drawing issue. (Thanks @bdisp!)\n      * Fixes #517 - Focus and mouse handlers enahced (BREAKING CHANGE). (Thanks @bdisp!)\n      * Fixed resizing update and correct Toplevel colors without colors. (Thanks @bdisp!)\n      * Fixed #515, #518, #536, #540. (Thanks @bdisp!)\n      * Added Threading Scenario to UI catalog. (Thanks @bdisp!)\n      * Added support for F11 and F12 keys. (Thanks @bdisp!)\n      * Multiple improvements to Date/TimeField. (Thanks @bdisp!)\n      * Fixes #409 - Invoke does not cause Wakeup #501. (Thanks @bdisp!)\n      * Fixed Label text alignment. (Thanks @bdisp!)\n      * Added mouse features in the Unix version. Supports xterm-1006. (Thanks @bdisp!)\n      * Several StatusBar fixes. (Thanks @bdisp!)\n      * Tons of mouse improvements including mouse wheel support (e.g. #404, #409). (Thanks @bdisp!)\n      * Added a CloseFile method to the TextView as stated in #452. (Thanks @bdisp)\n      * Added a OpenSelectedItem event to the ListView #429. (Thanks @bdisp!)\n      * Fixes the return value of the position cursor in the TextField. (Thanks @bdisp!)\n      * Updates screen on Unix window resizing. (Thanks @bdisp!)\n      * Fixes the functions of the Edit-Copy-Cut-Paste menu for the TextField that was not working well. (Thanks @bdisp!)\n      * More robust error handing in Pos/Dim. Fixes #355 stack overflow with Pos based on the size of windows at startup. Added a OnResized action to set the Pos after the terminal are resized. (Thanks @bdisp!)\n      * Fixes #389 Window layouting breaks when resizing. (Thanks @bdisp!)\n      * Fixes #557 MessageBox needs to take ustrings (BREAKING CHANGE). (Thanks @tig!)\n      * Fixes ScrollView in several key ways. (Thanks @tig!)\n      *   Now supports Computed layout and has constructors that don't require parameters.\n      *   ScrollBarViews are now positioned using Computed layout versus error prone absolute\n      *   ScrollBarViews now correctly position themselves when one, either, or both are on/off.\n      *   IsVertical is now a public property that does the expected thing when changed\n      *   Mouse handling is better; there's still a bug where the mouse doesn't get grabbed by the ScrollView initially but I think this is a broader problem. I need @BDisp's help on this.\n      *   Supports \"infinite scrolling\" via the new OnDrawContent/DrawContent event on the View class.\n      *   The Scrolling Scenario was enhanced to demo dynamically adding/removing horizontal/vertical scrollbars (and to prove it was working right).\n      * The Checkbox.Toggled event is now an EventHandler event and passes previous state. (Thanks @tig!)\n      * Fixes #102 All Views now support parameterless constructors. (Thanks @Bdisp and @tig!)\n      * Fixes #583 Button can now be sized. Button now supports TextAlignment. (Thanks @Bdisp!)\n      * Fixes #421 Now builds on Linux with \"dotnet build\". (Thanks @AArnott!)\n      * MenuItem now supports checked/selected items. (Thanks @tig!)\n      * Label no longer incorreclty displays formfeed char. (Thanks @tig!)\n      * Fixes #645 - RadioGroup now supports unicode. (Thanks @tig!)\n      * Fixes #573 - RadioGroup supports Computed Layout. (Thanks @tig!)\n      * RadioGroup now uses a single, good looking, glyph. (Thanks @tig!)\n      * RadioGroup now supportrs the Action-based event pattern correctly. BREAKING CHANGE. (Thanks @tig!)\n      * ConsoleDriver and Drivers have new standard glyph definitions for things like right arrow. (Thanks @tig!)\n      * ScrollView updated to use pretty glyphs. (Thanks @tig!)\n      * Menubar now uses pretty arrow glyph for sub-menus. (Thanks @tig!)\n      * View now has a Text property, implemented via the new TextFormatting class. (Thanks @tig!)\n      * TextAlignment is implemented once across all Views that support it.\n      * Unicode support is now much more robust and complete; dozens of bugs fixed.\n      * Any view dervied from View now has a Text property with multi-line text formatting, including word-wrap and hotkey support.\n      * Label is now mostly just an alias for View; supports Clicked\n      * Button is now a very thin class derived from View (no API changes).\n      * Dozens of unit tests for TextAlignment are provided reducing the chance of regressions.\n      * Fixes #351. Added a horizontal display for RadioGroup. (Thanks @bidsp!)\n      * Fixes #644. Added a UICatalog Scenario for a dynamic menu bar. (Thanks @bidsp!)\n      * Fixes #838. Added a Visible property to the View. (Thanks @bidsp!)",
  "repository": "",
  "title": "Terminal.Gui - Cross Platform Terminal user interface toolkit for .NET",
  "verbatimVersion": "0.0.6",
  "version": "0.0.6",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#dependencygroup/.netframework4.7.2",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#dependencygroup/.netframework4.7.2/nstack.core",
          "@type": "PackageDependency",
          "id": "NStack.Core",
          "range": "[0.17.1, )"
        }
      ],
      "targetFramework": ".NETFramework4.7.2"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#dependencygroup/net6.0/nstack.core",
          "@type": "PackageDependency",
          "id": "NStack.Core",
          "range": "[0.17.1, )"
        }
      ],
      "targetFramework": "net6.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#dependencygroup/.netstandard2.0/nstack.core",
          "@type": "PackageDependency",
          "id": "NStack.Core",
          "range": "[0.17.1, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#Terminal.Gui.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 10185,
      "fullName": "Terminal.Gui.nuspec",
      "length": 28077,
      "name": "Terminal.Gui.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net472/fr-FR/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2066,
      "fullName": "lib/net472/fr-FR/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net472/ja-JP/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2158,
      "fullName": "lib/net472/ja-JP/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net472/pt-PT/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2055,
      "fullName": "lib/net472/pt-PT/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net472/Terminal.Gui.dll",
      "@type": "PackageEntry",
      "compressedLength": 220244,
      "fullName": "lib/net472/Terminal.Gui.dll",
      "length": 562176,
      "name": "Terminal.Gui.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net472/Terminal.Gui.xml",
      "@type": "PackageEntry",
      "compressedLength": 87538,
      "fullName": "lib/net472/Terminal.Gui.xml",
      "length": 703952,
      "name": "Terminal.Gui.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net6.0/fr-FR/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2064,
      "fullName": "lib/net6.0/fr-FR/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net6.0/ja-JP/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2158,
      "fullName": "lib/net6.0/ja-JP/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net6.0/pt-PT/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2050,
      "fullName": "lib/net6.0/pt-PT/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net6.0/Terminal.Gui.dll",
      "@type": "PackageEntry",
      "compressedLength": 221528,
      "fullName": "lib/net6.0/Terminal.Gui.dll",
      "length": 566272,
      "name": "Terminal.Gui.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/net6.0/Terminal.Gui.xml",
      "@type": "PackageEntry",
      "compressedLength": 87538,
      "fullName": "lib/net6.0/Terminal.Gui.xml",
      "length": 703952,
      "name": "Terminal.Gui.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/netstandard2.0/fr-FR/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2067,
      "fullName": "lib/netstandard2.0/fr-FR/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/netstandard2.0/ja-JP/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2162,
      "fullName": "lib/netstandard2.0/ja-JP/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/netstandard2.0/pt-PT/Terminal.Gui.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2058,
      "fullName": "lib/netstandard2.0/pt-PT/Terminal.Gui.resources.dll",
      "length": 5120,
      "name": "Terminal.Gui.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/netstandard2.0/Terminal.Gui.dll",
      "@type": "PackageEntry",
      "compressedLength": 220172,
      "fullName": "lib/netstandard2.0/Terminal.Gui.dll",
      "length": 562176,
      "name": "Terminal.Gui.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#lib/netstandard2.0/Terminal.Gui.xml",
      "@type": "PackageEntry",
      "compressedLength": 87538,
      "fullName": "lib/netstandard2.0/Terminal.Gui.xml",
      "length": 703952,
      "name": "Terminal.Gui.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#logo.png",
      "@type": "PackageEntry",
      "compressedLength": 1237,
      "fullName": "logo.png",
      "length": 1914,
      "name": "logo.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 4882,
      "fullName": "README.md",
      "length": 14225,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.07.21.59.44/terminal.gui.0.0.6.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "csharp",
    "terminal",
    "c#",
    "f#",
    "gui",
    "toolkit",
    "console",
    "tui"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}