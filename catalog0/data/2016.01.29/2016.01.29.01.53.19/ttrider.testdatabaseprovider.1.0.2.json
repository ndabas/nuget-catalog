{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.29.01.53.19/ttrider.testdatabaseprovider.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TTRider",
  "catalog:commitId": "23320e07-bf7c-444e-9d49-b5394fa66755",
  "catalog:commitTimeStamp": "2016-01-29T01:53:19.230464Z",
  "copyright": "Copyright (C) 2014-2016 TTRider, L.L.C.",
  "created": "2016-01-29T01:53:03.09Z",
  "description": "helper class that allows to create and delete sql server databases dynamically in a context of the test",
  "id": "TTRider.TestDatabaseProvider",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://github.com/ttrider/IDbRequestResponse/blob/master/LICENSE.TXT",
  "listed": true,
  "packageHash": "icuwilWBqehk1uqtJDK+m8oQ+bRXNE3kAFoMvSNeYTiEMmEDQg/RRbu3EdBtFZBjppJGtwnFlKqNNddhX048zQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9175,
  "projectUrl": "https://github.com/ttrider/IDbRequestResponse",
  "published": "2016-01-29T01:53:03.09Z",
  "releaseNotes": "1.0.0\n      --\n      * Initial Release",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "tags": [
    "SQL",
    "IDbConnection",
    "IDbCommand",
    "IDataReader",
    "SqlConnection",
    "SqlCommand"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}