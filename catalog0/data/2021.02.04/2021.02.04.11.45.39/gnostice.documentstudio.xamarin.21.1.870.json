{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gnostice Information Technologies",
  "catalog:commitId": "72c9350a-8452-4a02-8c0b-4d7e6175b9a2",
  "catalog:commitTimeStamp": "2021-02-04T11:45:39.5798606Z",
  "copyright": "© 2002-2021 Gnostice Information Technologies Private Limited. All rights reserved.",
  "created": "2021-02-04T11:43:19.533Z",
  "description": "Gnostice Document Studio .NET is the next-generation multi-format document-processing component suite for .NET developers. Document Studio .NET Converter supports converting PDF, DOCX, DOC, XLSX, XLS, ODS, BMP, GIF, JPEG, PNG, WMF, EMF, TIFF and MTIFF to PDF, DOCX, RTF, TXT, HTML, BMP, GIF, JPEG, PNG, TIFF and MTIFF. It can convert documents such as DOCX-to-PDF or PDF to images without requiring any other external software or libraries. It can also intelligently reconstruct page elements when converting PDF to DOCX.\n\nDocument Studio .NET is 100% managed code. It can natively process supported formats without requiring external software such as Microsoft Word, Open XML SDK, Word Automation Services, Adobe PDF library or GhostScript.\n\nNOTE: This product runs in trial mode. If you are happy with the product, you can unlock it by purchasing a license on our website.",
  "iconUrl": "http://www.gnostice.com/images/ICON_xtremedocumentstudio_dot_net.png",
  "id": "Gnostice.DocumentStudio.Xamarin",
  "isPrerelease": false,
  "lastEdited": "2021-02-04T11:45:35.11Z",
  "licenseUrl": "http://www.gnostice.com/XtremeDocumentStudio_dot_NET.asp?show=licenses",
  "listed": true,
  "packageHash": "m6b/jgnBTZlaomII7wwYlq2WqzuPuTjWoji+wcAU4C3wdDXg/sBJu8YYDc4lOWUACtmRSSNbGV5IC4bRHJFYUQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 196879,
  "projectUrl": "http://www.gnostice.com/XtremeDocumentStudio_dot_NET.asp",
  "published": "2021-02-04T11:43:19.533Z",
  "releaseNotes": "Version 2021 R1 - Feb 03, 2021\n===============================\n\nEnhanced\n~~~~~~~~~~\n- ASP.NET Document Viewer\n- Signing PDF documents using hand-written signatures.\n- Allow users to draw a signature on a signature dialog box.\n- Allow users to load a signature file from disk. \n- Allow users to save drawn or uploaded signatures to the signature pane.\n- Allow users to delete signatures from already listed signatures in the \nsignature pane. \n- Allow users to drag and resize the signature field placed on the document.\n- Allow users to delete the signature field placed on the document.\n- Server-side APIs:\n- Introduced \"ViewerPreferences.Interactivity.AllowSigning\" API.\n- Introduced “NeedUserSignatures” override method on “ServerEventsHandler” \nclass to configure user’s signatures that will be populated on the signature \ndialog box in the document viewer. \n- Client-side APIs:\n- Introduced “showStatusNotifications” property on “Preferences” to enable \ndisplay of status notification.  \n- Introduced \"Preferences.interactiveElements.signatures\" API for setting \nsignature preferences. \n- Preferences.interactiveElements.signatures.strokeColor\n- Preferences.interactiveElements.signatures.strokeWidth\n- Preferences.interactiveElements.signatures.allowSavingSignatures\n- Preferences.interactiveElements.signatures.maxNumberOfSavedSignatures\n- Preferences.interactiveElements.signatures.showSavePrompt\n- Introduced \"documentViewer.Signatures.getAll()\" method to get all signature\n fields added in the currently loaded pdf document.\n- Introduced “documentViewer.Signatures.get()” method to get a signature field \nmatching the given signature id. \n- Introduced “documentViewer.Signatures.addPlaceholder()” method to add signature\n placeholders to a loaded pdf document.\n- Events:\n- Introduced “onSignaturePlaced” event which fires when the user has drawn a \nsignature and placed it on the document.\n- Introduced “beforeSignatureNeededPrompt” event which fires when the user tries \nto save the document without providing the required signatures.\n- Introduced \"beforeSend\" parameter to \"beforeDocumentUpload\" event to customise \nheaders of the post request.\n- Desktop and Mobile Document Viewers (WinForms, WPF and Xamarin)\n- Introduced API “GetSelectedText” to get the user selected text.\n- Introduced events “OnTextSelection” and “OnSelectionCleared” to notify selection \nof text.\n- Optimized page layout calculation and ability to abort page image request \nfor a better viewing experience.\n- Document Engines\n- Cache text size measurements for speeding up document rendering.\n- Document Converter\n- Added support for handling of vertical text in word documents while \nconverting to PDF.\n- Word Engines\n- Added support for top to bottom, right to left and bottom to top, left to \nright text directions in table cells.\n- Added support for reading and rendering footnotes and endnotes present in \nDOCX files.\n- PDF Engine\n- Improve fault tolerance logic to load corrupted PDF files where the startxref \noffset is incorrectly specified.\n- Improve fault tolerance logic to load corrupted PDF files where the /Prev entry \nin the Catalog dictionary points to an incorrect offset of the previous cross \nreference table.\n- Documentation\n- Adding the following new topics to the developer guide\n- Customizing the look and feel of the ASP.NET Document Viewer\n\nFixed\n~~~~~~\n- ASP.NET Document Viewer\n- Search occurrence not being highlighted properly for OCR images having a \nskew angle.\n- Document download button is not being shown on small screens.\n- Document download is not working on iPad with iOS version 12.4.4.\n- JavaScript console shows error (“Cannot read property 'length' of null”) \nwhen searching\n for text.\n- Not able to access the server side event handler in a website type project.\n- The context property of the server-side event OnServerStart is null.\n- Document save does not work when the viewer handler is placed inside a nested \nURL segment.\n- Search result highlighting not being retained when the page is redrawn with \nthe higher \nresolution image.\n- Desktop and Mobile Document Viewers (WinForms, WPF and Xamarin)\n- Improper layout of pages when the document contains pages of different sizes.\n- WinForms Document Viewer\n- Thumbnails are being scaled when the splitter is dragged.\n- Document Converter\n- Fix licensing issue where Document Converter should work in trial mode when \nused with the free edition license.\n- Document Engines\n- ArgumentOutOfRangeException when trying to view an HTML file without an extension.\n- Whitespaces in HTML files not being displayed correctly.\n- Word Engines\n- Out of memory exception when attempting to view a DOC file.\n- Viewer crashing when attempting to view a DOC file.\n- Viewer hangs when attempting to view a DOC file.\n- File contents being shown as plaintext when viewing a DOC file.\n- Blank pages shown when trying to view a DOC file containing images.\n- ArgumentOutOfRangeException when viewing DOC file.\n- DOC file containing multicolumn layout being shown as a plaintext file when \nviewed in the document viewer.\n- Table contents not being correctly rendered when viewing a DOC file.\n- Table cell margins not being calculated correctly when rendering Word format files.\n- Bottom cell margin being added multiple times for cells with more than one paragraph.\n- Nested autofit tables not being laid out correctly.\n- Text overlapping with footer contents when viewing a DOCX file containing \nvarying text sizes in the last line appearing just above the footer.\n- Poor quality rendering of scaled down images in DOCX files.\n- System.UriFormatException thrown when opening a DOCX file for viewing.\n- Out of memory exception when attempting to view a large DOCX file containing \nmultiple columns.\n- Viewer hangs when viewing a DOCX file containing a very large header.\n- Text not appearing in table cells when viewing a DOCX file.\n- Incorrect image positions when rendering a DOCX file.\n- Some text boxes are not being displayed when viewing a DOCX file.\n- Some images present inside a DOCX file not being rendered when viewing the file.\n- InvalidOperationException thrown when trying to view a DOCX file.\n- Paragraph bottom border not drawn correctly when the para is followed by a table \nwhen converting from DOCX to PDF.\n- Loading doesn't stop when trying to view a DOCX file.\n- System.ArgumentOutOfRangeException when trying to convert DOCX to PDF file.\n- Spreadsheet Engine\n- Header content not showing when viewing an XLS file.\n- Images in XLSX file not being scaled correctly when rendered.\n- System.OverflowException thrown when attempting to view an XLSX file.\n- Very slow loading of large XLSX files (spreadsheets with more than 50000 rows).\n- System.ArgumentOutOfRangeException when trying to view an XLS file.\n- High RAM usage when viewing large XLS files.\n- Viewer crashes when trying to view an XLS file containing a formula encoded as \na double-byte character string.\n- Viewer crashes when trying to view an XLS file containing a boolean error value \nin one of the cells.\n- Empty file generated when converting from spreadsheet format files to TXT.\n- System.IndexOutOfRangeException when viewing an XLSX file.\n- PDF Engine\n- Extra tab being added at incorrect position in bulleted list when converting \nfrom PDF to TXT.\n- InvalidCastException thrown when trying to view a PDF file.\n- System.FormatException thrown when trying to view a PDF file.\n- CryptographicException thrown when trying to view a PDF file.\n- ClassCastException thrown while rendering images with Indexed \nColorspace if the Index color values are specified as a string object \ninside another Indirect Reference object.\n- Throws NullReferenceException while rendering shapes in the \ndocument which are filled using Stitching function type that contains \n\"Sampled\" function as one of the functions.\n- Throws ClassCastException while rendering images with Indexed \nColorspace if the Index color values are specified as a string object \ninside another Indirect Reference object.\n- Several page contents are not rendered when a page content stream \ncontains inline image at the end of the stream for which RestoreGraphicsState \noperator is specified in the subsequent content stream.\n- Throws System IO error \"Cannot access a closed Stream\" while rendering inline \nimages that are compressed using Flate.\n- Throws NullReference exception while rendering CCITT images with \nIndexed colorspace.\n- Throws InvalidCastException while rendering form fields when the values \nof the Rectangle array in the form field dictionary are specified as \nIndirectReference objects.\n- Incorrect text rendered when the text uses non-symbolic Type1 embedded \nfont with encoding set to None.\n- 1-BPC Type1 images are not rendered when the ImageMask flag in the image \ndictionary is true.\n- DCT image having CCITT image as smask is rendered with inverted color.\n- Images are rendered without honoring the transparency value set in the \ngraphics state (i.e., the value set for /ca entry in the ExtGState resource dictionary).\n- Throws \"A generic error occurred in GDI+\" error when the page content stream \ncontains clipping operation with the operands specified using large values which \ncan not be handled by GDI+.\n- Throws StackOverflow error while loading PDF documents when an object contains \nIndirect Reference number as its content.\n- Throws ArgumentOutOfRangeException while saving the loaded document when any of \nthe existing objects contain a reference to an object number which is larger than \nthe MaxValue of integer data type.\n- When the document is saved multiple times with new contents (such as text, images, \nand shapes) added between each save, the new contents added after the first save are \ndiscarded in the subsequently saved output documents.\n- Text form fields in the loaded document updated with Unicode text value do not show \nup correctly in the output document.\n- Changing of Font for the existing form field does not have any effect in the \noutput document.\n- Unnecessary creation of temp file for caching font information.\n- \"Names tree not present in the document\" exception thrown when trying to \nview a PDF file.\n- Slow rendering of a small PDF file containing an image with a mask.\n- FormatException when converting from PDF to TXT file.\n- Password prompt being shown when trying to view a PDF file encrypted with a \nblank user password.\n- Missing and garbled text when viewing a PDF file containing a JBIG2 image.",
  "requireLicenseAcceptance": true,
  "summary": "Multi-format document viewer for Xamarin.",
  "title": "Gnostice Document Studio .NET Xamarin",
  "verbatimVersion": "21.1.870",
  "version": "21.1.870",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#dependencygroup/.netstandard2.0/gnostice.documentstudio.foundation",
          "@type": "PackageDependency",
          "id": "Gnostice.DocumentStudio.Foundation",
          "range": "[21.1.870, 21.1.870]"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#dependencygroup/.netstandard2.0/skiasharp.views.forms",
          "@type": "PackageDependency",
          "id": "SkiaSharp.Views.Forms",
          "range": "[1.68.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#dependencygroup/.netstandard2.0/xamarin.essentials",
          "@type": "PackageDependency",
          "id": "Xamarin.Essentials",
          "range": "[1.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#dependencygroup/.netstandard2.0/xamarin.forms",
          "@type": "PackageDependency",
          "id": "Xamarin.Forms",
          "range": "[3.6.0.344457, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#Gnostice.DocumentStudio.Xamarin.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4599,
      "fullName": "Gnostice.DocumentStudio.Xamarin.nuspec",
      "length": 13058,
      "name": "Gnostice.DocumentStudio.Xamarin.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#lib/netstandard2.0/Gnostice.PageManager.dll",
      "@type": "PackageEntry",
      "compressedLength": 96331,
      "fullName": "lib/netstandard2.0/Gnostice.PageManager.dll",
      "length": 217600,
      "name": "Gnostice.PageManager.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#lib/netstandard2.0/Gnostice.Controls.Xamarin.dll",
      "@type": "PackageEntry",
      "compressedLength": 25896,
      "fullName": "lib/netstandard2.0/Gnostice.Controls.Xamarin.dll",
      "length": 53760,
      "name": "Gnostice.Controls.Xamarin.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#lib/Xamarin.iOS10/Gnostice.Controls.Xamarin.iOS.dll",
      "@type": "PackageEntry",
      "compressedLength": 13294,
      "fullName": "lib/Xamarin.iOS10/Gnostice.Controls.Xamarin.iOS.dll",
      "length": 25088,
      "name": "Gnostice.Controls.Xamarin.iOS.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#lib/MonoAndroid10/Gnostice.Controls.Xamarin.Droid.dll",
      "@type": "PackageEntry",
      "compressedLength": 44164,
      "fullName": "lib/MonoAndroid10/Gnostice.Controls.Xamarin.Droid.dll",
      "length": 120320,
      "name": "Gnostice.Controls.Xamarin.Droid.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#Readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 272,
      "fullName": "Readme.txt",
      "length": 522,
      "name": "Readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.02.04.11.45.39/gnostice.documentstudio.xamarin.21.1.870.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "PDF",
    "DOCX",
    "DOC",
    "RTF",
    "XLS",
    "XLSX",
    "ODS",
    "BMP",
    "GIF",
    "JPG",
    "PNG",
    "TIFF",
    "MTIFF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}