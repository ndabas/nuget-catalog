{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.28.23.03.53/parallel.pipes.1.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "michaelbradley91",
  "catalog:commitId": "ae3081c2-8c0a-476c-8a59-faa09c3254e7",
  "catalog:commitTimeStamp": "2015-12-28T23:03:53.6946893Z",
  "created": "2015-12-28T23:03:49.487Z",
  "description": "Pipes is a concurrency abstraction. Threads send messages to each other down pipes.\n\nPipes can block a thread sending a message while waiting for another thread to be ready to receive that message and vice versa, achieving synchronisation. Pipes can also be asynchronous at either end.\n\nPipes can be connected together to form pipe systems, which can provide complex behaviour. The resulting system forms a tree of inlets and outlets.\n\nThe locking and releasing of pipes is handled transparently and efficiently. The result is much easier to maintain code.\n\nThis project was inspired by Communicating Scala Objects although its eventual implementation changed considerably after realising the inherent complexity of what CSO aspires to.\n\nPipes is designed to be extensible:\n* You can create your own pipes, either from the interfaces / base classes, or by combining existing pipes.\n* You can extend the fluent building syntax.\n* You can create your own inlets / outlets to achieve stricter behaviour. (For example, an inlet which only allows one thread to read from it at once).\n\nPipes also focusses on letting you decide the rules. While it will enforce safety settings by default, you can choose to ignore them.",
  "iconUrl": "https://raw.githubusercontent.com/michaelbradley91/Pipes/master/Nuget/NugetIcon.png",
  "id": "Parallel.Pipes",
  "isPrerelease": false,
  "language": "en-GB",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html",
  "listed": true,
  "packageHash": "QmceZdAgmUicHz3y/yGg4b6aRk6QHioVRSq3ji9dK+E3TuPQBQHdFtzAhCw9VDEQNHsx6WrB5zONFAf1BtOATA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26219,
  "projectUrl": "https://github.com/michaelbradley91/Pipes",
  "published": "2015-12-28T23:03:49.487Z",
  "releaseNotes": "** Actually included the right DLL **\n\nThis release has removed some of the unnecessary assumptions against pipes and added the following pipes:\n\n* Transform Pipe (X -> Y)\n* Source Pipe\n* Sink Pipe\n\nIt's also even easier to create new pipes. :-)\n\nA few more examples exist in the test project on the repo too. You might want to think about how you could have a thread prepare to read or write to a pipe when blocked before looking at the examples! Have fun! (Might be added in a future version)",
  "requireLicenseAcceptance": true,
  "summary": "Pipes provides a more intuitive tool for managing concurrency.\nThreads send messages to each other through pipes.\nPipes can be combined and you can easily make your own.",
  "title": "Pipes",
  "verbatimVersion": "1.1.1",
  "version": "1.1.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.28.23.03.53/parallel.pipes.1.1.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.28.23.03.53/parallel.pipes.1.1.1.json#dependencygroup/stickysharedresources",
          "@type": "PackageDependency",
          "id": "StickySharedResources",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.12.28.23.03.53/parallel.pipes.1.1.1.json#dependencygroup/quickgraph",
          "@type": "PackageDependency",
          "id": "QuickGraph",
          "range": "[3.6.61119.7, )"
        }
      ]
    }
  ],
  "tags": [
    "Pipes",
    "Parallel",
    "Parallelisation",
    "CSO",
    "Cores",
    "Concurrency",
    "Concurrent",
    "Shared",
    "Resource",
    "Resources"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}