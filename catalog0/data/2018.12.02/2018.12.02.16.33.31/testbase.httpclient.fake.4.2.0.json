{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Chris F Carroll",
  "catalog:commitId": "52e43c72-3c68-4f94-97f6-8b73a9fb31ac",
  "catalog:commitTimeStamp": "2018-12-02T16:33:31.1933721Z",
  "copyright": "(c) Chris F. Carroll, 2013-2018",
  "created": "2018-12-02T16:28:52.433Z",
  "description": "*TestBase* gives you a flying start with \n- fluent assertions that are simple to extend\n- sharp error messages\n- tools to help you test with “heavyweight” dependencies on \n  - AspNetCore.Mvc, AspNet.Mvc 3-5, or WebApi Contexts\n  - HttpClient\n  - Ado.Net\n  - Streams & Logging\n- Mix & match with your favourite test runners & assertions.\n\n# TestBase.HttpClient.Fake\n\n```\n//Arrange\nvar httpClient = new FakeHttpClient()\n                .SetupGetUrl(\"https://host.*/\").Returns(request=> \"Got:\" + request.RequestUri)\n                \n                .SetupGetPath(\"/uri[Pp]attern/\").Returns(\"stringcontent\")\n                \n                .SetupPost(\".*\").Returns(response)\n\n                .SetupPost(\".*\", new byte[]{1,2,3}).Returns(otherResponse)\n\n                .SetupPost(\".*\", \"a=1&b=2\")\n                .Returns(\n                            request => \"You said : \" + request.Content.ReadAsStringAsync().ConfigureFalseGetResult(),\n                            HttpStatusCode.Accepted)\n\n                .Setup(x=>x.RequestUri.PathAndQuery.StartsWith(\"/this\")).Returns(response)\n                \n                .Setup(x=>x.Method ==HttpMethod.Put)\n                .Returns(new HttpResponseMessage(HttpStatusCode.Accepted));\n\n// Act\nvar putResponse = await httpClient.PutAsync(\"http://localhost/thing\", new StringContent(\"{a=1,b=2}\"));\nvar postResponse= await httpClient.PostAsync(\"http://[::1]/\", new StringContent(\"a=1&b=2\"));\n\n//Debug\nhttpClient.Invocations\n            .ForEach(async i =>Console.WriteLine(\"{0} {1}\",i.RequestUri, \n                                                await i.Content.ReadAsStringAsync()));\n\n            \n//Assert\nputResponse.StatusCode.ShouldBe(HttpStatusCode.Accepted);\npostResponse.ShouldBe(response); // ==> SetupPost(\".*\").Returns(response) was the first \n                                    // matched setup. Setups are tried in first-to-last order.                                            \n\nhttpClient.Verify(x=>x.Method ==HttpMethod.Put, \"Expected Put, but no matching invocations.\");\nhttpClient.Verify(\n                    x=>x.Method ==HttpMethod.Post \n                    && x.Content.ReadAsStringAsync().ConfigureFalseGetResult()==\"a=1&b=2\",\n                    \"Expected Post a=1&b=2\");\n\nhttpClient.VerifyAll(); // ==> \"Exception : 4 unmatched expectations\"\n\n```\n\n### TestBase\n\nChainable fluent assertions get you to the point concisely.\n\n```\nUnitUnderTest.Action()\n  .ShouldNotBeNull()\n  .ShouldEqualByValueExceptFor(new {Id=1, Descr=expected}, ignoreList )\n  .Payload\n  .ShouldMatchIgnoringCase(\"I expected this\")\n\t.Should(someOtherPredicate);\n\n.ShouldEqualByValue().ShouldEqualByValueExceptFor(...).ShouldEqualByValueOnMembers()\n  work with all kinds of object and collections, and report what differed.\nstring.ShouldMatch(pattern).ShouldNotMatch().ShouldBeEmpty().ShouldNotBeEmpty()\n.ShouldNotBeNullOrEmptyOrWhiteSpace().ShouldEqualIgnoringCase()\n.ShouldContain().ShouldStartWith().ShouldEndWith().ShouldBeContainedIn().ShouldBeOneOf().ShouldNotBeOneOf()\nnumeric.ShouldBeBetween().ShouldEqualWithTolerance()....GreaterThan....LessThan...GreaterOrEqualTo ...\nienumerable.ShouldAll().ShouldContain().ShouldNotContain().ShouldBeEmpty().ShouldNotBeEmpty() ...\nstream.ShouldHaveSameStreamContentAs().ShouldContain()\nvalue.ShouldBe().ShouldNotBe().ShouldBeOfType().ShouldBeAssignableTo()...\n.ShouldAll(predicate), .SingleOrAssertFail()...\n\n```\n\nSee also\n - [TestBase](https://www.nuget.org/packages/TestBase)\n - [TestBase.AspNetCore.Mvc](https://www.nuget.org/packages/TestBase.AspNetCore.Mvc)\n - [TestBase-Mvc](https://www.nuget.org/packages/TestBase-Mvc)\n - [TestBase.AdoNet](https://www.nuget.org/packages/TestBase.AdoNet)\n - [Serilog.Sinks.ListOfString](https://www.nuget.org/packages/Serilog.Sinks.Listofstring)\n - [Extensions.Logging.ListOfString](https://www.nuget.org/packages/Extensions.Logging.ListOfString)",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#frameworkassemblygroup/.netframework4.5",
    "assembly": [
      "System.Net",
      "System.Net.Http"
    ],
    "targetFramework": ".NETFramework4.5"
  },
  "id": "TestBase.HttpClient.Fake",
  "isPrerelease": false,
  "lastEdited": "2018-12-02T16:33:07.787Z",
  "listed": true,
  "packageHash": "QU61PZiqGejs/slwND+FDcWRQyBMvblr70KoxeQOSjzURKh2ihWGwFKXJvwxQMpbI/Sit/Ro9khZQzjZzd3CDw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 29686,
  "projectUrl": "https://github.com/chrisfcarroll/TestBase",
  "published": "2018-12-02T16:28:52.433Z",
  "releaseNotes": "ChangeLog\n---------\n4.2.0   TestBase.FakeHttpClient.SetupGet() and SetupPost() overloads \n4.1.4.3 Release for both netstandard and net45\n4.1.4   TestBase.FakeHttpClient stepped down to netstandard 1.2\n4.1.3.1 Corrected Assertion.ToString() to show BoolWithString detail. Added ShouldEqualByValueOnMembers()\n4.0.9   Removed dependency on net4 version of Mono.Linq.Expressions\n4.0.8   Separated Serilog.Sinks.ListOfString and Extensions.Logging.StringListLogger\n4.0.7   Added TestBase.FakeHttpClient. Added Should(predicate,...) as synonym of ShouldHave(predicate,...)\n4.0.6.2 TestBase.Mvc can run controller actions on aspnetcore using controller.WithControllerContext()\n4.0.5.2 TestBase.Mvc partially ported to netstandard20 / AspNetCore\n4.0.4.1 StreamShoulds\n4.0.3   StringListLogger as MS Logger and as Serilogger\n4.0.1   Port to NetCore\n3.0.3   Improves FakeDb setup\n3.0.x   adds and/or corrects missing Shoulds()\n2.0.5   adds some intellisense and FakeDbConnection.Verify(..., message,args) overload",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "TestBase – Rich, fluent assertions and tools for testing with heavyweight dependencies: HttpClient, AdoNet, AspNetCore, AspNet.Mvc, Streams, Logging",
  "verbatimVersion": "4.2.0",
  "version": "4.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#dependencygroup/.netframework4.5/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[9.0.1, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#dependencygroup/.netstandard1.6",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#dependencygroup/.netstandard1.6/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#dependencygroup/.netstandard1.6/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[9.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#dependencygroup/.netstandard1.6/system.net.http",
          "@type": "PackageDependency",
          "id": "System.Net.Http",
          "range": "[4.3.4, )"
        }
      ],
      "targetFramework": ".NETStandard1.6"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#TestBase.HttpClient.Fake.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2461,
      "fullName": "TestBase.HttpClient.Fake.nuspec",
      "length": 6719,
      "name": "TestBase.HttpClient.Fake.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#lib/net45/TestBase.HttpClient.Fake.dll",
      "@type": "PackageEntry",
      "compressedLength": 7145,
      "fullName": "lib/net45/TestBase.HttpClient.Fake.dll",
      "length": 15872,
      "name": "TestBase.HttpClient.Fake.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#lib/netstandard1.6/TestBase.HttpClient.Fake.dll",
      "@type": "PackageEntry",
      "compressedLength": 7220,
      "fullName": "lib/netstandard1.6/TestBase.HttpClient.Fake.dll",
      "length": 15872,
      "name": "TestBase.HttpClient.Fake.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.16.33.31/testbase.httpclient.fake.4.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9470,
      "fullName": ".signature.p7s",
      "length": 9470,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "nunit",
    "test",
    "unittest",
    "tdd",
    "fluent",
    "assertions",
    "mock",
    "httpclient",
    "system.net",
    "httprequestmessage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}