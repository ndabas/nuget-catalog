{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.19.46.52/utilityexchange.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Andreev L.E. | l.andreev90@gmail.com",
  "catalog:commitId": "75c3bc7a-5b8b-4c8b-bc86-4a21a6a56c01",
  "catalog:commitTimeStamp": "2018-12-02T19:46:52.5508872Z",
  "copyright": "© Andreev L.E. | l.andreev90@gmail.com",
  "created": "2017-06-15T13:37:39.423Z",
  "description": "Библиотека позволяет реализовать обмен кастомных документов откуда и куда угодно.\nExchangeDocument - документ обмена - обертка для коллекции объектов обмена IExchangeObject, с одинаковым UniqueId и ItemType.\nЕсть реализация IExchangeObject - ExchangeObject, в котором UniqueId генерируется  по свойствам объекта, помеченных UniquePropertyAttribute.\nЕсли хотя бы одно свойство объекта должно быть помечено UniquePropertyAttribute. Можно создавать дополнительные Guid'ы и помечать их атрибутом для генерации UniqueId.\n\nDocumentExchanger - непосредственно обмен, состоящий из двух объектов:\n1. IExchangeDocumentFinder - поиск документа\n2. IExchangeDocumentExchanger - обмен документа\n\nВызвав метод ExchangeDocument(), произойдет IEnumerable<ExchangeDocument> = IExchangeDocumentFinder.Find(), а затем foreach IExchangeDocumentExchanger.Exchange(ExchangeDocument).\nБудут возбуждены события:\nDocumentFinded - документ найден;\nDocumentExchanged - обмен документа произведен удачно;\nDocumentNotExchanged - обмен завершился с ошибкой.\n\nТакже есть обертка над DocumentExchanger - IStartStopExchanger. Постоянное выполнение DocumentExchanger.ExchangeDocument()\nRuntimeExchanger : IStartStopExchanger - постоянный обмен в реальном времени;\nIntervalExchanger : RuntimeExchanger - обмен через интервал;\nTimeSpanExchanger : RuntimeExchanger - обмен по расписанию.",
  "id": "UtilityExchange",
  "isPrerelease": false,
  "language": "ru-RU",
  "lastEdited": "2018-12-02T19:46:43.157Z",
  "listed": true,
  "packageHash": "rxGBe1vvLkvcBPOcUyJdtZQ2nkg8XtzC6/E1Z+flQCHDE3hHXG0bk9FXKtdsOEwlupU4xqC3fI8JXbKumphHmw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27768,
  "published": "2017-06-15T13:37:39.423Z",
  "releaseNotes": "Первая версия с описанием абстракций, описав которые можно организовать постоянный или единовременный обмен объектами",
  "requireLicenseAcceptance": false,
  "summary": "Библиотека на .NET для ориганизации обмена любого типа объектов в любом направлении",
  "title": "UtilityExchange Libriry",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.19.46.52/utilityexchange.1.0.2.json#UtilityExchange.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1243,
      "fullName": "UtilityExchange.nuspec",
      "length": 2974,
      "name": "UtilityExchange.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.19.46.52/utilityexchange.1.0.2.json#lib/UtilityExchange.dll",
      "@type": "PackageEntry",
      "compressedLength": 12598,
      "fullName": "lib/UtilityExchange.dll",
      "length": 27648,
      "name": "UtilityExchange.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.02.19.46.52/utilityexchange.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Exchange"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}