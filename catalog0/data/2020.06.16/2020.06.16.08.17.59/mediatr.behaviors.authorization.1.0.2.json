{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Austin Davies",
  "catalog:commitId": "2b98a6be-5208-4e0d-8367-10f8a6726c4c",
  "catalog:commitTimeStamp": "2020-06-16T08:17:59.9577585Z",
  "created": "2020-06-16T08:14:57.91Z",
  "description": "A simple request authorization package that allows you to build and run request specific authorization requirements before your request handler is called.",
  "id": "MediatR.Behaviors.Authorization",
  "isPrerelease": false,
  "lastEdited": "2020-06-16T08:17:31.637Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "t2DgHo922MLbvB8SmADYxbghOW8NAjjf29MlA/XOdNV0MRhp1DGedllqdkP635H1VGypDAPvS9V1IBuGk17d2Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17202,
  "projectUrl": "https://github.com/AustinDavies/MediatR.Behaviors.Authorization",
  "published": "2020-06-16T08:14:57.91Z",
  "releaseNotes": "Changed target framework. Changed param name for DI extension.",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json#dependencygroup/.netstandard2.0/mediatr",
          "@type": "PackageDependency",
          "id": "MediatR",
          "range": "[8.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json#dependencygroup/.netstandard2.0/mediatr.extensions.microsoft.dependencyinjection",
          "@type": "PackageDependency",
          "id": "MediatR.Extensions.Microsoft.DependencyInjection",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json#MediatR.Behaviors.Authorization.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 576,
      "fullName": "MediatR.Behaviors.Authorization.nuspec",
      "length": 1293,
      "name": "MediatR.Behaviors.Authorization.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json#lib/netstandard2.0/MediatR.Behaviors.Authorization.dll",
      "@type": "PackageEntry",
      "compressedLength": 5268,
      "fullName": "lib/netstandard2.0/MediatR.Behaviors.Authorization.dll",
      "length": 11776,
      "name": "MediatR.Behaviors.Authorization.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.06.16.08.17.59/mediatr.behaviors.authorization.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9469,
      "fullName": ".signature.p7s",
      "length": 9469,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "MediatR",
    "Authorization"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}