{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.23.45.43/mvcpdfwriter.0.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Hasmukh Patel",
  "catalog:commitId": "582a37f4-a586-4031-8901-58500c4e5292",
  "catalog:commitTimeStamp": "2015-02-07T23:45:43.5693077Z",
  "created": "2014-04-20T14:32:44.857Z",
  "description": "Render/ Create Pdf using mvc Razor view,  Html markup string or metadata elements with x,y & page number co-ordinations. MvcPdfWriter provide pdf writer a base controller \"PdfController\", you must inherit from PdfController to render view as a pdf document. ",
  "id": "MvcPdfWriter",
  "isPrerelease": false,
  "lastEdited": "2014-04-22T09:42:38.023Z",
  "packageHash": "CwC3HZ0x6RHBurVOYLQj8GtitFoUmjKzDbICH5Nzt/wZ0QeW5nsloL46GmWRQl2cp2DuL4KhOWG7gzUj6sI3pw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36452,
  "published": "2014-04-20T14:32:44.857Z",
  "releaseNotes": "MvcPdfWriter has a  \"PdfController\" base controller, you must inherit from PdfController. \ne.g. \n\n  [AllowAnonymous] \n    public class Test1Controller : PdfController \n{ \n[HttpGet] \npublic ActionResult TestInvoice(int id) \n{ \nvar testModel = new \n{ \nTo = \"Abc\", \nFAO = \" test fao\", \nRefDate = DateTime.Now.ToShortDateString(), \nName = \"Abc\", \nTradingName = \"Xyz\", \nFunderAddress = \"abc road, abc, AB12CD\", \nTotalCost = 1000, \nVAT = 200, \nCreditExpiryDate = DateTime.Now.AddMonths(1).ToShortDateString() \n}; \nreturn ViewPdf(testModel); \n} \n\n[HttpGet] \npublic ActionResult TestInvoice2(int id) \n{ \nvar testModel = new \n{ \nTo = \"Abc\", \nFAO = \" test fao\", \nRefDate = DateTime.Now.ToShortDateString(), \nName = \"Abc\", \nTradingName = \"Xyz\", \nFunderAddress = \"abc road, abc, AB12CD\", \nTotalCost = 1000, \nVAT = 200, \nCreditExpiryDate = DateTime.Now.AddMonths(1).ToShortDateString() \n}; \nvar metadatas = new List<ElementMetadata>{/*your meta data*/}; \nreturn ViewPdf(\"c:/Temp/InvoiceTemplate.pdf\", metadatas, testModel, \"c:/Temp/Output/Invoice-1.pdf\"); \n} \n} ",
  "requireLicenseAcceptance": false,
  "summary": "Render/ Create Pdf using mvc Razor view,  Html markup string or metadata elements.",
  "title": "MvcPdfWriter",
  "version": "0.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.23.45.43/mvcpdfwriter.0.1.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.23.45.43/mvcpdfwriter.0.1.0.json#dependencygroup/itextsharp",
          "@type": "PackageDependency",
          "id": "iTextSharp",
          "range": "[5.5.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.23.45.43/mvcpdfwriter.0.1.0.json#dependencygroup/itextsharp.xmlworker",
          "@type": "PackageDependency",
          "id": "itextsharp.xmlworker",
          "range": "[5.5.0, )"
        }
      ]
    }
  ],
  "tags": [
    "mvc",
    "pdf"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}