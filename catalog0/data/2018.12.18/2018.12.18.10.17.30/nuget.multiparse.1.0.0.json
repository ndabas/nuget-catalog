{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "sboulang",
  "catalog:commitId": "71c4e053-92ce-4205-ac5b-2cca232ffe73",
  "catalog:commitTimeStamp": "2018-12-18T10:17:30.5373642Z",
  "copyright": "Copyright 2014",
  "created": "2014-04-07T07:41:17.81Z",
  "description": "MultiParse is a mathematical expression parser written in the .NET framework. The focus of the project is building a highly customizable expression parser. This involves custom types, custom operators and custom functions. Also dynamic/static variables are perfectly feasible.\nFind the project with more documentation at http://multiparse.codeplex.com/!\n\nFeatures:\n- Custom user-defined data types\n    C# native data types have been implemented\n        Boolean/bool\n        Byte/byte, Char/char, SByte/sbyte\n        Int16/short, UInt16/ushort, Int32/int, UInt32/uint, Int64/long, UInt64/ulong, Decimal/decimal\n        String/string (supports C# escape sequences including unicode \\xX(XXX) \\uXXXX and \\UXXXXXXXX)\n        Single/float, Double/double\n        DateTime is not implemented as it does not have a literal format in C#. But it can be implemented by the user.\n- Variables, static and dynamic.\n- Custom user-defined operators\n    Default C# binary operators have been implemented for all native data types\n        Arithmetic operators: +, -, *, /, %\n        Relational operators: <=, >=, <, >, ==, !=\n        Logical operators: &, |, ^\n        Conditional operators: ||, &&\n    Default C# unary operators have been implemented for all native data types\n        Arithmetic operators: +, -\n        Logical operators: ~\n        Conditional operators: !\n    Explicit type casts: eg. (Boolean), (int), etc.\n- Customizable functions\n    Default C# Math functions have been implemented\n        Generic functions: Abs(), Ceiling(), Exp(), Floor(), Log(), Log10(), Max(), Min(), Pow(), Round(), Sign(), Sqrt(), Truncate()\n    Trigometric functions: Acos(), Asin(), Atan(), Atan2(), Cos(), Sin(), Tan()\n    Hyperbolic functions: Cosh(), Sinh(), Tanh()\n- Compilation at first evaluation\n    Subsequent evaluations will use the compiled action queue.",
  "iconUrl": "https://nuget.org/Content/Images/packageDefaultIcon-50x50.png",
  "id": "NuGet.MultiParse",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-12-18T10:17:21.977Z",
  "licenseUrl": "http://opensource.org/licenses/Apache-2.0",
  "listed": true,
  "packageHash": "MqwAEz5wjuzHWd97zJcaZiRxS2/UgfxYsUanlI1YSA2ZsVPGzrbbvB9eotil5YUDV2lq4MIrhXFNoqKSZKIbkA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 47137,
  "projectUrl": "https://nuget.org/packages/NuGet.MultiParse",
  "published": "2014-04-07T07:41:17.81Z",
  "requireLicenseAcceptance": false,
  "summary": "MultiParse is a mathematical expression parser written in the .NET framework. The focus of the project is building a highly customizable expression parser. This involves custom types, custom operators and custom functions. Also dynamic/static variables are perfectly feasible.",
  "title": "MultiParse",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#dependencygroup/log4net",
          "@type": "PackageDependency",
          "id": "log4net",
          "range": "[1.2.10, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#NuGet.MultiParse.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1236,
      "fullName": "NuGet.MultiParse.nuspec",
      "length": 3039,
      "name": "NuGet.MultiParse.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#tools/init.ps1",
      "@type": "PackageEntry",
      "compressedLength": 196,
      "fullName": "tools/init.ps1",
      "length": 411,
      "name": "init.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#tools/install.ps1",
      "@type": "PackageEntry",
      "compressedLength": 175,
      "fullName": "tools/install.ps1",
      "length": 406,
      "name": "install.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#tools/uninstall.ps1",
      "@type": "PackageEntry",
      "compressedLength": 173,
      "fullName": "tools/uninstall.ps1",
      "length": 395,
      "name": "uninstall.ps1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#lib/net35/NuGet.MultiParse.dll",
      "@type": "PackageEntry",
      "compressedLength": 32655,
      "fullName": "lib/net35/NuGet.MultiParse.dll",
      "length": 129024,
      "name": "NuGet.MultiParse.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.10.17.30/nuget.multiparse.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "Math",
    "Expression",
    "Parser",
    "Custom"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}