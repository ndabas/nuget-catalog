{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.17.52.30/embark.2.1.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "@ideaflare",
  "catalog:commitId": "1cd91b5a-80f6-45d3-ad07-fee8ccc63226",
  "catalog:commitTimeStamp": "2018-12-01T17:52:30.8374862Z",
  "created": "2015-12-06T19:47:36.58Z",
  "description": "Micro document database with a focus on visibility & simplicity.\n\nThe same 34kb dll is used for:\n\n- Saving data to file(s) locally\n- Hosting or connecting to a HTTP Embark server\n- Optional runtime-only persistence for unit testing/mocks\n\n- Doesn't force any ID or [Attribute] conventions you that you must use\n- Still, optional convention based interaction is avaliable.\n- Flexible constructor injection for custom behaviour of data storage and/or serialization.\n\nExamples & source @ http://ideaflare.github.io/embark\nFeedback, suggestions & pull requests welcome!",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.17.52.30/embark.2.1.6.json#frameworkassemblygroup",
    "assembly": [
      "System.ServiceModel",
      "System.ServiceModel.Web",
      "System.Web.Extensions"
    ]
  },
  "iconUrl": "https://trello-attachments.s3.amazonaws.com/5522d010025c17b7646b78d5/400x400/897f79c4c9e79aeeb9c2be5ae8b59322/blueLogo.png",
  "id": "Embark",
  "isPrerelease": false,
  "language": "es-US",
  "lastEdited": "2018-12-01T17:52:10.657Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "HWeLZ7zrvJHpaoMmF2rql3X+pVLIXryXgplgtVjQtvc/Ts4I3ZCissrxT7UJ/p7bsWa5igak9yUDuJT11QliQw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 33600,
  "projectUrl": "http://ideaflare.github.io/embark",
  "published": "2015-12-06T19:47:36.58Z",
  "releaseNotes": "-Made IDataStore public for custom data storage implementation.\n\nUsage & docs @ http://ideaflare.github.io/embark",
  "requireLicenseAcceptance": false,
  "summary": "Micro embedded document DB with optional self-hosted HTTP server.\n\nMade to simplify and accelerate prototyping and/or mocking.",
  "title": "Embark",
  "verbatimVersion": "2.1.6",
  "version": "2.1.6",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.17.52.30/embark.2.1.6.json#Embark.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 976,
      "fullName": "Embark.nuspec",
      "length": 2045,
      "name": "Embark.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.17.52.30/embark.2.1.6.json#lib/net45/Embark.dll",
      "@type": "PackageEntry",
      "compressedLength": 14594,
      "fullName": "lib/net45/Embark.dll",
      "length": 32768,
      "name": "Embark.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.17.52.30/embark.2.1.6.json#lib/net45/Embark.XML",
      "@type": "PackageEntry",
      "compressedLength": 5314,
      "fullName": "lib/net45/Embark.XML",
      "length": 41011,
      "name": "Embark.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.17.52.30/embark.2.1.6.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9472,
      "fullName": ".signature.p7s",
      "length": 9472,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "nosql",
    "document",
    "database",
    "prototype",
    "mock",
    "db"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}