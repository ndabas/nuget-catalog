{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.19.38.44/windowsazure.servicebus.2.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Microsoft",
  "catalog:commitId": "c5bbe701-db7d-4a36-8ab9-ed1d67101537",
  "catalog:commitTimeStamp": "2015-02-07T19:38:44.6650048Z",
  "created": "2015-01-29T18:36:44.38Z",
  "description": "Use this for Microsoft Azure Service Bus Queues, Topics, Relay and Notification Hubs backend operations. \n\t\t\nIt adds Microsoft.ServiceBus.dll along with related configuration files to your project. This library allows AMQP 1.0 to be used as one of the protocols for communication with Microsoft Azure Service Bus. Notification Hubs support sending push notifications to Windows, Windows Phone, iOS and Android. \n\t\t\nFor more information on Messaging features, please visit: http://azure.microsoft.com/en-us/documentation/services/service-bus/\nFor more information on Notification Hub, please visit: http://azure.microsoft.com/en-us/documentation/articles/notification-hubs-overview/\nFor more information on Event Hub features, please visit: http://go.microsoft.com/fwlink/?LinkID=403957\n\t\t\nPlease note that this package requires .Net Framework 4 Full Profile.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.19.38.44/windowsazure.servicebus.2.6.0.json#frameworkassemblygroup/.netframework4.0",
    "assembly": [
      "System.ServiceModel",
      "System.Xml",
      "System.Runtime.Serialization"
    ],
    "targetFramework": ".NETFramework4.0"
  },
  "iconUrl": "http://go.microsoft.com/fwlink/?LinkID=288890",
  "id": "WindowsAzure.ServiceBus",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2015-01-29T18:37:41.64Z",
  "licenseUrl": "http://go.microsoft.com/fwlink/?LinkId=218949",
  "packageHash": "SR1hwXAmk4noeO67HA5Y0JzuxQazqx+CH7my4qqTWx/2SYIufUQxQNuH8aCw2IqGZjVrIBaGog9L0Kpt3IZ3ng==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1312549,
  "projectUrl": "http://go.microsoft.com/fwlink/?LinkId=218964",
  "published": "2015-01-29T18:36:44.443Z",
  "releaseNotes": "The following new features/fixes are introduced in Service Bus client:\n- EventHub: New feature 'Send to Publisher': Add support for sending events to EventHub via specific publisher endpoints. The feature allow events to be sent with more targeted access control.\n- EventHub: Increase reliability in EventHubConsumerGroup.CreateReceiver() call by adding internal retry logic to handle transient exceptions (using same RetryPolicy similar to other classes).\n- EventHub: Adding Api overloads for NamespaceManager.GetEventHubPartition().\n- EventHub: Adding PrefetchSizeInBytes property to EventHubClient, EventHubConsumerGroup, and EventHubReceiver so that user can control prefetch limit using size rather than event counts.\n- EventHub: Adding EventData.SerializedSizeInBytes so that user has better ways to track data size usage.\n- EventHub: Adding new properties (LastEnqueuedOffset and LastEnqueuedTimeUtc) to PartitionDescription\n- EventHub: Adding new runtime info method EventHubClient.GetPartitionRuntimeInformationAsync() that returns new class PartitionRuntimeInformation to provide partition centric metadata.\n- EventHub/Messaging: Adding support of Amqp over WebSocket transport. To use, make sure you are using Amqp transport type, and set ServiceBusEnvironment.SystemConnectivity.Mode to ConnectivityMode.Http before any entity creation.\n- Messaging: Allow user to access Tcp connection pool's LeaseTimeout property in the NetMessagingBinding.\n- Messaging: Improve exception message when user is using the runtime/management Api for the wrong entity types.\n- Messaging: Adding utility methods FormatTransferDeadLetterPath to TopicClient and QueueClient.\n- Messaging: Adding EntityPath and Publisher component to ServiceBusConnectionStringBuilder and connection string format.\n- Messaging: Adding new CreateFromConnectionString() overloads to TopicClient and QueueClient to support entity path in connection strings.",
  "requireLicenseAcceptance": true,
  "summary": "Client library for Microsoft Azure Service Bus Queues, Topics, Relay and Notification Hubs backend operations.",
  "title": "Microsoft Azure Service Bus",
  "version": "2.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.19.38.44/windowsazure.servicebus.2.6.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.19.38.44/windowsazure.servicebus.2.6.0.json#dependencygroup/microsoft.windowsazure.configurationmanager",
          "@type": "PackageDependency",
          "id": "Microsoft.WindowsAzure.ConfigurationManager",
          "range": ""
        }
      ]
    }
  ],
  "tags": [
    "ServiceBus",
    "Microsoft",
    "Azure",
    "AppFabric",
    "Messaging",
    "PubSub",
    "Publish",
    "Subscribe",
    "Queue",
    "Topic",
    "Relay",
    "Service",
    "Bus",
    "AMQP",
    "OASIS",
    "windowsazureofficial",
    "NotificationHub",
    "Notifications",
    "Notification",
    "Hub",
    "Push",
    "Windows",
    "Phone",
    "iOS",
    "Android",
    "EventHub",
    "Event"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}