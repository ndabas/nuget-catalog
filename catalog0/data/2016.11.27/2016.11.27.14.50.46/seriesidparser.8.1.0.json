{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Stefm",
  "catalog:commitId": "40b9f10f-d504-4376-9698-bc7fc15aadd8",
  "catalog:commitTimeStamp": "2016-11-27T14:50:46.2170899Z",
  "copyright": "2016 Stefan MÃ¼ller",
  "created": "2016-11-27T14:50:36.543Z",
  "description": "!! Now supporting .Net Core !!\nSee SeriesIDParserCore (https://www.nuget.org/packages/SeriesIDParserCore/)\n\nParses series or movie strings to detailed object.\n\nInput: \"Knight.Rider.S01E01E02.Die.grosse.Duerre.German.DVDRip.AAC.XviD-c0nFuSed.mkv\"\nThe output would be a object like that:\n\nSeriesID (object)\n|-> FullTitle -> Knight.Rider.S01E07.Die.grosse.Duerre (string)\n|-> SeriesTitle -> Knight.Rider (string)\n|-> EpisodeTitle-> Die.grosse.Duerre (string)\n|-> State -> OK_SUCCESS (Flagable Enum)\n|-> IsSeries -> true (bool)\n|-> IsMultiEpisode -> true (bool)\n|-> OriginalString-> Knight.Rider.S01E07.Die.grosse.Duerre.German.DVDRip.XviD-c0nFuSed.mkv (string)\n|-> ParsedString -> Knight.Rider.S01E07.Die.grosse.Duerre.DVDRip.German.mkv (string)\n|-> RemovedTokens -> {German, DVDRip, XviD} (string-list)\n|-> Season -> 1 (int)\n|-> DetectedOldSpacingChar -> '.' (char)\n|-> ProcessingDuration -> (TimeSpan)\n|-> Episodes -> 1, 2 (int list)\n|-> IDString -> S01E07 (string)\n|-> Resolutions -> {SD_Any} (enum list)\n|-> Year -> 1982 (int)\n|-> VideoCodec -> XviD (string)\n|-> AudioCodec -> AAC (string)\n|-> ReleaseGroup -> c0nFuSed (string)\n|-> FileInfo -> OBJECT (FileInfo)\n|-> ParserSettingsUsed -> OBJECT (ParserSettingsUsed)\n\nCheck \"Project Site\" link on the left for the Gitlab project site.\nIcon designed by Madebyoliver from Flaticon",
  "iconUrl": "https://projects.stefm.de/nuget/SeriesIDParser/icon_gray_64px.png",
  "id": "SeriesIDParser",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://gitlab.com/Stefm/SeriesIDParser/blob/master/LICENSE",
  "listed": true,
  "packageHash": "pf3rQVjTdTcIZijwVOdo/aZC8DuhEMt+tl27S1W4nYYwPjQ/PDfI/OG4gVE2svjDiRV8KQpV7aSRv9vFZOmPxQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 36262,
  "projectUrl": "https://gitlab.com/Stefm/SeriesIDParser",
  "published": "2016-11-27T14:50:36.543Z",
  "releaseNotes": "# Changelog #\n\n##8.1.0 (2016-11-27)##\n###New###\n- Added Methods to parse full directories\n- Added Extension Methodes to parse full directories\n- Unit tests for extension methodes now at 100% soft coverage\n\n###Fix###\n - Exception in extension methodes\n - Property exception in ParserResult\n - Possible exception fixes in some new parsing functions\n\n\n---\n\n\n##8.0.0 (2016-11-26)##\n###New###\n- Fileextension handling changed: Default is now the global dot net default (with dot E.g.: m4v -> .m4v)\n- Switches from single class to worker class (SeriesIDParser) and  result class (SeriesIDResult)\n- Property IsMultiEpisode is now danymicaly computed\n- Property ParserSettingsUsed are now available in the SeriesIDResult object\n- Properties FullTitle, ParsedString and IDString are now cached to improve performance on multiple access\n- UnitTests are now excluded from code coverage check\n- UnitTests are now in multiple files and functions\n- Parser properties refactored\n- Extension methodes added\n- Added a property for the year regex string\n\n###Fix###\n - Possible Nullpointer on GetFileExtension()\n - Some code optimization",
  "requireLicenseAcceptance": true,
  "summary": "Parses series or movie strings to detailed object.\nCheck Gitlab for more information: https://gitlab.com/Stefm/SeriesIDParser",
  "title": "SeriesIDParser",
  "verbatimVersion": "8.1.0",
  "version": "8.1.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json#SeriesIDParser.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1507,
      "fullName": "SeriesIDParser.nuspec",
      "length": 3577,
      "name": "SeriesIDParser.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json#build/_._",
      "@type": "PackageEntry",
      "compressedLength": 2,
      "fullName": "build/_._",
      "length": 0,
      "name": "_._"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json#content/_._",
      "@type": "PackageEntry",
      "compressedLength": 2,
      "fullName": "content/_._",
      "length": 0,
      "name": "_._"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json#lib/net45/SeriesIDParser.dll",
      "@type": "PackageEntry",
      "compressedLength": 13339,
      "fullName": "lib/net45/SeriesIDParser.dll",
      "length": 32256,
      "name": "SeriesIDParser.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json#lib/net45/SeriesIDParser.pdb",
      "@type": "PackageEntry",
      "compressedLength": 16915,
      "fullName": "lib/net45/SeriesIDParser.pdb",
      "length": 71168,
      "name": "SeriesIDParser.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.27.14.50.46/seriesidparser.8.1.0.json#src/_._",
      "@type": "PackageEntry",
      "compressedLength": 2,
      "fullName": "src/_._",
      "length": 0,
      "name": "_._"
    }
  ],
  "tags": [
    "Series",
    "Movie",
    "ID",
    "String",
    "Parser"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}