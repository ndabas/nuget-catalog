{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.09.15/sholo.typescript.build.0.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Scott Holodak (@scottt732)",
  "catalog:commitId": "6a83462f-a44f-4bcd-b978-0a36961327a3",
  "catalog:commitTimeStamp": "2015-02-02T17:09:15.8920989Z",
  "created": "2012-10-04T00:50:17.053Z",
  "description": "Adds support for compiling TypeScript files during to the project build process.  The Error List window will have the correct fileanme, row, and column indexes so you can just double click on an error.  Note that when the .ts file is open, you will see duplicate errors.  Not sure if this is avoidable.\n\nThe easiest way to add .ts files to your project is via the Add New Item menu.  Visual Studio will take care of setting the appropriate Build Action and will nest the .js file under the .ts file.\n\nTo enable existing .ts files to be compiled, click on the item in Solution Explorer, change the Build Action to \"TypeScriptCompile\" in the Properties Window.  You may need to Show All Files and add the .js file.",
  "id": "Sholo.TypeScript.Build",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "AknsBP01ICCOte/S5ty8DatdPw9gwu+5VbDxcTdqKXltAqzcWvpQt8+BIokt990cyofTyo4Ijd/LQVZzClK9og==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 7234,
  "published": "2012-10-04T00:50:17.053Z",
  "requireLicenseAcceptance": false,
  "title": "",
  "version": "0.8.0",
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}