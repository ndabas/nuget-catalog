{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.04.27.21.31.09/fscheck.2.0.0-alpha.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Kurt Schelfthout and contributors",
  "catalog:commitId": "700c4c5a-7738-42ee-ae5b-213b1b1cf992",
  "catalog:commitTimeStamp": "2015-04-27T21:31:09.8471398Z",
  "copyright": "Copyright 2014",
  "created": "2015-04-27T19:46:05.533Z",
  "description": "FsCheck is a tool for testing .NET programs automatically. The programmer provides a specification of the program, in the form of properties which functions, methods or objects should satisfy, and FsCheck then tests that the properties hold in a large number of randomly generated cases. While writing the properties, you are actually writing a testable specification of your program. Specifications are expressed in F#, C# or VB, using combinators defined in the FsCheck library. FsCheck provides combinators to define properties, observe the distribution of test data, and define test data generators. When a property fails, FsCheck automatically displays a minimal counter example.",
  "id": "FsCheck",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/fsharp/FsCheck/blob/master/License.txt",
  "listed": true,
  "packageHash": "S8FfagBiswhCZruyI7v5y3ydRXqTKcZGGfIUm5wNQ8sskeIcKW3jiTCtWrNGCdp4V9+xW8tmnTOQT7Jpdq/Hcw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 311239,
  "projectUrl": "https://github.com/fsharp/FsCheck",
  "published": "2015-04-27T19:46:05.533Z",
  "releaseNotes": "Rename FsCheckTestCaseBuider to Builder. (potentially breaking change)\nAdd RequireQualifiedAccess to TestResult and Outcome. (breaking change for IRunner implementations and test framework integrations)\nRemove Fluent API and SpecBuilder in favor of overloads in Prop and extension methods on Property (breaking change)\nAdd extension methods to allow working with Arbitrary from C#/VB.\nRename Any to Gen. Rename pretty much all methods on Any to match the existing methods they wrap on Gen module. (breaking change)\nAdd missing Gen and Arbitrary extension methods and C#/VB wrappers.\nMake Property a real type instead of a type alias.\nAdd discard (by Mauricio Scheffer)\nVarious improvements and changes to Command interface for easier consumption, also from C#/VB (breaking change)\nAdd explicit dependency on FSharp.Core Nuget package to hopefully reduce version confusion and make things easier for C#/VB users.",
  "requireLicenseAcceptance": false,
  "summary": "FsCheck is a tool for testing .NET programs automatically using randomly generated test cases.",
  "title": "FsCheck",
  "version": "2.0.0-alpha",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.04.27.21.31.09/fscheck.2.0.0-alpha.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.04.27.21.31.09/fscheck.2.0.0-alpha.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[3.1.2.1, )"
        }
      ]
    }
  ],
  "tags": [
    "test",
    "testing",
    "random",
    "fscheck",
    "quickcheck"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}