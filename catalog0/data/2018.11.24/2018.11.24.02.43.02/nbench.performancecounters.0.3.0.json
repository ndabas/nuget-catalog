{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aaron Stannard",
  "catalog:commitId": "7741d873-d7da-4e20-a5fc-c0b40fb39310",
  "catalog:commitTimeStamp": "2018-11-24T02:43:02.1691537Z",
  "copyright": "Copyright Â© 2015-2016",
  "created": "2016-05-24T21:41:32.973Z",
  "description": "PerformanceCounter measurements and assertions for NBench",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json#frameworkassemblygroup/.netframework4.5",
    "assembly": [
      "System.Core",
      "System",
      "Microsoft.CSharp"
    ],
    "targetFramework": ".NETFramework4.5"
  },
  "iconUrl": "https://petabridge.com/images/nbench/NBench_logo_square_90.png",
  "id": "NBench.PerformanceCounters",
  "isPrerelease": false,
  "lastEdited": "2018-11-24T02:42:46.183Z",
  "licenseUrl": "https://github.com/petabridge/NBench/blob/master/LICENSE",
  "listed": true,
  "packageHash": "054f2EegCDNbthvPQp9bGkFVe1LXNZ93kiEtDJsrhWB2LXI28gcSBiFuqqIa4on5tvKMkNHeTVMGtJZZm1/InQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 19909,
  "projectUrl": "https://github.com/petabridge/NBench",
  "published": "2016-05-24T21:41:32.973Z",
  "releaseNotes": "This release introduces some breaking changes to NBench:\nTracing**\nThe biggest feature included in this release is the addition of tracing support, which is exposed directly to end-users so they can capture trace events and include them in the output produced by NBench.\nYou can access the `IBenchmarkTrace` object through the `BenchmarkContext` passed into any of your `PerfSetup`, `PerfBenchmark`, or `PerfCleanup` methods like such:\n```csharp\npublic class TracingBenchmark\n{\n[PerfSetup]\npublic void Setup(BenchmarkContext context)\n{\ncontext.Trace.Debug(SetupTrace);\n}\n[PerfBenchmark(TestMode = TestMode.Test, NumberOfIterations = IterationCount, RunTimeMilliseconds = 1000)]\n[MemoryMeasurement(MemoryMetric.TotalBytesAllocated)]\n[MemoryAssertion(MemoryMetric.TotalBytesAllocated, MustBe.LessThan, ByteConstants.EightKb)]\npublic void Run1(BenchmarkContext context)\n{\ncontext.Trace.Debug(RunTrace);\n}\n[PerfCleanup]\npublic void Cleanup(BenchmarkContext context)\n{\ncontext.Trace.Info(CleanupTrace);\n}\n}\n```\n`NBench.Runner.exe` now takes a `trace=true|false` commandline argument, which will enable the new tracing feature introduced in this release.\nTracing is disabled by default**.\nSkippable Warmups**\nYou can now elect to skip warmups altogether for your specs. This feature is particularly useful for long-running iteration benchmarks, which are often used for stress tests. Warmups don't add any value here.\nHere's how you can skip warmups:\n```csharp\n[PerfBenchmark(TestMode = TestMode.Test, NumberOfIterations = IterationCount, RunTimeMilliseconds = 1000, SkipWarmups = true)]\n[MemoryMeasurement(MemoryMetric.TotalBytesAllocated)]\n[MemoryAssertion(MemoryMetric.TotalBytesAllocated, MustBe.LessThan, ByteConstants.EightKb)]\npublic void Run1(BenchmarkContext context)\n{\ncontext.Trace.Debug(RunTrace);\n}\n```\nJust set `SkipWarmups = true` on your `PerfBenchmark` attribute wherever you wish to skip a warmup.\nForeground thread is no longer given high priority when concurrent mode is on**.\nIf you are running the `NBench.Runner` with `concurrent=true`, we no longer give the main foreground thread high priority as this resulted in some unfair scheduling during concurrent tests. All threads within the `NBench.Runner` process all share the same priority now.\nMarkdown reports include additional data**\nAll markdown reports now include:\nThe concurrency setting for NBench\nThe tracing setting for NBench\nA flag indicating if warmups were skipped or not\nAll of these were added in order to make it easy for end-users reading the reports to know what the NBench settings were at the time the report was produced.",
  "requireLicenseAcceptance": false,
  "title": "NBench.PerformanceCounters",
  "verbatimVersion": "0.3.0",
  "version": "0.3.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json#dependencygroup/nbench",
          "@type": "PackageDependency",
          "id": "NBench",
          "range": "[0.3.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json#NBench.PerformanceCounters.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1594,
      "fullName": "NBench.PerformanceCounters.nuspec",
      "length": 3984,
      "name": "NBench.PerformanceCounters.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json#lib/net45/NBench.PerformanceCounters.dll",
      "@type": "PackageEntry",
      "compressedLength": 7046,
      "fullName": "lib/net45/NBench.PerformanceCounters.dll",
      "length": 16384,
      "name": "NBench.PerformanceCounters.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.24.02.43.02/nbench.performancecounters.0.3.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9481,
      "fullName": ".signature.p7s",
      "length": 9481,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "performance",
    "benchmarking",
    "benchmark",
    "perf",
    "testing",
    "NBench"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}