{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aylien Inc., Hamed Ramezanian Nik",
  "catalog:commitId": "dda0ce94-2f39-4bd5-a67b-2fc1055f78a4",
  "catalog:commitTimeStamp": "2016-04-25T16:38:20.2559817Z",
  "copyright": "Copyright AYLIEN Inc. 2016",
  "created": "2016-04-25T16:37:48.057Z",
  "description": "Aylien News API library for .NET",
  "id": "Aylien.NewsApi",
  "isPrerelease": false,
  "lastEdited": "2016-04-25T16:37:41.32Z",
  "licenseUrl": "https://github.com/AYLIEN/aylien_newsapi_csharp/blob/master/LICENSE",
  "listed": false,
  "packageHash": "AWCaCXlWZhei7HtgUkcuBfFqJZ+Qb0uXqcVQaqgyqdKrsALEs216FCvG1+LVLhg7zhnEm8Fc6sRhV976n2OEQQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 70659,
  "projectUrl": "https://github.com/AYLIEN/aylien_newsapi_csharp",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "See GitHub for details of commits since previous version.",
  "requireLicenseAcceptance": true,
  "title": "Aylien.NewsApi",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#dependencygroup/restsharp",
          "@type": "PackageDependency",
          "id": "RestSharp",
          "range": ""
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#Aylien.NewsApi.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 450,
      "fullName": "Aylien.NewsApi.nuspec",
      "length": 911,
      "name": "Aylien.NewsApi.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#tools/README.md",
      "@type": "PackageEntry",
      "compressedLength": 1623,
      "fullName": "tools/README.md",
      "length": 5361,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#lib/net45/Aylien.NewsApi.dll",
      "@type": "PackageEntry",
      "compressedLength": 49226,
      "fullName": "lib/net45/Aylien.NewsApi.dll",
      "length": 183296,
      "name": "Aylien.NewsApi.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.16.38.20/aylien.newsapi.1.0.0.json#lib/net45/Aylien.NewsApi.xml",
      "@type": "PackageEntry",
      "compressedLength": 17146,
      "fullName": "lib/net45/Aylien.NewsApi.xml",
      "length": 519430,
      "name": "Aylien.NewsApi.xml"
    }
  ],
  "tags": [
    "Aylien",
    "News",
    "API"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}