{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.01.55.57/dependencysharp.1.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Evan Wondrasek",
  "catalog:commitId": "a4157d25-ea8c-453b-880f-437f97c5cb8e",
  "catalog:commitTimeStamp": "2015-02-08T01:55:57.1678809Z",
  "copyright": "Copyright Â© Evan Wondrasek / Apricity Software LLC 2014",
  "created": "2014-10-01T22:52:42.957Z",
  "description": "DependencySharp allows you to embed unmanaged COM libraries within your managed library (as a byte array), and at runtime check if the unmanaged library exists in a specified location. If it doesn't, the library is automatically written to the specified location.\n\nThese \"self-contained\" libraries are capable of managing their own unmanaged dependencies, providing a convenient way for your end-user to use and deploy your managed library.\n\nFull documentation and usage examples: https://github.com/evanwon/dependencysharp/blob/master/README.md\n\nDependencySharp is open-source: https://github.com/evanwon/dependencysharp",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.01.55.57/dependencysharp.1.1.0.json#frameworkassemblygroup",
    "assembly": [
      "System",
      "System.Core"
    ]
  },
  "id": "DependencySharp",
  "isPrerelease": false,
  "lastEdited": "2014-10-01T22:58:04.06Z",
  "packageHash": "3zVgxbNN5J10DMoHjVJsecd483FYqolm6KLf0B/UqCXe3zdQY/U3u9UxEksQuvp9/H8tiLwIFXB9HCuooG1uTg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 8719,
  "projectUrl": "https://github.com/evanwon/dependencysharp",
  "published": "2014-10-01T22:52:42.957Z",
  "releaseNotes": "Version 1.1.0 (2014-10-01, Evan Wondrasek):\n- Added overloaded methods to take single dependency",
  "requireLicenseAcceptance": false,
  "summary": "DependencySharp allows you to embed unmanaged COM libraries within your managed library (as a byte array), and at runtime check if the unmanaged library exists in a specified location. If it doesn't, the library is automatically written to the specified location.",
  "title": "DependencySharp",
  "version": "1.1.0",
  "tags": [
    "dependency"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}