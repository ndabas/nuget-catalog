{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.12.00.32.31/xamarin.insights.1.9.0.106.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Xamarin,  Inc.",
  "catalog:commitId": "1fe22aa7-828e-4e97-8b53-f33d863c7d35",
  "catalog:commitTimeStamp": "2015-02-12T00:32:31.6023515Z",
  "copyright": "Copyright 2015",
  "created": "2015-02-10T17:38:34.057Z",
  "description": "Insights for your Apps",
  "iconUrl": "https://houstonweb.blob.core.windows.net/assets/analytics-package@2x.png",
  "id": "Xamarin.Insights",
  "isPrerelease": false,
  "lastEdited": "2015-02-10T17:39:40.4Z",
  "packageHash": "JGDnWckkxifHjkcAa4JCLp3v/3394Tw4opzta4aOyShQaCoBGA8tYCELpDCZ1QPXTRqD+8jfX24ZgK27k/3epQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1115233,
  "projectUrl": "http://insights.xamarin.com",
  "published": "2015-02-10T17:38:34.087Z",
  "releaseNotes": "Insights client release, 1.9.0\nChanges\n\nWe also have new API. The new API will be detailed in our documentation but as that tends to lag behind our releases by a small amount I'll mention the changes here.\n\nGuest Identities\n\nInsights will by default identify a user as a guest until you identify them yourself. If you wish to revert back to a guest user after previously identifying a user you can use the following api call.\n\nusing Xamarin;\nInsights.Identify(Insights.Traits.GuestIdentifier, null);\nThis will revert the identified user back to a guest user, any track events sent after this call will be associated with a guest user.\n\nDebug Mode\n\nYou may find when debugging your application that Insights can get in the way, it will capture crash reports, both native and managed that you may want access to. You may also not want to pollute your applications data in Insights with events from your debug session.\n\nThe solution for this is to use Insights debug mode, replacing your Initialize call with the following will enter debug mode.\n\nusing Xamarin;\nInsights.Initialize(Insights.DebugModeKey);\nIn Debug mode Insights will not collect any unhandled crash reports, it will not pick up native crash reports and any Insights.Track() or `Insights.Identify() calls will be ignored.\n\nDealing with startup crashes\n\nCrashes on startup are rather tricky to handle, you may find that your application crashes at startup in a way that does not give Insights enough time to transmit the crash report. With Insights you have a specific mechanism to deal with this problem.\n\nInsights.HasPendingCrashReport += (sender, isStartupCrash) =>\n{\n    if (isStartupCrash) {\n        Insights.PurgePendingCrashReports().Wait();\n    }\n};\nInsights.Initialize(\"Your API Key\");\nThis API allows you to get a notificatioon when Insights detects a pending crash report, Calling Insights.PurgePendingCrashReports(); will allow you to block whilst those crash reports are sent out. \nThis may delay your app startup time, which is why this is optional API instead of automatic.\n\nThe isStartupCrash value in your event handler will inform you weather the crash occured within 5 seconds of app startup, which generally indicates that the app crashed during startup.\n\nShort lived desktop applications\n\nDesktop Applications\n\nif you have short lived application, such as a command line application you may call Insights.PurgeAllPendingData().Wait() to ensure that insights is able to send data before your app closes\n\nStats for milestone [1.9.0]\n\nFixed Issues:\n\n#1036: (Client, Desktop) - Mono platform has trouble deleting files using cacheDirectoryOverride sometimes\n#1180: (Client, Android) - Java classes are too big for json serializer\n#1199: (Critical, Client) - Crash in init\n#1207: (Client, Android) - just use android global app context\n#1222: (Critical, Client) - use platform specific code to get timestamp\n#1234: (Client) - deal with app crashing on startup more elegantly\n#1235: (Client, Android) - GetAppVersion on android sometimes failes\n#1239: (iOS, Critical, Client) - Possible issue with iCloud backup\n#1269: (Client) - Protect against calling init multiple times\n#1271: (Client) - Allow clients to revert to guest identity\n#1275: (Client) - \"event.properties.Status\" - JSON Capitalization Issue\n#1292: (Client) - Catch crashes in Insights.Init\n#1295: (Client) - Make sure docs are up to date\n#1342: (Client) - default to no camel case in json encoder\n#1370: (Client) - Easy way to disable insights for debugging your app\n#1403: (Client) - Send platform id in DeviceInfo\n#1433: (Client) - 1.9.0 testing checklist\n#1444: (winrt, Client) - background tasks have no Application.Current crashes sometimes\n#1476: (Client) - our json can sometimes have duplicate keys in dictionaries\nAnd many more smaller bug fixes and changes that went untracked by our issue system...",
  "requireLicenseAcceptance": false,
  "title": "Xamarin.Insights",
  "version": "1.9.0.106",
  "tags": [
    "Xamarin",
    "Insights",
    "Monitoring",
    "Analytics",
    "Stability"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}