{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.19.36.03/ini.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "grumly57",
  "catalog:commitId": "3e744947-7ee9-43a5-bdc0-795988e4694d",
  "catalog:commitTimeStamp": "2018-12-01T19:36:03.1794063Z",
  "created": "2013-06-12T22:08:02.32Z",
  "description": "Usage:\n\n/* An INI file content :\n;Comment\n[Section]\nkey=value\n*/\n\nvar iniFile = new Ini(filePath); // Initialize a ini file. if the file exists, it is loaded automatically, otherwise it will be an empty ini file that will be written in.\n\n// Read ini\n// If the key does not exists, an empty string is returned.\n// Keys and sections are case insensitives\nstring[] keys = iniFile.GetKeys(\"section\"); // Get all the sections of the ini file\nstring[] sections = iniFile.GetSections(); // Get all the keys names in a section\nvar s = iniFile.GetValue(\"key\"); // Get a key value out of a section\nvar s = iniFile.GetValue(\"key\", \"section\"); // Get a key value in a section \nvar s = iniFile.GetValue(\"key\", \"section\", \"default value\"); // Get a key value or a default value\nLoad(); // Reloads a ini file\n\n// Write ini\n// Keys and sections are case insensitives\niniFile.WriteValue(\"key\", \"value\"); // Add or update a key value out of a section\niniFile.WriteValue(\"key\", \"section\", \"value\"); // Add or update a key value in a section\nSave(); // Save the modified ini file to the disk",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.19.36.03/ini.1.0.0.json#frameworkassemblygroup/.netframework3.5",
    "assembly": "System",
    "targetFramework": ".NETFramework3.5"
  },
  "id": "ini",
  "isPrerelease": false,
  "lastEdited": "2018-12-01T19:35:40.553Z",
  "listed": true,
  "packageHash": "m1h6EYYDx53v60rMNpWwc8RiW5blVcfa27kT4rNsARHkH2gAWW6i1S39SGzmhGnr6Y5KfuxomOx0yjFFxygTSQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14670,
  "projectUrl": "https://gist.github.com/grumly57/5725301",
  "published": "2013-06-12T22:08:02.32Z",
  "requireLicenseAcceptance": false,
  "summary": "IniReader is a single class that reads and writes INI files.",
  "title": "A single cs class to read and write INI files.",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.19.36.03/ini.1.0.0.json#dependencygroup/.netframework3.5",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework3.5"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.19.36.03/ini.1.0.0.json#ini.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 820,
      "fullName": "ini.nuspec",
      "length": 1982,
      "name": "ini.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.19.36.03/ini.1.0.0.json#ini.cs",
      "@type": "PackageEntry",
      "compressedLength": 894,
      "fullName": "ini.cs",
      "length": 3341,
      "name": "ini.cs"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.19.36.03/ini.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "ini",
    "c#"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}