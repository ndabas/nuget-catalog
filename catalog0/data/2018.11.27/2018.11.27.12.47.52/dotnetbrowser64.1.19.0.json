{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.12.47.52/dotnetbrowser64.1.19.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TeamDev Ltd.",
  "catalog:commitId": "b08a8122-77cc-4114-a7db-eebaf4a0077e",
  "catalog:commitTimeStamp": "2018-11-27T12:47:52.540701Z",
  "copyright": "The Software is owned by TeamDev, copyrighted and protected by copyright laws and international treaty provisions. The Software is licensed, not sold. By installing or using the Software you will not acquire any rights to the Software except as expressly set forth in this Agreement. All rights not expressly granted herein are reserved by TeamDev.",
  "created": "2018-11-27T12:43:19.27Z",
  "description": "A Chromium-based WPF/WinForms component that can be embedded into your .NET application to display modern web pages built with HTML5, CSS3, JavaScript, Silverlight etc.\n\nTo be able to use DotNetBrowser, you should obtain a licence by filling a form at https://www.teamdev.com/dotnetbrowser#evaluate",
  "iconUrl": "https://www.teamdev.com/img/product-icons/DotNetBrowser.png",
  "id": "DotNetBrowser64",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-11-27T12:47:46.687Z",
  "licenseUrl": "https://www.teamdev.com/dotnetbrowser-licence-agreement",
  "listed": true,
  "packageHash": "zfb6sQDryruYMuwOKcFU3XcN9Z9LZyNabnoihDCjr14U9DlKVxsFNxP4/swTZJCG1Sik0xaRHkMx/lNJagBfew==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 67238550,
  "projectUrl": "https://www.teamdev.com/dotnetbrowser",
  "published": "2018-11-27T12:43:19.27Z",
  "releaseNotes": "Browser.Dispose(bool checkBeforeUnload)\nThe Browser.Dispose(bool checkBeforeUnload) method provides the ability to invoke the DialogHandler.OnBeforeUnload method\nwhich is fired if the web page contains the onbeforeunload JavaScript event.\nRead https://dotnetbrowser.support.teamdev.com/solution/articles/9000110024-onbeforeunload\n\nFileChooserParams.Filter\nThe FileChooserParams.Filter property provides a meaningful description of the file extensions accepted by the file chooser.\nThis information comes from the accept attribute of the input HTML element with the type=file attribute.\n\nFixes:\n- The NullReferenceException exception which is thrown during the disposing the WinFormsBrowserView instance in the heavyweight rendering mode.\n- The ArgumentOutOfRangeException exception which is thrown when setting the CultureInfo.\n- Unable to use a custom client certificate if it already exists in the certificate storage.\n- The UnauthorizedAccessException exception which is thrown if the LoggerProvider.Instance.OutputFile property is set to a path which has no write access.\n- The OutOfMemoryException exception which is thrown during verification of the Chromium binaries.\n- Unable to navigate with the arrow keys inside a drop-down list in the lightweight rendering mode.\n- The CertificateVerifyParams.VerifyFlags property always returns null.\n- The issue with the relative path in the BrowserContextParams constructor.\n\nImprovements:\n- The ability to manage download process even if the Browser instance which initiated the download activity has been disposed.\n- The ability to set the specific bitmap scaling mode for a WPFBrowserView instance in the lightweight rendering mode.\n- Improve the memory usage in the Chromium binaries verification functionality.",
  "requireLicenseAcceptance": true,
  "summary": "Solution for integration of Chromium-based component into .NET applications.",
  "title": "DotNetBrowser64",
  "verbatimVersion": "1.19",
  "version": "1.19.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.12.47.52/dotnetbrowser64.1.19.0.json#DotNetBrowser64.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1480,
      "fullName": "DotNetBrowser64.nuspec",
      "length": 3406,
      "name": "DotNetBrowser64.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.12.47.52/dotnetbrowser64.1.19.0.json#lib/DotNetBrowser.Chromium64.dll",
      "@type": "PackageEntry",
      "compressedLength": 65927347,
      "fullName": "lib/DotNetBrowser.Chromium64.dll",
      "length": 66036240,
      "name": "DotNetBrowser.Chromium64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.12.47.52/dotnetbrowser64.1.19.0.json#lib/DotNetBrowser64.dll",
      "@type": "PackageEntry",
      "compressedLength": 1201989,
      "fullName": "lib/DotNetBrowser64.dll",
      "length": 2112528,
      "name": "DotNetBrowser64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.12.47.52/dotnetbrowser64.1.19.0.json#lib/DotNetBrowser.xml",
      "@type": "PackageEntry",
      "compressedLength": 94864,
      "fullName": "lib/DotNetBrowser.xml",
      "length": 765842,
      "name": "DotNetBrowser.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.27.12.47.52/dotnetbrowser64.1.19.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "WPF",
    "WinForms",
    "control",
    "browser",
    "Chromium",
    "Chrome",
    "HTML5",
    "embedded",
    "Google",
    "Maps",
    "CSS",
    "JavaScript",
    "web",
    "application",
    "components",
    "integration",
    "embed",
    "integrate"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}