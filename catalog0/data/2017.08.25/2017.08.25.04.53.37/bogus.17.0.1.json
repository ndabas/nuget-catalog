{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brian Chavez",
  "catalog:commitId": "5c7776a7-4736-41bb-bbc8-de0e4480495a",
  "catalog:commitTimeStamp": "2017-08-25T04:53:37.7586168Z",
  "created": "2017-08-25T04:51:59.12Z",
  "description": "A simple and sane data generator for populating objects that supports different locales. A delightful port of the famed faker.js and inspired by FluentValidation. Use it to create and load databases and UIs with mock up data. Get started by using Faker class or a DataSet directly.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#frameworkassemblygroup/.netframework4.0",
    "assembly": [
      "Microsoft.CSharp",
      "System"
    ],
    "targetFramework": ".NETFramework4.0"
  },
  "iconUrl": "https://raw.githubusercontent.com/bchavez/Bogus/master/Docs/logo.png",
  "id": "Bogus",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.githubusercontent.com/bchavez/Bogus/master/LICENSE",
  "listed": true,
  "packageHash": "LmfE2zCxqIbO1Yt2COFd0iSqyXcLVUq0AgF+lp8yjbofGem89awnxdPsoziOEbAUdcWqSepJHwDBl+/ZB5MZtg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 809149,
  "projectUrl": "https://github.com/bchavez/Bogus",
  "published": "2017-08-25T04:51:59.12Z",
  "releaseNotes": "## v17.0.1\n* Migration to **.NET Standard 2.0**.\n\n## v16.0.3\n* With additional overloads for `.PickRandom(IList)` and `.PickRandom(ICollection)` we can now add `.PickRandom(\"cat\", \"dog\", \"fish\")` back to the API. \n\n## v16.0.2\n* BREAKING CHANGE: `Faker.Generate(n)` now calls `.ToList()` under the hood to escape LINQ deferred execution. Remembering to call `.ToList()` after `.Generate(n)` was a sticking point for new users writing test assertions on generated values. Please do not call `Faker.Generate(n).ToList()` as it would execute `.ToList()` twice. Simply, `Faker.Generate(n)` is enough.\n* `f.Generate` and `f => f.Make` now return `IList<T>` to signify the breaking change above. \n* Issue #92: Added `.GenerateLazy` to keep old behavior and returns `IEnumerable<T>`.\n* Issue #93: Renamed a `PickRandom` overload to avoid the compiler from picking wrong `PickRandom` method.\n* Added `f.PickRandomParam(\"cat\",\"dog\",\"fish\")`. \n* Removed `[Obsolete]` methods. \n\n## v15.0.7\n* Issue #88 - API aesthetics: Added `Name.FullName()` convenience method to generate a full name.\n\n## v15.0.6\n* PR #87: Added `.Rules()` method on `RuleSet`. Thanks @digitalcyote.\n\n\nFull History Here: https://github.com/bchavez/Bogus/blob/master/HISTORY.md",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "17.0.1",
  "version": "17.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#dependencygroup/.netframework4.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        }
      ],
      "targetFramework": ".NETFramework4.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#Bogus.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1387,
      "fullName": "Bogus.nuspec",
      "length": 2980,
      "name": "Bogus.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#lib/net40/Bogus.dll",
      "@type": "PackageEntry",
      "compressedLength": 391834,
      "fullName": "lib/net40/Bogus.dll",
      "length": 1290752,
      "name": "Bogus.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#lib/net40/Bogus.xml",
      "@type": "PackageEntry",
      "compressedLength": 10982,
      "fullName": "lib/net40/Bogus.xml",
      "length": 88268,
      "name": "Bogus.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#lib/netstandard2.0/Bogus.dll",
      "@type": "PackageEntry",
      "compressedLength": 391836,
      "fullName": "lib/netstandard2.0/Bogus.dll",
      "length": 1290752,
      "name": "Bogus.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.25.04.53.37/bogus.17.0.1.json#lib/netstandard2.0/Bogus.xml",
      "@type": "PackageEntry",
      "compressedLength": 10982,
      "fullName": "lib/netstandard2.0/Bogus.xml",
      "length": 88268,
      "name": "Bogus.xml"
    }
  ],
  "tags": [
    "fake",
    "bogus",
    "poco",
    "data",
    "generator",
    "database",
    "seed",
    "values",
    "test-data",
    "test",
    "tdd",
    "testing",
    "faker",
    ".net",
    "EF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}