{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Vitalii Maklai",
  "catalog:commitId": "6d696008-5f12-47b7-92eb-ff80b36fb43e",
  "catalog:commitTimeStamp": "2024-09-03T15:53:14.993749Z",
  "copyright": "Copyright Â© Vitalii Maklai 2004-2024",
  "created": "2024-08-30T19:02:11.693Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#deprecation",
    "alternatePackage": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#deprecation/alternatePackage",
      "id": "Omnifactotum",
      "range": "[0.22.0, )"
    },
    "message": "`OmnifactotumStringBuilderExtensions` was introduced in the wrong namespace `System` instead of `System.Text`. This was fixed in v0.22.0.",
    "reasons": [
      "Other"
    ]
  },
  "description": "Omnifactotum is the ultimate solution for .NET developers who want to streamline their development process. It provides its own helper and functional classes and interfaces as well as the extension methods for the standard .NET types. Omnifactotum is compatible with the older and newer .NET versions. It's the perfect way to reduce errors and save time, allowing developers to focus on creating quality code.",
  "id": "Omnifactotum",
  "isPrerelease": false,
  "lastEdited": "2024-09-03T15:52:39.81Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "minClientVersion": "5.4.0",
  "packageHash": "cPitnDiSXVSVV9H/07qNy1KIBf+r778l5IAA67Xbnby2BAHU5aoGCiSsCw8Af8/SwDnGs9qTX5T7ji7ud7YjPw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 593639,
  "projectUrl": "https://github.com/HarinezumiSama/Omnifactotum",
  "published": "2024-08-30T19:02:11.693Z",
  "readmeFile": "README.NuGet.md",
  "releaseNotes": "### Changes in 0.21.0 (since 0.20.0)\n\n#### New features\n\n- Added `OmnifactotumStringBuilderExtensions` with `StringBuilder AppendUIString(this StringBuilder, string?)` and `StringBuilder AppendSecuredUIString(this StringBuilder, string?, int, int)`\n- `ObjectValidator`: Added `EnsureValid<T>(...)` method (shortcut for `ObjectValidator.Validate(...).EnsureSucceeded()`)\n- Added `KeyedComparer<T, TKey>` (implements `IComparer<T>` and `IComparer`)\n- Added `OmnifactotumNullableCharExtensions` with `ToUIString(this char? value)` method\n- `OmnifactotumStringExtensions`: Added\n  - `ToTitleCase(this string?, CultureInfo?)`\n  - `ToTitleCaseForced(this string?, CultureInfo?)`\n  - `ToTitleCaseInvariant(this string?)`\n  - `ToTitleCaseInvariantForced(this string?)`\n- `OmnifactotumExceptionExtensions`: Added `EnumerateRecursively(this Exception?)` extension method\n\n#### Updates and fixes\n\n- Applied `MeansImplicitUse` annotation to `TMemberConstraint` in `MemberConstraintAttribute<TMemberConstraint>`\n- Optimized `OmnifactotumCharExtensions.ToUIString(this char)`\n- `IsOriginatedFrom<TOriginatingException>(this Exception?)` and `IsOriginatedFrom(this Exception?, Type)` are now using `OmnifactotumExceptionExtensions.EnumerateRecursively(this Exception?)`\n\n---\n\n### Changes in 0.20.0 (since 0.19.0)\n\n#### Breaking changes\n\n- Object validation\n  - Moved validation attributes from the namespace `Omnifactotum.Validation.Constraints` to `Omnifactotum.Validation.Annotations`\n    - `BaseMemberConstraintAttribute`\n    - `BaseValidatableMemberAttribute`\n    - `MemberConstraintAttribute`\n    - `MemberConstraintAttribute<T>` (.NET 7+)\n    - `MemberItemConstraintAttribute`\n    - `MemberItemConstraintAttribute<T>` (.NET 7+)\n    - `ValidatableMemberAttribute`\n  - `MemberConstraintExtensions`\n    - `AddError(this IMemberConstraint, MemberConstraintValidationContext, string?)` -> `AddError(this IMemberConstraint, MemberConstraintValidationContext, ValidationErrorDetails?)`\n  - `MemberConstraintBase`\n    - `AddError(MemberConstraintValidationContext, string?)` -> `AddError(MemberConstraintValidationContext, ValidationErrorDetails?)`\n    - Removed obsolete method `AddError(ObjectValidatorContext, MemberConstraintValidationContext, string)`\n    - Removed obsolete method `AddDefaultError(ObjectValidatorContext, MemberConstraintValidationContext)`\n\n#### New features\n\n- Object validation\n  - Added `ValidationErrorDetails` with the `Text` and `Description` properties (used in `MemberConstraintBase.AddError()` and `MemberConstraintExtensions.AddError()`)\n    - A `string` value can be implicitly converted to `ValidationErrorDetails`\n  - Object validation: Added constraints\n    - `NotNullAndNotBlankStringConstraint` (replaces `NotBlankStringConstraint`)\n    - `NotNullAndNotEmptyCollectionConstraint` (replaces `NotNullOrEmptyCollectionConstraint`)\n    - `NotNullAndNotEmptyCollectionConstraint<T>` (replaces `NotNullOrEmptyCollectionConstraint<T>`)\n    - `NotNullAndNotEmptyStringConstraint` (replaces `NotNullOrEmptyStringConstraint`)\n    - `NotNullRegexStringConstraintBase` (replaces `RegexStringConstraintBase`)\n    - `NotNullWebUrlConstraint` (replaces `WebUrlConstraint`)\n    - `OptionalNotBlankStringConstraint`\n    - `OptionalNotEmptyCollectionConstraint`\n    - `OptionalNotEmptyCollectionConstraint<T>`\n    - `OptionalNotEmptyStringConstraint`\n    - `OptionalRegexStringConstraintBase`\n    - `OptionalWebUrlConstraint`\n\n#### Deprecations\n\n- Object validation\n  - `MemberConstraintValidationError`\n    - The `ErrorMessage` property is deprecated in favor of the `Details` property of type `ValidationErrorDetails` (`ErrorMessage` is equivalent to `Details.Text`)\n  - Deprecated constraints\n    - `NotBlankStringConstraint` in favor of `NotNullAndNotBlankStringConstraint`\n    - `NotNullOrEmptyCollectionConstraint` in favor of `NotNullAndNotEmptyCollectionConstraint`\n    - `NotNullOrEmptyCollectionConstraint<T>` in favor of `NotNullAndNotEmptyCollectionConstraint<T>`\n    - `NotNullOrEmptyStringConstraint` in favor of `NotNullAndNotEmptyStringConstraint`\n    - `RegexStringConstraintBase` in favor of `NotNullRegexStringConstraintBase`\n    - `WebUrlConstraint` in favor of `NotNullWebUrlConstraint`\n\n---\n\n### Changes in 0.19.0 (since 0.18.0)\n\n#### Breaking changes\n\n- Object validation\n  - Removed `ValidationErrorCollection`\n  - `ObjectValidatorContext`: Removed the `Errors` property from public API\n  - Removed deprecated methods in `OmnifactotumTypeExtensions`:\n    - `IsNullable()` (`IsNullableValueType()` to be used instead)\n    - `GetCollectionElementType()` (`GetCollectionElementTypeOrDefault()` to be used instead)\n  - `IMemberConstraint`: Replaced `Validate(ObjectValidatorContext, MemberConstraintValidationContext, object?)` with `Validate(MemberConstraintValidationContext, object?)` since `MemberConstraintValidationContext` now has a reference to `ObjectValidatorContext`\n  - `MemberConstraintBase`:\n    - Replaced `ValidateValue(ObjectValidatorContext, MemberConstraintValidationContext, object?)` with `ValidateValue(MemberConstraintValidationContext, object?)`\n  - `TypedMemberConstraintBase<T>`:\n    - Replaced `ValidateTypedValue(ObjectValidatorContext, MemberConstraintValidationContext, T value)` with `ValidateTypedValue(MemberConstraintValidationContext, T value)`\n    - Replaced `ValidateMember<TMember>(ObjectValidatorContext, MemberConstraintValidationContext, T, Expression<Func<T, TMember>>, Type)` with `ValidateMember<TMember>(MemberConstraintValidationContext, T, Expression<Func<T, TMember>>, Type)`\n\n#### New features\n\n- Object validation\n  - Added generic `MemberConstraintAttribute<TMemberConstraint>` and `MemberItemConstraintAttribute<TMemberConstraint>` (.NET 7+)\n  - `ObjectValidationResult`: Added the `FailureMessage` property (and used it in `GetException()`)\n- `OmnifactotumCollectionExtensions`: Added `ToUIString()` for `IEnumerable<KeyValuePair<string, string?>>?`\n\n#### Updates and fixes\n\n- Object validation\n  - Improved the failure message in `NotNullConstraint<T>` (included the `T` type name)\n  - `MemberConstraintValidationContext`: Added a reference to `ObjectValidatorContext`\n- `OmnifactotumCollectionExtensions` and `OmnifactotumStringExtensions`: Implemented safe processing of collections w.r.t. `ImmutableArray<T>`\n- Applied `DebuggerDisplay` annotation:\n  - `FixedSizeDictionary<TKey, TValue, TDeterminant>`\n  - `ReadOnlyItemCollection<T>`\n  - `ReadOnlySet<T>`\n  - `RecursiveProcessingContext`\n  - `SemaphoreSlimBasedLock`\n  - `StopwatchElapsedTimeProvider`\n  - `TemplatedStringResolver`\n  - Validation:\n    - `MemberConstraintValidationContext`\n    - `ObjectValidationException`\n    - `ObjectValidationResult`\n    - `ObjectValidatorContext`\n    - `ValidationErrorCollection`\n\n---\n\n### Changes in 0.18.0 (since 0.17.0)\n\n#### Breaking changes\n\n- Object Validation\n  - `NotNullConstraint` is now inherited from `MemberConstraintBase` instead of `NotNullConstraint<object>`\n  - `NotNullConstraint<T>` is now sealed\n  - Removed `Omnifactotum.Validation.ObjectValidationResult.GetException(Func<...>, string?)`\n  - Removed `Omnifactotum.Validation.Constraints.MemberConstraintValidationError.GetDefaultDescription()`\n  - Removed `Omnifactotum.Validation.Constraints.MemberConstraintValidationError.GetDefaultDescription(MemberConstraintValidationError)`\n  - Member constraint's constructor can now be non-public\n\n#### New features\n\n- Object Validation\n  - Implemented support for `ImmutableArray<T>` in member constraints:\n    - `NotNullConstraint`\n    - `NotNullConstraint<T>`\n    - `NotNullOrEmptyCollectionConstraint`\n    - `NotNullOrEmptyCollectionConstraint<T>`\n- `OmnifactotumTypeExtensions`\n  - Added `GetInterfaceMethodImplementation(this Type, MethodInfo)`\n\n#### Updates and fixes\n\n- Object Validation\n  - Improved/added support for `ImmutableArray<T>`, `IReadOnlyList<T>`, `IList<T>`, `IEnumerable<T>`, and `IList`\n  - Improved type casting in expressions\n  - Improved message format of the exception created by `ObjectValidationResult.GetException()`\n  - Validating early that a member constraint has a parameterless constructor\n  - Slightly optimized member constraint creation\n\n---\n\n### Changes in 0.17.0 (since 0.16.0)\n\n#### New features\n\n- Added `OmnifactotumCharExtensions`\n  - `ToUIString(this char value)`\n- Added `OmnifactotumSpanExtensions`\n  - `ToHexString(this Span<byte> bytes, ...)`\n  - `TransformMultilineString(...)`\n- Added `ValueRangeExtensions`\n  - `Enumerate<T>(...)`\n  - `ToArray<T>(...)`\n- `OmnifactotumReadOnlySpanExtensions`\n  - Added `TransformMultilineString(...)`\n- `OmnifactotumStringExtensions`\n  - Added `EnsureNotBlank<T>`\n  - Added `EnsureNotEmpty<T>`\n  - Added `TransformMultilineString(...)`\n- Validation\n  - Added `NullableValueRangeConstraintBase<T>` constraint\n  - Added `OptionalEnumValueDefinedConstraint<T>` constraint\n  - Added `OptionalValueRangeConstraintBase<T>` constraint\n\n#### Minor updates and fixes\n\n- Applied `System.Diagnostics.Contracts.PureAttribute`, `Omnifactotum.Annotations.Pure`, and/or `Omnifactotum.Annotations.MustUseReturnValueAttribute` annotations where reasonable\n- Applied `Omnifactotum.Annotations.NotNullAttribute` where reasonable\n- Fixed/improved XML-documentation in:\n  - `NullableEnumValueDefinedConstraint<TEnum>`\n  - `OmnifactotumStringExtensions`\n- Minor code style fixes/improvements\n\n---\n\n### Changes in 0.16.0 (since 0.15.0)\n\n#### Breaking changes\n\n- `OmnifactotumArrayExtensions`: Removed `ToHexString(this byte[], bool)` and `ToHexString(this byte[])` in favor of `ToHexString(this byte[] bytes, string? separator = null, bool upperCase = false)`\n\n#### New features\n\n- `MemberConstraintBase`: Added the static protected method `string FormatValue<TValue>(TValue value)` (used in `EnumValueDefinedConstraint<TEnum>`, `NullableEnumValueDefinedConstraint<TEnum>`, `RegexStringConstraintBase`, `ValueRangeConstraintBase<T>`, and `WebUrlConstraint` to format the invalid value and valid value(s))\n- `OmnifactotumEnumExtensions`\n  - Added the `string GetDescription<TEnum>(this TEnum)` extension method\n  - Added the `ulong ToUInt64<TEnum>(this TEnum)` extension method\n- `OmnifactotumImmutableArrayExtensions`\n  - Added the `AvoidNullOrDefault<T>(this ImmutableArray<T>?)` extension method\n- Added `OmnifactotumReadOnlySpanExtensions` with the `ToHexString(this ReadOnlySpan<byte> bytes, string? separator = null, bool useUpperCase = false)` extension method\n- `ValueRange<T>`\n  - Added the `string ToString(string boundarySeparator)` method\n  - .NET 7+: `ValueRange<T>` implements `IEqualityOperators<ValueRange<T>, ValueRange<T>, bool>`\n- `ValueRangeConstraintBase<T>`: Added constructor `ValueRangeConstraintBase(T lower, T upper)`\n\n#### Minor updates and fixes\n\n- `OmnifactotumArrayExtensions`\n  - `ToHexString(this byte[], string?, bool)` is now optimized compared to the older implementation (less heap allocations)\n- `EnumFactotum`: Fix in `GetAllFlagValues<TEnum>()`\n- `ValueRange<T>`\n  - `string ToString()`: Changed the result format from `[Lower; Upper]` to `[Lower ~ Upper]`\n- `ValueRangeConstraintBase<T>`: Included invalid value in the error message\n\n---\n\n### Changes in 0.15.0 (since 0.14.1)\n\n#### Breaking changes\n\n- `ObjectValidator.Validate()` method: Added `instanceExpression` parameter\n  - For .NET 5+ and higher, the `instanceExpression` parameter is marked with the `CallerArgumentExpression` attribute\n  - For the older .NET versions, the `instanceExpression` parameter is supplied only for binary compatibility between the different target frameworks\n\n#### New features\n\n- `ElapsedTimeProviderExtensions`: Added the `GetStoppedElapsed()` extension method\n- `OmnifactotumCollectionExtensions`: Added the `Flatten()` extension method\n- `OmnifactotumEnumExtensions`: Added the `ToUIString()` extension method\n- `OmnifactotumExceptionExtensions`: Added the `IsOriginatedFrom(this Exception?, Type)` extension method\n- Added `OmnifactotumStopwatchExtensions` with the `GetStoppedElapsed()` extension method\n- `OmnifactotumStringExtensions`: Added new extension methods for `System.String`:\n  - `WithSingleLeadingSlash(string)`\n  - `WithoutLeadingSlash(string)`\n- Object validation\n  - Added `RegexStringConstraintBase`\n  - Added `ValueRangeConstraintBase<T>`\n\n#### Minor updates and fixes\n\n- Applied `MeansImplicitUse` annotations to `TKeyConstraint` and `TValueConstraint` in `KeyValuePairConstraint<TKey, TValue, TKeyConstraint, TValueConstraint>`\n\n---\n\n### Changes in 0.14.1 (since 0.14.0)\n\n#### Minor updates and fixes\n\n- Improvements in `Factotum.Assert(...)`\n  - The `DoesNotReturnIf` attribute has been applied on the `condition` parameter\n  - Now the method referenced by the `createAssertionFailureException` parameter can return `null` (`OmnifactotumAssertionException` is used in this case)\n- Minor improvements in XML documentation in `OmnifactotumMethodBaseExtensions` and `OmnifactotumTypeExtensions`\n\n---\n\n### Changes in 0.14.0 (since 0.13.0)\n\n#### Breaking changes\n\n- Dropped support of **.NET Framework 4.7.2** and **.NET Standard 2.0**\n- **.NET 7+**: Removed the following extension methods since the analogous ones are available since .NET 7:\n  - `OmnifactotumCollectionExtensions`\n    - `AsReadOnly<T>(this IList<T>)`\n  - `OmnifactotumDictionaryExtensions`\n    - `AsReadOnly<TKey, TValue>(this IDictionary<TKey, TValue>)`\n\n#### New features\n\n- Implemented compiling package for .NET 7\n\n---\n\n### Changes in 0.13.0 (since 0.12.0)\n\n#### Breaking changes\n\n- `OmnifactotumEnumExtensions`: `EnsureDefined<TEnum>(this TEnum ...)` now returns the input value instead of `void`\n- `TemplatedStringResolver`: `GetVariableNames()` now returns `HashSet<string>` instead of `string[]`\n\n#### New features\n\n- `OmnifactotumExceptionExtensions`: Added the `IsOriginatedFrom<TOriginatingException>(this Exception?)` extension method\n- `OmnifactotumStringExtensions`: Added the `ToSecuredUIString(this string? ...)` extension method\n\n#### Minor updates and fixes\n\n- `TemplatedStringResolver`: `GetVariableNames()` now uses the same resolver function for the variable name comparer as in the `TemplatedStringResolver` constructor",
  "repository": "",
  "verbatimVersion": "0.21.0",
  "version": "0.21.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#dependencygroup/net5.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net5.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net6.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#dependencygroup/net7.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net7.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#dependencygroup/.netstandard2.1/system.collections.immutable",
          "@type": "PackageDependency",
          "id": "System.Collections.Immutable",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#Omnifactotum.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4250,
      "fullName": "Omnifactotum.nuspec",
      "length": 16430,
      "name": "Omnifactotum.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/net5.0/Omnifactotum.dll",
      "@type": "PackageEntry",
      "compressedLength": 89188,
      "fullName": "lib/net5.0/Omnifactotum.dll",
      "length": 212480,
      "name": "Omnifactotum.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/net5.0/Omnifactotum.xml",
      "@type": "PackageEntry",
      "compressedLength": 54259,
      "fullName": "lib/net5.0/Omnifactotum.xml",
      "length": 587488,
      "name": "Omnifactotum.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/net6.0/Omnifactotum.dll",
      "@type": "PackageEntry",
      "compressedLength": 88997,
      "fullName": "lib/net6.0/Omnifactotum.dll",
      "length": 212480,
      "name": "Omnifactotum.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/net6.0/Omnifactotum.xml",
      "@type": "PackageEntry",
      "compressedLength": 53864,
      "fullName": "lib/net6.0/Omnifactotum.xml",
      "length": 585277,
      "name": "Omnifactotum.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/net7.0/Omnifactotum.dll",
      "@type": "PackageEntry",
      "compressedLength": 89854,
      "fullName": "lib/net7.0/Omnifactotum.dll",
      "length": 215040,
      "name": "Omnifactotum.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/net7.0/Omnifactotum.xml",
      "@type": "PackageEntry",
      "compressedLength": 53986,
      "fullName": "lib/net7.0/Omnifactotum.xml",
      "length": 586922,
      "name": "Omnifactotum.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/netstandard2.1/Omnifactotum.dll",
      "@type": "PackageEntry",
      "compressedLength": 88137,
      "fullName": "lib/netstandard2.1/Omnifactotum.dll",
      "length": 208896,
      "name": "Omnifactotum.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#lib/netstandard2.1/Omnifactotum.xml",
      "@type": "PackageEntry",
      "compressedLength": 54259,
      "fullName": "lib/netstandard2.1/Omnifactotum.xml",
      "length": 587488,
      "name": "Omnifactotum.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#README.NuGet.md",
      "@type": "PackageEntry",
      "compressedLength": 913,
      "fullName": "README.NuGet.md",
      "length": 2042,
      "name": "README.NuGet.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.09.03.15.53.14/omnifactotum.0.21.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12929,
      "fullName": ".signature.p7s",
      "length": 12929,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "C#",
    "CSharp",
    "omnifactotum",
    "omni",
    "factotum",
    "aid",
    "assistant",
    "extension",
    "extensions",
    "helper",
    "helpers",
    "common",
    "typical"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}