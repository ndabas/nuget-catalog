{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Microsoft",
  "catalog:commitId": "e7a7c8b2-6f24-46c4-ac33-8bd67a804ab7",
  "catalog:commitTimeStamp": "2019-09-11T17:42:28.8832752Z",
  "copyright": "Â© Microsoft Corporation. All rights reserved.",
  "created": "2019-09-11T17:38:12.45Z",
  "description": "Allows injecting .NET code into a remote process on Windows",
  "iconUrl": "https://raw.githubusercontent.com/xamarin/Windows.Injector/master/Icon.png",
  "id": "Xamarin.Windows.Injector",
  "isPrerelease": true,
  "language": "",
  "lastEdited": "2019-09-11T17:42:23Z",
  "licenseUrl": "https://raw.githubusercontent.com/xamarin/Windows.Injector/master/LICENSE.txt",
  "listed": true,
  "packageHash": "JIk3A6hgmV8i5/uDcvaVNE0H1QF7nVfcEnDc2BzUQNwc+TyEL8ZlTVNG1Q7oXTNrSMraFuNWZtvncZxXqFGR7Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 86171,
  "projectUrl": "https://github.com/xamarin/Windows.Injector",
  "published": "2019-09-11T17:38:12.45Z",
  "releaseNotes": "# Windows.Injector\n\n[![Version](https://img.shields.io/nuget/vpre/Xamarin.Windows.Injector.svg)](https://www.nuget.org/packages/Xamarin.Windows.Injector)\n[![Downloads](https://img.shields.io/nuget/dt/Xamarin.Windows.Injector.svg)](https://www.nuget.org/packages/Xamarin.Windows.Injector)\n[![Build Status](https://dev.azure.com/devdiv/DevDiv/_apis/build/status/Xamarin/VisualStudio/Windows.Injector?branchName=master)](http://build.azdo.io/11357)\n\nAllows injecting .NET code into a remote process on Windows\n\nHeavily based on [Cory Plott](http://www.cplotts.com)'s [Snoop](https://github.com/cplotts/snoopwpf).\n\nUsage:\n\n* Install:\n\n```\ninstall-package Xamarin.Windows.Injector\n```\n\nThe following properties are used to determine which version (`x86` or `x64`) of the `boostrap.dll` \nassembly will be referenced: `PlatformTarget`, `Platform` and `RuntimeIdentifier`. If any of those \nspecify either `x86` or `x64`, the assembly will be automatically referenced. Note that you cannot \ninvoke the injector via its API from an `AnyCPU` library, since it has to be of a specific bitness.\n\nThe targets automatically include as content both the assembly as well as a helper `Injector.exe` \nexecutable which you can use to inject into processes that have a different bitness than the calling one.\n\n* Launch:\n\n```\nvar targetProcess = System.Diagnostics.Process.GetProcessesByName(\"devenv.exe\")[0];\n\nInjector.Launch(\n    // IntPtr of the main window handle of the process to inject\n    targetProcess.MainWindowHandle,\n    // The full path to the .NET assembly to load in the remote process\n    Assembly.GetExecutingAssembly().Location,\n    // Full type name of the public static class to invoke in the remote process\n    \"MyApp.Startup\",\n    // Name of the static method in that class to invoke in the remote process\n    \"Start\");\n```\n\nOptionally, the injected method call can also receive parameters, in a `{method}:arg1:arg2:argN` format:\n\n```\nvar targetProcess = System.Diagnostics.Process.GetProcessesByName(\"devenv.exe\")[0];\n\nInjector.Launch(\n    // IntPtr of the main window handle of the process to inject\n    targetProcess.MainWindowHandle,\n    // The full path to the .NET assembly to load in the remote process\n    Assembly.GetExecutingAssembly().Location,\n    // Full type name of the public static class to invoke in the remote process\n    \"MyApp.Startup\",\n    // Name of the static method in that class to invoke in the remote process\n    \"Start:hello:42:true\");\n```\n\nSee [Program.cs](src/Sample/Program.cs) for complete example.\n\nWhen referencing the package from an `AnyCPU` project, the `x86` and `x64` folders will be included as \ncontent and copied to the project output path. This allows you to run the relevant `Injector.exe` for \nthat matches the target process bitness. This executable receives the same parameters as the `Launch` \nmethod shown above.\n\n> NOTE: parameter type conversion is supported and happens via the `TypeConverter` associated with the \nparameter type.\n\n\n        Built from https://github.com/xamarin/Windows.Injector/commit/586039d",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "",
  "verbatimVersion": "1.0.1-alpha.6+sha.586039d-azdo.3041449",
  "version": "1.0.1-alpha.6+sha.586039d-azdo.3041449",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#Xamarin.Windows.Injector.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1609,
      "fullName": "Xamarin.Windows.Injector.nuspec",
      "length": 4090,
      "name": "Xamarin.Windows.Injector.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#build/Xamarin.Windows.Injector.props",
      "@type": "PackageEntry",
      "compressedLength": 280,
      "fullName": "build/Xamarin.Windows.Injector.props",
      "length": 485,
      "name": "Xamarin.Windows.Injector.props"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#build/Xamarin.Windows.Injector.targets",
      "@type": "PackageEntry",
      "compressedLength": 514,
      "fullName": "build/Xamarin.Windows.Injector.targets",
      "length": 1418,
      "name": "Xamarin.Windows.Injector.targets"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x64/bootstrap.dll",
      "@type": "PackageEntry",
      "compressedLength": 22144,
      "fullName": "tools/x64/bootstrap.dll",
      "length": 47480,
      "name": "bootstrap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x64/Injector.exe",
      "@type": "PackageEntry",
      "compressedLength": 8424,
      "fullName": "tools/x64/Injector.exe",
      "length": 15224,
      "name": "Injector.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x64/Injector.exe.config",
      "@type": "PackageEntry",
      "compressedLength": 129,
      "fullName": "tools/x64/Injector.exe.config",
      "length": 174,
      "name": "Injector.exe.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x64/Injector.pdb",
      "@type": "PackageEntry",
      "compressedLength": 410,
      "fullName": "tools/x64/Injector.pdb",
      "length": 568,
      "name": "Injector.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x86/bootstrap.dll",
      "@type": "PackageEntry",
      "compressedLength": 22059,
      "fullName": "tools/x86/bootstrap.dll",
      "length": 45432,
      "name": "bootstrap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x86/Injector.exe",
      "@type": "PackageEntry",
      "compressedLength": 8432,
      "fullName": "tools/x86/Injector.exe",
      "length": 15224,
      "name": "Injector.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x86/Injector.exe.config",
      "@type": "PackageEntry",
      "compressedLength": 129,
      "fullName": "tools/x86/Injector.exe.config",
      "length": 174,
      "name": "Injector.exe.config"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#tools/x86/Injector.pdb",
      "@type": "PackageEntry",
      "compressedLength": 410,
      "fullName": "tools/x86/Injector.pdb",
      "length": 568,
      "name": "Injector.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.09.11.17.42.28/xamarin.windows.injector.1.0.1-alpha.6.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 18695,
      "fullName": ".signature.p7s",
      "length": 18695,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}