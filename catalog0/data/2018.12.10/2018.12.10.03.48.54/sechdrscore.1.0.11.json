{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Lee HUMPHRIES",
  "catalog:commitId": "3f521b8e-3a77-436a-9e43-915170c42886",
  "catalog:commitTimeStamp": "2018-12-10T03:48:54.961387Z",
  "copyright": "Copyright 2017 (c) md8n. All rights reserved.",
  "created": "2017-07-14T03:31:16.423Z",
  "description": "Build up Security Headers in a (semi) modular way.\nTo use in an ASP.Net Core web project.\nIn startup.cs - add the following private members to the startup class\n        private SecurityHeaders _securityHeaders { get; set; }\n        private List<CspFrame> _cspFrames { get; set; }\n\nAnd the following two private methods (and alter as you need to).  These do reference the samples nuget package.\n        private List<CspFrame> AssembleContentSecurityPolicies()\n        {\n            var defCspFrame = new CspFrame().Initialise(\"default\");\n            defCspFrame.Clauses\n                .AddUpdateClause(\"script-src\", \"\", \"'unsafe-eval'\")\n                .AddUpdateClause(\"style-src\", \"\", \"'unsafe-inline'\")\n                .AddUpdateClause(\"img-src\", \"\", \"data:\")\n                .AddUpdateClause(\"plugin-types\", \"\", \"application/pdf\")\n                .AddUpdateClause(\"frame-ancestors\", \"\", \"'none'\")\n                .AddUpdateClause(\"report-uri\", \"\", \"/cspreport\");\n\n            var basicCdnCspFrame = new CspFrame().Initialise(\"basicCdn\");\n            basicCdnCspFrame.Clauses\n                .AddUpdateClause(\"default-src\", \"\", \"https://maxcdn.bootstrapcdn.com/\")\n                .AddUpdateClause(\"script-src\", \"\", \"https://ajax.googleapis.com/ https://code.jquery.com/ https://cdnjs.cloudflare.com/\")\n                .AddUpdateClause(\"style-src\", \"\", \"https://fonts.googleapis.com/\")\n                .AddUpdateClause(\"font-src\", \"\", \"https://fonts.gstatic.com/\")\n                .AddUpdateClause(\"img-src\", \"\", \"https://csi.gstatic.com/\");\n\n            var googleMapsCspFrame = new CspFrame().GoogleMaps();\n            var stripeCspFrame = new CspFrame().Stripe();\n\n            return new List<CspFrame>\n            {\n                defCspFrame,\n                basicCdnCspFrame,\n                googleMapsCspFrame,\n                stripeCspFrame\n            };\n        }\n\n        /// <summary>\n        /// Returns a merged copy of all relevant CspFrames - adding in the Dev CspFrame if required\n        /// </summary>\n        /// <param name=\"env\"></param>\n        /// <returns></returns>\n        private CspFrame BuildContentSecurityPolicy(IHostingEnvironment env)\n        {\n            if (_cspFrames == null || !_cspFrames.Any())\n            {\n                _cspFrames = AssembleContentSecurityPolicies();\n            }\n\n            // Assemble the master CSP\n            var masterCsp = _cspFrames.Merge();\n\n            if (env.IsDevelopment())\n            {\n                var localhostSp = \"localhost:56993/\";\n                var stripe = \"http://checkout.stripe.com/\";\n\n                // Note that this dev CSP includes the http versions for Stripe\n                var devCspFrame = new CspFrame().Initialise(\"dev\");\n                devCspFrame.Clauses.AddUpdateClause(\"default-src\", \"\", \"http://localhost:5000/\")\n                    .AddUpdateClause(\"connect-src\", \"\", \"http://\" + localhostSp + \" ws://\" + localhostSp + \" \" + stripe)\n                    .AddUpdateClause(\"script-src\", \"\", \"http://\" + localhostSp + \" \" + stripe);\n\n                masterCsp = masterCsp.Merge(devCspFrame);\n            }\n\n            return masterCsp;\n        }\n\nFinally include the following in the configuration method just before app.UseMvc( ...\n            // Set up the overall Security Headers\n            // This will also assemble the _cspFrames object if required\n            if (_securityHeaders == null)\n            {\n                _securityHeaders = app.BuildSecurityHeaders(BuildContentSecurityPolicy(env));\n            }\n            else\n            {\n                _securityHeaders.Csp = BuildContentSecurityPolicy(env);\n            }\n            app.UseSecurityHeaders(_securityHeaders);\n",
  "id": "SecHdrsCore",
  "isPrerelease": false,
  "lastEdited": "2018-12-10T03:48:47.97Z",
  "listed": true,
  "packageHash": "P5psQz83ddbDcFuijWhwSKVYKVsP2Q1yeHAR01F1FYJu3J1XP9onCTsFmJsMm7oSKAZEKsXQXbEJEojyF9ih5g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23637,
  "published": "2017-07-14T03:31:16.423Z",
  "releaseNotes": "Does not currently provide specific support for manipulating Cookies or adding Subresource Integrity information for CDN based resources.  See SecHdrsCore.Sample for several sample CSP Frames.",
  "requireLicenseAcceptance": false,
  "summary": "Security Headers - for ASP.Net Core.  Provides a framework for building up security headers in a way that meets several web security guidelines.\n",
  "title": "Security Headers - for ASP.Net Core.",
  "verbatimVersion": "1.0.11",
  "version": "1.0.11",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#dependencygroup/.netstandard1.6",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#dependencygroup/.netstandard1.6/microsoft.aspnetcore.http.extensions",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Http.Extensions",
          "range": "[1.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#dependencygroup/.netstandard1.6/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#dependencygroup/.netstandard1.6/microsoft.aspnetcore.http.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Http.Abstractions",
          "range": "[1.1.2, )"
        }
      ],
      "targetFramework": ".NETStandard1.6"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#SecHdrsCore.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1740,
      "fullName": "SecHdrsCore.nuspec",
      "length": 5249,
      "name": "SecHdrsCore.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#lib/netstandard1.6/SecHdrsCore.dll",
      "@type": "PackageEntry",
      "compressedLength": 8347,
      "fullName": "lib/netstandard1.6/SecHdrsCore.dll",
      "length": 19968,
      "name": "SecHdrsCore.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#lib/netstandard1.6/SecHdrsCore.xml",
      "@type": "PackageEntry",
      "compressedLength": 2150,
      "fullName": "lib/netstandard1.6/SecHdrsCore.xml",
      "length": 14247,
      "name": "SecHdrsCore.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.10.03.48.54/sechdrscore.1.0.11.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9461,
      "fullName": ".signature.p7s",
      "length": 9461,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "asp.net",
    "core",
    "csp",
    "content",
    "security",
    "policy",
    "header",
    "headers"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}