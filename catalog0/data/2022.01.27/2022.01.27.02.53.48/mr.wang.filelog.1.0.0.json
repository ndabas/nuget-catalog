{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.27.02.53.48/mr.wang.filelog.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mr.Wang.FileLog",
  "catalog:commitId": "cbe12d77-99c7-4961-b7d3-6326a82d25ef",
  "catalog:commitTimeStamp": "2022-01-27T02:53:48.2289343Z",
  "copyright": "Mr.wang",
  "created": "2022-01-27T02:51:24.4Z",
  "description": "非商用",
  "id": "Mr.Wang.FileLog",
  "isPrerelease": false,
  "lastEdited": "2022-01-27T02:53:25.973Z",
  "listed": true,
  "packageHash": "nVFvWu1+bkTxUPgrq9BvRcFGw3QYe4x/6aGGqjei01msLyTa8fsO5+I7xo6RRXNGsrGRCE6czLXpr5epl4XF8Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17900,
  "projectUrl": "https://gitee.com/wangtianhous1/my-simple-file-logger.git",
  "published": "2022-01-27T02:51:24.4Z",
  "releaseNotes": "//1 创建日志管理器，并且注册默认文件记录器\n            LoggerManager logMan = new LoggerManager(true);\n\n            //1.1 这里各自注册自定义日志记录器\n            //logMan.RegistPersistenceLog();\n\n            //2 获取日志记录对象\n            var logger = logMan.CreateLogger(\"测试\");\n            //2.1 设置日志对象可用 默认是不可用的\n            logger.Enable = true;\n\n            //3 写入默认信息记录\n            logger.WriteInfoLog(\"今天是个hao ri Z\");\n\n            logger.WriteLog(Mr.Wang.FileLog.LogEnum.LogLeve.Debug, \"这是一个调试日志\");\n            //等待日志管理器写入日志\n\n\n            #region 日志自动分文件测试\n\n           // Console.WriteLine(\"写入[100000条]日志 ...\");\n            //for (int i = 0; i < 100000; i++)\n            //{\n            //    logger.WriteLog(Mr.Wang.FileLog.LogEnum.LogLeve.Warn, \"最佳答案: 注：如何安装git工具在此不做介绍，如需了解可网上搜索安装介绍。在“本地文件”中添加“.git文件”，用于git管理。进入本地文件夹，右击鼠标-单击Git Init Here\");\n            //}\n\n            #endregion\n\n            System.Threading.Thread.Sleep(1000);\n            //释放日志管理器\n            logMan.Dispose();\n            Console.WriteLine(\"日志写入完毕\");\n            Console.ReadKey();",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.27.02.53.48/mr.wang.filelog.1.0.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.27.02.53.48/mr.wang.filelog.1.0.0.json#Mr.Wang.FileLog.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1043,
      "fullName": "Mr.Wang.FileLog.nuspec",
      "length": 1978,
      "name": "Mr.Wang.FileLog.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.27.02.53.48/mr.wang.filelog.1.0.0.json#lib/netstandard2.0/Mr.Wang.FileLog.dll",
      "@type": "PackageEntry",
      "compressedLength": 5641,
      "fullName": "lib/netstandard2.0/Mr.Wang.FileLog.dll",
      "length": 12800,
      "name": "Mr.Wang.FileLog.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.01.27.02.53.48/mr.wang.filelog.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}