{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.08.07.13.56/perrypheralframework.wpf.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eyal Perry",
  "catalog:commitId": "dc897279-b038-4145-8d81-d5bb7f4d3fe2",
  "catalog:commitTimeStamp": "2015-05-08T07:13:56.2063015Z",
  "copyright": "Eyal Perry",
  "created": "2015-04-11T15:32:03.227Z",
  "description": "Facilitates Development of WPF Applications using Markup Extensions and MVVM Utility Classes.",
  "frameworkAssemblyGroup": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.08.07.13.56/perrypheralframework.wpf.1.4.0.json#frameworkassemblygroup",
    "assembly": [
      "System.Windows.Presentation",
      "System.Xaml",
      "WindowsBase",
      "PresentationCore",
      "System",
      "System.Core",
      "PresentationFramework"
    ]
  },
  "id": "PerrypheralFramework.WPF",
  "isPrerelease": false,
  "language": "es-US",
  "lastEdited": "2015-05-08T07:13:33.217Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "listed": true,
  "packageHash": "xltqUUPaoZiZj+9OpZ+4MRbIdvyupuIhKzYB8FZAoT6+fPa3JXfeEp0IVe6Dwqg2Dwp0mOYoBXhK9mkCl8FlFg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 100835,
  "projectUrl": "https://github.com/EyalPerry/perrypheralframework",
  "published": "2015-04-11T15:32:03.227Z",
  "releaseNotes": "View Model Base:\n\n1) Interpretation of a View Model Instance\n\nthe call to Interpreter.Instance.Interpret() was previously placed in the ViewModelBase class constructor, this posed a great issue\nMainly because OnDependencyResolved annotated methods were invoked prior to derived class constructors, which is, of course- an undesired situation.\nThe call to the interpreter was moved out of the constructor and in to the ViewModel Markup Extension, which means that if you used that to instantiate view models, nothing changed for you really.\n\nIf however you do not use the ViewModel Markup Extension, for instantiating your View Model- you must subject the View Model to the Interpreter so that it's dependencies and other attributes will be interpreted.\n\n2)TaskContext Attribute\n\nEnsures that methods residing within PerrypheralFramework.WPF.Mvvm.ViewModelBase derived classes\nBound by PerrypheralFramework.WPF.MarkupExtensions.EventExtension to any WPF event (Routed/Attached/CLR)\nWill be invoked within a System.Threading.Tasks.Task context.\n\nUsing this attribute has the same effect as specifying DelegationMode.XXXAsync in your view's XAML.",
  "requireLicenseAcceptance": true,
  "summary": "MVVM Faster and Better.",
  "title": "PerrypheralFramework.WPF",
  "version": "1.4.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.08.07.13.56/perrypheralframework.wpf.1.4.0.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.08.07.13.56/perrypheralframework.wpf.1.4.0.json#dependencygroup/.netframework4.5/perrypheralframework.cs",
          "@type": "PackageDependency",
          "id": "PerrypheralFramework.CS",
          "range": "[1.4.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    }
  ],
  "tags": [
    "Perrypheral",
    "WPF",
    "MVVM",
    "PerrypheralFramework",
    "PF"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}