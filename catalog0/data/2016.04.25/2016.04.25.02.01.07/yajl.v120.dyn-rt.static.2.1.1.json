{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Lloyd Hilaiel",
  "catalog:commitId": "c188b12b-be0c-4f6f-9278-8ff3f5163bf4",
  "catalog:commitTimeStamp": "2016-04-25T02:01:07.8018317Z",
  "copyright": "Copyright 2015",
  "created": "2016-04-25T02:00:57.93Z",
  "description": "From project website\n\t\tFeatures\n\t\tSimple Interface\n\t\tLargely because YAJL is event driven, the interface is very concise object oriented C.\n\t\tThe interface is not cluttered with data representation, that bit is left up to higher level code.\n\t\tIndeed it should be possible to port most existing JSON libraries onto YAJL if so desired. \n\t\tStream parsing\n\t\tYAJL remembers all state required to support restarting parsing.\n\t\tThis allows parsing to occur incrementally as data is read off a disk or network.\n\t\tFast\n\t\tA second motivation for writing YAJL, was that many available free JSON parsers fall over on large or complex inputs.\n\t\tYAJL is careful to minimize memory copying and input re-scanning when possible.\n\t\tThe result is a parser that should be fast enough for most applications or tunable for any application.\n\t\tOn my mac pro (2.66 ghz) it takes 1s to verify a 60meg json file. Minimizing that same file with json_reformat takes 4s.\n\t\tLow resource consumption\n\t\tLargely because YAJL deals with streams, it's possible to parse JSON in low memory environments.\n\t\tOftentimes with other parsers an application must hold both the input text and the memory representation of the tree in memory at one time.\n\t\tWith YAJL you can incrementally read the input stream and hold only the in memory representation.\n\t\tOr for filtering or validation tasks, it's not required to hold the entire input text in memory.",
  "iconUrl": "http://ICON_URL_HERE_OR_DELETE_THIS_LINE",
  "id": "yajl.v120.dyn-rt.static",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://lloyd.github.io/yajl/",
  "listed": true,
  "packageHash": "+oqXcOYwPu6oTxD/hGrasKp4w5QBEyDA/d8+qAna4rtwT0limzqBemZxGkuldJ3c2DSOmw+HYuxHp2HB0QV6OA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 181298,
  "projectUrl": "http://lloyd.github.io/yajl/",
  "published": "2016-04-25T02:00:57.93Z",
  "releaseNotes": "First release",
  "requireLicenseAcceptance": false,
  "summary": "YAJL is a small event-driven (SAX-style) JSON parser written in ANSI C, and a small validating JSON generator. YAJL is released under the ISC license.",
  "title": "Yet Another JSON Library",
  "verbatimVersion": "2.1.1.0",
  "version": "2.1.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#yajl.v120.dyn-rt.static.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1185,
      "fullName": "yajl.v120.dyn-rt.static.nuspec",
      "length": 2350,
      "name": "yajl.v120.dyn-rt.static.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/default-propertiesui.xml",
      "@type": "PackageEntry",
      "compressedLength": 630,
      "fullName": "build/native/default-propertiesui.xml",
      "length": 1847,
      "name": "default-propertiesui.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/yajl.v120.dyn-rt.static.targets",
      "@type": "PackageEntry",
      "compressedLength": 1075,
      "fullName": "build/native/yajl.v120.dyn-rt.static.targets",
      "length": 7149,
      "name": "yajl.v120.dyn-rt.static.targets"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/configurations.autopkg",
      "@type": "PackageEntry",
      "compressedLength": 184,
      "fullName": "build/configurations.autopkg",
      "length": 420,
      "name": "configurations.autopkg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/publisher-info.txt",
      "@type": "PackageEntry",
      "compressedLength": 73,
      "fullName": "build/publisher-info.txt",
      "length": 71,
      "name": "publisher-info.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/include//yajl/yajl_common.h",
      "@type": "PackageEntry",
      "compressedLength": 1165,
      "fullName": "build/native/include//yajl/yajl_common.h",
      "length": 2647,
      "name": "yajl_common.h"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/include//yajl/yajl_gen.h",
      "@type": "PackageEntry",
      "compressedLength": 2621,
      "fullName": "build/native/include//yajl/yajl_gen.h",
      "length": 7378,
      "name": "yajl_gen.h"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/include//yajl/yajl_parse.h",
      "@type": "PackageEntry",
      "compressedLength": 3542,
      "fullName": "build/native/include//yajl/yajl_parse.h",
      "length": 10047,
      "name": "yajl_parse.h"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/include//yajl/yajl_tree.h",
      "@type": "PackageEntry",
      "compressedLength": 2667,
      "fullName": "build/native/include//yajl/yajl_tree.h",
      "length": 7357,
      "name": "yajl_tree.h"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/include//yajl/yajl_version.h",
      "@type": "PackageEntry",
      "compressedLength": 195,
      "fullName": "build/native/include//yajl/yajl_version.h",
      "length": 386,
      "name": "yajl_version.h"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/lib/Win32/v120/Release/yajl.lib",
      "@type": "PackageEntry",
      "compressedLength": 19591,
      "fullName": "build/native/lib/Win32/v120/Release/yajl.lib",
      "length": 62700,
      "name": "yajl.lib"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/lib/Win32/v120/Debug/yajld.lib",
      "@type": "PackageEntry",
      "compressedLength": 56482,
      "fullName": "build/native/lib/Win32/v120/Debug/yajld.lib",
      "length": 191624,
      "name": "yajld.lib"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/lib/x64/v120/Release/yajl.lib",
      "@type": "PackageEntry",
      "compressedLength": 28238,
      "fullName": "build/native/lib/x64/v120/Release/yajl.lib",
      "length": 97104,
      "name": "yajl.lib"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.04.25.02.01.07/yajl.v120.dyn-rt.static.2.1.1.json#build/native/lib/x64/v120/Debug/yajld.lib",
      "@type": "PackageEntry",
      "compressedLength": 57371,
      "fullName": "build/native/lib/x64/v120/Debug/yajld.lib",
      "length": 200534,
      "name": "yajld.lib"
    }
  ],
  "tags": [
    "JSON",
    "yajl",
    "native",
    "CoApp",
    "nativepackage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}