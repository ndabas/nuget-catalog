{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Steffen Obermueller",
  "catalog:commitId": "f86fa668-4202-4a23-8492-2a4ce3b0eeb7",
  "catalog:commitTimeStamp": "2024-03-14T12:22:43.5861738Z",
  "copyright": "Copyright (c) Steffen Obermueller",
  "created": "2024-03-14T12:20:08.507Z",
  "description": "Common feature extensions for the build automation tool NUKE for C# and .NET.",
  "iconFile": "icon.png",
  "id": "Grapeyard.Labs.Nuke.Launchpad.Common",
  "isPrerelease": false,
  "lastEdited": "2024-03-14T12:22:40.687Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "15EFT/BoKZs/QV0XK99MS8hp+7Hv2Tx29nJQb/QfAW/ZLS0myPrCQep5xwHvnydxO01mANlcTXhUMF8FTVXwGg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 168766,
  "published": "2024-03-14T12:20:08.507Z",
  "readmeFile": "README.md",
  "releaseNotes": "• Added string constants for invariant Git command output to the Constants class.\n• Added the following methods to the ExtendedAssert class:\n    ◦ Methods ElementsCouldBeFileNames and ElementsCouldBeFilePaths that check whether elements of an enumerable of strings are valid file names or file paths.\n    ◦ Method NoWhiteSpaces that checks whether strings do not contain white-space characters.\n• Added class DocumentingTasks with method UpdateVersionOfNuGetPackageReferences that updates the version of NuGet package references within elements of an input enumerable for a specific NuGet package identifier.\n• Added class AbsolutePathComparer that can be used as a comparer to sort absolute paths using ordinal sort rules.\n• Added class AbsolutePathExtensions with the following methods:\n    ◦ Methods CombineToNonself, CombineToNonselfAndNonParent, CombineToSubpath and CombineToSubpathOrSelf that combine an absolute and a relative path and validate the result based on a given assumption.\n    ◦ Method HasAnyExtension that determines whether an absolute path ends with any element of an enumerable of extensions.\n    ◦ Method HasSamePathRootAs that determines whether two absolute paths have the same path root.\n    ◦ Method IsContainedIn that determines whether an absolute path is contained in, but not equal to, another absolute path.\n    ◦ Methods IsContainedInAny and IsContainedInAnyOf that determine whether an absolute path is contained in, but not equal to, any element of an enumerable of absolute paths.\n• Added class ProjectExtensions with the following methods:\n    ◦ Method GetNames that returns the names of projects.\n    ◦ Method GetPackageIds that returns the NuGet package identifiers of projects.\n• Added class SolutionExtensions with the following methods:\n    ◦ Method GetAllProjectsExcept that returns all projects of a solution, except those whose names match an excluded project name.\n    ◦ Methods GetAllProjectNames and GetAllProjectNamesExcept that return the names of projects of a solution.\n    ◦ Method GetBuildProjectName that returns the name of the NUKE build project of a solution.\n    ◦ Methods GetPackageIdsOfAllProjects and GetPackageIdsOfAllProjectsExcept that return the NuGet package identifiers of projects of a solution.\n• Added method WhenOtherwise to the ToolSettingsExtensions class, that allows an if-else-statement to be evaluated within a tool settings method chain.\n• Added class ExtendedGitTasks with the following methods:\n    ◦ Methods GitBranch and GitBranchList that retrieve the branches of a local Git repository.\n    ◦ Method GitExitHandlerThatIgnoresEmptyCommits that can be used as a less restrictive exit handler for Git commit commands.\n    ◦ Method GitRemote that retrieves the remote repositories tracked by a local Git repository.\n    ◦ Methods GitStatusShort and GitStatusShortBranch that retrieve the status of a local Git repository in a short format.\n    ◦ Methods GitTag and GitTagList that retrieve the tags of a local Git repository.\n    ◦ Methods GetToplevelGitDirectory and GitRevParseShowToplevel that retrieve the top-level directory of a local Git repository.\n    ◦ Method GitTracksRemote that checks whether a local Git repository tracks a specific remote repository.\n    ◦ Method IsGitStatusShortClean that evaluates the status of a local Git repository in short format regarding pending changes.\n• Added the following methods to the GitRepositoryExtensions class:\n    ◦ Methods ContainsBranch and ContainsTag that check whether a branch or a tag exist in a local Git repository.\n    ◦ Method HasDetachedHead that checks whether the HEAD of a local Git repository is currently detached.\n    ◦ Method TracksRemote that checks whether a local Git repository tracks a specific remote repository.\n• Added an optional parameter to all methods of the IEnumerableExtensions class that join strings together, which allows specifying a different separator for the last two elements.\n• Added method OrderAndDistinctBy to the IEnumerableExtensions class, that sorts the elements of an enumerable in ascending order before removing duplicates based on a given equality comparison function.\n• Added class HashCodeExtensions with method AddElementsOf that simplifies calculation of hash codes for enumerables.\n• Added the following methods to the StringExtensions class:\n    ◦ Method ToBuildParameterName that reformats strings into the naming convention used for NUKE build parameters. The convention mirrors the Kebab case naming convention, but uses two hyphens as a prefix.\n    ◦ Method ToKebabCase that reformats strings into the Kebab case naming convention.\n• Added parameter interface IHasDocumentation that contains build parameters for a documentation directory and file extensions utilized for documentation.\n• Added parameter interface IUsesImplicitBuildSteps that contains an auxiliary build parameter to enable/disable implicit build steps in all build targets that support it.\n• Added parameter interface IUsesVerboseLogging that contains an auxiliary build parameter to enable/disable verbose logging in all build targets that support it.\n• Added configuration property ImplicitRestore to the ICompileWithDotNet target surrogate interface, that allows disabling implicit restores during a target run.\n• Added method GetCustomDocumentationModifications to the IFinalizeVersion target base interface, that can be overridden to expand the repository finalization process.\n• Added configuration property TargetRemote to the IFinalizeVersionForGrapeyardLabs and IFinishVersionForGrapeyardLabs target surrogate interfaces, that allows setting the target Git remote repository to which all changes are pushed.\n• Added build target Sign with target base interface ISign, that can be extended to sign packages with a certificate.\n• Added configuration property ImplicitBuild to the IIntegrationTestWithDotNet, IUnitTestWithDotNet and IPackWithDotNet target surrogate interfaces, that allows disabling implicit builds during a target run.\n• Added build target UpdateDocumentedNuGetPackageReferencesOfProjects with target surrogate interface IUpdateDocumentedNuGetPackageReferencesOfProjectsToNewest as default implementation, that updates NuGet package references for projects of a solution in documentation files to the newest version. Also added build targets UpdateDocumentation and UpdateDocumentedNuGetPackageReferences that bundle it.\n• Renamed parameters of methods FileExistsInDirectory and PublishFileToDirectory of the ExtendedFileSystemTasks class to be more purposeful.\n• Moved method GetWebApplicationUrl from the GitServiceProviderTasks class to the GitRepositoryExtensions class to make it more concise to use.\n• Changed visibility of class GitServiceProviderTasks to internal.\n• Altered the format of build parameter names in exceptions thrown for invalid parameter values in the following methods:\n    ◦ Methods RequirementVerified and SecretVerified of the ObjectExtensions class.\n    ◦ All internal validation methods of parameter interfaces.\n• Improved the error messages for all build parameters that are relative paths regarding existing path roots.\n• Renamed all optional parameter interfaces to use the prefix IUses instead of IHas to better distinguish them from transitive parameter interfaces:\n    ◦ Parameter interface IHasGitRepository to IUsesGitRepository.\n    ◦ Parameter interface IHasGitVersion to IUsesGitVersion.\n    ◦ Parameter interface IHasSemanticVersion to IUsesSemanticVersion.\n• Renamed the following build parameters with ambiguous abbreviations:\n    ◦ Parameter --local-package-repo-dirs of the IHasLocalPackageRepositories parameter interface to --local-package-repository-dirs.\n    ◦ Parameters --web-package-repo-source-url and --web-package-repo-api-key of the IHasWebPackageRepository parameter interface to --web-package-repository-source-url and --web-package-repository-api-key.\n• Added an additional layer of validation to the following build parameters to prevent them from targeting the repository root directory or one of its parents, as they may be deleted during cleanup operations:\n    ◦ Parameter --packages-dir of the IHasPackages parameter interface.\n    ◦ Parameter --test-results-dir of the IHasTestResults parameter interface.\n• Modified target surrogate interface ICompileWithDotNet so that built binaries and dependencies for projects are not automatically published using the dotnet publish command. Added new configuration properties DegreeOfParallelism, DotNetPublishSettingsPerProject and ProjectsToPublish to control the usage and scope of the command.\n• Modified target surrogate interfaces ICompileWithDotNet and IPackWithDotNet to exclude the suffix \".git\" from the RepositoryUrl property value of utilized dotnet commands when using Git as the version control system.\n• Added an optional parameter to multiple methods of target base interface IFinalizeVersion, allowing to specify the top-level directory path of the local Git repository.\n• Changed the order of item finalization in method FinalizeRepository of target base interface IFinalizeVersion so that individual files are always finalized before directories. This prevents commit messages from being lost  for files that are also contained in any of the directories.\n• Removed the requirement check for an existing Git service provider from target surrogate interfaces IFinalizeVersionForGrapeyardLabs and IFinishVersionForGrapeyardLabs, allowing the targets defined by them to run when using local Git remotes.\n• Added additional layers of requirement checks to target surrogate interface IFinishVersionForGrapeyardLabs, making target FinishVersion fail early if the branches master or develop do not exist locally or if the targeted tag name already exists locally.\n• Made build targets Pack and Publish regard NuGet symbol packages as produced artifacts, when implementing target surrogate interfaces IPackWithDotNet and IPublishToLocalPackageRepositoriesForDotNet.\n• Renamed method PublishPackagesToLocalRepositories of the IPublishToLocalPackageRepositories target base interface to PublishPackagesToLocalPackageRepositories to more accurately reflect the name of the interface. Also generalized the object type of its first parameter, making the method more universally usable.\n• Changed the relationship of build targets PublishToLocalPackageRepositories and PublishToWebPackageRepository to the Test build target to a direct dependency so that tests are run by default when publishing packages.\n• Changed the dependency behavior of build targets IntegrationTest and UnitTest so that skipping these build targets also skips the Compile build target.\n• Updated NuGet package Nuke.Common from version 7.0.6 to 8.0.0.\n• Removed method GetStatusShort from the GitRepositoryExtensions class in favor of method GitStatusShort from the new ExtendedGitTasks class.\n• Removed the optional Git output parameter from method HasCleanStatus of the GitRepositoryExtensions class as it has been changed into a convenience wrapper for successive calls to methods GitStatusShortBranch and GitHasCleanStatusShort of the new ExtendedGitTasks class.\n• Removed the optional Git output parameter from method FinalizeRepository of target base interface IFinalizeVersion to prevent passing Git output to it that was retrieved using an unexpected working directory, which is a potential source of error.\n• Fixed the health of generated NuGet packages concerning the points Source Link and Compiler Flags by emitting debugging information into the binaries of builds using the Release build configuration.\n• Fixed the health of generated NuGet packages concerning the point Deterministic (dll/exe) by making CI/CD pipelines pack and publish them.\n• Fixed a bug that caused the overloaded method GitAddAndCommit of the IFinalizeVersion target base interface to throw an exception for empty commits instead of returning false.\n• Fixed the following bugs related to build target FinalizeVersion in target surrogate interface IFinalizeVersionForGrapeyardLabs:\n    ◦ Fixed a bug that caused the build target to use incorrect relative file or directory paths if the NUKE root directory did not match the top-level Git directory.\n    ◦ Fixed a bug that caused the build target to fail with an exception if there were only changes in the repository that Git automatically replaced when added (e.g. incorrect line endings).\n    ◦ Fixed a bug that caused the build target to attempt to push a detached Git HEAD to the remote instead of preemptively failing the build execution.\n• Fixed a bug that caused build target FinishVersion to attempt to merge a detached Git HEAD into the master branch instead of preemptively failing the build execution, when implementing target surrogate interface IFinishVersionForGrapeyardLabs.\n\nFull changelog at https://gitlab.com/grapeyard-labs/libs/nuke-launchpad/-/blob/0.3.0/CHANGELOG.md",
  "repository": "",
  "title": "Grapeyard.Labs.Nuke.Launchpad.Common",
  "verbatimVersion": "0.3.0",
  "version": "0.3.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#dependencygroup/net7.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#dependencygroup/net7.0/nuke.common",
          "@type": "PackageDependency",
          "id": "Nuke.Common",
          "range": "[8.0.0, )"
        }
      ],
      "targetFramework": "net7.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#Grapeyard.Labs.Nuke.Launchpad.Common.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4463,
      "fullName": "Grapeyard.Labs.Nuke.Launchpad.Common.nuspec",
      "length": 14208,
      "name": "Grapeyard.Labs.Nuke.Launchpad.Common.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#lib/net7.0/Grapeyard.Labs.Nuke.Launchpad.Common.dll",
      "@type": "PackageEntry",
      "compressedLength": 93697,
      "fullName": "lib/net7.0/Grapeyard.Labs.Nuke.Launchpad.Common.dll",
      "length": 171008,
      "name": "Grapeyard.Labs.Nuke.Launchpad.Common.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#lib/net7.0/Grapeyard.Labs.Nuke.Launchpad.Common.xml",
      "@type": "PackageEntry",
      "compressedLength": 48710,
      "fullName": "lib/net7.0/Grapeyard.Labs.Nuke.Launchpad.Common.xml",
      "length": 544809,
      "name": "Grapeyard.Labs.Nuke.Launchpad.Common.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#icon.png",
      "@type": "PackageEntry",
      "compressedLength": 6711,
      "fullName": "icon.png",
      "length": 6711,
      "name": "icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 629,
      "fullName": "LICENSE",
      "length": 1070,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#README.md",
      "@type": "PackageEntry",
      "compressedLength": 645,
      "fullName": "README.md",
      "length": 1477,
      "name": "README.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.03.14.12.22.43/grapeyard.labs.nuke.launchpad.common.0.3.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11514,
      "fullName": ".signature.p7s",
      "length": 11514,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "build",
    "automation",
    "continuous-integration",
    "tools",
    "orchestration",
    "nuke",
    "launchpad",
    "extensions",
    "quickstart"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}