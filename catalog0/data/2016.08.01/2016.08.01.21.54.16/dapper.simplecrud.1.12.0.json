{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Eric Coffman",
  "catalog:commitId": "b7ca28c0-a283-4cdb-a57f-bd9ca86fa052",
  "catalog:commitTimeStamp": "2016-08-01T21:54:16.2342658Z",
  "copyright": "Copyright Eric Coffman 2016",
  "created": "2016-08-01T21:54:11.357Z",
  "description": "Simple Get, GetList, GetListPaged, Insert, Update, Delete, DeleteList, and RecordCount extensions for Dapper.  Uses smart defaults for attribute free classes but can be overridden as needed.\n\t  By default uses Id column as the primary key but this can be overridden with an attribute\n\t  By default queries the table matching the class name but this can be overridden with an attribute\n          By default queries the column matching the property name but this can be overridden with an attribute  \n          - Supports SQL Server, PostgreSQL, SQLite, and MySQL \n          - Includes async methods when targeting .Net 4.5",
  "iconUrl": "https://raw.githubusercontent.com/ericdc1/Dapper.SimpleCRUD/master/images/SimpleCRUD-200x200.png",
  "id": "Dapper.SimpleCRUD",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0",
  "listed": true,
  "packageHash": "hiie31oTySpFUXqonK95HlV/NFgcvjWWe+XfrzqnTnFxx4xraMhCjpWG1A5yt0CYOKRRtcb1nDpei3lgWJorpw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 57672,
  "projectUrl": "http://github.com/ericdc1/Dapper.SimpleCRUD/",
  "published": "2016-08-01T21:54:11.357Z",
  "releaseNotes": "Full documentation can be found at http://github.com/ericdc1/Dapper.SimpleCRUD/ \n\t* version 1.3.0: Support for multiple schemas, non int primary keys. Fixed issue with editable attribute annotations. Made enums be considered \"editable\" so you can have integers in the database and represent them as enums in the code and have SimpleCRUD map them without extra pain. \n\t* version 1.4.0: Switched to using Nullable.GetUnderlyingType(type) so we don't need to explicitly check for all nullable types. This also has the side effect of fixing checks for nullable enums without the editable attribute. \n\t* version 1.4.1: Added support for short and long primary key types on insert method\n\t* version 1.5.0 Target .Net 4.5, support for PostgreSQL, SQL Server now uses scope_identity on insert rather than @@identity. Add support for GUID primary keys\n\t* version 1.6.0 Target .Net 4.0 and 4.5 and add async support / remove SQLCE support Special thanks to https://github.com/Prnda1976 for help with the pull request backlog \n\t* version 1.7.0 Added column attribute and made gets specify column names rather than select * . Changed GUID to autogenerate when the property value is empty. Ability to change database dialect from SQL Server to PostgreSQL. \n\t* version 1.8.0 Added support and tests for SQLite. Added additional GetList method that accepts a raw SQL where clause for more advanced queries. \n\t* version 1.8.2 Added logo, updated package description\n\t* version 1.8.3 Fix for async get method, added additional tests around async methods\n\t* version 1.8.4 Fix for custom column name on primary key in get and delete methods\n\t* version 1.8.5 Added support for ReadOnly attribute on properties which allows selecting it from the database but ignores it on inserts and updates\n\t* version 1.8.6 Allow a column named Id column to not be considered a key when another [Key] is specified\n\t* version 1.8.7 Fix for GUID primary key named Id\n\t* version 1.9.0 Added GetListPaged, DeleteList, and RecordCount methods and support for specified value in primary key\n\t* version 1.9.1 MySQL Support\n\t* version 1.9.2 Fix for async insert with specified value in primary key\n\t* version 1.9.3 Fix for issue with GetPagedList with custom column name for primary key - Thanks haleaurelian. Added DeleteList with anonymous object\n\t* version 1.10.0 Added IgnoreUpdate, IgnoreInsert, and IgnoreSelect attributes \n\t* version 1.11.0 Added resolvers PR, typed attributes, merged recordcount where conditions PR, performance improvements PR   \n\t* version 1.11.1 Bug fix for resolvers to allow attributes from different namespaces (SimpleCRUD and Data Annotations)\n\t* version 1.12.0 Added notmapped attribute to match DataAnnotations (thanks Mattykins). Allow insert with string primary key (thanks xalikoutis)",
  "requireLicenseAcceptance": false,
  "summary": "Simple Get, GetList, GetListPaged, Insert, Update, Delete, DeleteList, and RecordCount extensions for Dapper. Uses smart defaults for attribute free classes but can be overridden as needed.",
  "title": "Dapper.SimpleCRUD",
  "verbatimVersion": "1.12.0",
  "version": "1.12.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#dependencygroup/dapper",
          "@type": "PackageDependency",
          "id": "Dapper",
          "range": "[1.42.0, 2.0.0)"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#Dapper.SimpleCRUD.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1797,
      "fullName": "Dapper.SimpleCRUD.nuspec",
      "length": 4574,
      "name": "Dapper.SimpleCRUD.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#lib/net45/Dapper.SimpleCRUD.dll",
      "@type": "PackageEntry",
      "compressedLength": 13309,
      "fullName": "lib/net45/Dapper.SimpleCRUD.dll",
      "length": 36352,
      "name": "Dapper.SimpleCRUD.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#lib/net45/Dapper.SimpleCRUD.pdb",
      "@type": "PackageEntry",
      "compressedLength": 13705,
      "fullName": "lib/net45/Dapper.SimpleCRUD.pdb",
      "length": 60928,
      "name": "Dapper.SimpleCRUD.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#lib/net45/Dapper.SimpleCRUD.XML",
      "@type": "PackageEntry",
      "compressedLength": 2394,
      "fullName": "lib/net45/Dapper.SimpleCRUD.XML",
      "length": 34068,
      "name": "Dapper.SimpleCRUD.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#lib/net40/Dapper.SimpleCRUD.dll",
      "@type": "PackageEntry",
      "compressedLength": 10943,
      "fullName": "lib/net40/Dapper.SimpleCRUD.dll",
      "length": 29184,
      "name": "Dapper.SimpleCRUD.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#lib/net40/Dapper.SimpleCRUD.pdb",
      "@type": "PackageEntry",
      "compressedLength": 10886,
      "fullName": "lib/net40/Dapper.SimpleCRUD.pdb",
      "length": 48640,
      "name": "Dapper.SimpleCRUD.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.08.01.21.54.16/dapper.simplecrud.1.12.0.json#lib/net40/Dapper.SimpleCRUD.XML",
      "@type": "PackageEntry",
      "compressedLength": 2058,
      "fullName": "lib/net40/Dapper.SimpleCRUD.XML",
      "length": 20174,
      "name": "Dapper.SimpleCRUD.XML"
    }
  ],
  "tags": [
    "orm",
    "dapper",
    "micro-orm",
    "CRUD"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}