{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.07.23.34.55/picniccache.0.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Lee Olsen",
  "catalog:commitId": "0e46de47-317d-4cf5-8a33-53bf816ac346",
  "catalog:commitTimeStamp": "2015-05-07T23:34:55.8234132Z",
  "copyright": "Copyright 2015",
  "created": "2015-04-30T02:28:40.517Z",
  "description": "This package contains the PicnicCache library. This package is currently under development...",
  "id": "PicnicCache",
  "isPrerelease": false,
  "lastEdited": "2015-05-07T23:34:46.197Z",
  "licenseUrl": "https://github.com/DoloSoftware/PicnicCache/blob/master/LICENSE",
  "listed": false,
  "packageHash": "rToz/q9i/2zl0P5U4rDOrrS/wsZL6vXc743FzJ6qehiS8pxyiSVu6EbZhidWqUEJQFH/PDnBIdsg2bivKr1lyQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6877,
  "projectUrl": "https://github.com/DoloSoftware/PicnicCache",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Breaking API change. Shortened method names.",
  "requireLicenseAcceptance": false,
  "summary": "A simple cache wrapping a Dictionary with locks. It provides a generic interface to automatically add/remove/update cache items by simply passing your data loading through the cache. Ex. var item = cache.Fetch(KEY, () => dataRepository.LoadItem(KEY));",
  "title": "PicnicCache",
  "version": "0.2.0",
  "tags": [
    "Cache",
    "Caching"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}