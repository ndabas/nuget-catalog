{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.53.54/ember.js.1.0.0-pre.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Zachary Gramana",
  "catalog:commitId": "8bb94838-1e39-4fbb-9bb9-910ee01d6cef",
  "catalog:commitTimeStamp": "2015-02-02T17:53:54.2355695Z",
  "copyright": "Copyright Tilde 2012",
  "created": "2012-10-16T17:44:49.057Z",
  "description": "Ember.js is built for productivity. Designed with developer ergonomics in mind, its friendly APIs help you get your job done—fast.\n      Don't waste time making trivial choices. Ember.js incorporates common idioms so you can focus on what makes your app special, not reinventing the wheel.",
  "iconUrl": "http://emberjs.com/favicon.ico",
  "id": "Ember.js",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/emberjs/ember.js/blob/master/LICENSE",
  "packageHash": "RcWyKwLAVn+2Yct5S/qwZcHqpd3fHdf7ZPELuQNZxpEk/v5isZ3wvMC+m4EreFNyYEa0tT2sLZcMB4GVf9mlaA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 233307,
  "projectUrl": "http://emberjs.com/",
  "published": "2012-10-16T17:44:49.667Z",
  "releaseNotes": "*Ember 1.0.pre (August 03, 2012)*\n\n      * Return undefined instead of empty jQuery object for Ember.View#$ when not in DOM\n      * Adds didDefineProperty hook\n      * Implement immediateObserver placeholder in preparation for making observers asynchronous\n      * Change {{action}} API for more explicit contexts\n      * Add connectControllers convenience\n      * Assert that transitionTo at least matched a state\n      * Delay routing while contexts are loading\n      * Also rename trySetPath to trySet\n      * Replaced getPath/setPath with get/set\n      * Remove LEGACY_HANDLEBARS_TAG flag\n      * Add two new core methods to allow invoking possibly unknown methods on objects\n      * Change ternary syntax to double colon sytax\n      * Add tests for ternary operator in class bindings\n      * Test for defined Router lacking App(View|Controller)\n      * Allow alternate clicks for href handling - Fixes #1096\n      * Respect initialState when transitioning to parent of current state - Fixes #1144\n      * add reverseObjects\n      * Fixing rootURL when path is empty\n      * HistoryLocation appends paths to router rootURL\n      * Make Ember.Logger support the 'info' and 'debug' methods on fallback (for IE8).\n      * Support currentView on init if ContainerView is created with one\n      * {{bindAttr class=\"this\"}} now works; fixes #810\n      * Allow connectOutlet(outletName, name, context) syntax\n      * turn on mandatory setter for ember-debug if not set\n      * Change the default setUnknownProperty to define it before setting.\n      * {{view}} now evaluates the context of class bindings using the same rules applied to other bindings\n      * dataTransfer property for drag and drop events\n      * require jQuery 1.7, no longer accept 1.6\n      * add mandatory setter assertion\n      * Add date comparison to Ember.compare\n      * We use jquery event handling for hashchange/popstate\n      * Deprecate Ember.Tabs - Fixes #409\n      * Remove data-tag-name \"feature\" from script tags\n      * Only register Ember.View.views for non virtual views\n      * Add support for tabindex in Ember Controls.\n      * Only push new history when initialURL has changed\n      * Support basic States inside of Routes\n      * Refactor context handling for States and Routes\n      * Make Map copyable\n      * Assert that path passed to urlFor is valid\n      * Do not run functions passed to Ember.assert, Ember.warn, and Ember.deprecate\n      * Allowing developer to turn off verbose stacktrace in deprecation warnings\n      * Ember.Route.serialize must return a hash\n      * lazy setup of ComputedProperties\n      * change convention from var m = meta(obj) to var meta = metaFor(obj)\n      * add hook for desc for willWatch and didUnwatch\n      * Call transitionEvent for each nested state - Fixes #977\n      * Define a 'store' property in ControllerMixin, to avoid proxy-like handling at router initialization (controllers store injection).\n      * if there is no context, allow for views without controllers\n      * Add MapWithDefault\n      * serialize route states recursively\n      * urlForEvent for a route with a dynamic part doesn't serialize the context\n      * Don't stopPropagation on action handling by default\n      * Implement a route's navigateAway event\n      * Change app.stateManager to app.router\n      * Allow a one-time event listener on Ember.Evented\n      * Rename `fire` to `trigger`\n      * change sendEvent signature from sendEvent(obj, name, …) to sendEvent(obj, name, params) to avoid copying the arguments. Conflicts:\n      * Deprecate Ember.ViewState\n      * remove Ember.MixinDelegate\n      * Call preventDefault on events handled through {{action}}\n      * Call transitionEvent on initialStates as well as targeted state\n      * During apply not applyPartial, chains maybe setup, this makes sure they are updated.\n      * allow computed properties to be overridden\n      * Change connectOutlet API to prefer Strings\n      * Fix bug with Ember.Router#route not reflecting redirections in location\n      * Give Ember.Select prompt an empty value\n      * Create Ember.ArrayPolyfills\n      * Rename ArrayUtils to EnumerableUtils\n      * Use transitionTo rather than goToState\n      * Improve ArrayUtils by removing unnecessary slices\n      * Use evented system for dom events on views\n      * Fix switchToUnwatched so ObjectProxy tests pass.\n      * Skip mixin properties with undefined values\n      * Make defineProperty override native properties\n      * Fix unsupported method errors in older browsers\n      * Improved Ember.create shim\n      * Can't use lib/ember.js because we use that for precompiling, so let's use dist/distold instead\n      * Use `getPath` instead of `get` in computed macros in order to allow 'foo.bar' dependencies\n      * A route's `serialize` should handle null contexts\n      * Router.location cannot be null or undefined\n      * Use 'hash' as default location implementation on Router\n      * Clean up location stubbing in routable_test\n      * Instantiate Ember.Location implementation from Router\n      * Add NoneLocation\n      * Add options hash syntax to connectOutlet.\n      * Added 'ember-select' CSS class to Ember.Select, as per the convention with other included views.\n      * Fix Ember.setPath when used on Ember.Namespaces\n      * Remove async transitions.\n      * Enumerate all properties per injection.\n      * Injections can specify the order they are run.\n      * Make sortable test deterministic\n      * Improve invalidation of view's controller prop\n      * Cleaning up in history location\n      * Removing lastSetURL from setURL\n      * Fix bug with computed properties setters not triggering observers when called with a previous value\n      * Fix failing test\n      * Adding popstate tests for history based location\n      * Splitting location implementations from Location\n      * Use accessors for eventTransitions\n      * Finish implementation of Sortable mixin\n      * Move sorting into separate mixin\n      * Crude sorting on ArrayController\n      * Split ArrayProxy into content and arrangedContent\n      * Fix broken upload_latest task by specifying version for github_api\n      * Add some convenience computed property macros to replace the major usages of binding transforms\n      * Initial pushState based location implementation\n      * Support #each foo in this and #with this as bar\n      * `collection` should take emptyViewClass as string\n      * Don't update the route if we're routing\n      * Don't special-case the top-level '/'\n      * Make routing unwind properly\n      * Replace occurances of goToState with transitionTo.\n      * No longer support RunLoop instantiation without `new`.\n      * Improve naming and code style\n      * Guard mergeMixins parameters more generally\n      * Guard against implicit function application by Ember.assert\n      * Use Ember.assert instead of throw\n      * Guard against undefined mixins\n      * Remove unused local variables\n      * Update gems\n      * Enable selection by value in Ember.Select.\n      * Update build URL\n      * Fix issue with Ember.Select when reselecting the prompt\n      * Call setupStateManager in initialize, not in didBecomeReady\n      * Let ES5 browsers actually work\n      * Lookup event transitions recursively in the ancestor states.\n      * Support global paths in the with/as helper. Fixes #874\n      * Views should inherit controllers from their parent\n      * Semi-hackish memory management for Ember.Application\n      * Transition to root to enable the back-button\n      * Insert ApplicationView by default\n      * Respect href parameter for {{action}}\n      * Allow setting `target` on `ObjectController`\n      * Remove deprecated functionality from get/set\n      * urlFor should raise an error when route property is not defined\n      * fix build by checking VIEW_PRESERVES_CONTEXT\n      * Only call formatURL if a location is defined\n      * URL generation takes into account location type\n      * Rename templateContext to context\n      * Change default template context to controller\n      * Removes deprecated label wrapping behavior and value property of Ember.Checkbox\n      * ControllerObject class can be initialized with target, controllers and view properties\n      * Add Ember.State.transitionTo\n      * Wire up {{action}} to emit URLs\n      * Use standard StateManager send/sendRecursively and convert state method arguments to include options hash when necessary.\n      * Correct state transition name to reflect StateMachine state nesting.\n      * Add urlFor to Router\n      * make transitionEvent on state manager configurable\n      * The router's initialState is `root`\n      * Add redirectsTo in routes\n      * Make identical assertion messages distinguishable\n      * Check that tests don't leave open RunLoops behind\n      * Better Handlebars log helper\n      * Disallow automatic creating of RunLoops during testing; Require manual Ember.run setup.\n      * ObjectController\n      * rename location `style` to `implementation` and add `registerImplementation` method to ease custom implementations\n      * some sugar for Router initialization\n      * Fix initialization with non routable stateManager\n      * bindAttr should work with global paths\n      * Unbundled Handlebars\n      * Add Ember.Controller and `connectOutlet`\n      * Initial implementation of outlets\n      * Implement modelType guessing.\n      * Add support for modelType in the router",
  "requireLicenseAcceptance": false,
  "summary": "A framework for creating ambitious web applications.",
  "version": "1.0.0-pre",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.53.54/ember.js.1.0.0-pre.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.53.54/ember.js.1.0.0-pre.json#dependencygroup/jquery",
          "@type": "PackageDependency",
          "id": "jQuery",
          "range": "[1.7.2, )"
        }
      ]
    }
  ],
  "tags": [
    "ember",
    "emberjs",
    "javascript-mvc",
    "mvc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}