{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Maksim Volkau",
  "catalog:commitId": "05f6528f-edbd-4a29-bb47-b60ac45e9d26",
  "catalog:commitTimeStamp": "2016-03-31T12:19:30.9805617Z",
  "copyright": "Copyright Â© 2016 Maksim Volkau",
  "created": "2016-03-31T12:19:28.077Z",
  "description": "Source code for DryIoc integration with ASP.NET SignalR",
  "id": "DryIoc.SignalR",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "dHx5zr9CUOkC4bWHcJfm5qR8ceJr3qkAfMfar2bZ6Chdgk9ct2DilCaRP0xTYI7R2ijJ++kMkNkzB/CSxgzW2g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6890,
  "projectUrl": "https://bitbucket.org/dadhi/dryioc",
  "published": "2016-03-31T12:19:28.077Z",
  "releaseNotes": "v2.0.0:\n          - changed: WithSignalR to not modify container and just register HubActivator, Hubs, and set GlobalHost.Resolver\n          - changed: HubActivator to just resolving the Hub without opening the scope\n          - add: Helper methods to RegisterHubs",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json#dependencygroup/dryioc",
          "@type": "PackageDependency",
          "id": "DryIoc",
          "range": "[2.3.0, 3.0.0)"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json#dependencygroup/microsoft.aspnet.signalr.core",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNet.SignalR.Core",
          "range": "[2.2.0, 3.0.0)"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json#DryIoc.SignalR.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 597,
      "fullName": "DryIoc.SignalR.nuspec",
      "length": 1208,
      "name": "DryIoc.SignalR.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 648,
      "fullName": "LICENSE.txt",
      "length": 1099,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.31.12.19.30/dryioc.signalr.2.0.0.json#content/net45/DryIoc/SignalR/DryIocSignalR.cs",
      "@type": "PackageEntry",
      "compressedLength": 2863,
      "fullName": "content/net45/DryIoc/SignalR/DryIocSignalR.cs",
      "length": 9347,
      "name": "DryIocSignalR.cs"
    }
  ],
  "tags": [
    "Web",
    "ASPNET",
    "SignalR",
    "Extension",
    "IoC",
    "Container",
    "Inversion-of-Control",
    "DI",
    "Dependency-Injection",
    "DRY",
    "DryIoc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}