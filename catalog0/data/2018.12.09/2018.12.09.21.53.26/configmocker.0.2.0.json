{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.53.26/configmocker.0.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "dmitriy.martyscenko",
  "catalog:commitId": "6a3c14cc-31c6-4e9e-9fab-e87c32ccdf0d",
  "catalog:commitTimeStamp": "2018-12-09T21:53:26.6461387Z",
  "created": "2014-07-10T14:49:52.127Z",
  "description": "Usage\nCreate a \"Web.config\" variation with machine name in extension, eg \"Web.PC-DEV.config\".\nAdd your machine specific connection strings or app settings to that file, using standard .NET configuration elements.\nCall new ConfigMocker.ConfigMocker.Mock(); during app init - it will replace default configuration with machine specific ones in runtime, if alternative config file was found for this machine.\nNOTE: \"configSource\" attribute is also supported. Just create new variation for config file specified in the attribute value. For example, for this line in the \"Web.config\":\n\n<connectionStrings configSource=\"App_Config\\ConnectionStrings.config\" />\ncreate a variation in \"App_Config\" folder with the name \"ConnectionStrings.%PC-NAME%.config\".",
  "id": "ConfigMocker",
  "isPrerelease": false,
  "lastEdited": "2018-12-09T21:53:25.773Z",
  "listed": true,
  "packageHash": "Nr694wQf3Bynr8kmRzLZml+gUS83KxCORJ5jC1y2Dw8k8oDigK/B0sL5Og96n0l6iiJvT9qknfuUUG25QHITUg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 16684,
  "projectUrl": "https://github.com/DimaK0t/ConfigMocker",
  "published": "2014-07-10T14:49:52.127Z",
  "requireLicenseAcceptance": false,
  "summary": "Allows to have machine specific connection strings and app settings.",
  "title": "ConfigMocker",
  "verbatimVersion": "0.2",
  "version": "0.2.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.53.26/configmocker.0.2.0.json#ConfigMocker.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 663,
      "fullName": "ConfigMocker.nuspec",
      "length": 1340,
      "name": "ConfigMocker.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.53.26/configmocker.0.2.0.json#lib/ConfigMocker.dll",
      "@type": "PackageEntry",
      "compressedLength": 3385,
      "fullName": "lib/ConfigMocker.dll",
      "length": 8192,
      "name": "ConfigMocker.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.09.21.53.26/configmocker.0.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}