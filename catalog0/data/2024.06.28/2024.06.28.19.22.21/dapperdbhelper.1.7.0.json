{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "DapperDBHelper",
  "catalog:commitId": "b35031b8-f9d2-4bf0-848c-2870e44365f9",
  "catalog:commitTimeStamp": "2024-06-28T19:22:21.2900668Z",
  "copyright": "Create By Inam Abbas",
  "created": "2024-06-28T19:19:19.727Z",
  "description": "To make full use of web APIs, exclude the installation of extra packages by just installing DapperDBHelper. \nCreate an object of DapperDBHelper and pass your connection string through the constructor of the DBHelper class. \n\nHere's how you can use DapperDBHelper. Below is an example:\n\npublic class SetupsController\n{\n    private readonly DBHelpers _dBHelpers;\n\n    public SetupsController()\n    {\n        _dBHelpers = new DBHelpers(ConectionString.connectionString);\n    }\n\n    public async Task<List<YourViewModelClass>> GetSingleListAsync()\n    {\n        var result = await _dBHelpers.QueryAsyncList<YourViewModelClass>(\"SELECT * FROM table\");\n        return result;\n    }\n\n    public YourViewModelClass GetSingleRecord()\n    {\n        var result = _dBHelpers.Query<YourViewModelClass>(\"SELECT TOP 1 * FROM table\");\n        return result;\n    }\n\n    public async Task<Dictionary<string, IEnumerable<object>>> GetMultipleTablesAsync(int id)\n    {\n        // Make a list of table names that your stored procedure returns\n        List<string> tableNames = new List<string>\n        {\n            \"Table1\",\n            \"Table2\",\n            \"Table3\"\n        };\n\n        var result = await _dBHelpers.QueryMultipleAsync(\"EXEC Store_Procedure @ID\", new { ID = id }, tableNames);\n        return result;\n    }\n\n    // Execute Method is used for CRUD operations\n    // After execution of your stored procedure, returning a single row of current execution is a best practice\n    // ExecuteAsync call depends upon your application nature\n    public async Task<int> InsertDataAsync(Employees model)\n    {\n        var result = await _dBHelpers.ExecuteAsync(\"EXEC Store_Procedure @FirstName, @LastName, @Address\", new { FirstName = model.FirstName, LastName = model.LastName, Address = model.Address });\n        return result;\n    }\n}\n\n\n\n\nFor .NET 8, you can use the following code:\n\n\n// Register your service here\nbuilder.Services.AddTransient<DBHelpersForAllDatabases>();\n\n// Register your database connection\nbuilder.Services.AddTransient<IDbConnection>(_ => new SqlConnection(Configuration.GetConnectionString(\"DefaultConnection\")));\n\npublic class MyController : ControllerBase\n{\n    private readonly DBHelpersForAllDatabases _dbHelpers;\n\n    public MyController(DBHelpersForAllDatabases dbHelpers)\n    {\n        _dbHelpers = dbHelpers;\n    }\n\n    [HttpGet]\n    public async Task<IActionResult> Get()\n    {\n        // Use DBHelpers to execute queries\n        var result = await _dbHelpers.QueryAsyncList<MyModel>(\"SELECT * FROM MyTable\");\n        return Ok(result);\n    }\n}\n\n\nIn this setup:\n\nGetSingleListAsync: Asynchronously retrieves a list of records from a table.\nGetSingleRecord: Retrieves a single record from a table.\nGetMultipleTablesAsync: Executes a stored procedure that returns multiple tables and maps them to a dictionary.\nInsertDataAsync: Executes a stored procedure to insert data into a table.\nMake sure to adjust the method signatures and implementations to match your specific use case and requirements. This setup allows you to effectively manage database interactions using DapperDBHelper in a streamlined manner.",
  "id": "DapperDBHelper",
  "isPrerelease": false,
  "lastEdited": "2024-06-28T19:21:51.517Z",
  "listed": true,
  "packageHash": "F8dH+C/OaGbGvGT6+lz/Y9/TqfRmLqc3yZycokbABaB69jTZ9+AQQHhZBNHClrxaP8iY4oooWNGRWTjcVKkUSw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 29007,
  "published": "2024-06-28T19:19:19.727Z",
  "repository": "",
  "title": "Now this is also avaliable for All Databases",
  "verbatimVersion": "1.7.0",
  "version": "1.7.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/dapper",
          "@type": "PackageDependency",
          "id": "Dapper",
          "range": "[2.1.35, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/firebirdsql.data.firebirdclient",
          "@type": "PackageDependency",
          "id": "FirebirdSql.Data.FirebirdClient",
          "range": "[10.2.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/microsoft.data.sqlite.core",
          "@type": "PackageDependency",
          "id": "Microsoft.Data.Sqlite.Core",
          "range": "[8.0.6, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/mysql.data",
          "@type": "PackageDependency",
          "id": "MySql.Data",
          "range": "[8.4.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/npgsql",
          "@type": "PackageDependency",
          "id": "Npgsql",
          "range": "[8.0.3, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/system.configuration.configurationmanager",
          "@type": "PackageDependency",
          "id": "System.Configuration.ConfigurationManager",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/system.data.common",
          "@type": "PackageDependency",
          "id": "System.Data.Common",
          "range": "[4.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#dependencygroup/net8.0/system.data.sqlclient",
          "@type": "PackageDependency",
          "id": "System.Data.SqlClient",
          "range": "[4.8.6, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#DapperDBHelper.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1767,
      "fullName": "DapperDBHelper.nuspec",
      "length": 4825,
      "name": "DapperDBHelper.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#lib/net8.0/DapperDBHelper.dll",
      "@type": "PackageEntry",
      "compressedLength": 11387,
      "fullName": "lib/net8.0/DapperDBHelper.dll",
      "length": 32256,
      "name": "DapperDBHelper.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.28.19.22.21/dapperdbhelper.1.7.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12930,
      "fullName": ".signature.p7s",
      "length": 12930,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "DapperDbHelper",
    "DBHelper",
    "Generic",
    "DapperGenerics",
    "Dapper",
    "DB",
    "Pacakage",
    "API",
    "Helper"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}