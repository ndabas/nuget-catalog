{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.05.20.11.51.11/testfirst.net.0.3.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "TestFirst.Net",
  "catalog:commitId": "b26e52fb-86ec-4e16-ab72-b39ddfea39f2",
  "catalog:commitTimeStamp": "2015-05-20T11:51:11.972406Z",
  "copyright": "Copyright Â© TestFirst.Net 2014 - 2015",
  "created": "2015-05-20T11:50:36.413Z",
  "description": "Testing library providing a fluent tdd/bdd testing approach. Easily extended and integrated \ninto your own testing tools (nunit, xunit, moq, etc). \n\nEncourages the creation of easier to read and maintain testing code via the use of fluent builders for scenario's, given/when/thens, \nMoq verification, List and Dictionary matchers\n\nAvailable as via NuGet and compatible on both the Windows and Mono\n\nAs a quick example, the scenario:\n\n    \"Given a registered user, with an account balance of 10 dollars, when 6 dollars is debited, then \n    expect that the account only has 4 dollars, and the transaction ledger records a 6 dollar debit\"\n\ncan be written in TestFirst.Net as:\n\n    Scenario()\n        .Given(user = UserInTheDb().WithDefaults())\n        .Given(account = AccountInTheDb().For(user).Balance(10).Dollars())\n        \n        .When(()=>account.debit(6))\n\n        .Then(\n            ExpectThat(TheAccountInTheDb.For(account)),\n            Is(AnAcccount.With().Balance(4).Dollars())\n        .Then(\n            ExpectThat(TheAccountLedgerInTheDb.For(account)),\n            Is(AnLedger.With().Debit(6).Dollars());",
  "iconUrl": "http://testfirstnet.github.io/TestFirst.Net/icon.png",
  "id": "TestFirst.Net",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://testfirstnet.github.io/TestFirst.Net/LICENSE.txt",
  "listed": true,
  "packageHash": "mCaIuEqJZobs52fWHSe29mbnGezYcsvYIccTRmhfYJKzVxTLPj4MCupvy5nqH6iHNsh1yXogPp6nyzdKh1GKvQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 76292,
  "projectUrl": "https://github.com/TestFirstNet/TestFirst.Net/",
  "published": "2015-05-20T11:50:36.413Z",
  "releaseNotes": "V0.3.2\n===\n\n* New : new match methods on AnArray and AByteArray\n\nV0.3.1\n====\n\n* New : AList.InOrder().WithOnlyValues(..)\n\nV0.3.0\n====\n\nNoteable changes\n\n* Updated : AList now better supports mixed lists\n* Updated : Improved diagnostic error messages\n* Updated : Addition of new match methods on various matchers \n* Updated : Various bug fixes\n* Updated : Improve documentation\n* New : Add new matchers AnException,AChar\n* New : Add Expect.That(..).Throws(..) for exception testing\n\nV0.2.1\n====\n\n* Release as NuGet package",
  "requireLicenseAcceptance": false,
  "title": "TestFirst.Net",
  "version": "0.3.2",
  "tags": [
    "testing",
    "tdd",
    "bdd",
    "fluent",
    "nunit",
    "moq"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}