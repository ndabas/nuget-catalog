{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.16.50.33/linq.propertytranslator.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Peter Schuster",
  "catalog:commitId": "4ad63527-8b7a-45ce-b0fc-9fc2179f9940",
  "catalog:commitTimeStamp": "2015-02-01T16:50:33.9653615Z",
  "copyright": "Copyright 2012",
  "created": "2012-03-06T19:35:29.487Z",
  "description": "Translates computed properties in LINQ queries into their implementation (based on Microsoft.Linq.Translations).",
  "id": "Linq.PropertyTranslator",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/MS-PL",
  "packageHash": "ZphSO/r36Xpiy8PFpnibKK2WWCwnGE/lHOj+AWhL8EjWM6s1h/5z5UDPMUkNfbK60URfOT9suufi6rAkNbt95g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10560,
  "projectUrl": "https://github.com/peschuster/PropertyTranslator",
  "published": "2012-03-06T19:35:30.987Z",
  "releaseNotes": "Initial release.",
  "requireLicenseAcceptance": true,
  "version": "1.0.0",
  "tags": [
    "Linq",
    "Expressions",
    "ExpressionVisitor",
    "EF",
    "Translation"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}