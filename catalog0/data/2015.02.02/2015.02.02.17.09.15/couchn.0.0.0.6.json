{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.09.15/couchn.0.0.0.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Kemper",
  "catalog:commitId": "6a83462f-a44f-4bcd-b978-0a36961327a3",
  "catalog:commitTimeStamp": "2015-02-02T17:09:15.8920989Z",
  "created": "2012-10-04T05:46:12.023Z",
  "description": "Sample usages:\n          \n          using (var session = new TemporarySession())\n          {\n                var testObject = new TestDoc { Text = \"hello world\" };\n\n                var result = session.Get<TestDoc>(\"test\");\n\n                Assert.That(result, Is.Null);\n\n                var info = session.Save(testObject, \"test\");\n\n                testObject.Text = \"hello world chagned\";\n\n                session.Save(testObject);\n\n                testObject.Text = \"hello world changed\";\n\n                info = session.Save(testObject);\n\n                testObject.Text = \"hello world changed 2\";\n\n                session.Save(testObject, info);\n\n                session.Delete(testObject);\n\n                result = session.Get<TestDoc>(\"test\");\n\n          Assert.That(result, Is.Null);\n          }\n\n          also supports some design document helpers (views and updates)\n          e.g.\n            session.Design(\"test\").ViewDocs<TestDoc>(\"test\", track: true);\n            string result = session.Design(\"test\").Update<TestDoc, string>(\"test\", testObject);",
  "id": "CouchN",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "0Le/I0CV5DE3bNhZ0NpSQNYpmyeeWKDv6eDuqh/lI7DyN4Vz2Iu9+O1ZUQ2Y/ld+Lujqr1UAEoIIQ5Lo0zScdg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 17608,
  "projectUrl": "http://github.com/markkemper1/CouchN",
  "published": "2012-10-04T05:46:12.023Z",
  "requireLicenseAcceptance": false,
  "summary": "A simple library for interacting with couch db.\n          Supports tracking of documents and automatic updating of a javascript based design documents.\n\n          And a design view query helper for e.g.\n            session.Design(\"test\").ViewDocs<TestDoc>(\"test\", track: true);\n            \n          which whould run the _design/test/view/test view with include_docs=true and map then to the TestDoc object.\n          The objects would also be tracked to allow save / delete operations.",
  "version": "0.0.0.6",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.09.15/couchn.0.0.0.6.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.09.15/couchn.0.0.0.6.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[4.5.8, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.17.09.15/couchn.0.0.0.6.json#dependencygroup/restsharp",
          "@type": "PackageDependency",
          "id": "RestSharp",
          "range": "[104.0.0, )"
        }
      ]
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}