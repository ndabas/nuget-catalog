{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "UKSIVTSOSAT",
  "catalog:commitId": "c1d985e7-06f2-4237-871d-2f16016aa182",
  "catalog:commitTimeStamp": "2024-04-16T14:35:58.5880755Z",
  "created": "2024-04-13T18:57:45.01Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json#deprecation",
    "reasons": [
      "CriticalBugs"
    ]
  },
  "description": "using Sibintec.Classes;\nusing Sibintec.Models;\nusing Sibintec.Writer;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Diagnostics;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Shapes;\nusing Sibintec.Reader;\n\nnamespace Sibintec\n{\n    /// <summary>\n    /// Логика взаимодействия для Authorization.xaml\n    /// </summary>\n    public partial class Authorization : Window\n    {\n        public Authorization()\n        {\n            InitializeComponent();\n        }\n        private int loginAttempts = 0;\n        private void Enter_Click(object sender, RoutedEventArgs e)\n        {\n            if (txtLogin.Text.Length != 0 && txtPassword.Password.Length != 0)\n            {\n                User user = App.context.Users.ToList().Find(u => u.Email == txtLogin.Text && u.Password == txtPassword.Password);\n                if (user == null)\n                {\n                    MessageBox.Show(\"Вы ввели неверные данные!\");\n\n                    loginAttempts++;\n                    if (loginAttempts >= 3)\n                    {\n                        Captcha captcha = new Captcha();\n                        captcha.Show();\n                        this.Close();\n                    }\n                }\n                else if (user.Idpermission == 1)\n                {\n                    Alldata.ID = user.Iduser;\n                    MenuReader menuReader = new MenuReader();\n                    menuReader.Show();\n                    this.Close();\n                }\n                else if (user.Idpermission == 2)\n                {\n                    Alldata.ID = user.Iduser;\n                    MenuWriter menuWriter = new MenuWriter();\n                    menuWriter.Show();\n                    this.Close();\n                }\n\n                else\n                {\n                    MessageBox.Show(\"Вы ввели неверные данные!\");\n\n                }\n            }\n            else\n                MessageBox.Show(\"Вы должны заполнить все поля!\");\n\n        }\n\n\n        private void exit_Click(object sender, RoutedEventArgs e)\n        {\n            MessageBoxResult messageBoxResult = MessageBox.Show(\"Вы уверены, что хотите выйти?\", \"Предупреждение\", MessageBoxButton.YesNo, MessageBoxImage.Warning);\n\n            if (messageBoxResult == MessageBoxResult.Yes)\n            {\n                Environment.Exit(0);\n            }\n        }",
  "frameworkReferences": "",
  "id": "UKSIVTSOSAT",
  "isPrerelease": false,
  "lastEdited": "2024-04-16T14:35:29.54Z",
  "listed": true,
  "packageHash": "PIMCWlhhsfowr/Gf97DC6HXLQZP/nzOE4Ba8eRQsgZ7X6TVUjnC96xO7XrailtPjV83/rCLBtrkdVL0MI2M2QQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 22351,
  "published": "2024-04-13T18:57:45.01Z",
  "releaseNotes": "using Sibintec.Classes;\nusing Sibintec.Models;\nusing Sibintec.Writer;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Diagnostics;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Shapes;\nusing Sibintec.Reader;\n\nnamespace Sibintec\n{\n    /// <summary>\n    /// Логика взаимодействия для Authorization.xaml\n    /// </summary>\n    public partial class Authorization : Window\n    {\n        public Authorization()\n        {\n            InitializeComponent();\n        }\n        private int loginAttempts = 0;\n        private void Enter_Click(object sender, RoutedEventArgs e)\n        {\n            if (txtLogin.Text.Length != 0 && txtPassword.Password.Length != 0)\n            {\n                User user = App.context.Users.ToList().Find(u => u.Email == txtLogin.Text && u.Password == txtPassword.Password);\n                if (user == null)\n                {\n                    MessageBox.Show(\"Вы ввели неверные данные!\");\n\n                    loginAttempts++;\n                    if (loginAttempts >= 3)\n                    {\n                        Captcha captcha = new Captcha();\n                        captcha.Show();\n                        this.Close();\n                    }\n                }\n                else if (user.Idpermission == 1)\n                {\n                    Alldata.ID = user.Iduser;\n                    MenuReader menuReader = new MenuReader();\n                    menuReader.Show();\n                    this.Close();\n                }\n                else if (user.Idpermission == 2)\n                {\n                    Alldata.ID = user.Iduser;\n                    MenuWriter menuWriter = new MenuWriter();\n                    menuWriter.Show();\n                    this.Close();\n                }\n\n                else\n                {\n                    MessageBox.Show(\"Вы ввели неверные данные!\");\n\n                }\n            }\n            else\n                MessageBox.Show(\"Вы должны заполнить все поля!\");\n\n        }\n\n\n        private void exit_Click(object sender, RoutedEventArgs e)\n        {\n            MessageBoxResult messageBoxResult = MessageBox.Show(\"Вы уверены, что хотите выйти?\", \"Предупреждение\", MessageBoxButton.YesNo, MessageBoxImage.Warning);\n\n            if (messageBoxResult == MessageBoxResult.Yes)\n            {\n                Environment.Exit(0);\n            }\n        }\n        private void CheckBoxPassword_Checked(object sender, RoutedEventArgs e)\n        {\n            var io = txtPassword.Password;\n            textPassword.Text = io;\n            var oi = textPassword.Text;\n            txtPassword.Password = oi;\n            textPassword.Visibility = Visibility.Visible;//видимый\n            txtPassword.Visibility = Visibility.Hidden;\n            textPassword.Text = txtPassword.Password;\n        }\n\n        private void CheckBoxPassword_UnChecked(object sender, RoutedEventArgs e)\n        {\n            var io = txtPassword.Password;\n            textPassword.Text = io;\n            var oi = textPassword.Text;\n            txtPassword.Password = oi;\n            textPassword.Visibility = Visibility.Hidden;//не видимый\n            txtPassword.Visibility = Visibility.Visible;\n            txtPassword.Password = textPassword.Text;\n        }\n        private void txtPassword_PasswordChanged(object sender, RoutedEventArgs e)\n        {\n\n        }\n        private void textPassword_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            txtPassword.Focus();\n        }\n        private void textLogin_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            txtLogin.Focus();\n        }\n\n        private void txtLogin_TextChanged(object sender, TextChangedEventArgs e)\n        {\n\n        }\n\n        private void bthClose_Click(object sender, RoutedEventArgs e)\n        {\n            Environment.Exit(0);\n        }\n\n        private void textPassword_TextChanged(object sender, TextChangedEventArgs e)\n        {\n            txtPassword.Password = textPassword.Text;\n\n            textPassword.Text = txtPassword.Password;\n        }\n\n        private void Window_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            if (e.LeftButton == MouseButtonState.Pressed)\n                DragMove();\n        }\n    }\n}\nusing Sibintec.Classes;\nusing Sibintec.Models;\nusing Sibintec.Writer;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows;\nusing System.Windows.Controls;\nusing System.Diagnostics;\nusing System.Windows.Data;\nusing System.Windows.Documents;\nusing System.Windows.Input;\nusing System.Windows.Media;\nusing System.Windows.Media.Imaging;\nusing System.Windows.Shapes;\nusing Sibintec.Reader;\n\nnamespace Sibintec\n{\n    /// <summary>\n    /// Логика взаимодействия для Authorization.xaml\n    /// </summary>\n    public partial class Authorization : Window\n    {\n        public Authorization()\n        {\n            InitializeComponent();\n        }\n        private int loginAttempts = 0;\n        private void Enter_Click(object sender, RoutedEventArgs e)\n        {\n            if (txtLogin.Text.Length != 0 && txtPassword.Password.Length != 0)\n            {\n                User user = App.context.Users.ToList().Find(u => u.Email == txtLogin.Text && u.Password == txtPassword.Password);\n                if (user == null)\n                {\n                    MessageBox.Show(\"Вы ввели неверные данные!\");\n\n                    loginAttempts++;\n                    if (loginAttempts >= 3)\n                    {\n                        Captcha captcha = new Captcha();\n                        captcha.Show();\n                        this.Close();\n                    }\n                }\n                else if (user.Idpermission == 1)\n                {\n                    Alldata.ID = user.Iduser;\n                    MenuReader menuReader = new MenuReader();\n                    menuReader.Show();\n                    this.Close();\n                }\n                else if (user.Idpermission == 2)\n                {\n                    Alldata.ID = user.Iduser;\n                    MenuWriter menuWriter = new MenuWriter();\n                    menuWriter.Show();\n                    this.Close();\n                }\n\n                else\n                {\n                    MessageBox.Show(\"Вы ввели неверные данные!\");\n\n                }\n            }\n            else\n                MessageBox.Show(\"Вы должны заполнить все поля!\");\n\n        }\n\n\n        private void exit_Click(object sender, RoutedEventArgs e)\n        {\n            MessageBoxResult messageBoxResult = MessageBox.Show(\"Вы уверены, что хотите выйти?\", \"Предупреждение\", MessageBoxButton.YesNo, MessageBoxImage.Warning);\n\n            if (messageBoxResult == MessageBoxResult.Yes)\n            {\n                Environment.Exit(0);\n            }\n        }\n        private void CheckBoxPassword_Checked(object sender, RoutedEventArgs e)\n        {\n            var io = txtPassword.Password;\n            textPassword.Text = io;\n            var oi = textPassword.Text;\n            txtPassword.Password = oi;\n            textPassword.Visibility = Visibility.Visible;//видимый\n            txtPassword.Visibility = Visibility.Hidden;\n            textPassword.Text = txtPassword.Password;\n        }\n\n        private void CheckBoxPassword_UnChecked(object sender, RoutedEventArgs e)\n        {\n            var io = txtPassword.Password;\n            textPassword.Text = io;\n            var oi = textPassword.Text;\n            txtPassword.Password = oi;\n            textPassword.Visibility = Visibility.Hidden;//не видимый\n            txtPassword.Visibility = Visibility.Visible;\n            txtPassword.Password = textPassword.Text;\n        }\n        private void txtPassword_PasswordChanged(object sender, RoutedEventArgs e)\n        {\n\n        }\n        private void textPassword_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            txtPassword.Focus();\n        }\n        private void textLogin_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            txtLogin.Focus();\n        }\n\n        private void txtLogin_TextChanged(object sender, TextChangedEventArgs e)\n        {\n\n        }\n\n        private void bthClose_Click(object sender, RoutedEventArgs e)\n        {\n            Environment.Exit(0);\n        }\n\n        private void textPassword_TextChanged(object sender, TextChangedEventArgs e)\n        {\n            txtPassword.Password = textPassword.Text;\n\n            textPassword.Text = txtPassword.Password;\n        }\n\n        private void Window_MouseDown(object sender, MouseButtonEventArgs e)\n        {\n            if (e.LeftButton == MouseButtonState.Pressed)\n                DragMove();\n        }\n    }\n}",
  "repository": "",
  "title": "UKSIVT",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json#dependencygroup/net8.0-windows7.0",
      "@type": "PackageDependencyGroup",
      "targetFramework": "net8.0-windows7.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json#UKSIVTSOSAT.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1580,
      "fullName": "UKSIVTSOSAT.nuspec",
      "length": 13095,
      "name": "UKSIVTSOSAT.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json#lib/net8.0-windows7.0/UKSIVTSOSAT.runtimeconfig.json",
      "@type": "PackageEntry",
      "compressedLength": 205,
      "fullName": "lib/net8.0-windows7.0/UKSIVTSOSAT.runtimeconfig.json",
      "length": 386,
      "name": "UKSIVTSOSAT.runtimeconfig.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json#lib/net8.0-windows7.0/UKSIVTSOSAT.dll",
      "@type": "PackageEntry",
      "compressedLength": 4859,
      "fullName": "lib/net8.0-windows7.0/UKSIVTSOSAT.dll",
      "length": 15872,
      "name": "UKSIVTSOSAT.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.04.16.14.35.58/uksivtsosat.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12926,
      "fullName": ".signature.p7s",
      "length": 12926,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}