{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.14.18.15.27/ractor.persistence.0.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Victor Baybekov",
  "catalog:commitId": "08d6db9a-e1d8-4c7e-a63d-4ae79d5670dd",
  "catalog:commitTimeStamp": "2015-07-14T18:15:27.8172096Z",
  "copyright": "Copyright 2014",
  "created": "2015-07-14T18:14:46.23Z",
  "description": "Ractor.Persistence is a collection of APIs for POCOs and blobs persistence and a strongly typed Redisclient based on excellent Stackexchange.Redis library.The typed Redis client has strong opinion about keys schema inside Redis and uses a concept of root/owner objects to store dependent objects/collections. POCO/database persistor is implemented on top of Entity Framework 6 (with automatic migrations enabled for non-destructive schema changes). Blob persistor saves large data objects to files or S3.",
  "iconUrl": "https://raw.githubusercontent.com/buybackoff/Ractor.CLR/master/docs/files/img/logo.png",
  "id": "Ractor.Persistence",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://github.com/buybackoff/Ractor.CLR/blob/master/LICENSE.txt",
  "listed": true,
  "packageHash": "/uk6+og7H8bzEQ5zAdWXX873W8XLXhk3Zd6/QqwwILBDGU1Yrlb1uGPzKHqm6i6vr5Yr462rtSSClo4NS06REw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 80276,
  "projectUrl": "https://github.com/buybackoff/Ractor.CLR",
  "published": "2015-07-14T18:14:46.23Z",
  "releaseNotes": "Convenient migrations per table.",
  "requireLicenseAcceptance": false,
  "summary": "Ractor.Persistence is a collection of APIs for POCOs and blobs persistence and a strongly typed Redisclient based on excellent Stackexchange.Redis library.",
  "version": "0.4.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.14.18.15.27/ractor.persistence.0.4.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.14.18.15.27/ractor.persistence.0.4.0.json#dependencygroup/stackexchange.redis",
          "@type": "PackageDependency",
          "id": "StackExchange.Redis",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.14.18.15.27/ractor.persistence.0.4.0.json#dependencygroup/entityframework",
          "@type": "PackageDependency",
          "id": "EntityFramework",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.14.18.15.27/ractor.persistence.0.4.0.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": ""
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.14.18.15.27/ractor.persistence.0.4.0.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": ""
        }
      ]
    }
  ],
  "tags": [
    "F#",
    ".NET",
    "fsharp",
    "redis",
    "akka",
    "distributed",
    "JVM",
    "interop",
    "persistence",
    "DB",
    "database",
    "shards"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}