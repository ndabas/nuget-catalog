{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.03.03.22.27.05/cuemon.4.0.2016.600.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Mortensen",
  "catalog:commitId": "715e82aa-4870-4ed2-aec9-a0ef28d575f5",
  "catalog:commitTimeStamp": "2016-03-03T22:27:05.1614041Z",
  "copyright": "Copyright Â© Weubphoria 2009-2016. All rights reserved.",
  "created": "2016-03-03T22:26:53.66Z",
  "description": "Simple, intuitive and logical every-day-usage additions to the Microsoft .NET Framework 2.0 SP1 and newer. Follows the same namespace structure already found in the .NET Framework.",
  "iconUrl": "http://cdn.nblapi.net/themes/cuemon.net/img/128x128.png",
  "id": "Cuemon",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": true,
  "packageHash": "ZJfDmzpTp6EKCNdHyq/bNI7UPflfRoKmR+LRJ8Ro9Tgf3FCJDwRdWwIPkkUiaS2r54D+B2kzmzZqujk7MVC2YA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 690354,
  "projectUrl": "http://www.cuemon.net/",
  "published": "2016-03-03T22:26:53.66Z",
  "releaseNotes": "This is a major release (breaking changes) with new additions, an optimized kernel and refactoring through out the family as a natural part of the porting to .NET Core and Windows Universal.\nThe following family as a result of for this release:\n\n- New static class, ByteConverter, in the Cuemon namespace that is designed to make Byte related conversions easier to work with\n- New static class, CharConverter, in the Cuemon namespace that is designed to make Char related conversions easier to work with\n- New static class, Converter, in the Cuemon namespace that is designed to make generic conversions easier to work with\n- New static class, ConvertibleConverter, in the Cuemon namespace that is designed to make IConvertible related conversions easier to work with\n- New static class, GuidConverter, in the Cuemon namespace that is designed to make Guid related conversions easier to work with\n- New static class, ObjectConverter, in the Cuemon namespace that is designed to make Object related conversions easier to work with\n- New static class, StringConverter, in the Cuemon namespace that is designed to make String related conversions easier to work with\n- New static class, TimeSpanConverter, in the Cuemon namespace that is designed to make TimeSpan related conversions easier to work with\n- New static class, TypeCodeConverter, in the Cuemon namespace that is designed to make TypeCode related conversions easier to work with\n- New static class, UriSchemeConverter, in the Cuemon namespace that is designed to make UriScheme related conversions easier to work with\n- New static class, DictionaryConverter, in the Cuemon.Collections.Generic namespace that is designed to make IDictionary related conversions easier to work with\n- New static class, EnumerableConverter, in the Cuemon.Collections.Generic namespace that is designed to make IEnumerable related conversions easier to work with\n- New static class, NameValueCollectionConverter, in the Cuemon.Collections.Specialized namespace that is designed to make NameValueCollection related conversions easier to work with\n- New static class, StreamConverter, in the Cuemon.IO namespace that is designed to make Stream related conversions easier to work with\n- New static class, TextReaderConverter, in the Cuemon.IO namespace that is designed to make TextReader related conversions easier to work with\n- New static class, WebHeaderCollectionConverter, in the Cuemon.Net namespace that is designed to make WebHeaderCollection related conversions easier to work with\n- New static class, MethodBaseConverter, in the Cuemon.Reflection namespace that is designed to make MethodBase related conversions easier to work with\n- New static class, VersionUtility, in the Cuemon namespace that is designed to make common Version related operations easier to work with\n- New class, ThreadException, in the Cuemon.Threading namespace that represents one or more errors that occur during application execution\n- New static class, StringFormatter, in the Cuemon namespace that is designed to make string related formating operations easier to work with\n- New class, PadLock, in the Cuemon.Threading namespace that provides support for thread-safe initialization of T\n\n- Improved the GlobalModule class in the Cuemon.Web namespace in terms of identity impersonation and simplified common method calls\n- Improved the CompressionUtility class in the Cuemon.IO.Compression namespace opening up for faster compression with new method overrides\n- Improved the AssemblyUtility class in the Cuemon.Reflection namespace streamlining the *Version methods\n- Improved the EnumerableUtility class in the Cuemon.Collections.Generic namespace by simplifying existing methods while adding support for SelectOne\n\n- Refactored the DateSpan class in the Cuemon namespace to align the three platforms (net20 , dotnet5.4, uap10)\n- Refactored the ParallelThread class in the Cuemon.Threading namespace to be more resilient and provide aggregated unhandled exceptions\n- Refactored the ParallelThreadPool class in the Cuemon.Threading namespace to be more resilient and provide aggregated unhandled exceptions\n- Refactored the NetHttpUtility class in the Cuemon.Net.Http namespace with the goal of reduced complexity\n- Refactored the ManagementUtility class in the Cuemon.Management namespace with the goal of reduced complexity\n- Refactored the UriUtility class in the Cuemon namespace with the goal of reduced complexity\n- Refactored the TransientFaultUtility class in the Cuemon namespace to be more resilient and provide aggregated unhandled exceptions\n- Refactored the ActFactory class in the Cuemon namespace to have information about the original delegate and support async execution\n- Refactored the DoerFactory class in the Cuemon namespace to have information about the original delegate and support async execution\n- Refactored the TesterDoerFactory class in the Cuemon namespace to have information about the original delegate\n\n- Renamed QueueWork to Run on the ThreadPoolUtility class in the Cuemon.Threading namespace\n\n- Moved the ActivatorUtility class from the Cuemon namespace to the Cuemon.Reflection namespace\n- Moved the Dependency class from the Cuemon namespace to the Cuemon.Runtime namespace\n- Moved the DependencyEventArgs class from the Cuemon namespace to the Cuemon.Runtime namespace\n- Moved the IDependency interface from the Cuemon namespace to the Cuemon.Runtime namespace\n- Moved the Watcher class from the Cuemon namespace to the Cuemon.Runtime namespace\n- Moved the WatcherEventArgs class from the Cuemon namespace to the Cuemon.Runtime namespace\n- Moved the Cache class from the Cuemon.Caching namespace to the Cuemon.Runtime.Caching namespace\n- Moved the CacheCollection class from the Cuemon.Caching namespace to the Cuemon.Runtime.Caching namespace\n- Moved the CacheEventArgs class from the Cuemon.Caching namespace to the Cuemon.Runtime.Caching namespace\n- Moved the CachingManager class from the Cuemon.Caching namespace to the Cuemon.Runtime.Caching namespace\n- Moved the CacheValidator class from the Cuemon.Caching namespace to the Cuemon.Integrity namespace\n- Moved the DataPairCollection class from the Cuemon namespace to the Cuemon.Collections namespace\n- Moved the DataPairDictionary class from the Cuemon namespace to the Cuemon.Collections namespace\n- Moved the ReferenceComparer class from the Cuemon namespace to the Cuemon.Collections.Generic namespace\n- Moved the ComparisonUtility class from the Cuemon namespace to the Cuemon.Collections.Generic namespace\n- Moved the ISortableTable interface from the Cuemon namespace to the Cuemon.Collections.Generic namespace\n- Moved the Obfuscator class from the Cuemon.Text namespace to the Cuemon.Security namespace\n- Moved the ObfuscatorMapping class from the Cuemon.Text namespace to the Cuemon.Security namespace\n- Moved the JsonInstance class from the Cuemon.IO namespace to the Cuemon.Runtime.Serialization namespace\n- Moved the JsonInstanceCollection class from the Cuemon.IO namespace to the Cuemon.Runtime.Serialization namespace\n- Moved the JsonTextWriter class from the Cuemon.IO namespace to the Cuemon.Runtime.Serialization namespace\n- Moved the JsonWriter class from the Cuemon.IO namespace to the Cuemon.Runtime.Serialization namespace\n\n- Fixed a bug in the ApplicationEventBinderModule class in the Cuemon.Web namespace that would trigger a null reference exception when OnApplicationEnd was called\n- Fixed a bug in the EnumUtility class in the Cuemon namespace that would wrongfully Parse a TEnum - even if not defined \n\n- Removed the centralized ConvertUtility class from the Cuemon namespace, and placed decentral converters on their respective context-specific classes\n- Removed the following obsolete methods from the DateTimeUtility class in the Cuemon namespace; GetLowestValue, GetHighestValue (use Min or Max on the EnumerableUtility class)\n\n- Several refactorings, optimizations, enhancements, exception handling and overall streamlining throughout the classes of the Cuemon assemblies due to aligning the three platforms (net20 , dotnet5.4, uap10)",
  "requireLicenseAcceptance": false,
  "summary": "A free and flexible assembly package, built to extend and boost your codebelt - providing vast ways of possibilities for all breeds of coders, programmers, developers and the likes thereof.",
  "title": "Cuemon .NET Framework",
  "verbatimVersion": "4.0.2016.600",
  "version": "4.0.2016.600",
  "tags": [
    "xml",
    "xslt",
    "json",
    ".net",
    "framework",
    "additions",
    "businessentity",
    "caching",
    "manager",
    "datespan",
    "depedency",
    "watcher",
    "dataadapter",
    "datamanager",
    "sqlceclient",
    "sqlclient",
    "datadepedency",
    "netdepedency",
    "securitytoken",
    "hash",
    "aes",
    "utility",
    "classes",
    "xsltpage",
    "xsltmasterpage",
    "global",
    "module",
    "ihttpmodule",
    "cloud",
    "security",
    "wcf",
    "wmi",
    "threading",
    "async",
    "httppost",
    "httpput",
    "httpget",
    "httpdelete",
    "countdownevent",
    "processinfo",
    "instrumentation",
    "factory",
    "timemeasure",
    "performance",
    "counter",
    "transient",
    "failure",
    "fault",
    "recovery",
    "iis",
    "azure",
    "serialization",
    "serialize",
    "hierarchy",
    "loop",
    "crc32",
    "parallel",
    "while",
    "spinner",
    "memoize",
    "routing",
    "mime",
    "cache",
    "validator",
    "dto",
    "data",
    "transfer",
    "object",
    "bulk",
    "bulkcopydatareader",
    "xmldatareader",
    "csvdatareader",
    "pagedcollection",
    "paging",
    "partition",
    "condition",
    "act",
    "doer",
    "testerdoer",
    "delegates"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}