{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.08.23.04/physfs.2.0.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ryan C. Gordon and others",
  "catalog:commitId": "f287000d-222d-46d7-8ee5-1fdaf50bcf67",
  "catalog:commitTimeStamp": "2015-02-05T08:23:04.5419805Z",
  "copyright": "Copyright 2013",
  "created": "2014-05-07T16:16:46.307Z",
  "description": "PhysicsFS is a library to provide abstract access to various archives. It is\n\t\tintended for use in video games, and the design was somewhat inspired by Quake 3's file subsystem.\n\t\tThe programmer defines a write directory on the physical filesystem. No file writing done through\n\t\tthe PhysicsFS API can leave that write directory, for security. For example, an embedded scripting\n\t\tlanguage cannot write outside of this path if it uses PhysFS for all of its I/O, which means that\n\t\tuntrusted scripts can run more safely. Symbolic links can be disabled as well, for added safety.\n\t\tFor file reading, the programmer lists directories and archives that form a search path. Once\n\t\tthe search path is defined, it becomes a single, transparent hierarchical filesystem. This makes\n\t\tfor easy access to ZIP files in the same way as you access a file directly on the disk, and it\n\t\tmakes it easy to ship a new archive that will override a previous archive on a per-file basis.\n\t\tFinally, PhysicsFS gives you platform-abstracted means to determine if CD-ROMs are available, the user's home directory, where in the real filesystem your program is running, etc.",
  "iconUrl": "https://nuget.org/Content/Images/packageDefaultIcon.png",
  "id": "physfs",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://hg.icculus.org/icculus/physfs/raw-file/tip/LICENSE.txt",
  "packageHash": "NA+ixex2xEd/Z9ssYiFgvth9B0gVpSBDUe3vrQm8EgenwNKwBw7tKD08JKN/2NdiMp6vKpIJVhKJfiEDAzvjPw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 312431,
  "projectUrl": "http://icculus.org/physfs/",
  "published": "2014-05-07T16:16:46.307Z",
  "releaseNotes": "initial package creation",
  "requireLicenseAcceptance": false,
  "summary": "PhysicsFS is a library to provide abstract access to various archives.",
  "title": "PhysicsFS",
  "version": "2.0.3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.08.23.04/physfs.2.0.3.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.08.23.04/physfs.2.0.3.json#dependencygroup/physfs.redist",
          "@type": "PackageDependency",
          "id": "physfs.redist",
          "range": "[2.0.3, )"
        }
      ]
    }
  ],
  "tags": [
    "CoApp",
    "native",
    "io",
    "filesystem",
    "physfs",
    "physicsfs",
    "nativepackage"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}