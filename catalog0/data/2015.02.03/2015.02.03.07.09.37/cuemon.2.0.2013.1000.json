{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.07.09.37/cuemon.2.0.2013.1000.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Mortensen",
  "catalog:commitId": "73325f2b-7456-45d4-b5b5-3dbd074586a7",
  "catalog:commitTimeStamp": "2015-02-03T07:09:37.9257016Z",
  "copyright": "Copyright © MuchMore 2009-2013. All rights reserved.",
  "created": "2013-04-11T02:46:52.063Z",
  "description": "If you like the structure of the .NET platform, then the Cuemon .NET Framework Additions might just be that extra solution you have been looking for! With these assemblies I have aimed to accomplish at least two things; simplify the tedious work that is always present when coding towards a generic framework, and implementing some core- and utility classes for you to enjoy.",
  "iconUrl": "http://cdn.cuemon.net/themes/cuemon/images/nuget.png",
  "id": "Cuemon",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://creativecommons.org/licenses/by/3.0/",
  "packageHash": "GoRp1yaBtAJfmCZvJeq9iOPdq9QsAF0MlLBb+Hzh0N22Rek2D/tRkee7MOdUHDjLUSoslGnUQPm3yNQdn5h01g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 459603,
  "projectUrl": "http://www.cuemon.net/",
  "published": "2013-04-11T02:46:52.063Z",
  "releaseNotes": "For two month this major release has been under way - and there are still so much work to be done, but slow and steady a cloud friendly framework is emerging with the guts to remove deprecated code while keeping a focus on performance and high flexibility using Action and Func delegates where appropriate. My Achilles heel is still the Cuemon.ServiceModel class, but the ground work is in place and I expect within 3 months that a REST friendly and highly flexible solution is in place.\nEnough with the small talk - let’s get to the work that was implemented for 2.0.2013.1000:\n\n- The Func delegate was extended from 5 arguments to 20 arguments\n- The Action delegate was extended from 5 arguments to 20 arguments\n\n- A new utility class was introduced in the Cuemon namespace; TransientFaultUtility that provides ways to make applications more resilient with robust transient fault handling logic \n- A new class was introduced in the Cuemon namespace; TransientFaultException\n- A new class was introduced in the Cuemon namespace; DefaultOr that provides - to some extent - a generic way to support the Null Object Pattern\n- A new class was introduced in the Cuemon namespace; Wrapper -> IWrapper\n- A new class was introduced to ease the usage of Func delegates; the FuncFactory class with up to 20 arguments\n- A new class was introduced to ease the usage of Action delegates; the ActionFactory class with up to 20 arguments\n- A new class was introduced in the Cuemon namespace; LoopUtility\n- A new class was introduced in the Cuemon namespace; Hierarchy -> IHierarchy as well as HierarchyUtility\n- A new class was introduced in the Cuemon namespace; AssignmentUtility\n- A new enum was introduced in the Cuemon namespace; AssignmentOperator\n- A new enum was introduced in the Cuemon namespace; RelationalOperator\n- The HashUtility class was extended to support the CRC32 checksum\n- The MethodSignature class was extended with these new members; HasParameters, Create, MergeParameters\n- The Instrumentation class was simplified internally\n- The TypeUtility class was extended with these new methods; GetAncestorOrSelf, IsEnumerable, IsDictionary, IsKeyValuePair, SanitizeTypeName, ContainsAttributeType\n- The ExceptionUtility class was refactored, moved and extended with these new methods; Parse, Flatten, Refine [breaking]\n- The TesterDoerUtility class was refactored to support both Action and Func delegates [breaking]\n- The HttpMethod enum was renamed to HttpMethods as it now supports the Flags attribute [breaking]\n- The StringUtility class was extended with these new methods; Remove\n- The ConvertUtility class received optimizations and was extended with these new methods; ToWebHeaderCollection, ToString, ToEnumerable, ToDelimitedString\n- The ReflectionUtility class was extended with these new methods; GetAttributes, GetAttribute, HasCircularReference, GetPropertyValue, GetObjectHierarchy\n\n- A new class was introduced in the Cuemon.Security.Cryptography namespace; CyclicRedundancyCheck32\n- A new abstract class was introduced in the Cuemon.Security.Cryptography namespace; CyclicRedundancyCheck\n- A new enum was introduced in the Cuemon.Security.Cryptography namespace; PolynomialRepresentation\n\n- A new utility class was introduced in the Cuemon.Collections.Generic namespace; ListUtility\n- A new utility class was introduced in the Cuemon namespace; EnumUtility with so far one method: HasFlags\n- A new class was introduced in the Cuemon.Collections.Generic namespace; EnumerableSizeComparer\n- The EnumerableUtility class was extended with several new methods; Select, SelectMany, FindAll, Any\n\n- A new enum was introduced in the Cuemon.Xml.Serialization namespace; SerializableOrder\n- The XmlUtility class has its ConvertEncoding method extended\n- The XmlConvertUtility class was extended with these new methods; ToXmlElement, ToStream [breaking]\n- The XmlSerializationUtility class completely revamped, refactored and simplified with a high degree of flexibility [breaking]\n- The XmlSerialization class was extended with several new overloads of ToXml\n\n- The DataManager, SqlDataManager and SqlCeDataManager class was refactored to use the new TransientFaultUtility class with accordingly name aligning [breaking]\n- The RuntimeBusinessEntity class was extended to provide better exception details\n- The DataManager class received a bug fix for those rare occasions where an exception is thrown while iterating a reader or similar; command parameters are cleared now\n- The ColumnAttribute class now supports ordering of compound primary keys\n- The BusinessEntityDataAdapter now support multiple steps in property hierarchy\n- The MappingUtility class was extended with the new methods; ParseStorageFieldValue, SetStorageFieldPropertyValue, ParseStorageField\n- The BusinessEntity class now supports multiple steps in property hierarchy\n- The BusinessEntityUtility class now fully supports compound primary keys\n\n- The XsltPage now supports entity tag resolvement when checking against client caching\n- The GlobalModule class was simplified internally\n- The HttpResponseFilter class was simplified internally\n- The HttpResponseContentFilter class was extended and simplified internally\n- The HttpResponseUtility class was refactored and extended with these new methods; SetClientSideContentCacheExpiresHeaders, CreateClientSideContentCacheExpiresHeaders [breaking]\n- The HttpRequestUtility class was refactored and extended with these new methods; IsClientSideContentCached, TryGetEntityTagHeader [breaking]\n- The SiteMapProtocolHandler was refactored to use the NetHttpUtility class\n\n- The Cuemon.ServiceModel assembly is a work in progress why it is not recommended to use any classes but the Endpoint base class although many have been added\n\nHappy coding - it was with a high degree of pride that this release is made possible!",
  "requireLicenseAcceptance": false,
  "summary": "Simple,  logical and every-day usage additions to the Microsoft .NET Framework 2.0 SP1 and forward. Follows the established namespace structure already found in the .NET Framework.",
  "title": "Cuemon .NET Framework Additions",
  "version": "2.0.2013.1000",
  "tags": [
    "cuemon",
    "xml",
    "xslt",
    "json",
    ".net",
    "framework",
    "additions",
    "businessentity",
    "caching",
    "manager",
    "datespan",
    "depedency",
    "watcher",
    "dataadapter",
    "datamanager",
    "sqlceclient",
    "sqlclient",
    "datadepedency",
    "netdepedency",
    "securitytoken",
    "hash",
    "aes",
    "utility",
    "classes",
    "xsltpage",
    "xsltmaterpage",
    "globalmodule",
    "ihttpmodule",
    "cloud",
    "security",
    "wcf",
    "wmi",
    "threading",
    "async",
    "httppost",
    "httpput",
    "httpget",
    "httpdelete",
    "countdownevent",
    "processinfo",
    "instrumentation",
    "factory",
    "func",
    "action",
    "timemeasure",
    "performance",
    "counter",
    "transient",
    "failure",
    "fault",
    "recovery",
    "iis",
    "azure",
    "serialization",
    "serialize",
    "hierarchy",
    "loop",
    "crc32"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}