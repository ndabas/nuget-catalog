{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.01.01.44/solutionsnippets.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "earloc",
  "catalog:commitId": "fb0e740f-9ee6-4c41-b580-a0be0979ea27",
  "catalog:commitTimeStamp": "2015-02-05T01:01:44.386104Z",
  "copyright": "Copyright earloc 2014",
  "created": "2014-03-22T23:34:43.65Z",
  "description": "Snippets on the fly! Manage C# code snippets on solution level\n\n      _about this package_\n\n      This package will enable you to manage and maintain solution agnostic C# code snippets. In other words, snippets in a solution will be deployed automatically upon build - so you can manage snippets on a \"per solution\" basis.\n      Just drop the *.snippet files that should be availabe to developers of your solution anywhere under the solution folder.\n      SolutionSnippets will discover all those files and deploy them into a special folder \"__Blue.Utils.SolutionSnippets\" to the current user´s snippet folder.\n      (this would be \"{Documents}\\Visual Studio 2012\\Code Snippets\\Visual C#\\My Code Snippets\\__Blue.Utils.SolutionSnippets\", where {Documents} is the local user´s documents library.\n      This way, SolutionSnippets won´t interfere with already existing snippets.\n\n      It is totally sufficient when there is exactly one project within your solution that installs SolutionSnippets, as all snippets-files under your solution folder will be deployed.\n\n      All you need to do to deploy your solution agnostic snippets is to start a build.\n      When building your solution, all existing solution agnostic snippets are removed.\n      After that, all snippets in the scope of the current solution are deployed to your user´s snippet folder\n      (remember: SolutionSnippets does not touch any existing snippets)\n\n      _under the hood_\n      \n      There is (sadly) no black magic involved in deploying solution agnostic snippets. The main work is done by common msbuild-tasks. Only resolving the local user´s snippet folder is done by a custom build-task.\n      \n      _known caveats_\n\n      Under certain circumstances Visual Studio does not reflect changes to snippets immediatly. In those cases, just restart the Visual Studio instance.\n      In the meantime, go vote for this feature: http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/4152530-add-the-ability-to-refresh-individual-or-all-snipp\n\n      Send feedback, feature-request, unexpected breaking changes, bugs, etc. via the projects nuget-page, http://www.nuget.org/packages/SolutionSnippets/ContactOwners, until there is a projet homepage...",
  "id": "SolutionSnippets",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "Cpq2vAI9yX8Z3cZEUAUi+PBguTCETc5/nx+mPswD1ugk7ARqg4TSO6Wr2z/v84nnl4NFgy4bYOTokrKg1W1Kqw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10108,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "1.0.0 - initial release",
  "requireLicenseAcceptance": false,
  "summary": "Snippets on the fly! Manage C# code snippets on a 'per solution' level",
  "title": "SolutionSnippets",
  "version": "1.0.0",
  "tags": [
    "custom",
    "snippet",
    "per",
    "solution",
    "agnosic"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}