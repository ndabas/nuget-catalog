{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.58.22/reactokinesix.0.2.0-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Yan Cui",
  "catalog:commitId": "ae21dda1-4c47-49a4-9217-e53967db7f49",
  "catalog:commitTimeStamp": "2015-02-04T22:58:22.0852394Z",
  "copyright": "Copyright 2013",
  "created": "2014-03-10T16:48:10.34Z",
  "description": "This client library makes it easy for you to build record-consuming real time applications on top of the Amazon Kinesis service.\n\n      The library takes care of the plumbing required to track your progress and manage sharding changes in the underlying stream, as well as giving you different options to handle errors on a record-by-record basis.\n\n      Scaling out your application is also supported and handled by the library, as new nodes start the processing of shards will be spread and load balanced automatically.",
  "iconUrl": "https://raw.github.com/theburningmonk/ReactoKinesix/master/nuget/logo.png",
  "id": "ReactoKinesix",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/theburningmonk/ReactoKinesix/blob/master/LICENSE.txt",
  "packageHash": "DUBBwQAhkv+c8BOx4ZNJ2NVA9/6pOD9Ftupa04fkELPBWU66qFvSQmAN186mlDqtv7U2MiwSaCviACjBYM4Z3Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 143928,
  "projectUrl": "https://github.com/theburningmonk/ReactoKinesix/",
  "published": "2014-03-10T16:48:10.34Z",
  "releaseNotes": "Breaking changes:\n- record processor processes batch at a time\n- record processor needs to respond with status and whether or not to place checkpoint after each batch\n- kinesis app takes in a processor factory instead of processor instance\n\nBug fixes:\n- fixed bug with wrong type of exception being checked in DynamoDBUtils.createTable\n- fixed bug where ShardId attribute is assumed to be always present even when there's no data in the table\n- handle exceptions other than ResourceNotFound during init state table phase\n\nMinor:\n- added stubs for dynamodb and kinesis\n- added unit tests",
  "requireLicenseAcceptance": false,
  "summary": "A Rx-based .Net client library for Amazon Kinesis",
  "version": "0.2.0-beta",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.58.22/reactokinesix.0.2.0-beta.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.58.22/reactokinesix.0.2.0-beta.json#dependencygroup/awssdk",
          "@type": "PackageDependency",
          "id": "AWSSDK",
          "range": "[2.0.3.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.58.22/reactokinesix.0.2.0-beta.json#dependencygroup/log4net",
          "@type": "PackageDependency",
          "id": "log4net",
          "range": "[1.2.10, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.58.22/reactokinesix.0.2.0-beta.json#dependencygroup/rx-main",
          "@type": "PackageDependency",
          "id": "Rx-Main",
          "range": "[2.2.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.22.58.22/reactokinesix.0.2.0-beta.json#dependencygroup/fsharp.reactive",
          "@type": "PackageDependency",
          "id": "FSharp.Reactive",
          "range": "[2.2.131002, )"
        }
      ]
    }
  ],
  "tags": [
    "F#",
    "fsharp",
    "aws",
    "amazon",
    "kinesis",
    "bigdata",
    "rx"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}