{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Carlson",
  "catalog:commitId": "597ad529-a377-4069-aea2-1781ce52b32d",
  "catalog:commitTimeStamp": "2019-01-31T19:09:53.7571415Z",
  "copyright": "Copyright 2018",
  "created": "2019-01-03T18:56:41.277Z",
  "description": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "iconUrl": "http://markknowsnothing.weebly.com/uploads/2/7/0/7/27073737/custom_themes/820134448677229004/files/Logo50x50.png",
  "id": "LongCalc",
  "isPrerelease": false,
  "lastEdited": "2019-01-31T19:09:48.443Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "JGs35iOS9DKAe3uO8dno6LrRrldsyPzxk15SH0xBS8SGO/5Sw/FHiLhRUARh/pfdxqtteIRtlzHdAYW1J4I09g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 444692,
  "published": "2019-01-03T18:56:41.277Z",
  "releaseNotes": "Unsigned Assembly\n\nThis version reverts back to Precisions for new bf(string x ...) and x.toString(...) that are measured in decimal (Base 10) digits. For new bf(string x ...), Precision of output will be no less than that of the input, as measured in the decimal digit equivalent of the length of the mantissa part of the input string.\n\nIn this version, a fix to x.toString and x.Round that consistently works well. Rounding away from 0 will occur when the truncated part is greater than half. If the input is integral and the truncated part is at least half, rounding away from 0 will occur in that case also.\n\nAlso in this version, a fix has been applied to an error (which occurred in most all the 0.3.x versions) in which x.ToPolar returned inaccurate results if x has a real part == 0 and imaginary part not zero. This bug also had an impact on several other complex-valued functions.\n\nChecks for arithmetic overflow or underflow are again compiler-included in this release.",
  "requireLicenseAcceptance": true,
  "summary": "This library, built with and accessible by Visual Studio (2017) and using Mpir.net for the underlying integer math, supplies a variety of math functions and utilities with precisions at least as large as 2,000,000 base 10 digits. The underlying objects are bf (for 'big float' real values comprised of an mpz_t extended integer part from Mpir.net and a base 2 int64 exponent), bcr (for complex numbers expressed in the rectangular coordinates of a bf real part and a bf imaginary part), and bcp (for complex numbers expressed in the polar coordinates of a bf radius and a bf angle). Functions supported include real and complex versions of: basic arithmetic, trigonometric functions, log and exponential functions, hyperbolic functions and the inverses of all of these, base conversions between bases up to 64, conversions between rectangular and polar coordinates, and some special functions such as Euler, Bernoulli, Gamma, Zeta, and BesselJ.",
  "title": "LongCalc Arbitrary Precision Float and Complex Number Library",
  "verbatimVersion": "0.3.19",
  "version": "0.3.19",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#dependencygroup/mpir.net",
          "@type": "PackageDependency",
          "id": "Mpir.NET",
          "range": "[0.4.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#LongCalc.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1414,
      "fullName": "LongCalc.nuspec",
      "length": 2971,
      "name": "LongCalc.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 2659,
      "fullName": "LICENSE.txt",
      "length": 7814,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#lib/net45/LongCalc.dll",
      "@type": "PackageEntry",
      "compressedLength": 31711,
      "fullName": "lib/net45/LongCalc.dll",
      "length": 94208,
      "name": "LongCalc.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#content/xmpir32.dll",
      "@type": "PackageEntry",
      "compressedLength": 176893,
      "fullName": "content/xmpir32.dll",
      "length": 320000,
      "name": "xmpir32.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#content/xmpir64.dll",
      "@type": "PackageEntry",
      "compressedLength": 220506,
      "fullName": "content/xmpir64.dll",
      "length": 441856,
      "name": "xmpir64.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.31.19.09.53/longcalc.0.3.19.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "arbitrary",
    "precision",
    "float",
    "complex",
    "number",
    "math",
    "library"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}