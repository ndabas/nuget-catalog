{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.21.56.48/objectflattenerrecomposer.2.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dogu Arslan",
  "catalog:commitId": "24509a41-dfaf-4853-ac09-e93147d6bf82",
  "catalog:commitTimeStamp": "2017-10-01T21:56:48.0289162Z",
  "copyright": "Copyright 2016",
  "created": "2017-10-01T21:54:57.083Z",
  "description": "Provides functionality to flatten complex objects into EntityProperty dictionary and functionality to recompose original complex object from the flattened property dictionary. One usage is that the API allows writing any complex object with nested properties into Azure Table Storage in flattened form which is not normally possible by using the Azure Storage Client SDK.",
  "id": "ObjectFlattenerRecomposer",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "listed": true,
  "packageHash": "PURLv0g/Gf7gw47ibTaA+HHtgOkoVlTlxZTGPOPV8KimSk0FxpzqlETUdWsxcYI3Jb6vrNTpleuWnpxRFYhvgA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 9960,
  "projectUrl": "https://doguarslan.wordpress.com/2016/02/03/writing-complex-objects-to-azure-table-storage/",
  "published": "2017-10-01T21:54:57.083Z",
  "releaseNotes": "Update to version 2.0 \n\t- Added support for all IEnumerable type properties (List, Array, ICollection, Dictionary,...). Automatically converts these properties to json           when writing to table storage. Recreates the original IEnumerable property when reading from the table.\n\t  \n\t- Added support for byte type property.",
  "requireLicenseAcceptance": false,
  "title": "Object Flattener Recomposer",
  "verbatimVersion": "2.0.0",
  "version": "2.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.21.56.48/objectflattenerrecomposer.2.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.21.56.48/objectflattenerrecomposer.2.0.0.json#dependencygroup/windowsazure.storage",
          "@type": "PackageDependency",
          "id": "WindowsAzure.Storage",
          "range": "[4.3.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.21.56.48/objectflattenerrecomposer.2.0.0.json#ObjectFlattenerRecomposer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 744,
      "fullName": "ObjectFlattenerRecomposer.nuspec",
      "length": 1561,
      "name": "ObjectFlattenerRecomposer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.21.56.48/objectflattenerrecomposer.2.0.0.json#lib/net45/ObjectFlattenerRecomposer.dll",
      "@type": "PackageEntry",
      "compressedLength": 6453,
      "fullName": "lib/net45/ObjectFlattenerRecomposer.dll",
      "length": 14848,
      "name": "ObjectFlattenerRecomposer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.10.01.21.56.48/objectflattenerrecomposer.2.0.0.json#content/License.txt",
      "@type": "PackageEntry",
      "compressedLength": 801,
      "fullName": "content/License.txt",
      "length": 1504,
      "name": "License.txt"
    }
  ],
  "tags": [
    "Object",
    "Flatten",
    "Recompose",
    "Azure",
    "Table",
    "Storage",
    "EntityProperty",
    "DynamicTableEntity",
    "POCO",
    "Converter"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}