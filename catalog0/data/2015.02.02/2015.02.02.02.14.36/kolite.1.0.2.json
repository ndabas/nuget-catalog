{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.02.14.36/kolite.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "John Papa,Hans Fjällemark",
  "catalog:commitId": "a7b132a4-1603-4cf1-9243-030dc5d155eb",
  "catalog:commitTimeStamp": "2015-02-02T02:14:36.2889351Z",
  "copyright": "Copyright © 2012 Hans Fjällemark & John Papa.",
  "created": "2012-08-13T21:25:44.24Z",
  "description": "// asyncCommand\n// -----------------------------\n\n<button data-bind=\"command: \nsaveCommand\">Save</button>\n\n\n\nself.saveCommand = ko.asyncCommand({\n    execute: function(callback) {\n        $.ajax({\n            complete: callback,\n            data: { name: self.name() },\n            type: 'POST',\n            url: '/save/',\n                    \n            success: function(result) {\n                alert('Name saved:' + result)\n            }\n        })\n    },\n        \n    canExecute: function(isExecuting) {\n        return !isExecuting && self.name()\n    }\n})\n\n\n// asyncCommand and activity\n// -----------------------------\n\n\n<button data-bind=\"activity: saveCommand.isExecuting, command: saveCommand\">Save</button>\n\n\n\n// dirtyFlag\n// -----------------------------\n\n\n// Your model\nvar Person = function () {\n    var self = this;\n    self.id = ko.observable();\n    self.firstName = ko.observable().extend({ required: true });\n    self.lastName = ko.observable().extend({ required: true });\n    self.dirtyFlag = new ko.DirtyFlag([self.firstName,self.lastName]);\n    return self;\n};\n\n\n// Hook these into your viewmodel ...\n\n\n//Property on your view model. myPerson is an instance of Person.\n//Did it Change?\nisDirty = ko.computed(function () {\n    return myPerson().dirtyFlag().isDirty();\n}),\n\n//Resync Changes\ndirtyFlag().reset();",
  "id": "KoLite",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/mit-license.php",
  "packageHash": "NSXQefhwXXOYR98A2qxFNP8gjPoC7S7z53BibVY7Ch/qWAzy/mzJzjccboDv+4UMM/yucKYmzr/dVDohIoBPWA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10850,
  "projectUrl": "https://github.com/CodeSeven/KoLite",
  "published": "2012-08-13T21:25:44.24Z",
  "requireLicenseAcceptance": false,
  "summary": "KoLite contains a set of helpers to aid in creating MVVM applications using JavaScript and Knockout.",
  "title": "KoLite - Lightweight Toolkit for KnockoutJS",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.02.14.36/kolite.1.0.2.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.02.14.36/kolite.1.0.2.json#dependencygroup/knockoutjs",
          "@type": "PackageDependency",
          "id": "knockoutjs",
          "range": "[2.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.02.14.36/kolite.1.0.2.json#dependencygroup/jquery",
          "@type": "PackageDependency",
          "id": "jQuery",
          "range": "[1.4.4, )"
        }
      ]
    }
  ],
  "tags": [
    "knockout",
    "jquery",
    "kolite"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}