{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.03.26.37/podcaster.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "James F. Bellinger",
  "catalog:commitId": "60cd4fa4-2dd9-4665-8b99-231525bcb21f",
  "catalog:commitTimeStamp": "2015-02-03T03:26:37.9323601Z",
  "copyright": "Copyright 2010 James F. Bellinger",
  "created": "2013-02-23T17:12:04.853Z",
  "description": "Ever needed to cast one struct to another, or pull a struct out of a byte array without a lot of work or unsafe code? I have too, so I made PODcaster. It can cast between individual elements as well as to and from array sections.",
  "id": "PodCaster",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.zer7.com/files/oss/podcaster/LICENSE",
  "packageHash": "T1cXzCCMawWpfoxJlUrGCEP6IH9zos2EBVzwH+mYUV4MX9tsGEilWpzijJRdn2kXpHp36+stUIu3OauKP+S+TQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14870,
  "projectUrl": "http://www.zer7.com/software.php?page=podcaster",
  "published": "2013-02-23T17:12:04.853Z",
  "requireLicenseAcceptance": true,
  "summary": "Cast between arbitrary value types without unsafe code.",
  "title": "PODcaster",
  "version": "1.0.0",
  "tags": [
    "cast",
    "pod",
    "struct",
    "value",
    "type"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}