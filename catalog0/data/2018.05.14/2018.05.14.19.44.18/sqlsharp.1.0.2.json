{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.05.14.19.44.18/sqlsharp.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Codehopper",
  "catalog:commitId": "0cfa66c5-243e-4010-9051-8b2a7d2f9cb1",
  "catalog:commitTimeStamp": "2018-05-14T19:44:18.9539587Z",
  "copyright": "Copyright 2018, Codehopper",
  "created": "2018-05-14T19:37:14.447Z",
  "description": "Generate SqlQuery for your type/object dynamically.\n\n      ============  Query builder example:   ===============\n\n      using SqlSharp;\n      using SqlSharp.Query;\n\n      SharpQuery select = SharpQuery\n      .Select()\n      .Field(\"Id\").As(\"AccountId\") // with alias\n      .Field(\"AccountNumber\") //name only\n      .Where(\"account.created\", Compare.GreaterThanEqual, \"'2018-01-01'\") //where clause\n      .TopN(100)\n      .From(\"account\"); //table\n\n      // sql output\n      var sqlQuery = QueryHelper.GetSqlOutput(select);\n\n\n\n\n      ===========   Generate Solect dynamically =============\n      //Query With Alias:\n\n      // Add a class, Define column name with optional attribute, property name is used as Alias\n      public class Account\n      {\n      [SqlSharp(\"Account.Id\")] // column name\n      public string AccountId { get; set; } // alias\n\n      public string AccountNumber { get; set; }\n\n      }\n\n      // generate query:\n\n      Account a = new Account();\n      var fields = QueryHelper.GetSelects<Account>(a);\n\n\n        SharpQuery select = SharpQuery\n        .Select()\n        .Fields(fields.ToArray())\n        .Where(\"account.created\", Compare.GreaterThanEqual, \"'2018-01-01'\")\n        .TopN(100)\n        .From(\"account\");\n\n\n        var sqlOutput = QueryHelper.GetSqlOutput(select);",
  "id": "SqlSharp",
  "isPrerelease": false,
  "lastEdited": "2018-05-14T19:40:27.677Z",
  "listed": true,
  "packageHash": "B7tuz45U+25+GBVD9taXqxZlIUPiMetyP6QUVE+T05moxVyVxwwDkDPEXlNyb347D+R7X4vDvFLPzRkOsxRmaQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 474164,
  "published": "2018-05-14T19:37:14.447Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "Dynamics sql query builder for known providers - Sql Server, Oracle, MySql.\n      Use QueryHelper to see sql output. QueryHelper also has GetSelects() to generate Select query for all fields on a type/object.",
  "title": "SqlSharp - Sql query builder",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.05.14.19.44.18/sqlsharp.1.0.2.json#SqlSharp.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 847,
      "fullName": "SqlSharp.nuspec",
      "length": 2016,
      "name": "SqlSharp.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.05.14.19.44.18/sqlsharp.1.0.2.json#lib/net471/SqlSharp.dll",
      "@type": "PackageEntry",
      "compressedLength": 142194,
      "fullName": "lib/net471/SqlSharp.dll",
      "length": 385024,
      "name": "SqlSharp.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.05.14.19.44.18/sqlsharp.1.0.2.json#lib/net471/SqlSharp.pdb",
      "@type": "PackageEntry",
      "compressedLength": 327199,
      "fullName": "lib/net471/SqlSharp.pdb",
      "length": 1349120,
      "name": "SqlSharp.pdb"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}