{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.12.06.32.35/bogus.3.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Brian Chavez",
  "catalog:commitId": "6570d9d3-a1f8-4247-914c-bdc783a17799",
  "catalog:commitTimeStamp": "2015-07-12T06:32:35.1093021Z",
  "copyright": "Copyright 2015",
  "created": "2015-07-12T06:31:40.383Z",
  "description": "A simple and sane data generator for populating objects that supports different locales. A delightful port of the famed faker.js and inspired by FluentValidation. Use it to create and load databases and UIs with mockup data. Get started by using Faker class or a DataSet directly.",
  "iconUrl": "https://raw.githubusercontent.com/bchavez/Bogus/master/Docs/logo.png",
  "id": "Bogus",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "UOJreph+c/GBNTD+rMueiQgUO3hLlEEvEpq1cLXob3Hn8iYECmgFtornm6BeN/auBvyRhvEwLjC2nYwbIKiFlA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 242858,
  "projectUrl": "https://github.com/bchavez/Bogus",
  "published": "2015-07-12T06:31:40.383Z",
  "releaseNotes": "History: v3.0.0.1\n        * Migrated to new FakerJS datafile format. Build system uses gulp file to directly import FakerJS locales.\n        * Faker.Parse() can now tokenize and replace handlebar formats.\n        * Added Faker.Hacker and Faker.Company properties.\n        * Added Custom separator on Lorem.Paragraph.\n        * Added Canada (French) (fr_CA) locale.\n        * Added Ukrainian (uk) locale.\n        * Added Ireland (en_IE) locale.\n        * Added Internet.Mac for mac addresses.\n        * Support for Canadian post/zip codes.\n        * Exposed Name.JobTitle, Name.JobDescriptor, Name.JobArea, Name.JobType\n        * Exposed Address.CountryCode\n        * Replace symbols in domain words so it generates output for all locales\n        * Support for gender names, but only for locales that support it. Russian('ru') but not English('en').\n        * Corrected abbreviation for Yukon to reflect its official abbreviation of \"YT\".\n\n\n        v2.1.5.2:\n        * Fixed instantiating a Person in a non-US locale. -antongeorgiev\n\n        v2.1.5.1:\n        * Added Georgian, Turkish, and Chinese (Taiwan) locales.\n        * Added Name.JobTitle()\n        * Added Internet.Url() and Internet.Protocol().\n        * Sync'd up with faker.js v2.1.5.\n\n        v2.1.4.2:\n        * Fixed bug in Faker.Person and Faker[T] that generates new person context after every new object.\n        * Added support for .FinishWith() for post-processing that runs after all rules but before returning new instance.\n        * Added Newtonsoft.Json as NuGet dependency.\n\n        v2.1.4.1:\n        * Minor changes, mostly XML doc update and Person moved from DataSet to Bogus namespace.\n\n        v2.1.4.0:\n        * Initial port from faker.js 2.1.4.",
  "requireLicenseAcceptance": false,
  "summary": "A simple and sane data generator for populating objects that supports different locales.",
  "version": "3.0.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.12.06.32.35/bogus.3.0.0.1.json#dependencygroup/.netframework4.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.07.12.06.32.35/bogus.3.0.0.1.json#dependencygroup/.netframework4.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": ""
        }
      ],
      "targetFramework": ".NETFramework4.0"
    }
  ],
  "tags": [
    "fake",
    "bogus",
    "poco",
    "data",
    "generator",
    "database",
    "seed",
    "values",
    "test-data",
    "test"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}