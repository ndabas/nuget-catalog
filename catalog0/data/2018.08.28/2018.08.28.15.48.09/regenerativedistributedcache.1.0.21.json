{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.08.28.15.48.09/regenerativedistributedcache.1.0.21.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mhano Harkness",
  "catalog:commitId": "e0f2428a-b945-414f-af78-7ef01f6053d8",
  "catalog:commitTimeStamp": "2018-08-28T15:48:09.5829598Z",
  "copyright": "Copyright Â© Mhano Harkness 2018",
  "created": "2018-08-28T15:43:50.333Z",
  "description": "A cache that supports scheduling the regeneration of cache items in the background ahead of their expiry and manages this across a farm of web/service nodes minimising duplicated cache value generation work.",
  "iconUrl": "https://raw.githubusercontent.com/mhano/RegenerativeDistributedCache/master/docs/Icon.png",
  "id": "RegenerativeDistributedCache",
  "isPrerelease": false,
  "lastEdited": "2018-08-28T15:48:07.647Z",
  "licenseUrl": "https://www.opensource.org/licenses/mit-license.php",
  "listed": false,
  "packageHash": "+Kc0jAko+UlZzCN8fcnncyXt1CpDKiAyV1jD3E/DfmQNoW8MK4ps0ZOpn8sVbfi6GAU+2u1mmCHCOfVRfcGeVA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26308,
  "projectUrl": "https://github.com/mhano/RegenerativeDistributedCache",
  "published": "1900-01-01T00:00:00Z",
  "requireLicenseAcceptance": false,
  "summary": "A cache that supports scheduling the regeneration of cache items in the background ahead of their\nexpiry and manages this across a farm of web/service nodes minimising duplicated cache value \ngeneration work.\n\nRequires an external (network) cache, a fan out pub/sub message bus, and a distributed locking\nmechanism (all three of these can be provided by Redis or you might use alternatives for one or\nmore of these such as RabbitMq for messaging). Basic redis implementations of these are provided\nin RegenerativeCacheManager.Redis.",
  "title": "RegenerativeDistributedCache",
  "verbatimVersion": "1.0.21",
  "version": "1.0.21",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.08.28.15.48.09/regenerativedistributedcache.1.0.21.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.08.28.15.48.09/regenerativedistributedcache.1.0.21.json#RegenerativeDistributedCache.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 800,
      "fullName": "RegenerativeDistributedCache.nuspec",
      "length": 1842,
      "name": "RegenerativeDistributedCache.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.08.28.15.48.09/regenerativedistributedcache.1.0.21.json#lib/net461/RegenerativeDistributedCache.dll",
      "@type": "PackageEntry",
      "compressedLength": 14073,
      "fullName": "lib/net461/RegenerativeDistributedCache.dll",
      "length": 35328,
      "name": "RegenerativeDistributedCache.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.08.28.15.48.09/regenerativedistributedcache.1.0.21.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9462,
      "fullName": ".signature.p7s",
      "length": 9462,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "RegenerativeCacheManager",
    "CorrelatedAwaitManager",
    "MemoryFrontedExternalCache",
    "cache",
    "caching",
    "farm",
    "network",
    "distributed",
    "message",
    "messaging",
    "correlated",
    "correlate",
    "correlating",
    "background",
    "refresh",
    "regenerate",
    "regenerative",
    "redis",
    "rabbitmq",
    "pre-emptive"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}