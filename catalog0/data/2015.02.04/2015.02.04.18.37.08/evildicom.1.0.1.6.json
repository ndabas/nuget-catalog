{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.18.37.08/evildicom.1.0.1.6.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rex Cardan,Ph.D.",
  "catalog:commitId": "f6a9b426-6aa7-4b6e-b6fd-007c9c22c31b",
  "catalog:commitTimeStamp": "2015-02-04T18:37:08.7726165Z",
  "copyright": "Â© 2014 Rex Cardan, Ph.D.",
  "created": "2014-02-12T17:36:35.397Z",
  "description": "A simple to use C# library for reading and manipulating DICOM files. What sets it apart? Ease of use and good documentation. Check out evildicom.rexcardan.com to get started.",
  "iconUrl": "https://dl.dropboxusercontent.com/u/7527702/favicon.png",
  "id": "EvilDICOM",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/rexcardan/Evil-DICOM/blob/master/X11.LICENSE",
  "packageHash": "ggIaQyDotf1sjU0EmiHtk3xuHunRQcV9s+Pckk9d1+QH6xxCc8QHZH13wx7TfXtgEuNcK90wAHiLpMBPfbBo9A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 132897,
  "projectUrl": "http://evildicom.rexcardan.com",
  "published": "2014-02-12T17:36:35.397Z",
  "releaseNotes": "Fixed issue with reading large DICOM files.",
  "requireLicenseAcceptance": false,
  "summary": "The wickedest DICOM library in the world.",
  "title": "Evil DICOM",
  "version": "1.0.1.6",
  "tags": [
    "DICOM"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}