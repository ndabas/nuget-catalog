{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.16.59.49/system.linq.dynamic.library.1.1.10.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Nathan Arnott,Microsoft",
  "catalog:commitId": "133746df-b589-43fa-9576-634f4f914432",
  "catalog:commitTimeStamp": "2015-02-05T16:59:49.6565624Z",
  "created": "2014-06-25T22:35:48.163Z",
  "description": "This is a branch of the Microsoft Dyamic LINQ library. It allows developers to construct LINQ queries using string expressions instead of lambda expressions. \n\nThis package is more than a simple NuGet deployment of the Dynamic Linq Library. It is a living project, and contains XML documentation with examples.",
  "id": "System.Linq.Dynamic.Library",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/ms-pl",
  "packageHash": "zB3O7TGOcQ8bJSASqoLOeL3Ild1GNmJaWhBiTilPQ5VzkTlfZQuxjbwArtFcAsm6VZ1bmt1T8uzHCOnV4dDBLA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 52694,
  "projectUrl": "http://dynamiclinq.azurewebsites.net/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "1.1.10 Fixed namespaces that changed due to a recent breaking change with the FluentValidation library.\n\n1.1.9 Added In operator for both static inline lists, as well as a single parameter list (similiar to contains).\n\n1.1.8 Added support for the use of Single(), SingleOrDefault(), First(), FirstOrDefault(), OrderBy(), OrderByDescending(), and Contains() in string expressions.\n\n1.1.7 Added SelectMany Method.\n\nFixed bugs that only appear when using LINQ-to-Entities.\n\n1.1.6 Added ability to access members of dynamic objects in subsequent sequences.\n\nFixed multi-threading issue in conjuction with \"new()\" expressions.\n\n1.1.5 Added ability to select members of sub-tables.  Example: var dynamicObject = qry.Select(\"new (StringProperty, SubTable.Select(SubTableId) as SubTableIds)\") \n\n1.1.4 For .NET 4.0+, Select and GroupBy now take advantage of the dynamic keyword, allowing for prevervation of generic types when possible, and easier access to members of dynamic queries.\n\n1.1.3 Added several new Methods to support base IQueryable interface, including: Single(), SingleOrDefault(), First(), FirstOrDefault() and Reverse().  Also adds dynamics verisons of those methods for 4.0+ targets, including a AsEnumerableDynamic(). \n\nAdded GroupBy Method that Doesn't Require a resultSelector predicate.\n\nBug Fix when using Select Method to select multiple values.",
  "requireLicenseAcceptance": true,
  "summary": "Supports Framework 3.5 and 4.0+",
  "title": "Dynamic Linq Library",
  "version": "1.1.10",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.16.59.49/system.linq.dynamic.library.1.1.10.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.16.59.49/system.linq.dynamic.library.1.1.10.json#dependencygroup/fluentvalidationna",
          "@type": "PackageDependency",
          "id": "FluentValidationNA",
          "range": "[1.2.15, )"
        }
      ]
    }
  ],
  "tags": [
    "dynamic",
    "linq",
    "c#",
    "entities"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}