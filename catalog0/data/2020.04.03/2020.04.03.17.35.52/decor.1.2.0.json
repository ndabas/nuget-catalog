{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Laurynas Lazauskas",
  "catalog:commitId": "362414f7-8853-49ee-820a-d232274d1194",
  "catalog:commitTimeStamp": "2020-04-03T17:35:52.6292002Z",
  "copyright": "Copyright 2020",
  "created": "2020-01-10T20:42:36.66Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#deprecation",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "A simple way to decorate a class with additional functionality using attributes.",
  "id": "Decor",
  "isPrerelease": false,
  "lastEdited": "2020-04-03T17:35:47.613Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "1lEjyh+AQhUSEXsidtZQJfObwEKAS9nBzWd0jpNz7+alxUsrnP5YUo/ayDuAm1hQ2SoQz4oWmscT610lRRGbGA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 18580,
  "projectUrl": "https://github.com/lawrence-laz/Decor.NET",
  "published": "2020-01-10T20:42:36.66Z",
  "releaseNotes": "Added a CallInfo.SetState(object) and CallInfo.GetState<T>() methods to transfer state between OnBefore and OnAfter methods. Use this to transfer objects like Stopwatch between the methods instead of a class property, as property can be overwritten by another call.",
  "repository": "",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.2.0",
  "version": "1.2.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#dependencygroup/.netstandard2.0/castle.core",
          "@type": "PackageDependency",
          "id": "Castle.Core",
          "range": "[4.4.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#dependencygroup/.netstandard2.0/castle.core.asyncinterceptor",
          "@type": "PackageDependency",
          "id": "Castle.Core.AsyncInterceptor",
          "range": "[1.7.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#Decor.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 713,
      "fullName": "Decor.nuspec",
      "length": 1436,
      "name": "Decor.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#lib/netstandard2.0/Decor.dll",
      "@type": "PackageEntry",
      "compressedLength": 6640,
      "fullName": "lib/netstandard2.0/Decor.dll",
      "length": 14848,
      "name": "Decor.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.03.17.35.52/decor.1.2.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "decorator",
    "dynamic-proxy",
    "aspect-oriented-programming"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}