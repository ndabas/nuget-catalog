{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Riccardo Di Nuzzo",
  "catalog:commitId": "f4a73505-ecb6-45dd-ab2e-c1545b1a360d",
  "catalog:commitTimeStamp": "2016-07-29T13:46:37.2136131Z",
  "copyright": "Copyright 2016",
  "created": "2016-07-29T13:46:31.88Z",
  "description": "This library can be used to create a process that run interectively or as a service. It hosts Application Service modules that interact with GetEventStore. Usage: 1) Create a simple Console app. 2) From the Main function call 'ConfigureHostService.Configure();'",
  "id": "EventStore.Tools.ServiceHost",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/riccardone/EventStore.Tools.ServiceHost/blob/master/LICENSE",
  "listed": true,
  "packageHash": "jhcYTPR2pN1r+397k3XXET2CJ1xvIImObw7jz6uHcdHvWs1503jqGhH2lPE8vMkbZV6vcXVBANo6TQ5WRw9QUw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10419,
  "projectUrl": "https://github.com/riccardone/EventStore.Tools.ServiceHost",
  "published": "2016-07-29T13:46:31.88Z",
  "releaseNotes": "Initial release.",
  "requireLicenseAcceptance": false,
  "title": "EventStore.Tools.ServiceHost",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json#dependencygroup/eventstore.tools.pluginmodel",
          "@type": "PackageDependency",
          "id": "EventStore.Tools.PluginModel",
          "range": "[1.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json#dependencygroup/topshelf.log4net",
          "@type": "PackageDependency",
          "id": "Topshelf.Log4Net",
          "range": "[3.3.1, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json#EventStore.Tools.ServiceHost.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 590,
      "fullName": "EventStore.Tools.ServiceHost.nuspec",
      "length": 1257,
      "name": "EventStore.Tools.ServiceHost.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json#lib/net40/EventStore.Tools.ServiceHost.dll",
      "@type": "PackageEntry",
      "compressedLength": 7768,
      "fullName": "lib/net40/EventStore.Tools.ServiceHost.dll",
      "length": 17408,
      "name": "EventStore.Tools.ServiceHost.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.29.13.46.37/eventstore.tools.servicehost.1.0.0.json#content/plugins/readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 106,
      "fullName": "content/plugins/readme.txt",
      "length": 131,
      "name": "readme.txt"
    }
  ],
  "tags": [
    "GetEventStore",
    "Application",
    "Service",
    "Host",
    "ServiceHost"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}