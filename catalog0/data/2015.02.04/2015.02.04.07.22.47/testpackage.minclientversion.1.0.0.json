{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.07.22.47/testpackage.minclientversion.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "NuGetTestAccount",
  "catalog:commitId": "7d31d9a3-5885-4722-b298-9c23c2bad4c5",
  "catalog:commitTimeStamp": "2015-02-04T07:22:47.798081Z",
  "copyright": "Copyright 2013",
  "created": "2013-12-04T23:45:57.997Z",
  "description": "This is a test package created by the NuGet Team. Please disregard it. The package test this scenario: A dialog is prompted with a error message claiming min client version is not met and a Upgrade NuGet button.",
  "iconUrl": "http://ICON_URL_HERE_OR_DELETE_THIS_LINE",
  "id": "TestPackage.MinClientVersion",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://LICENSE_URL_HERE_OR_DELETE_THIS_LINE",
  "minClientVersion": "9.9999",
  "packageHash": "VLzkyoM3AlR+gwZSF5OQ/x2NFP13QVH5emz8N6VlYNytaDgf2e+gaMBnzs8QxgyLUXisyvfcULDM8BRO6IwGkA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 4717,
  "projectUrl": "http://PROJECT_URL_HERE_OR_DELETE_THIS_LINE",
  "published": "2013-12-04T23:45:57.997Z",
  "releaseNotes": "Summary of changes made in this release of the package.",
  "requireLicenseAcceptance": false,
  "title": "TestPackage.MinClientVersion",
  "version": "1.0.0",
  "tags": [
    "client",
    "automation"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}