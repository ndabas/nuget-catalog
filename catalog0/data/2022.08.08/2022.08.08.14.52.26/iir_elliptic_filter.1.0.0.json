{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.14.52.26/iir_elliptic_filter.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Alessandro Presacco",
  "catalog:commitId": "7e7f56fe-773b-46e5-b2f2-b9473859d263",
  "catalog:commitTimeStamp": "2022-08-08T14:52:26.4737562Z",
  "created": "2022-08-08T14:49:56.233Z",
  "description": "C# code to calculate the coefficients of the Elliptic filter.\n\nThis code calculates the coefficients of the Band-pass, Band-stop, Low-pass and High-pass Elliptic filters. It also filters the data, but no zero-phase delay is applied. The name space is: IIR_Elliptic_Filter. The code follows the same steps as in Matlab.\n\nEach filter function will return a 2 rows x N coefficients 2D vector, where Row 1 = Numerator and Row 2 = Denumerator. The method \"check_stability_iir\" can be used to check the stability of the filter.\n\nBand-pass: the function is \"double[][] Lp2bp (int, double, double, double, double)\". The first three arguments are the order of the filter, the decibels of peak - to - peak passband ripple and the decibels of stopband attenuation down from the peak passband value, respectively. The last two arguments are the two normalized cut-off frequencies (f1/NF, f2/NF), where NF is the Nyquist frequency. This means that the cutoff frequencies must be within the interval of (0,1). Please, keep in mind that if you enter order_filt = 2, the order of the filter will be 2 * order_filt = 4;\n\nBand-stop: the function is \" double[][] Lp2bs (int, double, double, double, double)\". The first three arguments are the order of the filter, the decibels of peak - to - peak passband ripple and the decibels of stopband attenuation down from the peak passband value, respectively. The last two arguments are the two normalized cut-off frequencies (f1/NF, f2/NF), where NF is the Nyquist frequency. This means that the cutoff frequencies must be within the interval of (0,1). Please, keep in mind that if you enter order_filt = 2, the order of the filter will be 2 * order_filt = 4;\n\nHigh-pass: the function is \" double[][] Lp2hp (int, double, double, double)\". The first three arguments are the order of the filter, the decibels of peak - to - peak passband ripple and the decibels of stopband attenuation down from the peak passband value, respectively. The last argument is the normalized cut-off frequency (f/NF), where NF is the Nyquist frequency. This means that the cutoff frequencies must be within the interval of (0,1);\n\nLow-pass: the function is \" double[][] Lp2lp (int, double, double, double)\". The first three arguments are the order of the filter, the decibels of peak - to - peak passband ripple and the decibels of stopband attenuation down from the peak passband value, respectively. The last argument is the normalized cut-off frequency (f/NF), where NF is the Nyquist frequency. This means that the cutoff frequencies must be within the interval of (0,1);\n\nCheck the stability of the filter: the method is \" bool Check_stability_iir (double[][] coeff_filt)\". The argument is the 2D array containing the filter coefficients. It returns \"true\" if the filter is stable, \"false\" if it is unstable.\n\nFilter the data: the method is \"double[] Filter_Data(double[][] coeff_filt, double[] pre_filt_signal)\". The two arguments are the filter coefficients and the signal to be filtered. It returns the filtered signal.\n\nIf you have any question and/or want to report bugs, please e-mail me (Ale) at: pressalex@hotmail.com",
  "id": "IIR_Elliptic_Filter",
  "isPrerelease": false,
  "lastEdited": "2022-08-08T14:51:55.017Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "FzWNTMD2vQlYtMOvbO3Md6pA20bt2heFhIwcwgjno7rDV414P3xldY3d2zfcb52BzXJ1Kvdc+QxhnFG9cFU2Dg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24557,
  "projectUrl": "https://github.com/InterTriplete2010/IIR_Elliptic_Filter_CS_Library",
  "published": "2022-08-08T14:49:56.233Z",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.14.52.26/iir_elliptic_filter.1.0.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.14.52.26/iir_elliptic_filter.1.0.0.json#dependencygroup/net6.0/mathnet.numerics",
          "@type": "PackageDependency",
          "id": "MathNet.Numerics",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.14.52.26/iir_elliptic_filter.1.0.0.json#IIR_Elliptic_Filter.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1235,
      "fullName": "IIR_Elliptic_Filter.nuspec",
      "length": 3997,
      "name": "IIR_Elliptic_Filter.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.14.52.26/iir_elliptic_filter.1.0.0.json#lib/net6.0/IIR_Elliptic_Filter.dll",
      "@type": "PackageEntry",
      "compressedLength": 11306,
      "fullName": "lib/net6.0/IIR_Elliptic_Filter.dll",
      "length": 33792,
      "name": "IIR_Elliptic_Filter.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.08.08.14.52.26/iir_elliptic_filter.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9470,
      "fullName": ".signature.p7s",
      "length": 9470,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}