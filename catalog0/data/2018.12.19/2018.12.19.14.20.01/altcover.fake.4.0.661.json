{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Steve Gilham",
  "catalog:commitId": "7eaebbfd-6256-4883-a1b2-83d90c1eb831",
  "catalog:commitTimeStamp": "2018-12-19T14:20:01.3866898Z",
  "copyright": "Copyright (c) 2010-2018 by Steve Gilham <SteveGilham@users.noreply.github.com>",
  "created": "2018-12-19T14:15:27.24Z",
  "description": "A cross-platform pre-instrumenting code coverage tool set for .net/.net core and Mono",
  "iconUrl": "https://cdn.jsdelivr.net/gh/SteveGilham/altcover/Build/AltCover_128.png",
  "id": "altcover.fake",
  "isPrerelease": false,
  "lastEdited": "2018-12-19T14:19:38.68Z",
  "licenseUrl": "https://cdn.jsdelivr.net/gh/SteveGilham/altcover/LICENSE",
  "listed": true,
  "packageHash": "acANEgSuL9OcK1s+tY3UyuQSvd9cEc80pAn78inE7HqSUvRfjkMNZA6fOmf26FLtZXXgnozOe/VN5v+UOrl1vw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 112171,
  "projectUrl": "https://github.com/SteveGilham/altcover/wiki",
  "published": "2018-12-19T14:15:27.24Z",
  "releaseNotes": "Q. Never mind the fluff -- how do I get started?\n\nA. Start with the Quick Start guide : https://github.com/SteveGilham/altcover/wiki/QuickStart-Guide\n\n# 4.0.661 (Doruka series release 11)\n* [BUGFIX] More forms of Issue #43 related to `yield return` synthetic methods.\n* [BUGFIX] Issue #45 by re-working the static linkage of the recorder assembly using `ILMerge /internalise` (rather than `--standalone`).\n* Updating consumed libraries and related changes.\n\n# 4.0.660 (Doruka series release 10)\n* [BUGFIX] Issue #43 Detect and skip simple recursive references when looking from a synthetic method to its containing method\n* [Enhancement] Follow the Fake build system to use [`BlackFox.CommandLine`](https://github.com/vbfox/FoxSharp/tree/master/src/BlackFox.CommandLine) facilities to compose command lines with proper re-escaping/enquoting of items read from the command line following a `--`\n* [BUGFIX] [API] A single string for a command line as in `AltCover.PrepareParams.CommandLine` would not work for anything more than a parameterless invocation.\n  * Add new field `Command` to the F# & C# parameter APIs and to the MSBuild task taking an array or sequence of strings\n  * Deprecate the `CommandLine` field (at compile time for C# API and MSBuild; warning at runtime for F#, because it's not possible to usefully mark a record field as [<Obsolete>])\n  * In the cases where the deprecated `CommandLine` field is used (non-empty with the preferred `.Command` field being empty), use the operating-system specific facilities in `BlackFox.CommandLine` to decompose the string so as to separate out the executable from its arguments)\n  * Expect a thorough and breaking rework in the next major version (5.0) release\n* [BUGFIX] If an error is raised during instrumentation, then a message is logged saying that the exception details have been written to a file in the nominated output directory (for `--inplace` operations, this is where the unaltered binaries are saved off to).  If this happens during `dotnet test`, the tidy-up action actually moves everything from that directory back into the original location and deletes the output directory, moving the log file too.  If the operation could be `dotnet test`, then amend the message appropriately to say that the file may have been moved.\n* Minor improvements to error handling in the Visualizer\n* Minor improvements to the fix for issue #41\n\n# 4.0.659 (Doruka series release 9)\n* [BUGFIX] Issue #42 Remove the need for process-exit handling to rely on non-event-handler threads being scheduled, so allowing the coverage data to be flushed to disk, even on low-spec platforms like Rapberry Pi\n* [BUGFIX] Issue #41 Reduce memory use in processing coverage data (runner mode/`dotnet test` scenarios)\n* [BUGFIX] Exclusion by attribute now works for property-level attributes, and will exclude the getter and/or setter (if not already excluded)\n* Various build process improvements/updates\n\n# 4.0.655 (Doruka series release 8)\n* [NEW PACKAGE] `altcover.fake` containing just helper types for FAKE scripts (v5.9.3 or later) : see Wiki entry [The `AltCover.Fake` package](https://github.com/SteveGilham/altcover/wiki/The-AltCover.Fake-package)\n  * Module `AltCover_Fake.DotNet.Testing.AltCover` containing an `AltCover` task for driving any command-line version of AltCover, along with helper types\n  * Module `AltCover_Fake.DotNet.DotNet` fluent extension methods for `Fake.DotNet.DotNet.TestOptions` using the `AltCover_Fake.DotNet...` helper types\n  * dog-food these features in the AltCover build process\n* [API] -- `AltCover.Api.CollectParams`\n  * Make `[<NoComparison>]` explicit\n  * Mark the `Default` member `[<Obsolete>]`; prefer new `Create()` instead\n* [API] -- `AltCover.Api.PrepareParams`\n  * Make `[<NoComparison>]` explicit\n  * All `string array` members have been relaxed to become `string seq`\n  * Mark the `Default` member `[<Obsolete>]`; prefer new `Create()` instead\n* [API] -- `AltCover.Fake.Api`\n  * `static member toolPath` for finding the location of an AltCover command-line executable in the same nuget package\n* [API] -- `AltCover.Fake.DotNet`\n  * Extend module with more `Fake.DotNet.DotNet.TestOptions` fluent extension methods `WithImportModule()` and `WithGetVersion()`\n\n# 4.0.653 (Doruka series release 7)\n* Properly resolve the strong-naming of the recorder assembly (a fix for Issue #38 closer to the original intent, compared with the \"just-make-it-work\" fix in 4.0.649)\n* Look for dependencies -- mostly ASP .net Core assemblies -- under `%ProgramFiles%\\dotnet\\shared` or `/usr/share/dotnet/shared` as well as under `%USERPROFILE%/.nuget/packages`\n* Look for dependencies under `%NUGET_PACKAGES%`\n* Extend the `-d` argument parser to expand environment variables and to handle relative paths\n\n# 4.0.649 (Doruka series release 6)\n* [BUGFIX] Issue #37 -- handle release builds of C# `return <ternary>;` expressions which don't look like ternaries in their IL.  Fix some corner cases of NPath complexity, branch exit counts and branch visit counts revealed by these cases.\n**NOTE** This form of ternary expression is the first case of a significant user defined branch within a sequence point; the `Compress-Branching -WithinSequencePoint` cmdlet at this release _will_ flatten these constructs.\n* [BUGFIX] Accept coverlet's idiosyncratic OpenCover-style output into cmdlet and Visualizer operations -- it uses Boolean.ToString() at points, which generates capitalized `True` and `False` attribute values, which are not valid XSD `boolean`s\n* [BUGFIX] Issue #38 -- in some .net framework cases, the strong-naming of the recorder assembly was broken; an approach that testing shows to be more reliable has been used.\n* [API] Update to FAKE 5.8.5 and validate support from 5.0 up to current\n\n# 4.0.644 (Doruka series release 5)\n* [API] - FAKE 5.7.2 support -- FAKE integration now spans from v5.0 up to current (and should be reasonably future-proofed), and is now also offered on an experimental basis for the .net framework\n* various refactorings and rearrangements, some on purely aesthetic grounds, some to improve the reliability of the travis-ci build, but with no functional impact\n\n# 4.0.630 (Doruka series release 4)\n* Add SourceLink to the build process (and the .nuspec)\n* [BUGFIX] Work around an apparent change in behaviour in mono 5.14 that loses some recorded coverage in runner mode; the problem does not affect .net framework or .net core, but does impact those travis build self-tests that aren't on .net core\n* [BUGFIX] Fix localization packaging in .netcore 2.1.4xx\n* [BUGFIX] Source scrolling in the global tool version of the visualizer\n* [API] Expose all cmdlet functionality as APIs and run the PowerShell cmdlets through the public API\n* [Visualizer] add the XML document as a root of the tree view, and the current source file (if any) to the application title bar; clear source pane when new coverage file is selected.\n\n# 4.0.618 (Doruka series release 3)\n* [NEW PACKAGE] `altcover.visualizer` containing .net core/GTK3 Visualizer global tool implementation\n  * .net core/GTK3 Visualizer also contained in the general-purpose and the API packages for direct `dotnet path/to/AltCover.Visualizer.dll` use\n  * needs GTK+3 installed separately -- for Windows, see e.g. https://github.com/GtkSharp/GtkSharp/wiki/Installing-Gtk-on-Windows\n* Improved error messages for the GTK# Visualizer\n* Improved font handling for the GTK# Visualizer (now it updates immediately)\n* [API] strong-name keys can now be meaningfully validated from .net core\n* Minor improvements to reliability on mono\n\n# 4.0.603 (Doruka series release 2)\n* [BUGFIX] PowerShell and GetVersion tasks might produce empty output in 4.0.600 : now fixed\n* [BUGFIX] pack the pwsh support into the API module (omission in 4.0.600)\n* [API] Defaults provided for CSApi types `CollectArgs` and `PrepareArgs` equivalent to the F# defaults\n* [API] `PrepareParams.Vaildate : unit -> string array`; and `CollectParams.Validate : bool -> string array` to do read-only parameter validation\n* [API] The equivalent `public string[] PrepareArgs()` and `public string[] CollectArgs(bool afterPreparation)` for the CSApi types\n\n# 4.0.600 (Doruka series release 1)\n* [NEW PACKAGE] AltCover.Api exposing the shared API used by both the MSBuild tasks and the PowerShell `Invoke-AltCover` cmdlet, in native F# and with a C#-friendly adapter layer\n  * Also included, integrations with Fake ( >= 5.2.0) and Cake ( >= 0.28.0), each in their separate assembly, to avoid any need to drag in unwanted extra dependencies\n  * The PowerShell module and the MSBuild tasks\n  * And the `dotnet test` integration\n* [ALL PACKAGES] `Compress-Branching` cmdlet to transform OpenCover's liberal idea of significant branches towards AltCover's more restricted approach -- chose either or both of `-SameSpan` to unify branches that go from the same start, and take the same trajectory to the same end (OpenCover issue #786 being one instance of this) and `-WithinSequencePoint` to remove branches interior to a statement (compiler generated things like stashing of lambdas, the hidden conditional `Dispose()` after a `using`, or inside F# inlines -- OpenCover issues #657, #807 being instances of this)\n* [BUGFIX] Issue # 31 -- In the case of `dotnet test` with multiple target frameworks make the coverage file `name.extension` go to `name.framework.extension`, be it supplied or be it defaulted.\n\nFor previous releases (3.5.x and earlier) [go here](https://github.com/SteveGilham/altcover/blob/master/ReleaseNotes%20-%20Previously.md)",
  "repository": "",
  "requireLicenseAcceptance": false,
  "summary": "",
  "title": "AltCover (FAKE task helpers)",
  "verbatimVersion": "4.0.661",
  "version": "4.0.661",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#altcover.fake.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4555,
      "fullName": "altcover.fake.nuspec",
      "length": 10813,
      "name": "altcover.fake.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.deps.json",
      "@type": "PackageEntry",
      "compressedLength": 12754,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.deps.json",
      "length": 80871,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.deps.json"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "@type": "PackageEntry",
      "compressedLength": 18326,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "length": 48128,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.pdb",
      "@type": "PackageEntry",
      "compressedLength": 2614,
      "fullName": "lib/netstandard2.0/AltCover.Fake.DotNet.Testing.AltCover.pdb",
      "length": 6916,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#lib/netstandard2.0/BlackFox.CommandLine.dll",
      "@type": "PackageEntry",
      "compressedLength": 21353,
      "fullName": "lib/netstandard2.0/BlackFox.CommandLine.dll",
      "length": 65024,
      "name": "BlackFox.CommandLine.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#lib/net45/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "@type": "PackageEntry",
      "compressedLength": 18664,
      "fullName": "lib/net45/AltCover.Fake.DotNet.Testing.AltCover.dll",
      "length": 48640,
      "name": "AltCover.Fake.DotNet.Testing.AltCover.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#lib/net45/BlackFox.CommandLine.dll",
      "@type": "PackageEntry",
      "compressedLength": 21721,
      "fullName": "lib/net45/BlackFox.CommandLine.dll",
      "length": 64000,
      "name": "BlackFox.CommandLine.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.19.14.20.01/altcover.fake.4.0.661.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "codecoverage",
    ".net",
    "Mono",
    ".netcore",
    "cross-platform",
    "FAKE",
    "build"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}