{
  "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "阿吉",
  "catalog:commitId": "b921e7a1-e26f-4d51-9e3f-f2f8e20e142c",
  "catalog:commitTimeStamp": "2021-04-15T07:43:04.0121778Z",
  "copyright": "Copyright ©  2021",
  "created": "2021-04-15T07:39:59.163Z",
  "description": "封装微信相关接口,目前只有普通商户支付和服务商支付接口V2版",
  "id": "YaseiAkira.WX.NetCore",
  "isPrerelease": false,
  "lastEdited": "2021-04-15T07:42:32.343Z",
  "listed": true,
  "packageHash": "j7P7Yinf7eTwfw8Yh28Lile2Wkxmrv79frHom6l4j6UEVn56omELC9wI4DH8pxGjPVQy1eIkLi+O1JoiRIkTDw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23535,
  "projectUrl": "https://www.yaseiakira.com/",
  "published": "2021-04-15T07:39:59.163Z",
  "releaseNotes": "1.封装了部分微信接口\n    2.目前只有普通商户支付和服务商接口\n    3.后续接口陆续会新增\n\n    使用\n    1.统一下单,普通商户版\n    var order = new Unifiedorder();\n        /// 参数 name=\"appid\">\n        /// 参数 name=\"mch_id\">\n        /// 参数 name=\"mch_secret\">\n        /// 参数 name=\"out_trade_no\">\n        /// 参数 name=\"total_fee\">只需传递费用,如 0.5, 转换成 分 已在内部处理\n        /// 参数 name=\"ip\">\n        /// 参数 name=\"body\">已做超长处理\n        /// 参数 name=\"notify_url\">\n        /// 参数 name=\"product_id\">\n        /// 参数 name=\"openid\">\n        /// 参数 name=\"detail\">已做超长处理\n        /// 参数 name=\"trade_type\">\n        /// 参数 name=\"others\">其他符合微信支付对应接口的字段信息 如fee_type,goods_tag 等\n        /// 返回值说明\n        /// Success : 是否支付成功\n        /// Message: 支付成功没有数据, 支付失败则是失败信息\n        /// Data:\n        /// 如果是 JSAPI/APP/小程序支付:Data 为二次签名的数据, 可以直接返回给前端调起支付;\n        /// 如果是 H5支付:Data 为 微信返回的源数据, Data[\"mweb_url\"] 返回给前端跳转支付;\n        /// 如果是 NATIVE支付: Data 为 微信返回源数据 , Data[\"code_url\"] 用来生成支付二维码, Data[\"prepay_id\"] 自行处理\n        \n    var result = await order.PayAsync(string appid,\n             mch_id,  \n             mch_secret,  \n             out_trade_no,\n             total_fee, \n             ip,\n             body,  \n             notify_url,\n             product_id ,\n             openid ,\n             detail , \n             trade_type ,\n             others );\n\n    2.付款码支付,普通商户版\n    var microPay = new MicroPay();\n    \n        /// 参数 name=\"appid\">\n        /// 参数 name=\"mch_id\">\n        /// 参数 name=\"mch_secret\">\n        /// 参数 name=\"out_trade_no\">\n        /// 参数 name=\"total_fee\">只需传递费用,如 0.5, 转换成 分 已在内部处理\n        /// 参数 name=\"ip\">\n        /// 参数 name=\"auth_code\">\n        /// 参数 name=\"body\">已做超长处理\n        /// 参数 name=\"detail\">已做超长处理\n        /// 参数 name=\"others\">其他符合微信支付对应接口的字段信息 如fee_type,goods_tag 等\n        /// 返回值说明\n        /// Success : 是否支付成功;\n        /// Message: 支付成功没有数据, 支付失败则是失败信息;\n        /// Data : 为微信支付返回的源响应数据\n        \n    var result = microPay.PayAsync(appid,\n            mch_id, \n            mch_secret, \n            out_trade_no,\n            total_fee, \n            ip,\n            auth_code,\n            body,\n            detail,\n            others);\n\n    3.统一下单,服务商版\n    var order = new SPUnifiedorder();\n        \n        /// appid\"\n        /// mch_id\"\n        /// mch_secret\"\n        /// sub_appid\">微信分配的子商户公众账号ID\n        /// sub_mch_id\">微信支付分配的子商户号\n        /// out_trade_no\"\n        /// total_fee\">只需传递费用,如 0.5, 转换成 分 已在内部处理\n        /// ip\"\n        /// body\">已做超长处理\n        /// notify_url\"\n        /// product_id\"\n        /// openid\"\n        /// sub_openid\">trade_type=JSAPI，此参数必传，用户在子商户appid下的唯一标识。openid和sub_openid可以选传其中之一\n        /// detail\">已做超长处理\n        /// trade_type\"\n        /// others\">其他符合微信支付对应接口的字段信息 如fee_type,goods_tag 等\n\n        /// 返回说明\n        /// Success : 是否支付成功\n        /// Message: 支付成功没有数据, 支付失败则是失败信息\n        /// Data:\n        /// 如果是 JSAPI/APP/小程序支付:Data 为二次签名的数据, 可以直接返回给前端调起支付;\n        /// 如果是 H5支付:Data 为 微信返回的源数据, Data[\"mweb_url\"] 返回给前端跳转支付;\n        /// 如果是 NATIVE支付: Data 为 微信返回源数据 , Data[\"code_url\"] 用来生成支付二维码, Data[\"prepay_id\"] 自行处理\n        \n    var result = await order.PayAsync(appid,\n             mch_id, mch_secret,\n             sub_appid,\n             sub_mch_id,\n             out_trade_no,\n             total_fee,  ip,\n             body,notify_url,\n             product_id ,\n             openid,\n             sub_openid,\n             detail,trade_type,\n            others);\n\n    4.付款码支付,服务商版\n    var microPay = new SPMicroPay();\n    \n        /// appid\n        /// mch_id\n        /// mch_secret\n        /// sub_appid\">微信分配的子商户公众账号ID\n        /// sub_mch_id\">微信支付分配的子商户号 \n        /// out_trade_no\n        /// total_fee\">只需传递费用,如 0.5, 转换成 分 已在内部处理\n        /// ip\n        /// auth_code\n        /// body\">已做超长处理\n        /// detail\">已做超长处理\n        /// others\">其他符合微信支付对应接口的字段信息 如fee_type,goods_tag 等\n\n        /// 返回说明\n        /// Success : 是否支付成功;\n        /// Message: 支付成功没有数据, 支付失败则是失败信息;\n        /// Data : 为微信支付返回的源响应数据\n        \n    var result = microPay.PayAsync(appid,\n             mch_id, \n             mch_secret,\n             sub_appid,\n             sub_mch_id,\n             out_trade_no,\n             total_fee, \n             ip, \n             auth_code,\n             body, detail, others);\n\n    异步通知验签\n    var signer = new UnifiedorderCore();\n    \n    /// paramsList\">带sign的所有通知参数字典\n    /// mchSecret\">商户密钥\n    signer.VerifyNotify(paramsList,mchSecret);",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.4.2",
  "version": "1.0.4.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json#dependencygroup/.netcoreapp3.1/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json#dependencygroup/.netcoreapp3.1/yaseiakira.tools.netcore",
          "@type": "PackageDependency",
          "id": "YaseiAkira.Tools.NetCore",
          "range": "[3.0.6, )"
        }
      ],
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json#YaseiAkira.WX.NetCore.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1756,
      "fullName": "YaseiAkira.WX.NetCore.nuspec",
      "length": 6866,
      "name": "YaseiAkira.WX.NetCore.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json#lib/netcoreapp3.1/YaseiAkira.WX.NetCore.dll",
      "@type": "PackageEntry",
      "compressedLength": 10440,
      "fullName": "lib/netcoreapp3.1/YaseiAkira.WX.NetCore.dll",
      "length": 22528,
      "name": "YaseiAkira.WX.NetCore.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2021.04.15.07.43.04/yaseiakira.wx.netcore.1.0.4.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}