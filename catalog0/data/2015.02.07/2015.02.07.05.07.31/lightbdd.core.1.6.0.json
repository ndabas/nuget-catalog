{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.05.07.31/lightbdd.core.1.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Wojciech Kotlarski",
  "catalog:commitId": "3bddcb07-5875-44bb-baf9-4ac3276fd5ae",
  "catalog:commitTimeStamp": "2015-02-07T05:07:31.7113215Z",
  "copyright": "Copyright Â© Wojciech Kotlarski 2013-2014",
  "created": "2014-11-27T21:27:04.707Z",
  "description": "Allows creating acceptance tests in developer friendly environment.\n\nFeatures:\n* Native support for refactoring, code analysis (like finding unused methods), test running and all features that Visual Studio / Intellisense / Resharper offer during code development,\n* Easy to read scenario definitions,\n* Scenario steps execution tracking, usable during longer test execution,\n* Scenario steps execution time measurement,\n* Possibility to run steps with dedicated shared context, allowing to run tests safely in parallel,\n* Possibility to run parametrized steps with smart rules of inserting argument values to formatted step name,\n* Feature result summary available in XML, HTML or Plain text format,\n* Possibility to configure multiple result summaries in app.config file,\n* VS Project Item templates for feature test files",
  "id": "LightBDD.Core",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/BSD-2-Clause",
  "packageHash": "zVh8NLAshQoCw2yzjJH1qlRaJWPX8jjMSQKHIVVWWPTxwktOjbcSO4ZgcoBI6PFhPJWnthSnJMDdwl6xuM5Tgw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 53351,
  "projectUrl": "https://github.com/Suremaker/LightBDD",
  "published": "2014-11-27T21:27:04.707Z",
  "releaseNotes": "Summary:\n+ major improvements to Html features report summary (HtmlResultFormatter),\n+ added ability to bypass step execution without stopping scenario execution,\n+ added ability to specify custom formatting rules for step parameters,\n+ added ability to annotate scenarios with categories,\n+ many smaller improvements.\n\nDetails:\n+ added ability to bypass step execution without stopping scenario execution (StepExecution.Bypass() method and ResultStatus.Bypassed enum value)\n+ added ability to specify custom formatting rules for step parameters (Format/ParameterFormatter Attributes)\n+ added ability to annotate scenarios with categories (ScenarioCategoryAttribute and implementation specific attributes)\n+ changed Scenario level StatusDetails property to aggregate all step status details\n+ changed FeatureCoordinator to allow only one Finished() method call and report it's finalizer execution time and failures with System.Diagnostics.Trace()\n+ enhanced parameterized steps to always capture constant parameter values, even if step has not been executed\n+ enhanced IStepResult with StepName property providing detailed information on step name like base format, parameter list or step type (added IStepName, IStepNameDecorator, StepNameDecorators types)\n+ HtmlResultFormatter: reorganized HTML output to support longer text in features and scenarios\n+ HtmlResultFormatter: enhanced report to highlight step type and parameters\n+ HtmlResultFormatter: added option to expand/collapse all features and/or scenarios\n+ HtmlResultFormatter: added option to filter scenarios by category\n+ HtmlResultFormatter: made Feature Summary table columns sortable\n+ HtmlResultFormatter: added shareable link for speficic feature, scenario, Feature Details section and whole document, all preserving current filters selection\n+ HtmlResultFormatter: added Average Duration column to Feature Summary block\n+ HtmlResultFormatter: changed expand-collapse symbols to standard ones, to display them properly on android browsers\n+ XmlResultFormatter: added step level StatusDetails element\n+ PlainTextFormatter: labels are now printed after feature/scenario name, like in HtmlResultFormatter\n+ all formatters: added information about scenario categories\n+ TestMetadataProvider: added GetStepTypeName method\n+ TestMetadataProvider: removed stepType from GetStepNameFormat signature, obsoleted version with stepType\n+ added DebuggerStepThrough attribute to implementation specific metadata provider\n+ exposed TimeFormatter extensions for pretty time span formatting",
  "requireLicenseAcceptance": false,
  "summary": "Lightweight Behavior Driven Development Test Framework Core",
  "title": "LightBDD.Core",
  "version": "1.6.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.05.07.31/lightbdd.core.1.6.0.json#dependencygroup",
      "@type": "PackageDependencyGroup"
    }
  ],
  "tags": [
    "bdd",
    "tdd",
    "testing",
    "framework",
    "behavior",
    "driven",
    "development",
    "acceptance",
    "criteria"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}