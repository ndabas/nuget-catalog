{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.16.38.51/dynamicxaml.0.6.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Frank Quednau",
  "catalog:commitId": "eeed0cf1-6e85-4746-8087-2825e43f147d",
  "catalog:commitTimeStamp": "2015-02-01T16:38:51.7399276Z",
  "created": "2012-03-03T20:24:42.787Z",
  "description": "Fluent dynamic API for creating XAML Object trees, inspired by the fubu project HtmlTags",
  "iconUrl": "http://realfiction.net/files/dynamicxaml.png",
  "id": "DynamicXaml",
  "isPrerelease": false,
  "language": "en-us",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/apache2.0",
  "packageHash": "EVbq4IrDehujdEUfdmQLtntHbMiDKQG8zPTgWKkENQkxZ1rSN8hWqQ81nJgMue/ME0XbY9VxBB6fsAEMfbjgpw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 47127,
  "projectUrl": "https://github.com/flq/XamlTags",
  "published": "2012-03-03T20:24:42.787Z",
  "releaseNotes": "Added code to extract all bindings from a dependency object",
  "requireLicenseAcceptance": false,
  "version": "0.6.5",
  "tags": [
    "xaml",
    "wpf",
    ".net40",
    "dynamic"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}