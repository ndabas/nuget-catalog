{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "SIL International",
  "catalog:commitId": "eef2c8ea-c453-4896-97eb-b021179bb59a",
  "catalog:commitTimeStamp": "2024-08-19T13:04:39.4285107Z",
  "copyright": "Copyright Â© 2010-2024 SIL International",
  "created": "2024-08-19T13:01:39.76Z",
  "description": "SIL.Core provides general utilities for language software. It is the base library for all Palaso libraries.",
  "id": "SIL.Core",
  "isPrerelease": true,
  "lastEdited": "2024-08-19T13:04:15.317Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "QVlySs1HiB6G3YB/YMAp++bS4VtBrIsjRQ2jUQcOudByJJVYSCGK7P0JTL6LAfkm6P+Hqe8vz2is3pMs6vLYJw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 306924,
  "projectUrl": "https://github.com/sillsdev/libpalaso",
  "published": "2024-08-19T13:01:39.76Z",
  "releaseNotes": "Changes since version 14.1.1\n\nAdded:\n- [SIL.Core] Added macOS support for `GlobalMutex`\n- [SIL.Archiving] Added ArchivingDlgViewModel.Standard and ArchivingDlgViewModel.StringId emumerations.\n- [SIL.Archiving] Added public delegate ArchivingDlgViewModel.ExceptionHandler and event ArchivingDlgViewModel.OnExceptionDuringLaunch.\n- [SIL.Archiving] Added IArchivingProgressDisplay interface.\n- [SIL.Archiving] Added overload of ArchivingDlgViewModel.DisplayMessage to take format parameters.\n- [SIL.Archiving] Added public overload of ArchivingDlgViewModel.LaunchArchivingProgram.\n- [SIL.Archiving] Added protected methods to ArchivingDlgViewModel: ReportMajorProgressPoint, ReportProgress, CleanUp\n- [SIL.Windows.Forms.Archiving] Added protected virtual properties ArchiveTypeForTitleBar and InformativeText to ArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added public virtual method GetMessage to ArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added public virtual property ArchiveTypeName to ArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added protected methods DisplayMessage and Initialize (async) to ArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added protected virtual method PackageCreationComplete to ArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added (public) override of property ArchiveTypeName to IMDIArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added (protected) override of property InformativeText to IMDIArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added (protected) override of method PackageCreationComplete to IMDIArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added (public) override of method GetMessage to IMDIArchivingDlg.\n- [SIL.Windows.Forms.Archiving] Added public extensions class LinkLabelExtensions with some methods that were formerly in Extensions class (now in SIL.Archiving).\n- [SIL.Archiving] Added public property isValid to IMDIPackage.\n- [SIL.Archiving] Added public event InitializationFailed to IMDIArchivingDlgViewModel.\n\nChanged:\n- [SIL.Windows.Forms.Archiving] Split SIL.Archiving, moving Winforms portions (including dependency on L10nSharp) to SIL.Windows.Forms.Archiving.\n- [SIL.Archiving] Required ArchivingDlgViewModel implementations to implement IDisposable.\n- [SIL.Archiving] Made protected members in ArchivingDlgViewModel private, adding protected accessors as needed.\n- [SIL.Archiving] In ArchivingDlgViewModel, renamed DisplayMessageEventHandler to MessageEventHandler, OnDisplayMessage to OnReportMessage, DisplayErrorEventHandler to ErrorEventHandler, and OnDisplayError to OnError.\n- [SIL.Archiving] Changed signature of ArchivingDlgViewModel.OverrideDisplayInitialSummary to include a CancellationToken.\n- [SIL.Archiving] Made ArchivingDlgViewModel.ArchiveType property public and changed it from a string to Standard (new enum).\n- [SIL.Archiving] Changed signature of setFilesToArchive delegate in ArchivingDlgViewModel's protected constructor.\n- [SIL.Archiving] Changed return type of ArchivingDlgViewModel.Initialize (to make it async) and added two parameters.\n- [SIL.Archiving] Changed ArchivingDlgViewModel.DisplayMessage from public to protected.\n- [SIL.Archiving] Changed the signature of protected methods in ArchivingDlgViewModel: LaunchArchivingProgram, GetFileExcludedMsg.\n- [SIL.Archiving] Changed the signature of the public method ArchivingDlgViewModel.CreatePackage.\n- [SIL.Archiving] Changed underlying type of public enums VernacularMaterialsType and SilDomain from ulong to long.\n- [SIL.Archiving] Replaced protected _keys field (now private) in abstract class ArchivingPackage with protected accessor property Keys.\n- [SIL.Archiving] IMDIArchivingDlgViewModel (subclass of ArchivingDlgViewModel) affected by many of the changes to the base class.\n- [SIL.Archiving] IMDIArchivingDlgViewModel and RampArchivingDlgViewModel (subclasses of ArchivingDlgViewModel) affected by many of the changes to the base class.\n- [SIL.Archiving] IMDIArchivingDlgViewModel constructor signature changed.\n- [SIL.Archiving] RampArchivingDlgViewModel constructor signature changed.\n- [SIL.Windows.Forms.Archiving] Made ArchivingDlg implement IArchivingProgressDisplay.\n- [SIL.Windows.Forms.Archiving] ArchivingDlg constructor signature changed: removed localizationManagerId; added optional archiveInfoHyperlinkText; made some other parameters optional.\n- [SIL.Windows.Forms.Archiving] IMDIArchivingDlg constructor signature changed: added appSpecificArchivalProcessInfo.\n- [SIL.Windows.Forms] Split ClearShare code, moving non-Winforms portions to SIL.Core (SIL.Core.ClearShare namespace)\n- [SIL.Core] Added optional parameter to OlacSystem.GetRoles to allow caller to provide its own XML with role definitions.\n- [SIL.Windows.Forms] Split License into a base class called License and a derived LicenseWithLogo, so that License could be in SIL.Core.\n- [SIL.Archiving] Changed IArchivingSession.Files (and Session.Files) into an IReadonlyList.\n- [SIL.Archiving] Made IMDIPackage.CreateIMDIPackage asynchronous, changing its signature to take a CancellationToken parameter and return Task<bool>.\n- [SIL.Archiving] Made MetaTranscript.WriteCorpusImdiFile asynchronous, changing its signature to return Task<bool>.\n\nFixed:\n- [SIL.Archiving] Fixed typo in RampArchivingDlgViewModel for Ethnomusicology performance collection.\n- [SIL.Archiving] Changed URLs that used http: to https: in resource EmptyMets.xml.\n\nRemoved:\n- [SIL.Windows.Forms] Removed previously deprecated CreativeCommonsLicense.IntergovernmentalOriganizationQualifier\n- [SIL.Archiving] Removed abstract properties from ArchivingDlgViewModel: InformativeText and ArchiveInfoHyperlinkText.\n- [SIL.Archiving] Removed public method ArchivingDlgViewModel.Cancel. (Now handled via cancellation tokens.)\n- [SIL.Archiving] Removed protected methods from ArchivingDlgViewModel: PreparingFilesMsg, GetSavingFilesMsg\n- [SIL.Archiving] Removed protected fields (renamed and made private) from ArchivingLanguage: _iso3Code, _englishName\n- [SIL.Archiving] Removed protected fields (made private) from ArchivingFile: _fullName, _fileName, _fileSize, _mimeType, _descriptions, _accessProtocol\n- [SIL.Archiving] Removed public methods CreateMetsFile and CreateRampPackage from RampArchivingDlgViewModel (made internal).\n- [SIL.Archiving] Removed ArchivingPackage and AddSession from ArchivingDlgViewModel and RampArchivingDlgViewModel (where they threw NotImplementedExceptions)\n\nFixed:\n- [SIL.Window.Forms] When choosing a file in the ImageToolbox.AcquireImageControl, a FileOk handler is simulated that verifies the selected file passes the given filter.  Users can defeat the filter mechanism by pasting or typing the file name.  While the returned filename does not pass the filter, the dialog is reopened until the user either chooses a proper filename or cancels the dialog.  The native FileOk handler can prevent the dialog from closing: we can't achieve that.  (See BL-13552.)\n\nSee full changelog at https://github.com/sillsdev/libpalaso/blob/master/CHANGELOG.md",
  "repository": "",
  "verbatimVersion": "15.0.0-beta0051",
  "version": "15.0.0-beta0051",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netframework4.6.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netframework4.6.1/microsoft.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CSharp",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netframework4.6.1/mono.unix",
          "@type": "PackageDependency",
          "id": "Mono.Unix",
          "range": "[7.1.0-final.1.21458.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netframework4.6.1/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netframework4.6.1/system.net.http",
          "@type": "PackageDependency",
          "id": "System.Net.Http",
          "range": "[4.3.4, )"
        }
      ],
      "targetFramework": ".NETFramework4.6.1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netstandard2.0/microsoft.csharp",
          "@type": "PackageDependency",
          "id": "Microsoft.CSharp",
          "range": "[4.7.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netstandard2.0/mono.unix",
          "@type": "PackageDependency",
          "id": "Mono.Unix",
          "range": "[7.1.0-final.1.21458.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netstandard2.0/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[13.0.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#dependencygroup/.netstandard2.0/system.net.http",
          "@type": "PackageDependency",
          "id": "System.Net.Http",
          "range": "[4.3.4, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#SIL.Core.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2740,
      "fullName": "SIL.Core.nuspec",
      "length": 8774,
      "name": "SIL.Core.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#lib/net461/SIL.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 144990,
      "fullName": "lib/net461/SIL.Core.dll",
      "length": 337920,
      "name": "SIL.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#lib/netstandard2.0/SIL.Core.dll",
      "@type": "PackageEntry",
      "compressedLength": 144383,
      "fullName": "lib/netstandard2.0/SIL.Core.dll",
      "length": 336896,
      "name": "SIL.Core.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.08.19.13.04.39/sil.core.15.0.0-beta0051.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12928,
      "fullName": ".signature.p7s",
      "length": 12928,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}