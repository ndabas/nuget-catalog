{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.24.05.43.30/pgextension_x86.0.2.4.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "PGCafe",
  "catalog:commitId": "75bc118e-2675-4abf-9a86-ff4d2d877c4d",
  "catalog:commitTimeStamp": "2016-11-24T05:43:30.604688Z",
  "copyright": "PGCafe",
  "created": "2016-11-24T05:43:18.13Z",
  "description": "Some Extension Class to use.\n\nif has bug, please e-mail to me, i'll fix them as soon as i can.\n\na15752468@gmail.com",
  "id": "PGExtension_x86",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "listed": true,
  "packageHash": "pZlXNEUxlS9N3vpZvfWzfJn1chMaTb/+/AfTpGtsoaFZVvc735EzNd3sEnDDZzrdIDCAFlC2vnMCu7fbwExB9A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 74950,
  "published": "2016-11-24T05:43:18.13Z",
  "releaseNotes": "2016/10/24\n* Fix bugs and Add methods.\n\n2016/06/23\n* Fix Substring bug.\n* Remove InitailWhenUse class ( .Net has System.Lazy<T> to instead it )\n* Add IEnumrable Extension : WithIndex() - Add index to each item in list. So u can get index in foreach loop.\n\n2016/03/14\n* Remove ToInt32(), ToDouble()...\n* Add ToType<T> instead\n* Add many..\n\n2015/12/27 - Add Enum extension method \nDescription : Get Attribute [Description( \"Des\" )] with enum, if no description, return ToString().\n\n2015/12/27 - Add Char extension method\nIsIn : Check the char is in the list of char, this just call linq's extension method => .Contains( ... ).\nCopy some Char static method to extension method : IsControl, IsDigit, IsLetter, IsLetterOrDigit, IsLower, IsNumber, IsPunctuation, IsSeparator, IsSymbol, IsUpper, IsWhiteSpace, ToLower, ToUpper\n\n\n2015/12/26 - Add DateTime extension method\nSetTime : replace datetime's year, month, day to new value.\nGetTime : get time part of datetime.\nSetDate : replace datetime's year, month, day to new value.\n\n\n\n2015/10/25 - Add String.IsIn and String.StartWith Function\nString.IsIn : Check the string is in list or not.\nString.StartWith : Check is the string start with another string.( with multiple string to compare )\n\n\n2015/10/07 - Remove PGFunction, PGExControl, PGExObject ( independent they each )\n\n2015/07/16 - Add DateTime Extension method\nNextDay - get next day of week base on this day.\nPreDay - get pre day of week base on this day.\n\n\n\n2015/07/08 - Add TryCatchEX in PGFunction\nAdd Try method in TryCatchEX - this method proviod you to omit not enter key word try-catch.\n\n\n\n2015/07/08 - Add PGFunction\nPGFunction package static method of some general use method.\nThreadEX - now have StartNewThread method, use to run a method with thread and return the thread.\nSerializationEX - now have BinarySerialize and BinaryDeSerialize to save/load any object that can be serialize to file.\n\n\n\n2015/06/12 - Add Extension\nToDouble, ToFloat\n\n\n2015/05/31 - Fix Item PGExObject - ClipboardWatcher\n    now can use static method to add watch event or create an ClipboardWatcher Control to handle ClipboardChangedEvent.\n\n\n2015/05/29 - Release PGExControl, PGExObject, PGExtension\n\n\nWhat's in PGExControl?\nExTextBox : TextBox with TextHint and Suffix property.\n\n\nWhat's in PGExObject?\nClipboard Watcher - to Watcher with Windows API.\n\n\nWhat's in PGExtension?\nExtension of String : IsInt32(), ToInt32().",
  "requireLicenseAcceptance": false,
  "title": "PGCafe's Extension Class",
  "verbatimVersion": "0.2.4",
  "version": "0.2.4",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.24.05.43.30/pgextension_x86.0.2.4.json#PGExtension_x86.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1410,
      "fullName": "PGExtension_x86.nuspec",
      "length": 3071,
      "name": "PGExtension_x86.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.24.05.43.30/pgextension_x86.0.2.4.json#lib/net40/PGExtension.dll",
      "@type": "PackageEntry",
      "compressedLength": 49857,
      "fullName": "lib/net40/PGExtension.dll",
      "length": 126976,
      "name": "PGExtension.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.11.24.05.43.30/pgextension_x86.0.2.4.json#lib/net40/PGExtension.xml",
      "@type": "PackageEntry",
      "compressedLength": 21017,
      "fullName": "lib/net40/PGExtension.xml",
      "length": 340970,
      "name": "PGExtension.xml"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}