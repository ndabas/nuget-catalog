{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.08.01.32.44/ringbuffer.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "zenith",
  "catalog:commitId": "956733d8-203f-4a21-95d7-777e8b1bb4c2",
  "catalog:commitTimeStamp": "2015-02-08T01:32:44.1802206Z",
  "copyright": "Matthew Ducker 2014",
  "created": "2014-09-04T14:44:31.177Z",
  "description": "Classic ringbuffer (with optional .NET BCL System.IO.Stream interface), in C#. Packaged as a portable class library (PCL).\n\nAsynchronous I/O from streams is supported to boost performance.\n\nSupports concurrent reading and writing, and overwriting (optional).",
  "id": "RingBuffer",
  "isPrerelease": false,
  "lastEdited": "2014-09-04T14:48:36.743Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.html",
  "packageHash": "16oq611ORQshMIa9pbyzM4aH9F3LO4rzJtJ+HoSerblDUEwFeMhNQ2eHpt7PWMMgZv0bx9rxIGtY9xYwN/Nqag==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 15850,
  "projectUrl": "http://github.com/zenith-nz/RingBuffer",
  "published": "2014-09-04T14:44:31.177Z",
  "releaseNotes": "Concurrent I/O added.",
  "requireLicenseAcceptance": false,
  "summary": "High performance classic ring/circular buffer for byte data.",
  "title": "RingBuffer",
  "version": "1.4.0",
  "tags": [
    "ring",
    "buffer",
    "circular",
    "ringbuffer",
    "performance"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}