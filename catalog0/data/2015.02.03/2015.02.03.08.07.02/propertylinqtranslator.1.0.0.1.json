{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.08.07.02/propertylinqtranslator.1.0.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Thiago Romam",
  "catalog:commitId": "a304795f-9822-4bd5-bd2e-81f1efba3974",
  "catalog:commitTimeStamp": "2015-02-03T08:07:02.8216866Z",
  "copyright": "Copyright 2013",
  "created": "2013-04-25T14:24:50.54Z",
  "description": "It helps you mapping your properties to use with a LINQ provider. This project provides the functionality of the three projects (Microsoft.Linq.Translations, PropertyTranslator, QueryInterceptor) to the portable class library.",
  "id": "PropertyLinqTranslator",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "owtuEPJTsW+1OAXJaI703+Cf/WBylUOGAqNefjlq2Z/X0+T7B0FI9S7ThBx6q+wNSBrrvTq+98mBUcLLF8yanw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 13126,
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "title": "PropertyLinqTranslator",
  "version": "1.0.0.1",
  "tags": [
    "Microsoft.Linq.Translations",
    "PropertyTranslator",
    "QueryInterceptor"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}