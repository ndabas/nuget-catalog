{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.15.22.31/aspose.pdf.10.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "bf047e83-db3c-4db7-a8fe-c0d1a7f8b2c3",
  "catalog:commitTimeStamp": "2015-02-07T15:22:31.5180055Z",
  "copyright": "Â©Aspose 2002-2014. All Rights Reserved.",
  "created": "2015-01-14T11:09:58.417Z",
  "description": "Aspose.Pdf for .NET is a PDF document creation and manipulation component that enables your .NET applications to read, write and manipulate existing PDF documents without using Adobe Acrobat. It also allows you to create forms and manage form fields embedded in a PDF document. This component is written in managed C# and it allows developers to add PDF creation and manipulation functionality to their Microsoft .NET applications (WinForms, ASP.NET and .NET Compact Framework).\n        Aspose.Pdf for .NET is affordable and offers an incredible wealth of features including PDF compression options; table creation and manipulation; support for graph objects; extensive hyperlink functionality; extended security controls; custom font handling; integration with data sources; add or remove bookmarks; create table of contents; add, update, delete attachments and annotations; import or export PDF form data; add, replace or remove text and images; split, concatenate, extract or inset pages; transform pages to image; print PDF documents and much more.",
  "iconUrl": "http://www.aspose.com/blogs/wp-content/uploads/2013/06/aspose-Pdf-for-net_100.png",
  "id": "Aspose.Pdf",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "packageHash": "9SvIAi5PQRAr9bjoKR1PvVuhqnydNHVmmSTUD6Y04y4TFEckvwE42RAJXoMs+p51yjWwIxtF+mNevaDG/GWN2A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 29066565,
  "projectUrl": "http://www.aspose.com/categories/.net-components/aspose.pdf-for-.net/default.aspx",
  "published": "2015-01-14T11:09:58.417Z",
  "releaseNotes": "This release introduces the features, enhancements and bug fixes as detailed below:\n\nNew Features\nPDFNEWNET-37103 Setting user-agent string support\nPDFNEWNET-36160 Setting User agent string\nPDFNEWNET-35645 Page Break in existing PDF\nPDFNEWNET-36338 Setting Header/Footer once for new PDF document\n\nEnhancements\nPDFNEWNET-37952 PDF to HTML: support of stream parameter in CustomeHtmlSavingStrategy\nPDFNEWNET-37374 Specify attachment file parameters in FileSpecification class\nPDFNEWNET-37305 XSL-FO to PDF conversion quality issue\nPDFNEWNET-37333 PCL to PDF: NullReferenceException is raised\nPDFNEWNET-37236 TIFF to PDF - Resultant PDF is too large\n\nExceptions\nPDFNEWNET-37358 PDF to HTML conversion generates error\nPDFNEWNET-37792 PDF to HTML - NullReferenceException is being generated\nPDFNEWNET-33815 Unexpected Exception is being generated by PdfFileMend\nPDFNEWNET-37963 API throws NullRefeneceException on save()\nPDFNEWNET-37921 System.ArgumentException: The rectangle size can not be larger page size\nPDFNEWNET-35492 Getting an error when using autofiller.ImportDataTable()\n\nBugs\n\nPDFNEWNET-37898 PDF file is not properly being converted to PDF/A_1a format\nPDFNEWNET-37760 PDF to HTML - Impossible to convert multiple pages of the same document in multiple threads to HTML\nPDFNEWNET-37706 HTML to PDF - Trouble with tables and text-wrapping\nPDFNEWNET-36216 HTML to PDF: Web Page to PDF conversion results ArgumentOutOfRangeException\nPDFNEWNET-37712 PDF to HTML: Font caching is not working properly\nPDFNEWNET-37744 PDF to HTML - Extra boxes appear in resultant file\nPDFNEWNET-37845 Incorrect TextSegment.Rectangle values\nPDFNEWNET-37844 When replacing text, contents overlap in resultant file\nPDFNEWNET-37915 Optimizing PDF document causes image to be removed\nPDFNEWNET-34452 Formatting Issues when converting HTML to PDF\nPDFNEWNET-37364 PDF to DOC: Space between text is increased\nPDFNEWNET-34839 Pdf document Cutts off, while Converting HTML to Pdf\nPDFNEWNET-33318 PdfFileMend is not producing correct results\nPDFNEWNET-34173 ExtractText() concatenate the letters in the extracted Text\nPDFNEWNET-34521 Only Extract Text from PDF which is 'Marked for redaction\"\nPDFNEWNET-37306 Watermark text is selectable\nPDFNEWNET-37718 Issue with radio buttons when index and value do not match\nPDFNEWNET-37930 Ellipse.Bottom not being respected\nPDFNEWNET-37824 HTML to PDF - Conversion process hangs\nPDFNEWNET-37877 HtmlFragment hangs the process with large html\nPDFNEWNET-36946 HTML to PDF - PDF is not being geneated\nPDFNEWNET-35423 Title of PDF is not being set when setting conformance to PdfA1A\nPDFNEWNET-35503 Autofiller throwing exception while saving to some strem or disk\nPDFNEWNET-37458 TIF to PDF - Memory consumption increases by 600MB\nPDFNEWNET-36392 PDF to HTML: OCR-Converted PDF text is not aligned/grouped to image.\nPDFNEWNET-37588 Image to PDF: output PDF file is approx 6 time larger than input image",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Pdf for .NET is an amazing component which provides the feature to create and manipulate PDF documents.",
  "title": "Aspose.Pdf for .NET",
  "version": "10.0.0",
  "tags": [
    "Aspose.Pdf",
    "PDF",
    "XFA",
    "XPS",
    "TIFF",
    "PCL",
    "SVG",
    "HTML",
    "XML",
    "XSL-FO",
    "FDF",
    "XFDF",
    "PDF/A",
    "form",
    "Portfolio",
    "EPUB",
    "PSD",
    "to",
    "XLS",
    "DOC"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}