{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.05.16.17.00/repodb.1.0.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Michael Pendon",
  "catalog:commitId": "522f50b3-5a25-4257-aab9-5ffde9fa133b",
  "catalog:commitTimeStamp": "2018-04-05T16:17:00.5079282Z",
  "copyright": "Copyright Â© 2018",
  "created": "2018-04-05T16:10:49.477Z",
  "description": "A dynamic ORM library used to create an Entity-Based Repositories when accessing data from the database.",
  "id": "RepoDb",
  "isPrerelease": false,
  "lastEdited": "2018-04-05T16:13:59.527Z",
  "listed": true,
  "packageHash": "QIDE11498MlqVbcwCs2s+hnQgDCsoDJrx9a6uMcoqlgwxlDIh02AzNKFDqbBTUOgctnMxA2+bsVe4o/SLdd8FA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 27010,
  "published": "2018-04-05T16:10:49.477Z",
  "releaseNotes": "[UPDATES]\n\t\t- EntityNotBulkInsertableException supported when calling BulkInsert with non SqlConnection connection object\n\t\t- BulkInsert optimization - ordering the columns based on the DB Table ordering (not on DataEntity properties ordering)\n\t\t- Initial implementation for complex query (QueryGroup)\n\t\t\t- Added QueryGroup (IQueryGroup)\n\t\t\t- Added Conjuctions for QueryGroup(s)\n\t\t\t- Added OrQueryGroup\n\t\t\t- Added AndQueryGroup\n\t\t- Supported IFieldValue interface for QueryField - to support the QueryGroup parameterized approach\n\t\t- Renamed QueryField.Value to QueryField.Parameter (with Name and Value properties) and change its Type from object to IParameter\n\t\t- In QueryFields, if the Operation is '=' and the parameter Value is equals to NULL then we compose ([Field] IS NULL) string statement\n\t\t\t- Solves the problem of: WHERE (SomeDate IS NULL)\n\t\t\t- We also did the same thing for != (SomeDate IS NOT NULL)\n\t\t- Used the '<>' instead of '!=' in InEquality comparer\n\t\t- Supported EventNotifier (Tracing and Debugging purposes).\n\t\t\t- You can listen on the following events to see the Statement and Object passed before DB executions\n\t\t\t\t- BeforeQueryExecution\n\t\t\t\t- AfterQueryExecution\n\t\t\t\t- BeforeUpdateExecution\n\t\t\t\t- AfterUpdateExecution\n\t\t\t\t- BeforeDeleteExecution\n\t\t\t\t- AfterDeleteExecution\n\t\t\t\t- BeforeMergeExecution\n\t\t\t\t- AfterMergeExecution\n\t\t\t\t- BeforeInsertExecution\n\t\t\t\t- AfterInsertExecution\n\t\t\t\t- BeforeBulkInsertExecution\n\t\t\t\t- AfterBulkInsertExecution\n\t\t\t\t- BeforeExecuteNonQueryExecution\n\t\t\t\t- AfterExecuteNonQueryExecution\n\t\t\t\t- BeforeExecuteReaderExecution\n\t\t\t\t- AfterExecuteReaderExecution\n\t\t\t\t- BeforeExecuteScalarExecution\n\t\t\t\t- AfterExecuteScalarExecution\n\t\t\t\t- CancelledExecution",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.0.5",
  "version": "1.0.5",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.05.16.17.00/repodb.1.0.5.json#RepoDb.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1056,
      "fullName": "RepoDb.nuspec",
      "length": 2420,
      "name": "RepoDb.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.05.16.17.00/repodb.1.0.5.json#readme.txt",
      "@type": "PackageEntry",
      "compressedLength": 803,
      "fullName": "readme.txt",
      "length": 1903,
      "name": "readme.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.04.05.16.17.00/repodb.1.0.5.json#lib/RepoDb/RepoDb.dll",
      "@type": "PackageEntry",
      "compressedLength": 23401,
      "fullName": "lib/RepoDb/RepoDb.dll",
      "length": 60928,
      "name": "RepoDb.dll"
    }
  ],
  "tags": [
    "sql",
    "sqlserver",
    "database",
    "db",
    "repository",
    "dbrepository",
    "structured",
    "repo",
    "repodb",
    "orm",
    "micro-orm",
    ".net"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}