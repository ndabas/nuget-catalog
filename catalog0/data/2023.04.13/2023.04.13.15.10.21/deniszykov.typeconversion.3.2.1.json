{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Denis Zykov",
  "catalog:commitId": "6434f20a-b725-444d-b369-95118dd276c2",
  "catalog:commitTimeStamp": "2023-04-13T15:10:21.7835365Z",
  "copyright": "(c) Denis Zykov 2022",
  "created": "2023-04-13T15:07:41.363Z",
  "description": "Type conversion provider.",
  "id": "deniszykov.TypeConversion",
  "isPrerelease": false,
  "lastEdited": "2023-04-13T15:10:11.197Z",
  "licenseExpression": "MIT",
  "licenseUrl": "https://licenses.nuget.org/MIT",
  "listed": true,
  "packageHash": "3/oix0Oo/gCGHmpnC/JPTpdJFJrvt3SvAIX5ACQjQfT73D+UJ0lWQD6x9t7pejCW1K4rCAKFi1KK1bV9d9v3Bg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 343494,
  "projectUrl": "https://github.com/deniszykov/TypeConversion",
  "published": "2023-04-13T15:07:41.363Z",
  "releaseNotes": "# 3.2.1\nfix: changed AOT implementation of EnumConversion to use direct unboxing of numeric values into/from Enum values. This is kinda hacky, but gives better perfomance.\nfeature: allow to register safe conversion functions (like TryParse, TryConvert, TryCreate) with `CustomConversion{T1,T2}` or via `ICustomConversionRegistry.RegisterConversion`\n\n# 3.1.1\nfeature: added support for TryParse/TryCreate methods. These methods would be called directly from `IConverter.TryConvert` and also fallback option for `IConverter.Convert`. This will increase performance of `IConverter.TryConvert`.\nfeature: added `Options.DisallowedMethodNames` to exclude \"Exact\" methods from conversion methods due their tendency to fail without proper format\nfix: fixed method ranging to make sure more specific method (with format and formatProvider parameters) used first.\n\n# 3.0.9\nfix: fixed NullConverter preventing from using Nullable fallback conversions and obscuring other conversion ways. Also it throws raw System.Exception.\n\n# 3.0.7-3.0.8\nfeature: added fast execution path for TryConvert methods, any transition methods like nullable-to-any, any-to-nullable, nullable-to-nullable, downcast support TryConvert variant and wouldn't fallback to Convert method. This change increase performance TryConvert calls.\nfix: changed error for \"No conversion exists\" from InvalidOperationException to FormatException so it would be handled by TryConvert try/catch clause. This could be breaking change if you made logic based on exception types.\n\n# 3.0.6\nrefac: renamed TypeConversionProviderConfiguration to TypeConversionProviderOptions\nrefac: renamed ConversionMetadataProviderConfiguration into ConversionMetadataProviderOptions to conform .NET Core configuration conversion.\nfeature: added type promotion function for value with ConversionOptions.PromoteValueToActualType\nfix: fixed TargetInvocationException instead of actual error is thrown when some conversion failed and OptimizeWithExpressions is disabled in config.\n\n# 3.0.5\nrefac: removed extra constructor TypeConversionProvider to prevent DI constructor confusion.\nfix: fixed null to any ref type conversion error.\n\n# 3.0.4\nrefac: deprecated TypeConversionProviderConfiguration.RegisterConversion in favor of TypeConversionProvider constructor injection.\nfeature: added TypeConversionProviderConfiguration.DebugPrintConversions for debug purposes.\n\n# 3.0.3\nfeature: added additional way to configure new conversions between types via constructor. This way allow service resolution for such conversions. Type need to be registered in DI ICustomConversionRegistration and services could be injected in implementation constructor.\n\n# 3.0.2\n\nfix: fixed usage of dynamic methods in EnumConversionInfo (frag was checked wrongly)\nfeature: added compatibility shim for old 'TypeConvert' package\n\n# 3.0.0\nrenamed project to `deniszykov.TypeConversion`\nremoved HexConvert, Base64Convert, TypeActivator\nrefactored TypeConvert to `ITypeConversionProvider` abstraction and `TypeConversionProvider` implementation\nadded configurable behaviour via `TypeConversionProviderConfiguration` and `IConversionMetadataProvider`\nrenamed `EnumHelper` to EnumConversionInfo and made it instantiable class instead of static class.",
  "repository": "",
  "verbatimVersion": "3.2.1",
  "version": "3.2.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework4.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netframework4.6.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netframework4.6.1/microsoft.extensions.options",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Options",
          "range": "[5.0.0, )"
        }
      ],
      "targetFramework": ".NETFramework4.6.1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netstandard1.6",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netstandard1.6/microsoft.extensions.options",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Options",
          "range": "[1.1.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netstandard1.6/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netstandard1.6/system.runtime.serialization.primitives",
          "@type": "PackageDependency",
          "id": "System.Runtime.Serialization.Primitives",
          "range": "[4.3.0, )"
        }
      ],
      "targetFramework": ".NETStandard1.6"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netcoreapp2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netcoreapp2.1/microsoft.extensions.options",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Options",
          "range": "[3.1.10, )"
        }
      ],
      "targetFramework": ".NETCoreApp2.1"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/net7.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/net7.0/microsoft.extensions.options",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Options",
          "range": "[3.1.10, )"
        }
      ],
      "targetFramework": "net7.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#dependencygroup/.netstandard2.1/microsoft.extensions.options",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Options",
          "range": "[3.1.10, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#deniszykov.TypeConversion.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1847,
      "fullName": "deniszykov.TypeConversion.nuspec",
      "length": 5119,
      "name": "deniszykov.TypeConversion.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/net45/deniszykov.TypeConversion.dll",
      "@type": "PackageEntry",
      "compressedLength": 39476,
      "fullName": "lib/net45/deniszykov.TypeConversion.dll",
      "length": 110592,
      "name": "deniszykov.TypeConversion.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/net45/deniszykov.TypeConversion.xml",
      "@type": "PackageEntry",
      "compressedLength": 14567,
      "fullName": "lib/net45/deniszykov.TypeConversion.xml",
      "length": 129901,
      "name": "deniszykov.TypeConversion.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/net461/deniszykov.TypeConversion.dll",
      "@type": "PackageEntry",
      "compressedLength": 39600,
      "fullName": "lib/net461/deniszykov.TypeConversion.dll",
      "length": 111104,
      "name": "deniszykov.TypeConversion.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/net461/deniszykov.TypeConversion.xml",
      "@type": "PackageEntry",
      "compressedLength": 14601,
      "fullName": "lib/net461/deniszykov.TypeConversion.xml",
      "length": 129979,
      "name": "deniszykov.TypeConversion.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/net7.0/deniszykov.TypeConversion.dll",
      "@type": "PackageEntry",
      "compressedLength": 40110,
      "fullName": "lib/net7.0/deniszykov.TypeConversion.dll",
      "length": 114176,
      "name": "deniszykov.TypeConversion.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/net7.0/deniszykov.TypeConversion.xml",
      "@type": "PackageEntry",
      "compressedLength": 14601,
      "fullName": "lib/net7.0/deniszykov.TypeConversion.xml",
      "length": 129979,
      "name": "deniszykov.TypeConversion.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/netcoreapp2.1/deniszykov.TypeConversion.dll",
      "@type": "PackageEntry",
      "compressedLength": 39693,
      "fullName": "lib/netcoreapp2.1/deniszykov.TypeConversion.dll",
      "length": 111616,
      "name": "deniszykov.TypeConversion.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/netcoreapp2.1/deniszykov.TypeConversion.xml",
      "@type": "PackageEntry",
      "compressedLength": 14601,
      "fullName": "lib/netcoreapp2.1/deniszykov.TypeConversion.xml",
      "length": 129979,
      "name": "deniszykov.TypeConversion.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/netstandard1.6/deniszykov.TypeConversion.dll",
      "@type": "PackageEntry",
      "compressedLength": 40024,
      "fullName": "lib/netstandard1.6/deniszykov.TypeConversion.dll",
      "length": 112128,
      "name": "deniszykov.TypeConversion.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/netstandard1.6/deniszykov.TypeConversion.xml",
      "@type": "PackageEntry",
      "compressedLength": 14553,
      "fullName": "lib/netstandard1.6/deniszykov.TypeConversion.xml",
      "length": 129257,
      "name": "deniszykov.TypeConversion.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/netstandard2.1/deniszykov.TypeConversion.dll",
      "@type": "PackageEntry",
      "compressedLength": 40166,
      "fullName": "lib/netstandard2.1/deniszykov.TypeConversion.dll",
      "length": 113152,
      "name": "deniszykov.TypeConversion.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#lib/netstandard2.1/deniszykov.TypeConversion.xml",
      "@type": "PackageEntry",
      "compressedLength": 14552,
      "fullName": "lib/netstandard2.1/deniszykov.TypeConversion.xml",
      "length": 129257,
      "name": "deniszykov.TypeConversion.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.04.13.15.10.21/deniszykov.typeconversion.3.2.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11513,
      "fullName": ".signature.p7s",
      "length": 11513,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "type",
    "conversion",
    "convert"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}