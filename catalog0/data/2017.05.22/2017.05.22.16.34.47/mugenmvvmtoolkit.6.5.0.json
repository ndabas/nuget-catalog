{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Vyacheslav Volkov",
  "catalog:commitId": "eec66ef3-6b48-48b7-bee2-345033e41fda",
  "catalog:commitTimeStamp": "2017-05-22T16:34:47.5748031Z",
  "created": "2017-05-22T16:34:33.637Z",
  "description": "Mugen MVVM Toolkit makes it easier to develop cross-platform application using the Model-View-ViewModel design pattern. \n\t  The Mugen MVVM Toolkit makes extensive use of Net Standard Library to provide maintainable cross platform C# native applications. \n\t  The Mugen MVVM Toolkit provides a cross-platform MVVM development framework built on top of:\n      - WinForms\n      - WPF\n      - Xamarin.Android\n      - Xamarin.iOS\n      - Xamarin.Forms\n      - UWP\n      The MVVM framework includes the following features that differs this project from other frameworks:\n      - Deep integration with each platform.\n      - Supports state preservation and restoration for mobile platforms.\n      - Full Fragment support for Android, you do not need to worry about activity, fragments, sub-fragments or their state all this makes the framework.\n      - Solves the nested user controls problem in MVVM, all view models are dynamically created by you, using the GetViewModel method and you do not need to use the ViewModelLocator.\n      - Supports all kinds of navigation like modal window, page navigation, tab navigation, back stack fragment navigation for android. You can also easily add a new kind of navigation.\n      - Navigation system works with view models and allows to expect the completion of the operation. You can pass any parameters between view models.\n      - Good design mode support, for xaml platforms supports the creation of design view model with any constructor parameters.\n      - Supports bindings on all platforms, all of the native binding features available for WPF platform available on all platforms and even more.\n      - Binding supports C# language expressions like Linq, Extension methods, method call, ternary operator (?:), coalescing operator (??), etc.\n      - Supports subscription to any control event.\n      - Built-in support for validation.\n      - You can easily write their own extensions for bindings.\n      - Supports attached members (properties, events, methods), you can extend any object as you want.\n      - Special editor for WinForms, you do not need to write code to create bindings.\n      - Binding parser builds syntax tree that allows you to easily change or extend the bindings, without manipulation of the raw text.\n      - Binding supports fluent syntax.\n      - Excellent binding performance.",
  "iconUrl": "https://raw.githubusercontent.com/MugenMvvmToolkit/MugenMvvmToolkit/master/logo128_128.png",
  "id": "MugenMvvmToolkit",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/MS-PL",
  "listed": true,
  "packageHash": "myHElKYxXBZRn6O7DbWZ+KI7lBGOELlQY+m4lYkmv11OitBMzAXdmjEt6OEjJ6o6SmRVpSzP9BhT37GOjDJwIw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1189285,
  "projectUrl": "https://github.com/MugenMvvmToolkit/MugenMvvmToolkit",
  "published": "2017-05-22T16:34:33.637Z",
  "releaseNotes": "Breaking changes:\n\tCore\n\t- migrated to .netstandard 1.0 pcl not supported.\t\n\t- removed WinRT 8.0\\8.1 support\n\t- removed Silverlight support\n\t- removed WinPhone Silverlight support\n\t- removed WPF page navigation\n\t- removed ModuleBase class use the IModule interface instead.\n\t- removed INavigationOperation interface to get NavigationCompletedTask property use the ToolkitExtensions.GetNavigationCompletedTask() extension method.\n\t- removed the ICloseableViewModel.Close method, now all viewmodels can be closed use the ViewModelExtensions.CloseAsync() extension method.\n\t- renamed PlatformExtensions to AndroidToolkitExtensions\n\t- renamed PlatformExtensions to TouchToolkitExtensions\n\t- renamed PlatformExtensions to UwpToolkitExtensions\n\t- renamed PlatformDataBindingExtensions to UwpDataBindingExtensions\n\t- renamed PlatformExtensions to WinFormsToolkitExtensions\n\t- renamed PlatformExtensions to WpfToolkitExtensions\n\t- renamed XamarinFormsExtensions to XamarinFormsToolkitExtensions\t\n\t- renamed INavigableViewModel.OnNavigatingFrom to INavigableViewModel.OnNavigatingFromAsync\n\t- renamed IVisualTreeManager.FindParent method to GetParent\n\t- replaced MultiViewModel with generic version MultiViewModel<TViewModel>.\t\t\n\t- removed IHasOperationResult added the IHasResultViewModel interface\n\t- removed IValidatorProvider.GetValidatorTypes method\n\t- changed parameter type for CloseableViewModel.OnClosing, CloseableViewModel.OnClosed methods from object to IDataContext.\t\n\t- changed IDynamicViewModelPresenter interface.\n\t- changed the ShowAsync method now it returns result of IHasResultViewModel interface instead of bool value\t\n\t\t\n\tiOS\n\t- removed UICollectionViewCellBindable, removed support for Selected, Highlighted bindings\n\t- removed UITableViewCellBindable, removed support for Selected, Highlighted, Editing bindings \n\n\tXam.Forms\n\t- change project to .netstandard and add this line to project.json \"frameworks\": { \"netstandard1.0\": { \"imports\": \"portable-net45+win8+wpa81+wp8\" } }\n\t- added MvvmXamarinApplicationBase instead of default App implementation you can use this class\n\t- android project should pass app context to the PlatformBootstrapperService new PlatformBootstrapperService(() => Forms.Context)\n\t- moved binding stuff to the MugenMvvmToolkit.Xamarin.Forms.Binding need to change namespace xmlns:mugen=\"clr-namespace:MugenMvvmToolkit.Xamarin.Forms.MarkupExtensions;assembly=MugenMvvmToolkit.Xamarin.Forms.Binding\"\n\n\tNuget\n\t- added MugenMvvmToolkit.Android project if you're using Android project you need to install this package\n\t- added MugenMvvmToolkit.iOS project if you're using iOS project you need to install this package\n\t- added MugenMvvmToolkit.UWP and MugenMvvmToolkit.UWP.Binding project if you're using UWP project you need to install this packages\n\t- added MugenMvvmToolkit.WPF.Binding project if you're using WPF binding project you need to install this package\n\t- added MugenMvvmToolkit.Xamarin.Forms project if you're using Xamarin.Forms binding project you need to install this package\n\t- added MugenMvvmToolkit.Android.Preference package\n\t\nChanges:\n\tCore\n\t- fixed serializer register type exception\n\t- fixed incorrect behavior for ClearBackStack with BringToFront flag\n\t- changed implementation of DynamicViewModelWindowPresenter\n\t- changed implementation of IWindowViewMediator\n\t- changed NavigationCompletedTask to Task<bool>\n\t- changed IModuleContext.IocContainer to NotNull\n\t- changed static properties ViewCreated, ViewInitialized, ViewCleared rom ViewManager to events\n\t- linker optimizations\n\t- updated MultiViewModel navigation\n\t- updated autofac\n\t- updated bootstrapper methods\n\t- added LinkerSafeAttribute to core projects\n\t- added INavigationDispatcher that allows to control view model navigation process\t\n\t- added IMultiViewModel.ClearAsync method\n\t- added ability to handle background\\foreground app navigation\n\t- added NavigationMode.Background, NavigationMode.Foreground\n\t- added NavigationMode.Remove\n\t- added NavigationConstants.NavigationParameter constant\n\t- added ability to get opened view models using INavigationDispatcher.GetOpenedViewModels methods\n\t- added ViewModelExtensions.GetCurrentView method\n\t- added strong names\n\t- added LinkerSafe attribute to all ioc containers\n\t- added MvvmApplication.Modules property\n\t- added ability to load modules without scanning assemblies\n\t- added ext method GetTopViewModels\n\t- added IAwaitableDynamicViewModelPresenter that allows to wait when current navigation operation will be completed\n\t- added IViewModelPresenter.WaitCurrentNavigationsAsync method\n\t- added overloads to the DelegateContinuation constructor and to the ContinueWith method\n\t- added DoNotTrackViewModelFrom, DoNotTrackViewModelTo constants for NavigationDispatcher\n\t- added PlatformInfo.Idiom property\n\t- added Parameter property to navigation event args\n\t- added IInitializableView interface\n\t- added ICleanableView interface\n\t- added IOpenedViewModelInfo for the INavigationDispatcher\n\t- added IHasResultViewModel interface\n\t- added ViewModelConstants.CanCloseHandler constant\n\t- added ApplicationSettings.MessagePresenterGetButtonText property\n\t- added non generic IMutliViewModel interface\n\t- added ability to restore view model with custom constructor parameters using InitializationConstants.IocParameters constant\n\t- replaced INavigationOperation interface to the IAsyncOperation interface\n\t- removed INavigationOperation interface\n\t- removed NavigationMode.Reset\t\n\t- removed ITaskExceptionHandler\n\t- removed INavigationCachePolicy\n\t- removed MugenInjection added built-in MugenContainer\n\t- removed object parameter from OnClosing\\OnClosed methods\n\t- removed context parameter from Start method for bootstrappers\n\t- removed NavigationMode.Forward\n\t- removed DesignBootstrapperBase\n\t- removed the INavigationService.GetParameterFromArgs method\n\t- removed AttachedValueProvider from core project\t\t\t\n\t- renamed Platform property to PlatformInfo\n\t- removed IViewAwareViewModel interface implementation from WorkspaceViewModel\n\t- moved DynamicViewModelWindowPresenter to core project\n\t- moved ViewManager.GetDataContext, ViewManager.SetDataContext methods to the ToolkitExtensions class\n\t- moved static properties from ViewManager to ApplicationSettings\n\t- optimized ViewModelBase\\NotifyPropertyChangedBase cleanup\n\t\n\tBinding\n\t- binding optimizations\t\n\t- optimized data context\n\t- added code to detect circular dependencies for attached event members\n\t- added the non-generic Member method to the BindingSyntaxEx class\n\t- moved binding converter from core project to platform projects\n\t- removed RelativeSourceExpressionNode usage from fluent bindings (linker optimizations)\t\n\t- split binding modules to static AttachedMembersRegistration class (linker optimizations)\t\n\t- updated binding builder methods\n\t- added ability to register attached member for indexer(Item[]) path\n\t\n\tAndroid\n\t- added support for Xamarin.Android.Support.v7.Preference\n\t- added ability to use android resources from binding using resource accessor $color.myXmlColor, $drawable.myDrawable\t\t\n\t- added support for BottomNavigationView view\n\t- added cache for MenuInflater\n\t- added Invisible attached member\n\t- added the Activity attached member to View class\n\t- updated navigation for NoHistory activities\n\t- removed XmlDocument and XDocument usage (linker optimizations)\n\t- split preference usage (linker optimizations)\n\t\n\tiOS\n\t- added MvvmAppDelegateBase\n\t- updated iOS navigation added ability to close root view controller\n\t- updated state restoration\n\t- fixed iOS aot bug System.ExecutionEngineExceptionAttempting to JIT compile method 'MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperation`1<bool>:AddContinuation<MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperationImpl`2<object, object>> (MugenMvvmToolkit.Infrastructure.Callbacks.AsyncOperationImpl`2<object, object>)' while running with --aot-only.\n\t- fixed bring to front navigation bug\n\t\n\tXam.Forms\n\t- added RestorableViewModelPresenter\n\t- added MvvmXamarinApplicationBase\n\t- added ignore state key to RestorableViewModelPresenter\n\t- added native ViewModelToViewConverter converter\n\t- removed PlatformDataBindingModuleEx\n\t\n\tUWP\n\t- added SuspensionManager and NavigationHelper\n\t- added MvvmUwpApplicationBase\n\t- fixed broken uwp weakreferences\n\t\n\tWinForms\n\t- added exception handler for wpf\\winforms dialogs\n\t- add Owner to WPF\\WinForms IWindowView\n\t- update design mode determination for WinForms",
  "requireLicenseAcceptance": false,
  "title": "MugenMvvmToolkit",
  "verbatimVersion": "6.5.0",
  "version": "6.5.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETFramework4.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#dependencygroup/.netframework4.0-client",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#dependencygroup/.netframework4.0-client/microsoft.bcl",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl",
          "range": "[1.1.10, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#dependencygroup/.netframework4.0-client/microsoft.bcl.build",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.Build",
          "range": "[1.0.21, )"
        }
      ],
      "targetFramework": ".NETFramework4.0-Client"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#MugenMvvmToolkit.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4070,
      "fullName": "MugenMvvmToolkit.nuspec",
      "length": 12116,
      "name": "MugenMvvmToolkit.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#lib/netstandard1.0/MugenMvvmToolkit.dll",
      "@type": "PackageEntry",
      "compressedLength": 151224,
      "fullName": "lib/netstandard1.0/MugenMvvmToolkit.dll",
      "length": 366080,
      "name": "MugenMvvmToolkit.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#lib/netstandard1.0/MugenMvvmToolkit.pdb",
      "@type": "PackageEntry",
      "compressedLength": 243393,
      "fullName": "lib/netstandard1.0/MugenMvvmToolkit.pdb",
      "length": 1060352,
      "name": "MugenMvvmToolkit.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#lib/net40-client/MugenMvvmToolkit.dll",
      "@type": "PackageEntry",
      "compressedLength": 150298,
      "fullName": "lib/net40-client/MugenMvvmToolkit.dll",
      "length": 363520,
      "name": "MugenMvvmToolkit.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#lib/net40-client/MugenMvvmToolkit.pdb",
      "@type": "PackageEntry",
      "compressedLength": 242316,
      "fullName": "lib/net40-client/MugenMvvmToolkit.pdb",
      "length": 1056256,
      "name": "MugenMvvmToolkit.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#lib/net45/MugenMvvmToolkit.dll",
      "@type": "PackageEntry",
      "compressedLength": 151224,
      "fullName": "lib/net45/MugenMvvmToolkit.dll",
      "length": 366080,
      "name": "MugenMvvmToolkit.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.05.22.16.34.47/mugenmvvmtoolkit.6.5.0.json#lib/net45/MugenMvvmToolkit.pdb",
      "@type": "PackageEntry",
      "compressedLength": 243393,
      "fullName": "lib/net45/MugenMvvmToolkit.pdb",
      "length": 1060352,
      "name": "MugenMvvmToolkit.pdb"
    }
  ],
  "tags": [
    "mugen",
    "mvvm",
    "toolkit",
    "binding",
    "wpf",
    "winforms",
    "android",
    "uwp",
    "cross",
    "platform",
    "ios",
    "xamarin",
    "forms",
    "xamforms"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}