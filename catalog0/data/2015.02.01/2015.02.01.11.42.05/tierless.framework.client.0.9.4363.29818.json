{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.01.11.42.05/tierless.framework.client.0.9.4363.29818.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "tangiblezero,n8allan",
  "catalog:commitId": "0e537d84-b840-4fa9-9511-47b74971e429",
  "catalog:commitTimeStamp": "2015-02-01T11:42:05.2620491Z",
  "created": "2011-12-12T23:36:16.933Z",
  "description": "Tierless is an alternative to Entity Framework for .NET, designed for large or small scale applications. Rather than code-generating schema-specific entites, Tierless uses dynamic structures to host any schema at runtime.  Constraints and other rules are declarative and can be re-used between the client and server.",
  "id": "Tierless.Framework.Client",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.opensource.org/licenses/bsd-license.php",
  "packageHash": "tv29enCkRd9rsGmlp2VsdwYyryJdwuDyVyZWSsHXU5bGD9LXhoTE4gqwF6dzspontI/w/rK29xFDp5LtNHdzKg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 197840,
  "projectUrl": "http://code.google.com/p/tierless/",
  "published": "2011-12-12T23:36:16.947Z",
  "requireLicenseAcceptance": false,
  "summary": "Generator-less entity framework - client layer.",
  "title": "Tierless Framework - Client",
  "version": "0.9.4363.29818",
  "tags": [
    "data",
    "access",
    "business",
    "rules",
    "constraints",
    ".NET",
    "entity",
    "framework"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}