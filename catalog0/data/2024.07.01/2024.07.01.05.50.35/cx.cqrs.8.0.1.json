{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Tom Lee",
  "catalog:commitId": "3dc330d0-028a-45c9-a1b1-b76b009ac4be",
  "catalog:commitTimeStamp": "2024-07-01T05:50:35.472575Z",
  "copyright": "Copyright (c) 2021 Tom Lee",
  "created": "2024-06-12T17:53:45.9Z",
  "description": "Add extension to register MediatR with Microsoft dependency injection",
  "id": "cx.CQRS",
  "isPrerelease": false,
  "lastEdited": "2024-07-01T05:50:22.123Z",
  "licenseFile": "LICENSE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "RnpnEfCzZ78y4IUq3Amo61H3M+8wUhpLWG+yY8QyNArT2TVkGnYHAuSJqghLHJkS296IbTf+uXQpyCxZaPgovQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23549,
  "published": "2024-06-12T17:53:45.9Z",
  "releaseNotes": "Upgrade to NET8",
  "repository": "",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "8.0.1",
  "version": "8.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#dependencygroup/net8.0/fluentvalidation",
          "@type": "PackageDependency",
          "id": "FluentValidation",
          "range": "[11.9.2, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#dependencygroup/net8.0/mediatr",
          "@type": "PackageDependency",
          "id": "MediatR",
          "range": "[12.3.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#dependencygroup/net8.0/microsoft.extensions.dependencyinjection.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.DependencyInjection.Abstractions",
          "range": "[8.0.1, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#cx.CQRS.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 543,
      "fullName": "cx.CQRS.nuspec",
      "length": 1094,
      "name": "cx.CQRS.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#lib/net8.0/cx.CQRS.dll",
      "@type": "PackageEntry",
      "compressedLength": 4290,
      "fullName": "lib/net8.0/cx.CQRS.dll",
      "length": 9728,
      "name": "cx.CQRS.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#LICENSE",
      "@type": "PackageEntry",
      "compressedLength": 3963,
      "fullName": "LICENSE",
      "length": 11558,
      "name": "LICENSE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.01.05.50.35/cx.cqrs.8.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12925,
      "fullName": ".signature.p7s",
      "length": 12925,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}