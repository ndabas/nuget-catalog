{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.02.20.22.41/appdomaintoolkit.1.0.1.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jeremy Duvall",
  "catalog:commitId": "2007b36a-93cf-4c9d-856d-77c71e8e9d0c",
  "catalog:commitTimeStamp": "2015-02-02T20:22:41.7511508Z",
  "created": "2012-11-24T04:08:51.103Z",
  "description": "Anyone whose ever had to deal with loading Assemblies using standard .NET reflection facilities understands that it's not straightforward. Which context should I load into? How do I know that my Assembly is imported into the correct application domain? What if I want to load two versions of the same assembly into an application domain? How can I tear down an application domain where I've loaded my own assemblies? This package exists to provide a basic API for handling common AppDomain issues.",
  "id": "AppDomainToolkit",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/jduv/AppDomainToolkit/blob/master/LICENSE.md",
  "packageHash": "4AjoGqytbUBKsMfXARrKzBcTJ8r4/0xFE/7K0oxOtEsW52FFixSvInRKg4C4+IB+kee15xeAJeCKU0oFDsBCtg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 24921,
  "projectUrl": "https://github.com/jduv/AppDomainToolkit",
  "published": "2012-11-24T04:08:51.103Z",
  "requireLicenseAcceptance": false,
  "summary": "A small, lightweight set of utility classes useful for executing code in remote app domains.",
  "title": "AppDomain Toolkit",
  "version": "1.0.1.3",
  "tags": [
    "AppDomain",
    "Utilities"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}