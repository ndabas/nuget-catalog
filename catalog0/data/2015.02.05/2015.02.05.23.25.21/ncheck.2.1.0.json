{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.23.25.21/ncheck.2.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Paul Hatcher",
  "catalog:commitId": "c0159c80-3c74-4396-9c68-adec4ca6864e",
  "catalog:commitTimeStamp": "2015-02-05T23:25:21.4749544Z",
  "copyright": "Copyright Â© 2014 Paul Hatcher",
  "created": "2014-07-28T10:11:06.06Z",
  "description": "Provides object checking features primarily used for state based testing",
  "id": "NCheck",
  "isPrerelease": false,
  "lastEdited": "2014-07-28T10:16:11.137Z",
  "licenseUrl": "http://opensource.org/licenses/mit-license.php",
  "packageHash": "pB6Jmhx5Q94YNH990at2WqI2iX/57xajafs1hV+DJmX2B8QuAhyopckRkkiRVy3n3cKRpLfrHoVz6bCxjrgadA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 32251,
  "projectUrl": "https://github.com/phatcher/NCheck",
  "published": "2014-07-28T10:11:06.06Z",
  "releaseNotes": "Fixes #4 - Incorrect label candidate/expected\nSet the static Checker.CheckerFactory in Fixture.CheckerFactory in case it's not set by CheckerBuilder\nImprove Fixture.CheckFault overrides so we can detect specific exception types as well as messages\nAdditional unit tests\n",
  "requireLicenseAcceptance": false,
  "title": "NCheck",
  "version": "2.1.0",
  "tags": [
    "state",
    "based",
    "testing",
    "unit",
    "test"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}