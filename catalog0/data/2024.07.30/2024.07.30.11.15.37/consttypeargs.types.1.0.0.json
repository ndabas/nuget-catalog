{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Zachary Layne",
  "catalog:commitId": "16689318-bbd2-4ad2-a044-c2eba5b66ef4",
  "catalog:commitTimeStamp": "2024-07-30T11:15:37.6787335Z",
  "copyright": "Copyright (c) 2024 Zachary Layne",
  "created": "2024-07-30T11:12:55.43Z",
  "description": "Builds on types of the ConstTypeArgs.Core library to provide const type arguments that allow you to use type parameters to pass Type values to generics at compile-time. This provides an analog to type specialization in C++.\n\nHere's a simple demonstration:\n\nusing ConstTypeArgs.Types;\n\npublic class Foo<TType>\n{    \n  static Foo()\n  {\n    if (TType.Value == typeof(string)\n     || TType.Value == typeof(char)\n     || TType.Value == typeof(char[])\n     || TType.Value == typeof(ReadOnlyMemory<char>)\n     || TType.Value == typeof(ReadOnlySpan<char>))\n    {\n      Console.WriteLine($\"{TType.Value} values usually represent text!\");\n    }\n  \n    if (TType.Value == typeof(byte)\n     || TType.Value == typeof(sbyte)\n     || TType.Value == typeof(short)\n     || TType.Value == typeof(ushort)\n     || TType.Value == typeof(int)\n     || TType.Value == typeof(uint)\n     || TType.Value == typeof(long)\n     || TType.Value == typeof(ulong)\n     || TType.Value == typeof(nint)\n     || TType.Value == typeof(nuint))\n    {\n      Console.WriteLine($\"{TType.Value} values usually represent numbers!\");\n    }\n  }\n}\n\n// Elsewhere, assuming the value of StringType is typeof(string)\nvar foo = new Foo<StringType>();  // Outputs: StringType values usually represent text!\n\n// Assuming that the value of IntType is typeof(int)\nfoo     = new Foo<IntType>();     // Outputs: TType values usually represent numbers!\n\n\nHere's how you could create a new Type const type argument:\n\npublic readonly struct StringType : K_Type<StringType>\n{ public static Type Value => typeof(string); }",
  "iconFile": "Type.png",
  "id": "ConstTypeArgs.Types",
  "isPrerelease": false,
  "lastEdited": "2024-07-30T11:15:29.407Z",
  "licenseFile": "LICENSE.txt",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": false,
  "packageHash": "068vENLpViAZNE6Zp0jY+P88pOYXnkxJjouCay2lUpgD7lE1Z2EKGoD2c+AcfddF1x9tXCAzegZasgl7urfQ+A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 51805,
  "projectUrl": "https://github.com/zacharylayne/ConstTypeArgs",
  "published": "1900-01-01T00:00:00Z",
  "readmeFile": "README.MD",
  "releaseNotes": "Initial release.",
  "repository": "",
  "title": "Const Type Arguments - Types",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#dependencygroup/net8.0/consttypeargs.core",
          "@type": "PackageDependency",
          "id": "ConstTypeArgs.Core",
          "range": "[1.0.0, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#ConstTypeArgs.Types.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1102,
      "fullName": "ConstTypeArgs.Types.nuspec",
      "length": 2757,
      "name": "ConstTypeArgs.Types.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#lib/net8.0/ConstTypeArgs.Types.dll",
      "@type": "PackageEntry",
      "compressedLength": 5078,
      "fullName": "lib/net8.0/ConstTypeArgs.Types.dll",
      "length": 14336,
      "name": "ConstTypeArgs.Types.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#lib/net8.0/ConstTypeArgs.Types.xml",
      "@type": "PackageEntry",
      "compressedLength": 1267,
      "fullName": "lib/net8.0/ConstTypeArgs.Types.xml",
      "length": 12997,
      "name": "ConstTypeArgs.Types.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#LICENSE.txt",
      "@type": "PackageEntry",
      "compressedLength": 651,
      "fullName": "LICENSE.txt",
      "length": 1106,
      "name": "LICENSE.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#README.MD",
      "@type": "PackageEntry",
      "compressedLength": 791,
      "fullName": "README.MD",
      "length": 2130,
      "name": "README.MD"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#Type.png",
      "@type": "PackageEntry",
      "compressedLength": 27236,
      "fullName": "Type.png",
      "length": 27226,
      "name": "Type.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.07.30.11.15.37/consttypeargs.types.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12931,
      "fullName": ".signature.p7s",
      "length": 12931,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "constants",
    "const-type-args",
    "generics",
    "static-abstract-interface-members",
    "Type"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}