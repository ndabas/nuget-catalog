{
  "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Pawan Sachitha Seram",
  "catalog:commitId": "c52e8c25-a08b-431f-83ca-074fe724aab1",
  "catalog:commitTimeStamp": "2024-06-23T09:22:25.5712153Z",
  "copyright": "Copyright Â© 2024 SmartApp.lk",
  "created": "2024-06-23T09:20:01.01Z",
  "description": "SmartApp.lk.Mongo.Logger Log is a lightweight logging library for .NET applications, enabling seamless logging of application events, errors, and performance metrics directly to a MongoDB database. This package helps you centralize your logs, making them easily accessible for monitoring, analysis, and troubleshooting.\n\n      Key Features:\n      - Easy integration with .NET applications\n      - Support for various log levels (Info, Debug, Error, etc.)\n      - Automatic handling of log rotations and archival\n      - Flexible configuration options\n      - Asynchronous logging for minimal performance impact\n      - Structured logging with custom fields\n      - Compatibility with .NET Core 8 and .NET Framework\n\n      Installation:\n      1. Install the package via NuGet:\n         `dotnet add package SmartApp.lk.Mongo.Logger`\n      2. Configure your MongoDB connection string and logging settings in the application configuration file.\n\n      Usage:\nProgram.cs\nvar configuration = builder.Configuration\nbuilder.Services.SmartApplkMongoLogerServices<SMARTAppLOGER>(\n    new Option\n    {\n        IsDeleteCollection = true,\n        KeepLastCollection = 5,\n        CollectionCreateWithin = CollectionCreateWithin.BYHOURS,\n        connectionString = configuration.GetConnectionString(\"MongoConnection\") ?? throw new InvalidOperationException(\"Connection string 'DefaultConnection' not found.\"),\n        databaseName = configuration.GetConnectionString(\"MongoDatabase\") ?? throw new InvalidOperationException(\"Databasse string 'DefaultConnection' not found.\"),\n    });\n\n\nawait this.smartMongoLoger.InsertAsync(new SmartLogger<SMARTAppLOGER>\n {\n     LogModel = new SMARTAppLOGER\n     {\n         CreatedDate = DateTime.Now,\n         ErrorMasg = \"error Description\"\n     }\n },DateTime.UtcNow);",
  "id": "oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm",
  "isPrerelease": false,
  "lastEdited": "2024-06-23T09:22:02.347Z",
  "listed": true,
  "packageHash": "U2ePzBcELly8g8YD/SYDHyhfR18xuobiSZ7sFXiVlQ/OiV1DA+pnXGclyR4MvLjLCNMnJmdHZSRzM3BOOciPPQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 26441,
  "published": "2024-06-23T09:20:01.01Z",
  "repository": "",
  "title": "SmartApp.lk Mongo Logger",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#dependencygroup/net8.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#dependencygroup/net8.0/microsoft.extensions.configuration.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.Configuration.Abstractions",
          "range": "[8.0.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#dependencygroup/net8.0/microsoft.extensions.dependencyinjection.abstractions",
          "@type": "PackageDependency",
          "id": "Microsoft.Extensions.DependencyInjection.Abstractions",
          "range": "[8.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#dependencygroup/net8.0/mongodb.driver",
          "@type": "PackageDependency",
          "id": "MongoDB.Driver",
          "range": "[2.26.0, )"
        }
      ],
      "targetFramework": "net8.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1219,
      "fullName": "oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.nuspec",
      "length": 2728,
      "name": "oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#lib/net8.0/SmartApp.lk.Mongo.Logger.dll",
      "@type": "PackageEntry",
      "compressedLength": 9657,
      "fullName": "lib/net8.0/SmartApp.lk.Mongo.Logger.dll",
      "length": 24576,
      "name": "SmartApp.lk.Mongo.Logger.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2024.06.23.09.22.25/oy2agslwrtppnmo7qhfaefcz3jyio4nexcwcigey2kbcrm.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 12933,
      "fullName": ".signature.p7s",
      "length": 12933,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}