{
  "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.27.12.16.13/jwtfacade.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Milward Kadzitaye",
  "catalog:commitId": "e2642528-2f76-4beb-b9bf-048c68c5f6f5",
  "catalog:commitTimeStamp": "2023-10-27T12:16:13.2548859Z",
  "created": "2023-10-27T12:13:07.1Z",
  "description": "A simple library for setting up jwt in an asp net core web api. \n\n1. Compose the below json in appsettings.json\n\"JwtInfo\": {\n    \"Issuer\": \"http://localhost:4200\",\n    \"Audience\": \"http://localhost:4200\",\n    \"SigningKey\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY1Qzc1QUEwQTE1M0M1OTI4NzE0\",\n    \"ExpiryTime\": 3600,\n    \"SaveToken\": false,\n    \"RequestHttpsMetaData\": false,\n    \"ValidateIssuer\": true,\n    \"ValidateAudience\": true,\n    \"ValidateLifetime\": true,\n    \"ValidateIssuerSigningKey\": true\n  }\nReplace the SigningKey with your own key. Do the same for Issuer and Audience.\n\n2. Call builder.InjectJwtSettingsToServices() in program cs to add all the necessary settings to builder.Services collection\nCalling InjectJwtSettingsToServices() is equivalent to the below 3 lines\nbuilder.InjectJwtInfo();\nbuilder.AddAuthenticationToServices(TokenConfigManager.GetJwtInfo(builder.Configuration));\nbuilder.AddAuthorizationToServices();\n\n3. Add authentication in the middleware\nRemember in middleware order is important\n\napp.UseHttpsRedirection();\n\napp.UseAuthentication(); // add authentication in the middleware\napp.UseAuthorization();\n\napp.MapControllers();\n\n4. Call var result = await TokenConfigManager.GenerateTokenAsync(_jwtInfo, tokenInfo); to generate the token\nRemember IJwtInfo has been injected by builder.InjectJwtInfo(); as such can be passed in the constructor or method without being created manually\nToken info can be created like below, but more options are available\nvar tokenInfo = new TokenUserInfo\n            {\n                Sub = \"MY_SUBJECT\",\n                UniqueName = \"example@gmail.com\",\n                Email = \"example@gmail.com\"\n            };\n  \n5. Add [Authorize] to the desired controller or action like below\n[Authorize]\n[HttpGet]\n[Route(\"testAuth\")]\npublic async Task<IActionResult> TestAuth()\n{\n return Ok();\n}",
  "id": "JwtFacade",
  "isPrerelease": false,
  "lastEdited": "2023-10-27T12:16:09.557Z",
  "listed": true,
  "packageHash": "PwMnnmfikdiEnps1IsymLzNaF0h3JWP/S63iuwu5nxl2lGcMFxR/UaiI2ihe+Va2XzxgX6b2TDyl2vTD3o/c2A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 21586,
  "published": "2023-10-27T12:13:07.1Z",
  "requireLicenseAcceptance": false,
  "summary": "A simple library for setting up jwt in an asp net core web api.",
  "title": "Jwt Facade",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.27.12.16.13/jwtfacade.1.0.0.json#dependencygroup/net6.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.27.12.16.13/jwtfacade.1.0.0.json#dependencygroup/net6.0/microsoft.aspnetcore.authentication.jwtbearer",
          "@type": "PackageDependency",
          "id": "Microsoft.AspNetCore.Authentication.JwtBearer",
          "range": "[6.0.24, )"
        }
      ],
      "targetFramework": "net6.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.27.12.16.13/jwtfacade.1.0.0.json#JwtFacade.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1244,
      "fullName": "JwtFacade.nuspec",
      "length": 2606,
      "name": "JwtFacade.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.27.12.16.13/jwtfacade.1.0.0.json#lib/net6.0/JwtFacade.dll",
      "@type": "PackageEntry",
      "compressedLength": 6299,
      "fullName": "lib/net6.0/JwtFacade.dll",
      "length": 14336,
      "name": "JwtFacade.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2023.10.27.12.16.13/jwtfacade.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11512,
      "fullName": ".signature.p7s",
      "length": 11512,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}