{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.17.17.36.50/percolatoranalysisservices.0.1.7.103.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Matt Hallmark",
  "catalog:commitId": "51484936-a10b-4c7c-947d-a8aedba0e7ae",
  "catalog:commitTimeStamp": "2015-02-17T17:36:50.7094191Z",
  "copyright": "Copyright Â©  2014, CoopDIGITy Inc",
  "created": "2015-01-21T19:45:18.037Z",
  "description": "A LINQ to MDX Psued-O-RM for Microsoft SQL Server Analysis Services",
  "iconUrl": "http://www.coopdigity.com/wp-content/uploads/2014/04/logo3.png",
  "id": "PercolatorAnalysisServices",
  "isPrerelease": false,
  "lastEdited": "2015-02-17T17:36:26.4Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "xGsmyBz6EqP/y2EZbo+pE8pmbRYpJeJG/WT8lgMgizuWsSvYj61PtNG4BnFYLAh9XergiMQBD10QjF0fTJSrtw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 50676,
  "projectUrl": "http://www.coopdigity.com/products/percolator-analysis-services/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Finally, a way to query a Microsoft SQL Server Analysis Database with LINQ and type safe objects! \n\nBeta version - Comes without any warranties.  Please contact me via the \"Contact Owners\" link for any questions, comments, bugs, or features you think should be included. Any input is GREATLY appreciated. Make sure to read the \"Documentation\" text file that is included with the package. \n\nOr leave a comment on the NuGet Feed page :\nhttp://nugetfeed.org/list/packages/percolatoranalysisservices/details?utm_source=ngf&utm_medium=rss&utm_campaign=rss_feeds\n\nAlso, visit the Code Project article \"Introduction to Percolator Analysis Services LINQ to MDX ORM\"\n\nWorking on the project page on our CoopDigity site, which will also include the documentation.\n\nChanges: \n-Removed the \"Base\" namespace.  It's just the \"PercolatorAnalysis\" namespace now.\n\n-Fixed the durp moment where the Mdx.NonEmpty method translated into \"NenEmpty\" (how embarrasing amirite).\n\nComing Changes:\n\n-Large refactor to implement a way of querying more than two axis in a query, and returning the results in an object that contains the values for each axis (similar to the CellSet object).  \n\nThis refactor will address the following:\n    In the LINQ syntax:\n    -The ability to select \"Non Empty\" rows and columns axis.\n    -Various bug fixes with the mapper.\n    -Ability to tag a created member or set with a name other than the auto generated one names after the variable name.\n    \n    In the PAS explicit syntax:\n    -The ability to query more than two axis.\n    -Old methods stripped out. The \"OnRows\" and \"OnColumns\" have been replaced with the \"OnAxis\" method. This method allows you to specify the axis number, along with defining this axis as Non Empty, and an expression parameter to create the axis.\n    -The other PAS methods have also been replaced with new methods with expression parameters to build axis and components.\n    -Finally, a method to execute the PAS query and map the results to an object. Details of this will be released with the this update.\n    \n    Other changes:\n    -The \"Method\" and \"Set\" classes now have a static method to create a new member or set by using an expression parameter.  No longer will you have to instantiate a separate cube object or reference the static \"Objects\" field to gain axis to its dimensions.\n    -Two new operators will be overloaded for use between sets and members. The \"*\" operator will return a cross joined set, and the \"&\" operator will return a comma separated tuple member or set.\n    -Fixing the issue with how a hierarchy level is translated in a query. \n    -Changing the generator to only generate each dimension once, and sharing them among their respective cube classes.\n\nAgain, these changes will be out IN THE NEXT RELEASE.  I hope to have it out in the next week or so, but no promises :).\n\nA big thanks goes out to Miguel Correia and Nuno Braz Oliveira for helping me find a lot of these bugs and lack of features, and really putting this project through the ringer! \n    ",
  "requireLicenseAcceptance": true,
  "summary": "A LINQ to MDX Psued-O-RM for Microsoft SQL Server Analysis Services",
  "title": "Percolator Analysis Services (Beta)",
  "version": "0.1.7.103",
  "tags": [
    "mdx",
    "linq",
    "linqtomdx",
    "orm",
    "percolator",
    "PAS",
    "mdxorm",
    "mdxlinq",
    "ssas"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}