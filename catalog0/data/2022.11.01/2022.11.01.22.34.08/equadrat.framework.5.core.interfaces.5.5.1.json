{
  "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "equadrat",
  "catalog:commitId": "e76add87-3495-4f96-a605-5a5e217660bb",
  "catalog:commitTimeStamp": "2022-11-01T22:34:08.1002231Z",
  "created": "2022-11-01T22:30:50.803Z",
  "description": "The framework core part.",
  "iconFile": "images\\equadrat.Framework.5.Icon.png",
  "iconUrl": "https://www.equadrat.net/wp-content/uploads/equadrat.Framework.5.Icon_.png",
  "id": "equadrat.Framework.5.Core.Interfaces",
  "isPrerelease": false,
  "lastEdited": "2022-11-01T22:33:53.34Z",
  "licenseFile": "equadrat.Framework.5.Core.License.md",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "4Ioh9Qn4G3l12AZ2kzc7ArNyXP/2s8GddzgQA51SJv/vuGB70ba2gtmvgzazTqMOIRB3nM5dCWAdKwRj2P/W0Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 492278,
  "projectUrl": "https://www.equadrat.net/",
  "published": "2022-11-01T22:30:50.803Z",
  "releaseNotes": "====\nv5.5.1\n====\n- Added ICoreDedicatedLoggingContext and registered as InstancePerCall to IOC.\n- Added logging target for Serilog.\n- Added adapter for Microsoft.Extensions.DependencyInjection.\n- Added multi-constructor support for IOC.\n- Added default generic registration for IEnumerable<> to represent the registered instances of the specified type and derived types.\n====\nv5.5\n====\n- Removed ThemeResourceDictionary.\n- Simplified SharedResourceDictionary.\n====\nv5.4.7\n====\n- Updated NLog version.\n====\nv5.4.6\n====\n- Added ICoreLoggingEvent.IfEnabled property to shorten logging statements when checking whether the event is enabled by using null conditional operator (?).\n====\nv5.4.5\n====\n- Extended ICoreDispatcherScheduler and ICoreTaskSchedulerBase to support async callbacks.\n- Extended CoreAsync[Reusable]RelayTask to support async callbacks.\n- Refactored CoreUIDispatcher implementations to share more code in base classes.\n- Fixed bug in Core[XamarinForms|Maui]Dispatcher to reschedule the dispatcher processing when reaching the max-processing time.\n====\nv5.4.4\n====\n- Moved the .net MAUI AppBuilder extension methods to a separate assembly (equadrat.Framework.5.Core.UI.Maui.AppBuilder).\n- Refactored FilterNullValueConverter to use [Dependency|Bindable|Avalonia]Property.Unset value as default replacement.\n- Added FirstSetValueConverter which behaves similar to the PriorityBinding in WPF.\n- Added Relay[Multi]ValueConverter which can be used to combine static resource value converters.\n- Added FilterUnsetValueConverter to replace the [Dependency|Bindable|Avalonia]Property.Unset value by a custom replacement.\n- Added DurationToTimeSpanConverter for WPF.\n- Extended PassthroughValueConverter to consider the converter parameter as Trace.Category if nothing else is defined.\n- Added AutoDataTemplateSelector and RelayDataTemplate for Avalonia UI.\n- Added PropertySetterBehavior to set a property of a target object. This behavior can construct bindings from the specified parameters.\n- Added BooleanSwitchPropertySetterBehavior to set a property of a target object based on a true/false switch. Works similar as PropertySetterBehavior.\n- Added VisualTreeMemberHelperBehavior for Xamarin.Forms to track whether an element is part of the visual tree or not.\n- Added ZOrderBehavior for Xamarin.Forms to order the children of a panel by an attached ZIndex property.\n- Added ContentControl for Xamarin.Forms and .net MAUI.\n- Added ItemsControl for Xamarin.Forms and .net MAUI.\n- Added ContentSizeLimiter for Xamarin.Forms to have a similar functionality to [Min|Max][Width|Height] of Grid[Column|Row]Definition on other UI frameworks.\n- Added CoreListWrapper to wrap IList<T> as ICoreList<T>.\n- Added extension methods for DependencyObject (WPF), BindableObject (Xamarin.Forms, .net MAUI), IAvaloniaObject (Avalonia UI).\n====\nv5.4.3\n====\n- Refactored MultiValueConverter to make targetType check optional.\n====\nv5.4.2\n====\n- Refactored ValueConverter to make targetType check optional.\n- Added DoubleToGridLengthConverter.\n- Added BooleanToVisibilityConverter and made BooleanVisibilityConverter obsolete.\n====\nv5.4.1\n====\n- Added WPF CollectionView support when using CoreObservableCollection (custom NotifyCollectionChangedHandler required).\n- Fixed BooleanVisibilityConverter, ValueConverterChain, PassthroughValueConverter to use the proper base class.\n====\nv5.4\n====\n- Added TryRunSync methods to ICoreDispatcher and ICoreTaskQueue. Calls will not be dispatched if the caller is sync to the dispatcher/task queue and will be run synchronously instead.\n- Extended ICoreCommandFactory to provide a name for the command (optional, null by default) which will be used in ToString instead of the type name. Added a switch to enforce validation on command initialization (optional, false by default).\n- Extended ICoreCommand to provide AwaitValidation[Async] methods to await a pending validation.\n- Extended CoreSharedWaitHandle to provide WaitAsync methods.\n====\nv5.3.7\n====\n- Compatibility release.\n- Added more value converters.\n- Added .net MAUI projects again.\n- Added extension method to use bootstrapper modules for .net MAUI projects.\n====\nv5.3.6\n====\n- Removed XmlNamespaces from Xamarin.Forms projects.\n- Removed .net MAUI projects (for now).\n====\nv5.3.5\n====\n- Fixed missing interface on ValueConverterChain.\n- Added namespace aliases for .net MAUI.\n====\nv5.3.4\n====\n- Added support for Avalonia UI.\n- Added support for .net MAUI.\n- Added value converters.\n- Added value converter wrappers for WPF, Xamarin.Forms, Avalonia UI and .net MAUI.\n- Added behavior base classes and helpers for WPF, Xamarin.Forms, Avalonia UI and .net MAUI.\n- Added extension method CreateInstance(...) for System.Type to use System.Activator to create an instance of that type.\n- Added extension method GetDefaultValue() for System.Type to get the default value for that type.\n- Added eCoreDispatcherPriority.Layout as an extra priority below DataBind but above Render.\n- Extended ICoreDispatcher.VerifyAccess to throw an exception if the current thread is not sync to the dispatcher.\n- Added CoreCrossThreadCallException.\n====\nv5.3.3\n====\n- Added SharedResourceDictionary and ThemeResourceDictionary to improve memory usage and performance of WPF resource dictionaries.\n- Added AutoDataTemplateSelector, RelayDataTemplate and AutoStyleSelector for WPF to have type based selectors.\n- Fixed ObjectDisposedException in CoreLicenseOperator which occured sometimes when using .net Framework 4.* x86 runtime.\n====\nv5.3.2\n====\n- Extended ICoreCollectionObserverFactory.CreateCollectionMerger to support a minimum merge level and a custom filter (by level/item type) to have more control when merging collection trees.\n====\nv5.3.1\n====\n- Added ICoreExpressionHelper.ConvertToStaticInvokeExpressionExt to support custom delegates.\n====\nv5.3.0\n====\n- Added coalesce modes for dispatcher signals: 'Unique', 'Sequence', 'UniqueAndLast'. 'Unique' represents the previously existing behavior when using coalescing for dispatcher signals.\n====\nv5.2.13\n====\n- Added operator to create, sign and validate licenses.\n====\nv5.2.12\n====\n- Added support for generic type definitions to IOC.\n====\nv5.2.11\n====\n- Reverted changes of release v5.2.10.\n====\nv5.2.10\n====\n- Broken release.\n====\nv5.2.9\n====\n- Extended ICoreOwnerToken to support IAsyncDisposable.\n- Extended ICoreTokenFactory to support creating IAsyncDisposable tokens.\n- Extended ICoreInstancePoolFactory to support IAsyncDisposable instances.\n- Removed class/IDisposable restrictions from ICoreInstanceFactory and ICoreInstancePoolFactory.\n- Added extension methods to support IAsyncEnumerable - should work now as expected.\n====\nv5.2.8\n====\n- Removed helper extension methods for IAsyncEnumerable - didn't work as expected.\n====\nv5.2.7\n====\n- Fixed bug in CoreLoggingTextFileTarget to not delete all log files when NOT specifying maxBackupFiles.\n- Fixed misleading exception messages when creating an IOC registration for an already existing registration.\n- Added helper extension methods for IAsyncEnumerable.\n- Added NCObject.Null to be used as placeholder in position based calls to not have the need to use object null.\n- Added route for ICoreRandomDataGenerator to ICoreRandomDataProvider.\n====\nv5.2.6\n====\n- Fixed bug in CoreIOCInstanceFactory to support multi-threaded access on first call of CreateInstance.\n====\nv5.2.5\n====\n- Extended ICoreSerializer to support encodings (if supported by the underlying serializer).\n- Added default instance pool for ICoreStreamWriter to have a shared pool of StringBuilder/TextWriter instances.\n- Fixed bug when CoreXmlClassicSerializer wrote encoding detection marks to the stream.\n====\nv5.2.4\n====\n- Extended ICoreIOCFactory to support creating instance factories for custom types.\n====\nv5.2.3\n====\n- Added bootstrapper module (interface) for the native libraries loader.\n- Added support for implicit bootstrapper module interface types. (CoreImplicitBootstrapperModuleInterfaceAttribute)\n====\nv5.2.2\n====\n- Added loader for native libraries (Windows only).\n====\nv5.2.1\n====\n- Added [Try]ResolveRegistration methods to ICoreIOCFactory.\n====\nv5.2.0\n====\n- Refactored exceptions.\n====\nv5.1.15\n====\n- Extended ICoreTaskQueue to provide methods to wait for activity/idle state.\n====\nv5.1.14\n====\n- Added Xamarin.Forms IDispatcher relay to IOC.\n- Added base classes for value converters.\n====\nv5.1.13\n====\n- Fixed target frameworks of equadrat.Framework.5.Core.UI.Xamarin.Forms.\n====\nv5.1.12\n====\n- Added support for ICoreIOCInstanceFactory<> and ICoreInstanceFactory<> to IOC parameter resolving.\n- Added UI dispatcher for Xamarin.Forms.\n- Added support for Xamarin.Forms dependency injection.\n====\nv5.1.11\n====\n- Added ICoreLoggingContext.GetAttachedLoggingTargets[Of] to get a list of the attached logging targets.\n- Added Roles to LoggingTargets.\n- Extended ICoreBootstrapperDependencyTracker to skip specific register/initialization methods of the current and/or other modules.\n- Extended CoreBootstrapperModule to support auto detection of register/initialization methods.\n====\nv5.1.10\n====\n- Added symbol packages.\n====\nv5.1.9\n====\n- Added CoreDispatcherRelayFactory.\n- Extended CoreFrameworkBootstrapperModule behavior when registering the default dispatcher(s) to use the registered dispatcher (UI/thread) as a fallback dispatcher for a missing dispatcher type (UI/thread) registration.\n====\nv5.1.8\n====\n- Extended CoreBsonNewtonsoftSerializer, CoreJsonNewtonsoftSerializer and CoreProtobufSerialzer to support implicitly referenced known/included types.\n====\nv5.1.7\n====\n- Added ICoreReflectionHelper.GetGenericTypeArguments.\n====\nv5.1.6\n====\n- Fixed CoreNLogTarget to support NLog 5.*\n====\nv5.1.5\n====\n- Minor change to the constructor of CoreLoggingTextFileTarget.\n====\nv5.1.4\n====\n- Added logging target for Application Insights.\n- Fixed bug in CoreLoggingAsyncTarget to ensure the correct calling order of PrepareAsync and CleanupAsync.\n====\nv5.1.3\n====\n- Changed default vaule of setStaticIocResolver parameter (CoreMicrosoftExtensionsHostBuilderHelper.UseBootstrapper) from true to false.\n- CoreIOCHelper.SetResolver checks for ICoreTokenFactory as an optional component.\n- Fixed bug in CoreLoggingContext.Append to check IsEnabled of product and event.\n====\nv5.1.2\n====\n- Added parameterless ICoreTokenFactory.CreateDummyToken.\n====\nv5.1.1\n====\n- Added CoreAutofacExtensions to create Autofac modules to easily integrate the core framework in projects using Autofac.\n====\nv5.1.0\n====\n- Added CoreFrameworkBootstrapperModule.\n- Added CoreBsonNewtonsoftSerializerBootstrapperModule.\n- Added CoreJsonNewtonsoftSerializerBootstrapperModule.\n- Added CoreProtobufSerializerBootstrapperModule.\n- Added CoreNLogBootstrapperModule.\n- Added CoreWpfBootstrapperModule.\n- Removed almost all default registrations from CoreIOCRegistry.\n====\nv5.0.8\n====\n- Fixed bug in CoreExclusiveDebugLockSlim to work properly with the TPL but still support recursive lock detection.\n====\nv5.0.7\n====\n- Fixed bug in bootstrapper. The configuration methods were not called when there was a single registered module only.\n====\nv5.0.6\n====\n- Added Asp.net Core OpenApi support.\n====\nv5.0.5\n====\n- Added logging target for NLog.\n====\nv5.0.4\n====\n- Improved the bootstrapper module handling to preserve the implicit order of depending modules.\n====\nv5.0.3\n====\n- Fixed load order in equadrat.Framework.5.Core.Microsoft.Extensions.Hosting to run the bootstrapper before initializing the web host.\n- Added equadrat.Framework.5.Core.Microsoft.Extensions.AspNetCore.Mvc to integrate custom serializers for ASP.net Core.\n====\nv5.0.2\n====\n- Added equadrat.Framework.5.Core.Microsoft.Extensions.Hosting to use the equadrat Framework IOC with the Microsoft hosting extensions.\n====\nv5.0.1\n====\n- Hotfix to include the correct license for NuGet.\n====\nv5.0.0\n====\n- Initial Release",
  "requireLicenseAcceptance": true,
  "verbatimVersion": "5.5.1",
  "version": "5.5.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#dependencygroup/.netstandard2.0/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[2022.1.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#dependencygroup/.netstandard2.0/microsoft.bcl.asyncinterfaces",
          "@type": "PackageDependency",
          "id": "Microsoft.Bcl.AsyncInterfaces",
          "range": "[6.0.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#dependencygroup/.netstandard2.1",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#dependencygroup/.netstandard2.1/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[2022.1.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#equadrat.Framework.5.Core.Interfaces.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 4615,
      "fullName": "equadrat.Framework.5.Core.Interfaces.nuspec",
      "length": 13654,
      "name": "equadrat.Framework.5.Core.Interfaces.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#lib/netstandard2.0/DE/equadrat.Framework.5.Core.Interfaces.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2023,
      "fullName": "lib/netstandard2.0/DE/equadrat.Framework.5.Core.Interfaces.resources.dll",
      "length": 5120,
      "name": "equadrat.Framework.5.Core.Interfaces.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#lib/netstandard2.0/equadrat.Framework.5.Core.Interfaces.dll",
      "@type": "PackageEntry",
      "compressedLength": 134910,
      "fullName": "lib/netstandard2.0/equadrat.Framework.5.Core.Interfaces.dll",
      "length": 418816,
      "name": "equadrat.Framework.5.Core.Interfaces.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#lib/netstandard2.0/equadrat.Framework.5.Core.Interfaces.xml",
      "@type": "PackageEntry",
      "compressedLength": 89585,
      "fullName": "lib/netstandard2.0/equadrat.Framework.5.Core.Interfaces.xml",
      "length": 1777314,
      "name": "equadrat.Framework.5.Core.Interfaces.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#lib/netstandard2.1/DE/equadrat.Framework.5.Core.Interfaces.resources.dll",
      "@type": "PackageEntry",
      "compressedLength": 2024,
      "fullName": "lib/netstandard2.1/DE/equadrat.Framework.5.Core.Interfaces.resources.dll",
      "length": 5120,
      "name": "equadrat.Framework.5.Core.Interfaces.resources.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#lib/netstandard2.1/equadrat.Framework.5.Core.Interfaces.dll",
      "@type": "PackageEntry",
      "compressedLength": 134809,
      "fullName": "lib/netstandard2.1/equadrat.Framework.5.Core.Interfaces.dll",
      "length": 418816,
      "name": "equadrat.Framework.5.Core.Interfaces.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#lib/netstandard2.1/equadrat.Framework.5.Core.Interfaces.xml",
      "@type": "PackageEntry",
      "compressedLength": 89585,
      "fullName": "lib/netstandard2.1/equadrat.Framework.5.Core.Interfaces.xml",
      "length": 1777314,
      "name": "equadrat.Framework.5.Core.Interfaces.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#images/equadrat.Framework.5.Icon.png",
      "@type": "PackageEntry",
      "compressedLength": 15249,
      "fullName": "images/equadrat.Framework.5.Icon.png",
      "length": 15280,
      "name": "equadrat.Framework.5.Icon.png"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#equadrat.Framework.5.Core.License.md",
      "@type": "PackageEntry",
      "compressedLength": 460,
      "fullName": "equadrat.Framework.5.Core.License.md",
      "length": 936,
      "name": "equadrat.Framework.5.Core.License.md"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#equadrat.Framework.5.Core.ReleaseNotes.txt",
      "@type": "PackageEntry",
      "compressedLength": 4061,
      "fullName": "equadrat.Framework.5.Core.ReleaseNotes.txt",
      "length": 12367,
      "name": "equadrat.Framework.5.Core.ReleaseNotes.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2022.11.01.22.34.08/equadrat.framework.5.core.interfaces.5.5.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 11511,
      "fullName": ".signature.p7s",
      "length": 11511,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "equadrat",
    "framework",
    "core",
    "ioc",
    "dependency",
    "injection",
    "container",
    "serializer",
    "observable",
    "collection",
    "splitter",
    "merger",
    "sorting",
    "dispatcher",
    "threading",
    "logging",
    "owner",
    "token",
    "weak",
    "events",
    "binary",
    "heap",
    "tuple",
    "random",
    "data",
    "generator",
    "async",
    "interface"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}