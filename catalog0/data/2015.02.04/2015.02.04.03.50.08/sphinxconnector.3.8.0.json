{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.03.50.08/sphinxconnector.3.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Dennis Gronewold",
  "catalog:commitId": "9efd3af8-6a26-4de4-86e9-68576bab1349",
  "catalog:commitTimeStamp": "2015-02-04T03:50:08.8076593Z",
  "created": "2013-11-14T10:46:40.26Z",
  "description": "SphinxConnector.NET is a .NET client API for the Sphinx full-text search engine. It provides a fluent query API with object mapping capabilities that allows for an easy integration of Sphinx into your applications. After the installation, SphinxConnector.NET operates in a trial-mode, which has some limitations in functionality. However, at http://www.sphinxconnector.net/Download, you can request a trial key to unlock all features for a period of 30 days.",
  "iconUrl": "http://www.sphinxconnector.net/logo32.gif",
  "id": "SphinxConnector",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2013-11-14T10:48:58.277Z",
  "licenseUrl": "http://www.sphinxconnector.net/License",
  "packageHash": "djKQlrIv1pT37oH4qt6hSbPROFE41Gu+UtxzAtoOaOIzSF9Z6l/9hu4msnjAcgEYbG9/xsBAqFDerR2doNsVVQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 2703374,
  "projectUrl": "http://www.sphinxconnector.net/",
  "published": "2013-11-14T10:46:40.307Z",
  "releaseNotes": "Fluent API: Added support for HAVING (Sphinx 2.2.1).\n\nFluent API: Added support for LEAST and GREATEST to MVAs and JSON arrays via Min() and Max() methods (Sphinx 2.2.1).\n\nFluent API: Added support for IN, ALL, ANY, INDEXOF to JSON arrays (Sphinx 2.2.1).\n\nFluent API: Added support for array index access and null/not null comparisons for JSON objects (Sphinx 2.2.1).\n\nFluent API: Added support for new GEODIST() options (Sphinx 2.2.1).\n\nFluent API: Added support for LENGTH() to MVAs and JSON arrays via IEnumarable.Count(), ICollection.Count or Length (Sphinx 2.1.2).\n\nFluent API: Added support for BITDOT() function (Sphinx 2.1.2).\n\nFluent API: Added support for using user variables with In() and NotIn().\n\nFluent API: When sorting by a numeric JSON field, type conversion functions are automatically emitted with Sphinx 2.2.1, e.g. OrderBy(x => x.JSONObject.AnInt32) is translated to ORDER BY INTEGER(document.JSONObject.AnInt32).\n\nFluent API: Prediction counters returned from SHOW META have been renamed in Sphinx 2.2.1-beta, which means you can't use SphinxConnector.NET 3.8 with Sphinx 2.2 revisions prior to 4281 if you are using these counters. If you were using Sphinx 2.2.1 before the official beta release, you should update to the beta release. Also support for new counters has been added.\n\nNative API: Added property for Sphinx 2.1.3 to SphinxVersion.",
  "requireLicenseAcceptance": true,
  "summary": "SphinxConnector.NET is a .NET client API for the Sphinx full-text search engine. It provides a fluent query API with object mapping capabilities that allows for an easy integration of Sphinx into your applications.",
  "title": "SphinxConnector.NET",
  "version": "3.8.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.03.50.08/sphinxconnector.3.8.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.03.50.08/sphinxconnector.3.8.0.json#dependencygroup/common.logging",
          "@type": "PackageDependency",
          "id": "Common.Logging",
          "range": "[2.1.1, )"
        }
      ]
    }
  ],
  "tags": [
    "sphinx",
    "full-text",
    "search",
    "client",
    "api"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}