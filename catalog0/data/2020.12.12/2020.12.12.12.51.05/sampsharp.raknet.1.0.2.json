{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Danil Zelyutin",
  "catalog:commitId": "1bb578fb-0dd9-4a3b-9dbc-c545cf9c867c",
  "catalog:commitTimeStamp": "2020-12-12T12:51:05.7390269Z",
  "copyright": "Danil Zelyutin",
  "created": "2020-12-12T12:49:26.327Z",
  "description": "A SampSharp wrapper for the Pawn.RakNet plugin.",
  "iconUrl": "https://github.com/ikkentim/SampSharp/raw/master/sampsharp.png",
  "id": "SampSharp.RakNet",
  "isPrerelease": false,
  "lastEdited": "2020-12-12T12:50:57.15Z",
  "licenseUrl": "https://raw.githubusercontent.com/Zelyutin/SampSharp.RakNet/master/LICENSE",
  "listed": true,
  "packageHash": "N8Mr54UCYVnr7WPZ5ztJpo4wEx0ls8u9HnnNnlGJbWguRJVxSdB9Je497JKCr91reAiGAyazmSBV9Q+AMM7irA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30067,
  "projectUrl": "https://github.com/Zelyutin/SampSharp.RakNet",
  "published": "2020-12-12T12:49:26.327Z",
  "releaseNotes": "- Fixed RPC blocking didn't work\n- Fixed a bug (#10) that was making WriteString using impossible.\n- Updated SampSharp to 0.8.0. Not there's no need to add IHasClient to your GameMode as Client is public in SampSharp.",
  "requireLicenseAcceptance": false,
  "title": "Pawn.RakNet Wrapper for SampSharp",
  "verbatimVersion": "1.0.2",
  "version": "1.0.2",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json#dependencygroup/.netstandard2.0",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json#dependencygroup/.netstandard2.0/sampsharp.core",
          "@type": "PackageDependency",
          "id": "SampSharp.Core",
          "range": "[0.8.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json#dependencygroup/.netstandard2.0/sampsharp.gamemode",
          "@type": "PackageDependency",
          "id": "SampSharp.GameMode",
          "range": "[0.8.0, )"
        }
      ],
      "targetFramework": ".NETStandard2.0"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json#SampSharp.RakNet.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 641,
      "fullName": "SampSharp.RakNet.nuspec",
      "length": 1340,
      "name": "SampSharp.RakNet.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json#lib/netstandard2.0/SampSharp.RakNet.dll",
      "@type": "PackageEntry",
      "compressedLength": 18221,
      "fullName": "lib/netstandard2.0/SampSharp.RakNet.dll",
      "length": 52224,
      "name": "SampSharp.RakNet.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.12.12.12.51.05/sampsharp.raknet.1.0.2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "vulnerabilities": {
      "@id": "vulnerability",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}