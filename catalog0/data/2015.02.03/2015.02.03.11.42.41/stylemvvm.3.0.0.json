{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.11.42.41/stylemvvm.3.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ian Johnson",
  "catalog:commitId": "00d0df6d-ba59-490a-a90c-abf6d9821689",
  "catalog:commitTimeStamp": "2015-02-03T11:42:41.2014216Z",
  "copyright": "Copyright 2013 Ian Johnson",
  "created": "2013-06-17T00:05:04.917Z",
  "description": "StyleMVVM is a full featured MVVM framework designed from the ground up for the Windows Store platform (C#, C++ and HTML/JS supported). StyleMVVM has now been ported to Windows Phone 8 and WPF (.Net 4.5).",
  "id": "StyleMVVM",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://stylemvvm.codeplex.com/license",
  "packageHash": "Se9PnFk4L3Vzpm7j4iFn0yl+fkX1m79s6RpkssqPfhVwjNmpJ9juyMa3R2NH4VTpd8VjwU9y3u9xaEVyLDknDw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 638992,
  "projectUrl": "https://stylemvvm.codeplex.com/",
  "published": "2013-06-17T00:05:04.917Z",
  "releaseNotes": "This is a major feature change release centered around the DI container. Support for Conditional Exports similar to ninject, IExportPipelineHandler interface was add, IInjectContext for overriding imports and much more. Note: this is a breaking change for C++ libraries, the signature for ExportFunction has changed to include the IInjectionContext. Also StyleMVVM.WPF was renamed to StyleMVVM.DotNet",
  "requireLicenseAcceptance": true,
  "summary": "This is the WinRT component of StyleMVVM, it can be used in C#, C++ and HTML/JS project types.",
  "title": "StyleMVVM",
  "version": "3.0.0",
  "tags": [
    "mvvm",
    "Metro",
    "winrt",
    "win8",
    "winmd",
    "C#",
    "C++/CX",
    "HTML/JS",
    ".Net",
    "WPF",
    "WindowsPhone8"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}