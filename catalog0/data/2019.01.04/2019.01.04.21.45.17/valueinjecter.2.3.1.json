{
  "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Valentin Plamadeala,Vadim Plamadeala",
  "catalog:commitId": "a419f8cd-e2e3-45d6-a856-149844802853",
  "catalog:commitTimeStamp": "2019-01-04T21:45:17.8429225Z",
  "created": "2012-06-27T20:01:43.337Z",
  "description": "ValueInjecter lets you define your own convention-based matching algorithms (ValueInjections) in order to match up (inject) source values to destination values. It is used for mapping Dto to Entity and back also for mapping IDataReader to objects, windows forms to object, basically anything. Also has support for flattening and unflattening.",
  "id": "valueinjecter",
  "isPrerelease": false,
  "lastEdited": "2019-01-04T21:45:03.157Z",
  "listed": true,
  "packageHash": "u5VsZ6uUobyPAZ5dp+BGGxX1Zqkg1C0oAveN2xWe4q5tt9tPfY9BpBOnUdBk8Xc8Fcl+ZHJrBZge0hPdWiJhTw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 54901,
  "projectUrl": "http://valueinjecter.codeplex.com",
  "published": "2012-06-27T20:01:46.713Z",
  "requireLicenseAcceptance": false,
  "summary": "convention based mapper",
  "title": "ValueInjecter",
  "verbatimVersion": "2.3.1",
  "version": "2.3.1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#valueinjecter.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 604,
      "fullName": "valueinjecter.nuspec",
      "length": 938,
      "name": "valueinjecter.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#lib/net35/Omu.ValueInjecter.dll",
      "@type": "PackageEntry",
      "compressedLength": 11340,
      "fullName": "lib/net35/Omu.ValueInjecter.dll",
      "length": 19968,
      "name": "Omu.ValueInjecter.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#lib/net35/Omu.ValueInjecter.XML",
      "@type": "PackageEntry",
      "compressedLength": 1264,
      "fullName": "lib/net35/Omu.ValueInjecter.XML",
      "length": 7778,
      "name": "Omu.ValueInjecter.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#lib/sl3/Omu.ValueInjecter.Silverlight.dll",
      "@type": "PackageEntry",
      "compressedLength": 12198,
      "fullName": "lib/sl3/Omu.ValueInjecter.Silverlight.dll",
      "length": 22016,
      "name": "Omu.ValueInjecter.Silverlight.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#lib/sl3/Omu.ValueInjecter.Silverlight.XML",
      "@type": "PackageEntry",
      "compressedLength": 1200,
      "fullName": "lib/sl3/Omu.ValueInjecter.Silverlight.XML",
      "length": 7851,
      "name": "Omu.ValueInjecter.Silverlight.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#valueinjecter.2.3.nupkg",
      "@type": "PackageEntry",
      "compressedLength": 15197,
      "fullName": "valueinjecter.2.3.nupkg",
      "length": 15512,
      "name": "valueinjecter.2.3.nupkg"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2019.01.04.21.45.17/valueinjecter.2.3.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9457,
      "fullName": ".signature.p7s",
      "length": 9457,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "mapper",
    "convention"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}