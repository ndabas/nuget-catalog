{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Rox Software Pty Ltd",
  "catalog:commitId": "7ba2eacb-35ef-48f4-888c-93a0f1ddb2f8",
  "catalog:commitTimeStamp": "2016-07-24T14:31:32.0675635Z",
  "copyright": "©2016 Rox Software Pty Ltd",
  "created": "2016-07-24T14:31:00.073Z",
  "description": "View videos in Xamarin Forms with the VideoView control. Supports Android, iOS, and UWP only.\n\nThe VideoView control uses native controls on each platform. VideoView for Android, AVPlayerViewController for iOS, and MediaElement for UWP.\n\nThe VideoView control in its simplest form can be used with the built-in controller. The VideoView control can also be bound to your own custom controller. It is not currently recommended that both the built-in controller and a custom controller are used at the same time.\n\nAs of 1.0.1, the VideoView.VideoSource property is of type ImageSource. This means you can set the VideoSource in the same way you would set the Image.Source property, including being able to use ImageSource.FromResource().\n----------------\nXAML Usage:\n----------------\nxmlns:roxv=\"clr-namespace:Rox;assembly=Rox.Xamarin.Video.Portable\"\n\n<roxv:VideoView AutoPlay=\"True\" LoopPlay=\"True\" ShowController=\"True\" VideoSource=\"http://www.sample-videos.com/video/mp4/720/big_buck_bunny_720p_1mb.mp4\" />\n----------------\nIn your iOS project \"AppDelegate\" code file, you must call \"Rox.VideoIos.Init()\" before \"Xamarin.Forms.Forms.Init()\". It should look something like:\n----------------\nRox.VideoIos.Init();\n\nglobal::Xamarin.Forms.Forms.Init();\n\nLoadApplication(new MyVideoApplication());\n----------------\nThe VideoView has the following methods:\n - Task Start(); (Start playing the video)\n - Task Pause(); (Pause and Resume playing of video)\n - Task Stop(); (Stop playing the video)\n\nThe VideoView has the following bindable properties:\n - bool AutoPlay { get; set; } (Automatically starts playing the video, when video has finished loading)\n - bool LoopPlay { get; set; } (Start playing the video again from the start, once it has finished)\n - bool Muted { get; set; } (Mutes the volume)\n - bool ShowController { get; set; } (Determines if the built-in controller is visible)\n - VideoStateType VideoState { get; } (Empty, Error, Buffering, Playing, Paused, Stopped)\n----------------\n[1.0.0]\n - string VideoSource { get; set; } (Must be a valid URI)\n----------------\n[1.0.1]\n - ImageSource VideoSource { get; set; } (See Xamarin article \"Working with Images\")\n----------------\n - double Volume { get; set; } (The sound level of the audio, from 0 to 1)\n----------------\nCommon Questions:\n Q: Why is the pcl named \".Portable\"?\n A: There is a .NETStandardv1.4 version ready to go, I am just waiting to see what happens with \"project.json\".\n\n Q: Do I get paid cos you used a picture of my dog?\n A: You can have all the profits made from this component. So, no Tim, you don't.\n\n Q: Would you like another coffee?\n A: Don't ask, give.\n----------------\nWhat people are saying about the VideoView control:\n - \"It is awesome\" - me\n - \"I don't know what you're talking about\" - random guy on the street\n - \"I wanna punch that rabbit in the head\" - my brother\n - \"That's nice, dear\" - my mum\n - \"It's better than Lego™\" - me\n - \"But I can already watch p0rn on my phone\" - name withheld (see I didn't tell them your name, Gav)\n - \"I don't know what you're talking about, and NO! I do not want to go back to your place and make our own video, creep\" - random girl on the street\n - \"I am pretty sure this will revolutionise the IT industry\" - me\n - \"If you don't shut up I will punch YOU in the head\" - my brother\n - \"What do you mean by a zammering video? Sounds like something I can't click on at work.\" - Sid\n - \"Do you have to keep playing that same stupid rabbit video over and over?\" - Tim\n - \"I think your dog wants to eat that rabbit\" - John (to Tim)\n - \"Hey, this isn't the place to have a conversation\" - me\n\nNOTE: All Rox.Xamarin components support Xamarin.Forms for Android, iOS, and UWP only. Possible future support for OSX.",
  "iconUrl": "https://www.rox.software/images/PrettyPuppy_128_128.png",
  "id": "Rox.Xamarin.Video",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://www.rox.software/",
  "listed": true,
  "minClientVersion": "2.8.1",
  "packageHash": "2tfvDSoLAIU14+/7QLz4XYh7GTXfN/BYPbtLBCKCrjXHZLMN0pAbMWQWPydAHEfIFjwe2NNgpXgVCer1RwAalA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 1215595,
  "projectUrl": "https://www.rox.software/",
  "published": "2016-07-24T14:31:00.073Z",
  "releaseNotes": "[1.0.1-pre3]\n - Volume property implemented on Android\n - Volume property implemented on iOS\n - Muted property implemented on Android\n - Muted property implemented on iOS\n - Created VideoStateChangedCommand property\n - Fixed StorageFile bug in UWP\n \nKnown Issues:\n - StreamImageSource property is not implemented for Android and iOS (Works for UWP)\n - If you use binding for your own controller AND use ShowController set to True some changes will not be reflected from the built-in controller (eg Volume). It is currently recommended that if you use bindings for your own controller then make sure ShowController is set to False\n\n[1.0.1-pre2]\n - VideoState property implemented for Android\n - VideoState property implemented for iOS\n\n[1.0.1-pre1]\n - Converted VideoSource property from string to ImageSource\n\n[1.0.0]\n - Moved to first release\n\n[1.0.0-beta1]\n - Moved into beta version, as is working solid with ShowController set to true\n\n[1.0.0-alpha7]\n - Did some testing on all platforms and fixed stuff\n - Fixed Android bug that stopped it working in alpha6\n - Fixed Android LoopPlay property, which was not working correctly\n - Fixed UWP AutoPlay property, which was not working correctly\n\n[1.0.0-alpha6]\n - Added ShowController property\n\n[1.0.0-alpha5]\n - LoopPlay for Android implemented\n - The VideoSource for iOS can now be a FileName\n - VideoState property implemented for UWP\n - Added Volume and Muted properties\n\n[1.0.0-alpha4]\n - Now listening for property changes in native renderers for VideoView properties\n\n[1.0.0-alpha3]\n - iOS supports LoopPlay\n - iOS video controller buttons are no longer shown\n\n[1.0.0-alpha2]\n - Dependency on Xamarin Forms 2.3.0.107 (This could be lower, need to test)\n - Supports AutoPlay, Start, Pause, Stop\n - UWP Supports LoopPlay",
  "requireLicenseAcceptance": false,
  "summary": "View videos in Xamarin Forms with the VideoView control. Android, iOS, and UWP.",
  "title": "Rox Xamarin Video",
  "verbatimVersion": "1.0.1-pre3",
  "version": "1.0.1-pre3",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json#dependencygroup/xamarin.forms",
          "@type": "PackageDependency",
          "id": "Xamarin.Forms",
          "range": "[2.3.0.107, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json#Rox.Xamarin.Video.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2708,
      "fullName": "Rox.Xamarin.Video.nuspec",
      "length": 6708,
      "name": "Rox.Xamarin.Video.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json#nuget.exe",
      "@type": "PackageEntry",
      "compressedLength": 1209109,
      "fullName": "nuget.exe",
      "length": 3957976,
      "name": "nuget.exe"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json#Rox.Xamarin.Video.Pack.bat",
      "@type": "PackageEntry",
      "compressedLength": 107,
      "fullName": "Rox.Xamarin.Video.Pack.bat",
      "length": 136,
      "name": "Rox.Xamarin.Video.Pack.bat"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.07.24.14.31.32/rox.xamarin.video.1.0.1-pre3.json#Rox.Xamarin.Video.Push.bat",
      "@type": "PackageEntry",
      "compressedLength": 163,
      "fullName": "Rox.Xamarin.Video.Push.bat",
      "length": 205,
      "name": "Rox.Xamarin.Video.Push.bat"
    }
  ],
  "tags": [
    "xamarin",
    "forms",
    "xamarin.forms",
    "xam",
    "plugin",
    "media",
    "video",
    "player",
    "portable",
    "pcl",
    "uap",
    "uwp",
    "win10",
    "android",
    "ios"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}