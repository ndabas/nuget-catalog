{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.04.17.14.22/owin.requireshttps.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Jonathan Channon",
  "catalog:commitId": "621b6bfc-a3ed-4555-9efa-82bd72dabb7f",
  "catalog:commitTimeStamp": "2015-02-04T17:14:22.7949687Z",
  "created": "2014-02-05T15:58:23.837Z",
  "description": "An OWIN middleware component to determine HTTPS requests.\n\nIf the request is https then the middleware will call the next item in the queue otherwise a HTTP Status Code of 401 is returned and the request is ended.\n\nThere is an optional RequiresHttpsOptions tool which will route any http traffic to a https location if specified",
  "id": "Owin.RequiresHttps",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/jchannon/Owin.RequiresHttps/blob/master/LICENSE",
  "packageHash": "FaZrq8062JzCNvcLHKort/rnhmMfYrNpe2XOBv3DIpP8cvtWct9xL2asmYn/QSYhWmgOABCzK7ug3RUMGcNFDA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 5338,
  "projectUrl": "https://github.com/jchannon/Owin.RequiresHttps/",
  "published": "2014-02-05T15:58:23.837Z",
  "requireLicenseAcceptance": false,
  "summary": "An OWIN middleware component to determine HTTPS requests.",
  "title": "Owin.RequiresHttps",
  "version": "1.0.0",
  "tags": [
    "owin",
    "https"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}