{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.17.17.48.26/percolatoranalysisservices.0.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Matt Hallmark",
  "catalog:commitId": "40ead5d1-dcd7-4efc-9c3d-edbe7b47737b",
  "catalog:commitTimeStamp": "2015-02-17T17:48:26.7496769Z",
  "copyright": "Copyright Â©  2014, CoopDIGITy Inc",
  "created": "2015-02-17T17:33:53.937Z",
  "description": "A LINQ to MDX Psued-O-RM for Microsoft SQL Server Analysis Services",
  "iconUrl": "http://www.coopdigity.com/wp-content/uploads/2014/04/logo3.png",
  "id": "PercolatorAnalysisServices",
  "isPrerelease": false,
  "lastEdited": "2015-02-17T17:48:14.78Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "packageHash": "T6u0Tja+gvvwH7zBkbfXoLc4liyzxZwLse/ArxiZzGzjY2ypEdFiO0dILMe92v1SbDdx+ZVhEMjPs7AZDxSi+Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 62714,
  "projectUrl": "http://www.coopdigity.com/products/percolator-analysis-services/",
  "published": "2015-02-17T17:33:53.937Z",
  "releaseNotes": "Finally, a way to query a Microsoft SQL Server Analysis Database with LINQ and type safe objects! \n\nBeta version - Comes without any warranties.  Please contact me via the \"Contact Owners\" link for any questions, comments, bugs, or features you think should be included. Any input is GREATLY appreciated. Make sure to read the \"Documentation\" text file that is included with the package. \n\nBeta Version 0.2!\n\n\n\nFixes: \n    -Hierarchies now translate instead of resulting in an empty string.\n    -Level members are now specified with multiple indexes.\n    -Cube names are now correctly referenced from the attribute, not the type name.\n\t\nChanges:\n\n    -Namespace changes\n        *Percolator.AnalysisServices\n            -Contains some base classes in the library.\n        *Percolator.AnalysisServices.Linq\n            -Contains the bulk of the objects used in MDX queries, as well as some other functionality.\n        *Percolator.AnalysisServices.Attributes\n            -Contains various attributes like the \"Tag\" or \"MapTo\" attributes.\n   \n    -TT Generator changed to only generate each dimension once, and then distribute each dimension to each cube thats uses said dimensions.\n    \n   -TT file allows the user to choose on generating non visible objects.\n\t\nFeatures: \n    -Added \"Create\" static method to sets and members for easy assembly.\n    \n    -PAS explicit changes\n\t*New methods replace old clunky ones. \"OnRows\" and \"OnColumns\" have been replaced with \"OnAxis\", and the other methods have changed as well to reflect a more \"Linq-ish\" query approach.\n\t*Object mapping via the \"Percolate<>\" method now allows the user to map to an object when the axis selections are no more than two.\n    \n    -Added extension methods to set Non Empty axes in LINQ query\n    \n    -Operator overloads - \"*\" and \"&\" - now allow the user to create cross joined and tuple sets on the fly.",
  "requireLicenseAcceptance": true,
  "summary": "A LINQ to MDX Psued-O-RM for Microsoft SQL Server Analysis Services",
  "title": "Percolator Analysis Services (Beta)",
  "version": "0.2.1",
  "tags": [
    "mdx",
    "linq",
    "linqtomdx",
    "orm",
    "percolator",
    "PAS",
    "mdxorm",
    "mdxlinq",
    "ssas"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}