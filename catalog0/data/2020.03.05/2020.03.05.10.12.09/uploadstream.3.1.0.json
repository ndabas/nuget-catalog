{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Mark Alford",
  "catalog:commitId": "604fb017-73af-49ac-a737-fe2672867b43",
  "catalog:commitTimeStamp": "2020-03-05T10:12:09.6859165Z",
  "created": "2020-03-05T10:06:25.47Z",
  "deprecation": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json#deprecation",
    "reasons": [
      "Legacy"
    ]
  },
  "description": "Optimise multi-part streaming file upload performance, offering 10x improvement in performance, and reduced memory allocation (10%-40%).\n\nBy default dotnet model form model binding loads the entire stream into memory using `IEnumerable<IFormFile>` - this is non-ideal for large files\nwhere processing of the stream should occur during streaming rather then buffering entire file(s) to memory/disk.\n\nThis package allows upload streams to be asynchronously processed via a delegate (`StreamFiles<T>(Action<IFormFile> func)`,\nmaintaining generic model binding functionality with `ModelState` validation.\n\n## Usage\n```csharp\n[HttpPost(\"upload\")]\npublic async Task<IActionResult> Upload() {\n    // returns a generic typed model, alternatively non-generic overload if no model binding is required\n    MyModel model = await this.StreamFiles<MyModel>(async formFile => {\n        // implement processing of stream as required via an IFormFile interface\n        using (var stream = formfile.OpenReadStream())\n            await ...\n    });\n    // ModelState is still validated from model\n    if(!ModelState.IsValid)\n        ...\n}\n```",
  "frameworkReferences": "",
  "id": "UploadStream",
  "isPrerelease": false,
  "lastEdited": "2020-03-05T10:12:06.64Z",
  "licenseFile": "LICENCE",
  "licenseUrl": "https://aka.ms/deprecateLicenseUrl",
  "listed": true,
  "packageHash": "wKZuwWcdor5m7QWR2gt+AYkq8H9zyy6rIcf5RTrUk+Ess/bIzRp7pFXPnKXs0plPq7s8xOEquZjNg+UX8SVvdw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20292,
  "projectUrl": "https://github.com/ma1f/uploadstream",
  "published": "2020-03-05T10:06:25.47Z",
  "repository": "",
  "requireLicenseAcceptance": false,
  "title": "UploadStream - high performance file upload streaming for dotnet",
  "verbatimVersion": "3.1.0",
  "version": "3.1.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json#dependencygroup/.netcoreapp3.1",
      "@type": "PackageDependencyGroup",
      "targetFramework": ".NETCoreApp3.1"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json#UploadStream.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1039,
      "fullName": "UploadStream.nuspec",
      "length": 2153,
      "name": "UploadStream.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json#lib/netcoreapp3.1/UploadStream.dll",
      "@type": "PackageEntry",
      "compressedLength": 6768,
      "fullName": "lib/netcoreapp3.1/UploadStream.dll",
      "length": 14848,
      "name": "UploadStream.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json#LICENCE",
      "@type": "PackageEntry",
      "compressedLength": 649,
      "fullName": "LICENCE",
      "length": 1115,
      "name": "LICENCE"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.03.05.10.12.09/uploadstream.3.1.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9460,
      "fullName": ".signature.p7s",
      "length": 9460,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "File",
    "Upload"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}