{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.07.16.33.51/dynamicexpresso.core.1.3.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Davide Icardi",
  "catalog:commitId": "2e318959-b791-449d-917c-9c61c0808647",
  "catalog:commitTimeStamp": "2015-02-07T16:33:51.5593086Z",
  "created": "2015-01-18T14:33:29.527Z",
  "description": "Dynamic Expresso is an interpreter for simple C# statements. Dynamic Expresso embeds its own parsing logic, really interprets C# statements by converting it to .NET lambda expressions or delegates.\nUsing Dynamic Expresso developers can create scriptable applications, execute .NET code without compilation or create dynamic linq statements.\nStatements are written using a subset of C# language specifications. Global variables or parameters can be injected and used inside expressions. It doesn't generate assembly but it creates an expression tree on the fly.",
  "id": "DynamicExpresso.Core",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "rqshm2qpyiHPPGV+TpbZRDsO+4hYGhKGc3Sy+OCuLJhdJquaYkz/75xWnBljGyWYZxVih75uKnGfpa0ObVQq2Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30978,
  "projectUrl": "https://github.com/davideicardi/dynamicexpresso",
  "published": "2015-01-18T14:33:29.527Z",
  "requireLicenseAcceptance": false,
  "summary": "C# expression interpreter/evaluator",
  "version": "1.3.0",
  "tags": [
    "dynamic",
    "expresso",
    "expression",
    "linq",
    "eval"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}