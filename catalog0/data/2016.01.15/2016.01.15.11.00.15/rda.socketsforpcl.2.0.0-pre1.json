{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.15.11.00.15/rda.socketsforpcl.2.0.0-pre1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Ryan Davis",
  "catalog:commitId": "6fa9a53c-4280-47c3-8494-3a7589383a9c",
  "catalog:commitTimeStamp": "2016-01-15T11:00:15.7769316Z",
  "copyright": "2015 Ryan Davis",
  "created": "2016-01-15T10:59:57.663Z",
  "description": "Cross-platform socket API for Xamarin iOS/Android/Forms, Xamarin.Mac/MonoMac, Windows Phone 8/8.1, Windows Store, UWP and Windows Desktop. Includes support for TCP and UDP listeners and clients, as well as UDP multicast.",
  "iconUrl": "https://raw.githubusercontent.com/rdavisau/sockets-for-pcl/master/_meta/icon/icon.png",
  "id": "rda.SocketsForPCL",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "https://raw.githubusercontent.com/rdavisau/sockets-for-pcl/master/LICENSE.md",
  "listed": true,
  "minClientVersion": "2.8.1",
  "packageHash": "aAIwfLU1nQxUPx0/KpmSUpaKiulcqrdQnNnz05s8/HaZdzL0y6mibNiouRwnPp+LwLyVF3jqyabQVtzeeDmAuA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 337765,
  "projectUrl": "https://github.com/rdavisau/sockets-for-pcl",
  "published": "2016-01-15T10:59:57.663Z",
  "releaseNotes": "2.0.0-pre1 (2016-01-11)\n\nKnown Issues: \n\n- A `SocketException` class has been added, allowing socket-related exceptions to be caught from PCL code. In this prerelease, this works for WinRT/UWP platforms only. \n\nDeprecations:\n\n- Support for the iOS \"Classic\" API has been removed\n\nFeatures: \n\n- It is now possible to retrieve the `ICommsInterface` that a `TcpSocketClient` is connected via. Thanks @fubar-coder\n- Auto-properties have been replaced with proper events across all classes. Thanks @Waty\n- `TcpSocketClient`'s `ConnectAsync` method optionally takes a `CancellationToken` to support client-invoked cancellation and scenarios like timeout. Thanks @SparkStream\n- You may now specify a service name rather than port when connecting with a `TcpSocketClient`. Thanks @SparkStream\n- For those that need it, you can access the underlying .NET or WinRT/UWP socket instance from native (non-PCL) projects. Thanks @SparkStream\n- `UdpSocketClient` can now receive response packets. This simplifies scenarios where you don't need to listen for new packets, but do need to receive response packets. Thanks @SatoshiARA\n- All the Udp socket classes now include a `Send-` overload that allows you to specify the number of bytes to be read from the input. This can avoid the need to duplicate a buffer when working with streams. Thanks @jasells\n\nBugfixes: \n\n- Fixed `InvalidCastException` being thrown by `TcpSocketListener.Dispose()`. Thanks @Waty\n- Fix for a rare issue where the Udp classes could throw an exception after receiving an ICMP unreachable packet in certain cases\n\nOther:\n\n- sockets-for-pcl can now also be installed via the Xamarin Component Store. Thanks @mattleibow",
  "requireLicenseAcceptance": false,
  "summary": "Cross-platform TCP and UDP socket API for Xamarin iOS/Android/Forms, Xamarin.Mac/MonoMac, Windows Phone 8/8.1, Windows Store, UWP and Windows Desktop.",
  "title": "Sockets Plugin for Xamarin and Windows (PCL)",
  "verbatimVersion": "2.0.0-pre1",
  "version": "2.0.0-pre1",
  "tags": [
    "sockets",
    "tcp",
    "udp",
    "multicast",
    "xamarin",
    "pcl",
    "windows",
    "phone",
    "winphone",
    "wp8",
    "winrt",
    "uwp",
    "android",
    "xamarin.forms",
    "ios",
    "xamarin.mac",
    "monomac",
    "linqpad-samples"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}