{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.21.20.11/morecomplexdatastructures.1.4.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Alastair Wyse",
  "catalog:commitId": "00a37678-55c5-4095-af4f-1c0c7c5f040b",
  "catalog:commitTimeStamp": "2018-12-18T21:20:11.4293216Z",
  "copyright": "Copyright Alastair Wyse 2018",
  "created": "2018-02-10T14:48:44.863Z",
  "description": "MoreComplexDataStructures is a class library containing a collection of data structures (plus related utility classes) more complex than those found in the standard .NET framework.\n\nThe project currently contains the following data structures and utility classes...\n\nWeightBalancedTree - An implementation of a weight-balanced tree.  Although self-balancing is not yet implemented, the tree maintains counts of the nodes in each node's subtrees.  This allows methods GetCountGreaterThan(T item) and GetCountLessThan(T item) (which return the number of items greater than and less than a specified item) to return with order O(log(n)) time complexity.  The class also provides methods to perform pre, post, and in-order depth-first search, and breadth-first search.\n\nMinHeap / MaxHeap - Tree-based implementations of a min and max heap.  Insert() and ExtractMin() / ExtractMax() methods return with order O(log(n)) time complexity.  Also provides methods to traverse the nodes of the underlying trees via a breadth-first search.\n\nLongIntegerStatusStorer - Stores a true/false status for a complete set of long (Int64) integers.  Uses an underlying tree holding ranges of integers to store the statuses.  Also provides a method TraverseTree() to traverse the ranges stored in the tree via a breadth-first search.\n\nListRandomizer - Randomizes a List or Array using the Fisher/Yates/Knuth algorithm (O(n) time complexity).\n\nWeightedRandomGenerator - Returns items randomly based on configured weightings.  The underlying implementation uses a tree, so the Generate() method returns with order O(log(n)) time complexity (where n is the number of weightings defined).\n\nTrie - An implementation of trie / prefix tree.  Nodes of the trie maintain a count of the number of sequences in each subtree, hence the GetCountOfSequencesWithPrefix() method returns a list of sequences with the specified prefix with order O(n) time complexity (where n is the number of elements in the prefix sequence).\n\nFrequencyTable - A simple (Dictionary-based) frequency table, which stores the frequency of occurrence of objects.\n\nBinarySearchTreeBalancedInserter - Inserts a set of items into a binary search tree, ensuring that the tree is balanced, and depth is minimized.",
  "id": "MoreComplexDataStructures",
  "isPrerelease": false,
  "lastEdited": "2018-12-18T21:19:52.53Z",
  "licenseUrl": "http://www.apache.org/licenses/LICENSE-2.0.html",
  "listed": true,
  "packageHash": "80qP/ykttluWG1kBTNXKsMSdpGwrRrl8Lq2vmbmCU9Ofdcen9Yh8AFWWBHog1LoQJ+8tD/fVhmZKoaRzta+gRg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 40379,
  "projectUrl": "https://github.com/alastairwyse/MoreComplexDataStructures/",
  "published": "2018-02-10T14:48:44.863Z",
  "requireLicenseAcceptance": false,
  "summary": "MoreComplexDataStructures is a class library containing a collection of data structures more complex than those found in the standard .NET framework.",
  "verbatimVersion": "1.4.0",
  "version": "1.4.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.21.20.11/morecomplexdatastructures.1.4.0.json#MoreComplexDataStructures.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1344,
      "fullName": "MoreComplexDataStructures.nuspec",
      "length": 3201,
      "name": "MoreComplexDataStructures.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.21.20.11/morecomplexdatastructures.1.4.0.json#lib/net45/MoreComplexDataStructures.dll",
      "@type": "PackageEntry",
      "compressedLength": 16827,
      "fullName": "lib/net45/MoreComplexDataStructures.dll",
      "length": 41984,
      "name": "MoreComplexDataStructures.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.21.20.11/morecomplexdatastructures.1.4.0.json#lib/net45/MoreComplexDataStructures.xml",
      "@type": "PackageEntry",
      "compressedLength": 9842,
      "fullName": "lib/net45/MoreComplexDataStructures.xml",
      "length": 83307,
      "name": "MoreComplexDataStructures.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.18.21.20.11/morecomplexdatastructures.1.4.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "data",
    "structure",
    "weight",
    "weighted",
    "tree",
    "minheap",
    "maxheap",
    "trie",
    "frequency",
    "table",
    "long",
    "integer",
    "int64",
    "random",
    "randomize",
    "list",
    "array"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}