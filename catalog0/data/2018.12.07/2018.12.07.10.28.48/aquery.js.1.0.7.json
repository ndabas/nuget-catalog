{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.10.28.48/aquery.js.1.0.7.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Daniel Henry",
  "catalog:commitId": "3b2856cc-eb91-4ae1-b57e-96ea4020a134",
  "catalog:commitTimeStamp": "2018-12-07T10:28:48.4213573Z",
  "created": "2014-07-20T23:33:37.78Z",
  "description": "aQuery.js is a JavaScript Array Library that is designed to work with modern browsers, not so modern browsers, and node.js. It's fast, easy to use, free, and already familiar to folks that know jQuery and Microsoft.NET LINQ.",
  "id": "aQuery.js",
  "isPrerelease": false,
  "lastEdited": "2018-12-07T10:28:08.58Z",
  "listed": true,
  "packageHash": "NmyXlVoaIDIS+WoDLdRBPTaBASDv8+Dp3gzAaRX7ApNnQsW8pTGJAQyLbQyybfQ78aQv93JeCjHEMMZox6GmNQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 23184,
  "projectUrl": "https://aqueryjs.codeplex.com/",
  "published": "2014-07-20T23:33:37.78Z",
  "releaseNotes": "aQuery.js 1.0.7 is an enhancement and fix release that contains breaking changes.\n\n* Breaking: The sequenceEqual method now behaves exactly as its LINQ counterpart does: the elements of both sets must be in the same order for them to be considered equal. If you want to reproduce the previous behavior, use the except method in both directions to see if either yields an aQuery object with a count result greater than zero.\n* Added the concat method. It will make use of the concat method of the Array prototype if it is there.\n* The all method will now make use of the every method of the Array prototype if it is there.\n* The any method will now make use of the some method of the Array prototype if it is there.\n* The each method will now make use of the forEach method of the Array prototype if it is there.\n* The first, firstOrDefault, last, and lastOrDefault methods will now make use of the find method of the Array prototype if it is there.\n* The firstIndex and lastIndex methods will now make use of the findIndex method of the Array prototype if it is there.\n* The select method will now make use of the map method of the Array prototype if it is there.\n* The where method will now make use of the filter method of the Array prototype if it is there.\n* We now always invoke the Array prototype's methods rather than invoking them off of Array instances directly because we're suspicious of bad polyfills and other non-sense!\n* Errors are now thrown as error objects rather than strings.\n* Added multiple VSDOC method signatures to methods with optional arguments and specified expected return type for each.\n* Douglas Crockford will no longer be upset about our blatant non-use of brackets for conditional single statements.",
  "requireLicenseAcceptance": false,
  "title": "aQuery.js",
  "verbatimVersion": "1.0.7",
  "version": "1.0.7",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.10.28.48/aquery.js.1.0.7.json#aQuery.js.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1045,
      "fullName": "aQuery.js.nuspec",
      "length": 2520,
      "name": "aQuery.js.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.10.28.48/aquery.js.1.0.7.json#content/Scripts/aQuery-1.0-min.js",
      "@type": "PackageEntry",
      "compressedLength": 3113,
      "fullName": "content/Scripts/aQuery-1.0-min.js",
      "length": 15928,
      "name": "aQuery-1.0-min.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.10.28.48/aquery.js.1.0.7.json#content/Scripts/aQuery-1.0.js",
      "@type": "PackageEntry",
      "compressedLength": 6752,
      "fullName": "content/Scripts/aQuery-1.0.js",
      "length": 63915,
      "name": "aQuery-1.0.js"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.07.10.28.48/aquery.js.1.0.7.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9464,
      "fullName": ".signature.p7s",
      "length": 9464,
      "name": ".signature.p7s"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}