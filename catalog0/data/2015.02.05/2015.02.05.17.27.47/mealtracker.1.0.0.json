{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.05.17.27.47/mealtracker.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "John Yom",
  "catalog:commitId": "44b058f5-12d9-4634-85b8-ef8dbb9ed01f",
  "catalog:commitTimeStamp": "2015-02-05T17:27:47.3035688Z",
  "copyright": "John Yom",
  "created": "2014-06-27T08:43:54.237Z",
  "description": "Package consists of a Visual Studio solution containing a simple meal-tracking app built using VS2013, MVC4, REST/Web API, Entity Framework, and SQL Server 2008.  It contains client-side and server-side data validation and demonstrates user accounts with varying permissions. Only the administrator role can perform adds, updates, and deletes of plates, but all users may create meals.",
  "id": "MealTracker",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "packageHash": "6dPrf++nqGk+aTIFAEp26jzOZD0dlXjzwz1hoyuUb7UCduMQNH3f68gt2ll75gsXSUmU2iUwRvVNtNFIxwi3JQ==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30830336,
  "published": "2014-06-27T08:43:54.237Z",
  "requireLicenseAcceptance": false,
  "summary": "MealTracker is a simple app that allows users to keep track of their meals, more specifically recording the plates and prices associated with the meals they ate.",
  "title": "MealTracker",
  "version": "1.0.0",
  "tags": [
    "VS2013",
    "MVC4",
    "Web",
    "API",
    "Entity",
    "Framework",
    "REST",
    "SQL",
    "Server",
    "2008"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}