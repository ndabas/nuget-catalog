{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.27.07.04.14/typescript.net.1.0.50225-beta.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sergey Baranchenkov",
  "catalog:commitId": "1cf7e563-3370-4525-91a5-216fe41337f3",
  "catalog:commitTimeStamp": "2015-02-27T07:04:14.4424085Z",
  "created": "2015-02-27T07:03:11.47Z",
  "description": "TypeScript code generator, that generates TypeScript interfaces, classes and enums based on .NET types.",
  "id": "TypeScript.NET",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/Tuatan/typescript/blob/master/LICENSE",
  "packageHash": "ILoFtCA1aqNId1e57lIJinYVFML+ZJMITD9fOLczN2yhRYe8bqskPnGLtdTQVDkN0tAIsfrDHYm54GSZUcdEgw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10551,
  "projectUrl": "https://github.com/Tuatan/typescript/",
  "published": "2015-02-27T07:03:11.47Z",
  "requireLicenseAcceptance": false,
  "summary": "TypeScript code generator, that generates TypeScript interfaces, classes and enums based on .NET types. It does supports generics, inheritance, could handle string/number based dictionaries as maps.",
  "title": "TypeScript Types Generator",
  "version": "1.0.50225-beta",
  "tags": [
    "TypeScript",
    "Generator",
    "POCO",
    "C#",
    ".NET"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}