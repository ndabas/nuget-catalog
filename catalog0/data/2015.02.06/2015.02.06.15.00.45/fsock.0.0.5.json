{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.15.00.45/fsock.0.0.5.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "IntelliFactory",
  "catalog:commitId": "9292ab2f-fd52-4394-871d-d67e5ec44569",
  "catalog:commitTimeStamp": "2015-02-06T15:00:45.1535925Z",
  "copyright": "2008-2014 IntelliFactory",
  "created": "2014-10-08T16:44:20.73Z",
  "description": "Implements a simple API for creating async socket clients and servers that can exchange raw bytes or binary messages. Imagined as a lightweight managed async zeromq replacement focusing on TCP sockets. Strives to be portable to Mono.",
  "id": "FSock",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/intellifactory/fsock/blob/master/LICENSE.md",
  "packageHash": "bB10H+COHs/FtlgJUSYO+q378Zco8mFOvfqLw2Z2ggWpEinF/szqG81HG9JKT/CSTW8dQTSddqcemjEIG8f20Q==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 34506,
  "projectUrl": "https://github.com/intellifactory/fsock/",
  "published": "2014-10-08T16:44:20.73Z",
  "requireLicenseAcceptance": false,
  "summary": "Simple API for communicating async socket clients and servers.",
  "title": "FSock",
  "version": "0.0.5",
  "tags": [
    "sockets",
    "F#",
    "async",
    "ipc"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}