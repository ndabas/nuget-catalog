{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.06.01.44.17/aspose.slides.net.14.6.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Aspose",
  "catalog:commitId": "d276a35a-d758-46e6-92ef-87fb576b16ac",
  "catalog:commitTimeStamp": "2015-02-06T01:44:17.5472148Z",
  "copyright": "ï¿½ Aspose 2002-2013. All Rights Reserved.",
  "created": "2014-08-06T10:21:08.307Z",
  "description": "Aspose.Slides is a PowerPoint management library for working with Microsoft PowerPoint files without using Microsoft PowerPoint. It allows developers to work with PPT, PPS, POT, PPTX, PPSX, POTX and ODP files on ASP.NET web applications, web services and Windows applications.",
  "iconUrl": "http://www.aspose.com/images/products/dotnet/Aspose.Slides_128x128.png",
  "id": "Aspose.Slides.NET",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://www.aspose.com/corporate/purchase/end-user-license-agreement.aspx",
  "packageHash": "i7ApWz+UiUh/GVmDXebRKz3TUZRunFvf/dWUhMBYZphs2x7nN7uk0VG6j3g+o6DbKjHoEtJMAUkkklAJco+T3w==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 20517538,
  "projectUrl": "http://www.aspose.com/.net/powerpoint-component.aspx",
  "published": "2014-08-06T10:21:08.307Z",
  "releaseNotes": "Aspose.Slides for .NET 14.6.0 Release Notes\nWe are pleased to announce the release of Aspose.Slides for .NET 14.6.0. This release includes new functionality and bug fixes.\n\nUsing Aspose.Slides for .NET you can work with PPT, PPTX, OpenDocument, and other formats in your applications. You can also view, generate, modify, convert, render and print presentations all without using Microsoft PowerPoint.\n\nVisit the documentation to learn how to get started with Aspose.Slides for .NET.\n\nNote this download contains a fully working version of the product, however without a license set it will run in evaluation mode. To test Aspose.Slides without these evaluation limitations you can request a free 30-day temporary license.\n\nThe following is a list of changes in this version of Aspose.Slides.\n\nMajor Features\n(SLIDESNET-27375) - Add shapes cloning feature\nMinor Features\n(SLIDESNET-34369) - Support for removing LayoutSlideEx from MasterSlideEx\n(SLIDESNET-35502) - Support to determine if ODP presentations are password protected without loading them\n(SLIDESNET-35496) - Setting slide view type for presentation\n(SLIDESNET-34900) - Support Error Bars in Charts\nOther Improvements and Changes\nBug Fixes\n(SLIDESNET-35556) - OutOfMemory Exception on generating the PDF\n(SLIDESNET-35553) - Improperly axis labels rendering in PDF\n(SLIDESNET-35552) - Downbars are missing in the chart when converting PPTX to PDF\n(SLIDESNET-35551) - Chart missing when converting PPTX to PDF\n(SLIDESNET-35508) - PictureFrame with external linked image doesn't preserve this link when presentation has been resaved\n(SLIDESNET-35497) - FormatException: Input string was not in a correct format when adding\n(SLIDESNET-35491) - PPTX to PDF conversion. Error on Opening the PDF file\n(SLIDESNET-35462) - Exception on PPTX presentation opening\n(SLIDESNET-35425) - Table Formatting getting lost in PPTX to PDF conversion\n(SLIDESNET-35363) - PPTX to BMP Conversion: SmartArt shows wrong text after conversion\n(SLIDESNET-35333) - Portion text contain paragraph break character for an empty paragraph\n(SLIDESNET-35300) - Out of Memory Exception is thrown while saving the PPS to PDF file\n(SLIDESNET-35289) - Dotted line missing when converting PPTX to PDF\n(SLIDESNET-35035) - PPT to XPS: The heading position is not fine in XPS\n(SLIDESNET-33842) - Hyperlinks are lost on exporting PPT to PDF\n(SLIDESNET-33284) - SmartArt rendering is missing in exported PDF\nPublic API Changes\nInterface Aspose.Slides.Charts.IErrorBarsFormat has been added\nRepresents error bars of chart series. \nIn case of custom value type to specify value use ErrorBarCustomValues property of specific data point in DataPoins collection of series.  \n\nusing (Presentation pres = new Presentation())\n{\n    IChart chart = pres.Slides[0].Shapes.AddChart(ChartType.Bubble, 50, 50, 400, 300, true);\n\n    IErrorBarsFormat errBarX = chart.ChartData.Series[0].ErrorBarsXFormat;\n    IErrorBarsFormat errBarY = chart.ChartData.Series[0].ErrorBarsYFormat;\n\n    errBarX.IsVisible = true;\n    errBarY.IsVisible = true;\n\n    errBarX.ValueType = ErrorBarValueType.Fixed;\n    errBarX.Value = 0.1f;\n\n    errBarY.ValueType = ErrorBarValueType.Percentage;\n    errBarY.Value = 5;\n\n    errBarX.Type = ErrorBarType.Plus;\n\n    errBarY.Format.Line.Width = 2;\n\n    errBarX.HasEndCap = true;\n\n    pres.Save(\"ErrorBars.pptx\", SaveFormat.Pptx);\n}\nInterface Aspose.Slides.Charts.IErrorBarsCustomValues has been added\nIn case when IErrorBarsFormat.ValueType property is equal Custom to specify value use ErrorBarCustomValues property of specific data point in DataPoints collection of series.  \n\nusing (Presentation pres = new Presentation())\n{\n    IChart chart = pres.Slides[0].Shapes.AddChart(ChartType.Bubble, 50, 50, 400, 300, true);\n    IChartSeries series = chart.ChartData.Series[0];\n\n    IErrorBarsFormat errBarX = series.ErrorBarsXFormat;\n    IErrorBarsFormat errBarY = series.ErrorBarsYFormat;\n\n    errBarX.IsVisible = true;\n    errBarY.IsVisible = true;\n\n    errBarX.ValueType = ErrorBarValueType.Custom;\n    errBarY.ValueType = ErrorBarValueType.Custom;\n\n    IChartDataPointCollection points = series.DataPoints;\n\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForXPlusValues = DataSourceType.DoubleLiterals;\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForXMinusValues = DataSourceType.DoubleLiterals;\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForYPlusValues = DataSourceType.DoubleLiterals;\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForYMinusValues = DataSourceType.DoubleLiterals;\n\n    for (int i = 0; i < points.Count; i++)\n    {\n        points[i].ErrorBarsCustomValues.XMinus.AsLiteralDouble = i + 1;\n        points[i].ErrorBarsCustomValues.XPlus.AsLiteralDouble = i + 1;\n        points[i].ErrorBarsCustomValues.YMinus.AsLiteralDouble = i + 1;\n        points[i].ErrorBarsCustomValues.YPlus.AsLiteralDouble = i + 1;\n    }\n\n    pres.Save(\"ErrorBarsCustomValues\", SaveFormat.Pptx);\n}\nInterface Aspose.Slides.Charts.IDataSourceTypeForErrorBarsCustomValues has been added\nSpecifies types of values in ChartDataPoint.ErrorBarsCustomValues properties list. \n\nusing (Presentation pres = new Presentation())\n{\n    IChart chart = pres.Slides[0].Shapes.AddChart(ChartType.Bubble, 50, 50, 400, 300, true);\n    IChartSeries series = chart.ChartData.Series[0];\n\n    IErrorBarsFormat errBarX = series.ErrorBarsXFormat;\n    IErrorBarsFormat errBarY = series.ErrorBarsYFormat;\n\n    errBarX.IsVisible = true;\n    errBarY.IsVisible = true;\n\n    errBarX.ValueType = ErrorBarValueType.Custom;\n    errBarY.ValueType = ErrorBarValueType.Custom;\n\n    IChartDataPointCollection points = series.DataPoints;\n\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForXPlusValues = DataSourceType.DoubleLiterals;\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForXMinusValues = DataSourceType.DoubleLiterals;\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForYPlusValues = DataSourceType.DoubleLiterals;\n    points.DataSourceTypeForErrorBarsCustomValues.DataSourceTypeForYMinusValues = DataSourceType.DoubleLiterals;\n\n    for (int i = 0; i < points.Count; i++)\n    {\n        points[i].ErrorBarsCustomValues.XMinus.AsLiteralDouble = i + 1;\n        points[i].ErrorBarsCustomValues.XPlus.AsLiteralDouble = i + 1;\n        points[i].ErrorBarsCustomValues.YMinus.AsLiteralDouble = i + 1;\n        points[i].ErrorBarsCustomValues.YPlus.AsLiteralDouble = i + 1;\n    }\n\n    pres.Save(\"ErrorBarsCustomValues\", SaveFormat.Pptx);\n}\nAspose.Slides.IShapeCollection.AddClone(...), .InsertClone(...) methods had been added\nThe methods\nAspose.Slides.IShapeCollection.AddClone(IShape sourceShape)\nAspose.Slides.IShapeCollection.AddClone(IShape sourceShape, float x, float y)\nAspose.Slides.IShapeCollection.AddClone(IShape sourceShape, float x, float y, float width, float height)\nAspose.Slides.IShapeCollection.InsertClone(int index, IShape sourceShape)\nAspose.Slides.IShapeCollection.InsertClone(int index, IShape sourceShape, float x, float y)\nAspose.Slides.IShapeCollection.InsertClone(int index, IShape sourceShape, float x, float y, float width, float height)\nadds/inserts a copy of a specified shape into the collection. Example of using:\n\nusing (Presentation srcPres = new Presentation(dataPath_ShapeCloning + \"Source Frame.pptx\"))\n{\n    IShapeCollection sourceShapes = srcPres.Slides[0].Shapes;\n\n    ILayoutSlide blankLayout = srcPres.Masters[0].LayoutSlides.GetByType(SlideLayoutType.Blank);\n    ISlide destSlide = srcPres.Slides.AddEmptySlide(blankLayout);\n    IShapeCollection destShapes = destSlide.Shapes;\n\n    destShapes.AddClone(sourceShapes[1], 50, 150 + sourceShapes[0].Height);\n    destShapes.AddClone(sourceShapes[2]);\n    destShapes.AddClone(sourceShapes[3], 50, 200, 50, 50);\n    destShapes.AddClone(sourceShapes[4]);\n    destShapes.AddClone(sourceShapes[5], 300, 300, 50, 200);\n    destShapes.InsertClone(0, sourceShapes[0], 50, 150);\n}\nAdded ViewType enum, IViewProperties interface, ViewProperties class and IPresentation.ViewProperties property\nIPresentation.ViewProperty allows changing presentation view type and notes visibility when a presentation is opened in PowerPoint.\n\nusing(Presentation p = new Presentation())\n{\n    p.ViewProperties.LastView = ViewType.SlideMasterView;\n}",
  "requireLicenseAcceptance": true,
  "summary": "Aspose.Slides is a PowerPoint management library for working with Microsoft PowerPoint files without using Microsoft PowerPoint. It allows developers to work with PPT, PPS, POT, PPTX, PPSX, POTX and ODP files on ASP.NET web applications, web services and Windows applications. It allows you to open files and manipulate the elements of the presentation from adding slides and managing variety of shapes and working with text to more complex elements like presentation protection, slide animations, charts and SmartArt rendering.The presentations can be exported to PDF, TIFF, XPS, SVG, PNG, JPEG, BMP or EMF formats.",
  "title": "Aspose.Slides for .NET",
  "version": "14.6.0",
  "tags": [
    "PowerPoint",
    "presentations",
    "Aspose.Slides",
    "PPT",
    "PPTX",
    "POTX",
    "POT",
    "PPS",
    "PPSX",
    "ODT"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}