{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.06.02.09.48.15/ipaddressrange.signed.1.6.0-rc1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "J.Sakamoto",
  "catalog:commitId": "0676d6f3-0909-468f-9770-c9d3b36e0244",
  "catalog:commitTimeStamp": "2016-06-02T09:48:15.1657023Z",
  "copyright": "Copyright 2012-2016 J.Sakamoto, Mozilla Public License 2.0",
  "created": "2016-06-02T09:47:50.44Z",
  "description": "This library allows you to parse range of IP address string such as \"192.168.0.0/24\" and \"192.168.0.0/255.255.255.0\" and \"192.168.0.0-192.168.0.255\", and can conatins check. This library supports both IPv4 and IPv6. [This is a signed assembly edition of \"IPAddressRange\" NuGet package.]",
  "id": "IPAddressRange.Signed",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/jsakamoto/ipaddressrange/blob/master/LICENSE",
  "listed": true,
  "packageHash": "9HrECqhrv5UJXqFvoFxoZqJOMfUJ39lFf9fCOsdZFyEKcJSWBcq7ZBoaniTrpIhZYYZOM9Gd0CfClP1KGQnKcw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 10822,
  "projectUrl": "https://github.com/jsakamoto/ipaddressrange",
  "published": "2016-06-02T09:47:50.44Z",
  "releaseNotes": "v.1.6.0 - Enhance: Add \"ToCidrString()\" and \"GetprefixLength()\" method.\n      v.1.5.0 - Enhance: Add constructors variation / Save memory usage.\n      v.1.4.0 - Enhance: Add IEnumerable<IPAddress> support.\n      v.1.3.0 - Enhance: support both \"hyphen (-)\" (0x002D) and \"dash (â€“)\" (0x2013) at begin-end format.\n      v.1.2.1 - Fix: \"Parse()\" and \"TryParse()\" methods throw IndexOutOfRangeException when bit mask length is invalid at CIDR format.\n      v.1.2.0 - Enhance: Add \"Parse()\" and \"TryParse()\" methods. (Instead, the constructor which has one string argument is obsoleted.)\n      v.1.1.0 - Enhance: Add \"Contains()\" method overload version of IPAddressRange argument.\n      v.1.0.6 - Fix Package: Repackage with Release build. (1.0.5 was Debug build)\n      v.1.0.5 - Fix: IPv4 CIDR range \".../32\" causes crush.\n      v.1.0.4 - Enhance: support bit mask range not only CIDR range.\n      v.1.0.3 - Fix: Can not parse the address which contains hex string.",
  "requireLicenseAcceptance": false,
  "verbatimVersion": "1.6.0.0-rc1",
  "version": "1.6.0-rc1",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.06.02.09.48.15/ipaddressrange.signed.1.6.0-rc1.json#IPAddressRange.Signed.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 925,
      "fullName": "IPAddressRange.Signed.nuspec",
      "length": 1949,
      "name": "IPAddressRange.Signed.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.06.02.09.48.15/ipaddressrange.signed.1.6.0-rc1.json#lib/net40/IPAddressRange.dll",
      "@type": "PackageEntry",
      "compressedLength": 6382,
      "fullName": "lib/net40/IPAddressRange.dll",
      "length": 13312,
      "name": "IPAddressRange.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.06.02.09.48.15/ipaddressrange.signed.1.6.0-rc1.json#lib/net40/IPAddressRange.XML",
      "@type": "PackageEntry",
      "compressedLength": 706,
      "fullName": "lib/net40/IPAddressRange.XML",
      "length": 2711,
      "name": "IPAddressRange.XML"
    }
  ],
  "tags": [
    "IPAddress"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}