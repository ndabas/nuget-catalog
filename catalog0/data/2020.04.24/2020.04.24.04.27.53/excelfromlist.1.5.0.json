{
  "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Raul Marquez",
  "catalog:commitId": "34094eb5-74a6-45f5-bfec-21345dd2cbb6",
  "catalog:commitTimeStamp": "2020-04-24T04:27:53.4299589Z",
  "copyright": "Copyright 2020 Raul Marquez",
  "created": "2020-04-24T04:25:36.13Z",
  "description": "Straightforward and easy way to create stylized excel workbooks from lists. Add an image, title, subtitles and overal cell styles/formats. Uses the EPPlus engine.",
  "id": "ExcelFromList",
  "isPrerelease": false,
  "lastEdited": "2020-04-24T04:27:47.47Z",
  "licenseExpression": "GPL-3.0-only",
  "licenseUrl": "https://licenses.nuget.org/GPL-3.0-only",
  "listed": true,
  "packageHash": "atJZSVih3VFkxPSrmKOQ987Q31GmTt27KHssM2mvzLNuPX+EVDwYGjhSMfIuEo6B2hH9/ITI2sJ2nTWvIalidA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 30235,
  "projectUrl": "https://github.com/RaulMarquezInclan/ExcelFromList",
  "published": "2020-04-24T04:25:36.13Z",
  "releaseNotes": "Change to version 1.5.0,\n      Fixed the 'The specified executable is not a valid application for this OS platform.' error when executing the Open() method from a .NET Core project\n      Made FullFileName property public so it can be set manually\n      Added Save() method, will save the Excel only if FullFileName property has been set, SaveAs(fullFileName) will still work",
  "requireLicenseAcceptance": false,
  "title": "ExcelFromList",
  "verbatimVersion": "1.5.0",
  "version": "1.5.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json#dependencygroup/epplus",
          "@type": "PackageDependency",
          "id": "EPPlus",
          "range": "[5.1.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json#ExcelFromList.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 708,
      "fullName": "ExcelFromList.nuspec",
      "length": 1388,
      "name": "ExcelFromList.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json#lib/net35/ExcelFromList.dll",
      "@type": "PackageEntry",
      "compressedLength": 16587,
      "fullName": "lib/net35/ExcelFromList.dll",
      "length": 37376,
      "name": "ExcelFromList.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json#lib/net35/ExcelFromList.xml",
      "@type": "PackageEntry",
      "compressedLength": 1543,
      "fullName": "lib/net35/ExcelFromList.xml",
      "length": 11500,
      "name": "ExcelFromList.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2020.04.24.04.27.53/excelfromlist.1.5.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9468,
      "fullName": ".signature.p7s",
      "length": 9468,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "excel",
    "list",
    "listtoexcel"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "packageTypes": {
      "@id": "packageType",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    },
    "reasons": {
      "@container": "@set"
    }
  }
}