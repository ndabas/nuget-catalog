{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Sergey Odinokov",
  "catalog:commitId": "c8bae3e0-58d2-4137-b245-2dd1c95af608",
  "catalog:commitTimeStamp": "2017-08-08T15:17:25.8243224Z",
  "copyright": "Copyright © 2013-2017 Sergey Odinokov",
  "created": "2017-08-08T15:17:18.69Z",
  "description": "SQL Server 2008+ (including Express), SQL Server LocalDB and SQL Azure storage support for Hangfire (background job system for ASP.NET applications).",
  "id": "Hangfire.SqlServer",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://raw.github.com/HangfireIO/Hangfire/master/LICENSE.md",
  "listed": true,
  "packageHash": "K7NSpw3jJszDfR1hmnlDO+CVCxUFyEFH6Q1U3LU1wq9K8BKlFm9ce1A9lhpLAStk15nbMc7aFL2rbyiD5upqPg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 170926,
  "projectUrl": "http://hangfire.io/",
  "published": "2017-08-08T15:17:18.69Z",
  "releaseNotes": "http://hangfire.io/blog/\n    \n1.6.15\n• Fixed – Timeout exceptions that's caused by SQL Server's thread pool starvation, caused by sp_getapplock.\n• Fixed – Antecedent background job is constantly failing, when its continuation hasn't been fully created.\n    \n1.6.14\n• Added – `SqlServerStorageOptions.SlidingInvisibilityTimeout` to fetch jobs without using transaction.\n• Fixed – Transaction log is full due to 'ACTIVE_TRANSACTION' by enabling to use new non-transactional fetch.\n• Fixed – `SqlServerJobQueueMonitoringApi` can't cause READ UNCOMMITTED isolation level to leak on SQL Server 2012 or earlier. \n• Fixed – Add missing `SqlServerStorage(DbConnection, SqlServerStorageOptions)` constructor.\n    \n1.6.13\n• Fixed – Don't hide errors occurred while running SQL migrations.\n• Fixed – `KeyNotFoundException` when accessing Deleted Jobs page in Dashboard.\n• Fixed – `SqlServerDistributedLock` leaks connections, when lock acquisition is failed.\n    \n1.6.9\n• Fixed – `TimeoutException` on large arguments or large batches via `SqlServerOptions.CommandTimeout`.\n\n1.6.8\n• Fixed – Use `long` where possible instead of `int` for background job identifiers, full support will be in 1.7.0.\n    \n1.6.7\n• Fixed – Validation added to avoid \"An invalid application lock time-out\" exceptions (by t0mburton).\n    \n1.6.6\n• Fixed – SqlServerJobQueue class doesn't use obsolete InvisibilityTimeout parameter anymore.\n    \n1.6.5\n• Fixed – Different timeout issues after making performance optimizations.\n• Fixed – SQL timeouts while getting a connection, when using default settings and >= 8 CPU cores.\n• Fixed – ExpirationManager is bloated by SqlError instances, when there are a lot of messages from server.\n• Fixed – Counters query returned inconsistent results during CountersAggregator executions.\n• Performance – Added missing NOLOCK hint for monitoring queries when using SqlServer-based queues.\n• Performance – ExpirationManager is forced to use index seek operations for cascade deletions.\n• Performance – CountersAggregator now uses clustered index scan to issue less logical reads.\n• Performance – Paging queries in dashboard now use CTEs to utilize less logical reads.\n    \n1.6.4\n• Fixed – `SqlConnection` object leaks when using nested distributed locks (in batches and continuations).\n\n1.6.3\n• Fixed – Prevent `ExpirationManager`'s command from timing out, when there are a lot of records.\n• Fixed – `CountersAggregator` issue introduced in 1.6.2, that causes slow record aggregation.\n• Fixed – Add `XLOCK` hint for `CountersAggregator` query to prevent deadlocks on lock escalation.\n    \n1.6.2\n• Changed – `JobExpirationCheckInterval` property value now defaults to 30 minutes.\n• Fixed – Excessive blocking when expiring records in `State` and `JobParameters` tables.\n• Fixed – Migration script `Install.sql` was deadlocked by itself, leading to errors on startup.\n\n1.6.0\n• Added – .NET Core support for Hangfire.Core and Hangfire.SqlServer packages (`netstandard1.3` target).\n• Added – Zero latency processing when client and server reside in the same process (by @bgurmendi).\n• Changed – `SqlServerStorage` class constructor now takes `DbConnection` instances (by @tystol).\n• Changed – `SqlServerObjectsInstaller` class is public now (by @vbfox).\n• Changed – Update Dapper to 1.50.1 version.\n• Fixed – Drop constraints on Server.Id prior to altering it to avoid conflicts.",
  "requireLicenseAcceptance": false,
  "title": "Hangfire SQL Server Storage",
  "verbatimVersion": "1.6.15",
  "version": "1.6.15",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netframework4.5",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netframework4.5/hangfire.core",
          "@type": "PackageDependency",
          "id": "Hangfire.Core",
          "range": "[1.6.15, 1.6.15]"
        }
      ],
      "targetFramework": ".NETFramework4.5"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3/microsoft.netcore.portable.compatibility",
          "@type": "PackageDependency",
          "id": "Microsoft.NETCore.Portable.Compatibility",
          "range": "[1.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3/netstandard.library",
          "@type": "PackageDependency",
          "id": "NETStandard.Library",
          "range": "[1.6.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3/system.data.common",
          "@type": "PackageDependency",
          "id": "System.Data.Common",
          "range": "[4.1.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3/system.data.sqlclient",
          "@type": "PackageDependency",
          "id": "System.Data.SqlClient",
          "range": "[4.1.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3/dapper",
          "@type": "PackageDependency",
          "id": "Dapper",
          "range": "[1.50.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#dependencygroup/.netstandard1.3/hangfire.core",
          "@type": "PackageDependency",
          "id": "Hangfire.Core",
          "range": "[1.6.15, 1.6.15]"
        }
      ],
      "targetFramework": ".NETStandard1.3"
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#Hangfire.SqlServer.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2123,
      "fullName": "Hangfire.SqlServer.nuspec",
      "length": 5089,
      "name": "Hangfire.SqlServer.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#lib/net45/Hangfire.SqlServer.dll",
      "@type": "PackageEntry",
      "compressedLength": 114474,
      "fullName": "lib/net45/Hangfire.SqlServer.dll",
      "length": 319488,
      "name": "Hangfire.SqlServer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#lib/net45/Hangfire.SqlServer.xml",
      "@type": "PackageEntry",
      "compressedLength": 691,
      "fullName": "lib/net45/Hangfire.SqlServer.xml",
      "length": 3476,
      "name": "Hangfire.SqlServer.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#lib/netstandard1.3/Hangfire.SqlServer.dll",
      "@type": "PackageEntry",
      "compressedLength": 48079,
      "fullName": "lib/netstandard1.3/Hangfire.SqlServer.dll",
      "length": 155648,
      "name": "Hangfire.SqlServer.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#lib/netstandard1.3/Hangfire.SqlServer.xml",
      "@type": "PackageEntry",
      "compressedLength": 524,
      "fullName": "lib/netstandard1.3/Hangfire.SqlServer.xml",
      "length": 2255,
      "name": "Hangfire.SqlServer.xml"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.08.08.15.17.25/hangfire.sqlserver.1.6.15.json#tools/install.sql",
      "@type": "PackageEntry",
      "compressedLength": 2750,
      "fullName": "tools/install.sql",
      "length": 13476,
      "name": "install.sql"
    }
  ],
  "tags": [
    "Hangfire",
    "SqlServer",
    "SqlAzure",
    "LocalDB"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}