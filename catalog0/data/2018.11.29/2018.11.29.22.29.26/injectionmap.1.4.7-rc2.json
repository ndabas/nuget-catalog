{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Christian Walpen",
  "catalog:commitId": "fb9eb16b-6310-4657-8daf-01481023c2b0",
  "catalog:commitTimeStamp": "2018-11-29T22:29:26.9615045Z",
  "created": "2014-09-03T19:53:18.717Z",
  "description": "InjectionMap is a very small and extremely lightweight IoC/DI container for .NET.  \nInjectionMap allows loose coupling betweeen a client's dependencies and its own behaviour. InjectionMap promotes reusability, testability and maintainability of any part of an application.\nInjectionMap supports .Net 4.5, Silverlight 5, Windows Phone 8 or higher and Windows Store apps for Windows 8 or higher.\n\n- InjectionMap uses type mapping to reference the key/reference and the implementation. \n- Instances are resolved using reflection or can be provided through a callback whitch allows you to create the instance in your own code.\n- It suports a fluent syntax to help keep the code simple, small and clean.\n- The desired Constructors can be marked with attributes or will be selected according to the passed arguments.\n- Parameters for constructors can be injected or passed at the time of mapping as objects or as delegate expressions.\n- InjectionMap is very simple and straightforward.\n\nBugs, issues or feature wishes can submitted on https://github.com/InjectionMap/InjectionMap on the issues page or feel free to fork the project and send a pull request.",
  "iconUrl": "https://github.com/InjectionMap/InjectionMap/raw/master/assets/InjectionMap.ico",
  "id": "InjectionMap",
  "isPrerelease": true,
  "language": "",
  "lastEdited": "2018-11-29T22:29:18.797Z",
  "licenseUrl": "https://github.com/InjectionMap/InjectionMap/raw/master/License.txt",
  "listed": true,
  "packageHash": "RMzxhe7m947USJiISoyf0tYtp1NwFnoHjL0xsNmpTCTwa/7y/fYHtoMaH7wJbwSbpvTS18Fft4re4Y60ckMW7g==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 105679,
  "projectUrl": "http://wicked-flame.blogspot.ch/p/injectionmap.html",
  "published": "2014-09-03T19:53:18.717Z",
  "releaseNotes": "- Renamed IInjectionMapper to IMapInitializer\n- Moved Exceptions to base namespace\n- Moved ComponentMapper to public\n- InjectionMapper.Map<T>() now also maps to custom containers\n- Added ExtendAll<T>() to InjectionResolver to extend all registered mappings of the type\n- Changed License to Ms-PL\n- Added InjectionResolver.For<T>() to resolve and extend unmapped types \n- Refactored InjectionResolver.ExtendMap<T>() to simply extend existing mappings\n- Added CLSComplient Attribute to assembly\n- Expression Interfaces don't inherit from IComponentExpression to prevent return values showing component properties. Expression implementaitons additionaly inherit from IComponentExpression.\n- Converted internal Ensure implementation to Extensionmethods\n- Moved Internal implementation from Resolver, Mapping and Component to InjectionMap.Internal namespace",
  "requireLicenseAcceptance": false,
  "summary": "A small and lightweight IoC/DI container for .NET.",
  "title": "InjectionMap",
  "verbatimVersion": "1.4.7-RC2",
  "version": "1.4.7-RC2",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#InjectionMap.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 1324,
      "fullName": "InjectionMap.nuspec",
      "length": 2968,
      "name": "InjectionMap.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#lib/net45/InjectionMap.dll",
      "@type": "PackageEntry",
      "compressedLength": 18127,
      "fullName": "lib/net45/InjectionMap.dll",
      "length": 43520,
      "name": "InjectionMap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#lib/netcore45/InjectionMap.dll",
      "@type": "PackageEntry",
      "compressedLength": 18127,
      "fullName": "lib/netcore45/InjectionMap.dll",
      "length": 43520,
      "name": "InjectionMap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#lib/sl50/InjectionMap.dll",
      "@type": "PackageEntry",
      "compressedLength": 18127,
      "fullName": "lib/sl50/InjectionMap.dll",
      "length": 43520,
      "name": "InjectionMap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#lib/wp8/InjectionMap.dll",
      "@type": "PackageEntry",
      "compressedLength": 18127,
      "fullName": "lib/wp8/InjectionMap.dll",
      "length": 43520,
      "name": "InjectionMap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#lib/wpa81/InjectionMap.dll",
      "@type": "PackageEntry",
      "compressedLength": 18127,
      "fullName": "lib/wpa81/InjectionMap.dll",
      "length": 43520,
      "name": "InjectionMap.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.11.29.22.29.26/injectionmap.1.4.7-rc2.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9467,
      "fullName": ".signature.p7s",
      "length": 9467,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "InjectionMap",
    "IoC",
    "DI"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}