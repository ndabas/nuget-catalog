{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Matt Hallmark",
  "catalog:commitId": "73196bb6-647c-4469-a97f-4a166a6b2d4e",
  "catalog:commitTimeStamp": "2018-12-01T00:30:43.0063869Z",
  "copyright": "Copyright Â© 2014, CoopDIGITy Inc",
  "created": "2015-03-04T23:32:06.463Z",
  "description": "A LINQ to MDX Psued-O-RM for Microsoft SQL Server Analysis Services",
  "iconUrl": "http://www.coopdigity.com/wp-content/uploads/2014/04/logo3.png",
  "id": "PercolatorAnalysisServices",
  "isPrerelease": false,
  "lastEdited": "2018-12-01T00:30:27.24Z",
  "licenseUrl": "http://opensource.org/licenses/MIT",
  "listed": false,
  "packageHash": "RKYprSvBHI6zC5DZurpeDXRQzjPVyzNxn3f8wPAbKAoj17PvxexDhCBvOZESBjb85lMjV9kzAtzHncD+0XHp8A==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 73738,
  "projectUrl": "http://www.coopdigity.com/products/percolator-analysis-services/",
  "published": "1900-01-01T00:00:00Z",
  "releaseNotes": "Finally, a way to query a Microsoft SQL Server Analysis Database with LINQ and type safe objects! \n\nBeta version - Comes without any warranties.  Please contact me via the \"Contact Owners\" link for any questions, comments, bugs, or features you think should be included. Any input is GREATLY appreciated. Make sure to read the \"Documentation\" text file that is included with the package. \n\nA big thanks goes out to Miguel Correia and Nuno Braz Oliveira for helping me find a lot of these bugs and lack of features, and really putting this project through the ringer! \n\nSome of these features were implemented due to them requesting more functionality. So if you wish to see something, or have a bug, TELL US! We do listen, I promise. \n\n---------------------------------------------------------\nUpcoming Changes:\n    -NEW VERSION ALMOST OUT!! (0.3.1)\n    * Version 3.1 has addressed:\n        -Fixing an issue with mapping to certain data types.\n\n        -A few small optimizations to the translators and the PAS objects.\n\n        -More Mdx methods.\n\n        -Stripping out the IQueryable implementations and creating PAS specific implementations for the standard LINQ free form syntax.  This means that anonymous queries will no longer be supported (that doesn't mean I've abandoned the concept entirely, just re thinking its application).  The old IQueryable implementation introduced confusion into what translation methods should be called, so I stripped it out and now both the Free Form syntax and PAS Explicit syntax flow through the same translations.\n\n        -The generated cube objects will use the singleton pattern instead of newing up an entire new cube with all new attributes (since no data gets mapped to those objects anyways).\n\n        -Adding arithmetic operator overloads (+, -, *, /) so members can be created from other members operations (i.e. Member.Create<Sales>(cube => cube.WholesaleDollars / cube.TransactionCount)).\n\n        -I've also been throwing around the idea of creating another TT file so users can define what classes they would like to use to map results to, instead of having to write out a class for each one. If this strikes you fancy, lemme know.\n\n---------------------------------------------------------\nNotes: \n    -Although not listed as a dependency, some of the classes used in this library belong to the Microsoft.AnalysisServices.AdomdClient dll.  The project itself doesn't require the user to have this in the project to run, but some query methods allow the user to return a \"CellSet\" or \"AdomdDataReader\", which do belong to the AdomdClient dll. \n\n    -A preliminary product page has been setup on our site containing the documentation of this project.  If you would like to see it before downloading it, click the \"Product Site\" link to the left. Also, visit us at www.coopdigity.com. \n\n    -This product is still being developed, but soon we may be pulling it out of beta and releasing it as a full release.  Once we do that, it will more than likely be open sourced.  Until then, if you require the source code to work it into your project, that may be arranged. Contact us and we will get back to you on it. \n\n    -Thank you to everyone who has provided feedback! This project has been under continual development because you guys have been asking for more! Again, PLEASE contact us for any bug issues, questions, or features you would like to see.\n\n",
  "requireLicenseAcceptance": true,
  "summary": "A LINQ to MDX Psued-O-RM for Microsoft SQL Server Analysis Services",
  "title": "Percolator Analysis Services (Beta)",
  "verbatimVersion": "0.2.3",
  "version": "0.2.3",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#PercolatorAnalysisServices.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 2118,
      "fullName": "PercolatorAnalysisServices.nuspec",
      "length": 4465,
      "name": "PercolatorAnalysisServices.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#content/PAS_Generator/Generator.ttinclude",
      "@type": "PackageEntry",
      "compressedLength": 1228,
      "fullName": "content/PAS_Generator/Generator.ttinclude",
      "length": 4225,
      "name": "Generator.ttinclude"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#content/PAS_Generator/Include.ttinclude",
      "@type": "PackageEntry",
      "compressedLength": 2190,
      "fullName": "content/PAS_Generator/Include.ttinclude",
      "length": 11251,
      "name": "Include.ttinclude"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#content/PAS_Generator/PecolatorCube.tt",
      "@type": "PackageEntry",
      "compressedLength": 361,
      "fullName": "content/PAS_Generator/PecolatorCube.tt",
      "length": 729,
      "name": "PecolatorCube.tt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#content/Documentation.txt",
      "@type": "PackageEntry",
      "compressedLength": 14206,
      "fullName": "content/Documentation.txt",
      "length": 46382,
      "name": "Documentation.txt"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#lib/PercolatorAnalysis.dll",
      "@type": "PackageEntry",
      "compressedLength": 33366,
      "fullName": "lib/PercolatorAnalysis.dll",
      "length": 83456,
      "name": "PercolatorAnalysis.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#lib/PercolatorAnalysis.XML",
      "@type": "PackageEntry",
      "compressedLength": 7065,
      "fullName": "lib/PercolatorAnalysis.XML",
      "length": 76458,
      "name": "PercolatorAnalysis.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.01.00.30.43/percolatoranalysisservices.0.2.3.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9466,
      "fullName": ".signature.p7s",
      "length": 9466,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "mdx",
    "linq",
    "linqtomdx",
    "orm",
    "percolator",
    "PAS",
    "mdxorm",
    "mdxlinq",
    "ssas"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}