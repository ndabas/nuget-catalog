{
  "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.34.39/unmanagedexports.1.2.5.18722-debug.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Robert Giesecke",
  "catalog:commitId": "c1c58e15-835a-4d43-ab0b-cca5e55c34ae",
  "catalog:commitTimeStamp": "2015-02-03T12:34:39.6299692Z",
  "created": "2013-06-26T09:24:32.217Z",
  "description": "A set of compile-time libraries (nothing to deploy) and a build task that enable you to export functions from managed code to native applications.\n      That means, you can create plugins in a managed language like C# or F# for native applications that only have a C-Api (like Notepad++).\n      The nuget package is all you need. Just mark your methods with [DllExport] and build for x86, x64 or ia64.\n\n      Hints:\n      - You have to set your platform target to either x86, ia64 or x64. AnyCPU assemblies cannot export functions.\n      - The export name defaults to the method name and the calling convention to stdcall. If that's all what you want, you can just use [DllExport] without parameters.\n      - You cannot put your exports in generic types or export generic methods. (The CLR wouldn't know what type parameters to use)",
  "id": "UnmanagedExports",
  "isPrerelease": true,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "http://opensource.org/licenses/mit-license.php",
  "packageHash": "/LSYf7NbOJMMdJGO3koBUc4YrxxsKPoklBsC3V47Fi5Do+A2LwOMrN1X9ELExdzBMXsL7Z/epe/okYgl8nQbLg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 271348,
  "projectUrl": "https://sites.google.com/site/robertgiesecke/Home/uploads/unmanagedexports",
  "published": "2013-06-26T09:24:32.217Z",
  "references": {
    "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.34.39/unmanagedexports.1.2.5.18722-debug.json#references",
    "group": {
      "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.34.39/.json#gpref",
      "reference": {
        "@id": "https://api.nuget.org/v3/catalog0/data/2015.02.03.12.34.39/unmanagedexports.1.2.5.18722-debug.json#gpref/ref/rgiesecke.dllexport.metadata.dll",
        "file": "RGiesecke.DllExport.Metadata.dll"
      }
    }
  },
  "releaseNotes": "- some fixes regarding the creation of .exp, .def and .lib files\n      - changed the nuget scripts to be more resilient\n      - added new nuget CmdLets\n      - You will now get warnings in the nuget package manager when a project's platform target is not x86 or x64.\n      - some refactorings WRT notifications (warnings, etc.)",
  "requireLicenseAcceptance": false,
  "summary": "Adds the ability to declare unmanaged function exports.\n      IOW: the exact opposite of how DllImport works.",
  "title": "Unmanaged Exports (DllExport for .Net)",
  "version": "1.2.5.18722-Debug",
  "tags": [
    "dllexport",
    "unmanaged",
    "exports",
    "export"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}