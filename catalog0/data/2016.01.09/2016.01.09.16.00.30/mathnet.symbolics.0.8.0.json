{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.09.16.00.30/mathnet.symbolics.0.8.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Christoph Ruegg",
  "catalog:commitId": "1564c027-69a8-455f-a0bb-5d0d417dfd95",
  "catalog:commitTimeStamp": "2016-01-09T16:00:30.5371048Z",
  "created": "2016-01-09T16:00:03.85Z",
  "description": "Math.NET Symbolics is a basic open source computer algebra library. Written in F# but works well in C# as well. Supports .Net 4.0 and Mono on Windows, Linux and Mac.",
  "iconUrl": "http://www.mathdotnet.com/images/MathNet128.png",
  "id": "MathNet.Symbolics",
  "isPrerelease": false,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://symbolics.mathdotnet.com/License.html",
  "listed": true,
  "packageHash": "Mtn59lgQqVD91GqQxiZVH0mYIoIFqxP1emlWNioynZ3m81O6cyVciyfGZlN+hTQPlGih7Gw64ehWwwdMPQxbmA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 85030,
  "projectUrl": "http://symbolics.mathdotnet.com/",
  "published": "2016-01-09T16:00:03.85Z",
  "releaseNotes": "Simplification: more consistent behavior on infinity and complex infinity\nExpression: new Constant expression leaf nodes (e, pi, I, real/floating-point)\nExpression: merge Positive/NegativeInfinity with Infinity\nExpression: Root, Sqrt, Sinh, Cosh, Tanh, ArcSin, ArcCos, ArcTan\nFunctions: Sinh, Cosh, Tanh, ArcSin, ArcCos, ArcTan\nOperators: real, pi, infinity, complexInfinity, negativeInfinity\nOperators: log, root, sqrt, sinh, cosh, tanh, arcsin, arccos, arctan\nNumbers: compare/min/max can also handle the new constants\nStructure: collect, collectIdentifiers, collectNumbers, collectFunctions etc.\nInfix: decimal numbers are now parsed as real constant instead of interpreted as rational\nInfix: unicode symbols for infinity, complex infinity and pi\nCalculus: learnt to differentiate the new functions",
  "requireLicenseAcceptance": false,
  "summary": "Math.NET Symbolics is a basic open source computer algebra library for .Net and Mono. Written in F# but works well in C# as well.",
  "title": "Math.NET Symbolics",
  "verbatimVersion": "0.8.0",
  "version": "0.8.0",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.09.16.00.30/mathnet.symbolics.0.8.0.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.09.16.00.30/mathnet.symbolics.0.8.0.json#dependencygroup/fparsec",
          "@type": "PackageDependency",
          "id": "FParsec",
          "range": "[1.0.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.09.16.00.30/mathnet.symbolics.0.8.0.json#dependencygroup/fsharp.core",
          "@type": "PackageDependency",
          "id": "FSharp.Core",
          "range": "[3.1.2.5, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.09.16.00.30/mathnet.symbolics.0.8.0.json#dependencygroup/mathnet.numerics",
          "@type": "PackageDependency",
          "id": "MathNet.Numerics",
          "range": "[3.8.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.09.16.00.30/mathnet.symbolics.0.8.0.json#dependencygroup/mathnet.numerics.fsharp",
          "@type": "PackageDependency",
          "id": "MathNet.Numerics.FSharp",
          "range": "[3.8.0, )"
        }
      ]
    }
  ],
  "tags": [
    "math",
    "symbolics",
    "algebra",
    "simplify",
    "solve",
    "cas",
    "fsharp",
    "parse"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}