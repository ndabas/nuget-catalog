{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.04.55.31/dequenet.1.0.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "DCastro",
  "catalog:commitId": "615231d1-c38f-4c7f-b41c-117c6e8410a9",
  "catalog:commitTimeStamp": "2018-12-11T04:55:31.0910422Z",
  "copyright": "Â© 2013 Diogo Castro",
  "created": "2014-01-24T12:34:00.123Z",
  "description": "DequeNET (pronounced Deck Net) provides a concurrent lock-free deque C# implementation. A deque, or double-ended queue, is a data structure that allows insertion and removal of items on both ends. ConcurrentDeque<T> supports 6 operations in constant time O(1): PushRight, PopRight, PeekRight, PushLeft, PopLeft and PeekLeft.\n\nThe library also offers a simpler Deque<T> (not thread safe), implemented as a ring buffer. This implementation allows Pop and Peek operations to run in O(1) time and Push operations in amortized O(1) time.",
  "id": "DequeNET",
  "isPrerelease": false,
  "lastEdited": "2018-12-11T04:55:24.493Z",
  "licenseUrl": "https://github.com/dcastro/DequeNET/blob/master/LICENSE.txt",
  "listed": true,
  "packageHash": "zyYzO/bw9piNrHQXqnHsSWtvyHWiY4qMBes//57VRQCI64jF5OON9eYg9u2NHsrRmD02fquHOb90MgMVY06FmA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 37631,
  "projectUrl": "https://github.com/dcastro/DequeNET",
  "published": "2014-01-24T12:34:00.123Z",
  "requireLicenseAcceptance": false,
  "summary": "A concurrent lock-free double ended queue (ConcurrentDeque<T>) and a simpler non-concurrent deque (Deque<T>).",
  "title": "DequeNET",
  "verbatimVersion": "1.0.0",
  "version": "1.0.0",
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.04.55.31/dequenet.1.0.0.json#DequeNET.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 663,
      "fullName": "DequeNET.nuspec",
      "length": 1370,
      "name": "DequeNET.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.04.55.31/dequenet.1.0.0.json#lib/portable-net4+win8/DequeNet.dll",
      "@type": "PackageEntry",
      "compressedLength": 8144,
      "fullName": "lib/portable-net4+win8/DequeNet.dll",
      "length": 18432,
      "name": "DequeNet.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.04.55.31/dequenet.1.0.0.json#lib/portable-net4+win8/DequeNet.pdb",
      "@type": "PackageEntry",
      "compressedLength": 10979,
      "fullName": "lib/portable-net4+win8/DequeNet.pdb",
      "length": 48640,
      "name": "DequeNet.pdb"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.04.55.31/dequenet.1.0.0.json#lib/portable-net4+win8/DequeNet.XML",
      "@type": "PackageEntry",
      "compressedLength": 4903,
      "fullName": "lib/portable-net4+win8/DequeNet.XML",
      "length": 41137,
      "name": "DequeNet.XML"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.11.04.55.31/dequenet.1.0.0.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9463,
      "fullName": ".signature.p7s",
      "length": 9463,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "deque",
    "double-ended-queue",
    "concurrent",
    "lock-free",
    "producer",
    "consumer",
    "collection"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}