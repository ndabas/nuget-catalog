{
  "@id": "https://api.nuget.org/v3/catalog0/data/2016.01.07.09.26.46/rabbit.serializationmaster.4.1.0.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "NetVietDev",
  "catalog:commitId": "b1f17f9e-a533-4616-9def-5398cb2747c3",
  "catalog:commitTimeStamp": "2016-01-07T09:26:46.0741194Z",
  "copyright": "Copyright @ NetVietDev 2015",
  "created": "2016-01-07T09:26:13.843Z",
  "description": "This library enables serialization an object of any type to string format (xml/json/base64) and to deserialize a resulted string back to object instance. Also it supports to implement a custom serialization strategy.\n\n      1. Serialize : serializes an object to string (depends on type xml/json/jsv/base64/...)\n      2. Deserialize : deserializes a string to object (depends on type xml/json/jsv/base64/...)\n      3. DeepCopy : performs deep copied an object\n\n      For detail please check project site https://juanonsoftware.github.io/SerializationMaster-Package/",
  "iconUrl": "https://nuget.org/Content/Images/packageDefaultIcon-50x50.png",
  "id": "Rabbit.SerializationMaster",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseNames": "",
  "licenseReportUrl": "",
  "licenseUrl": "http://opensource.org/licenses/Apache-2.0",
  "listed": true,
  "packageHash": "07j+OyMFusIGPehdgdCMGB7l5StPkmSuqYnznJcPQv0yjfGYi6fkwI1gzP5SUYcSBAvn9Kab2dMDtYDCg+LFmg==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 14543,
  "projectUrl": "https://juanonsoftware.github.io/SerializationMaster-Package/",
  "published": "2016-01-07T09:26:13.843Z",
  "releaseNotes": "Version 4.1.0\n      * Extension methods (Serialize/Deserialize/DeepCopy) how have another overload with one-time-usage strategy\n      * Internal strategies now are public (Base64SerializationStrategy, DataContractJsonSerializationStrategy, XmlSerializationStrategy)\n      Version 4.0.1\n      * Fix Serialization behavior when object type is String.\n      Version 4.0.0\n      * Add DeepCopy function\n      * Base64Serialization will throw an exception if object's type is not serializeable.\n      Version 3.1.0\n      * Base64Serialization uses BinaryFormatter and requires object type with Serializable attribute.\n      Version 3.0.0\n      * Supports Xml/Base64/JSON (via DataContractJsonSerializer)",
  "requireLicenseAcceptance": false,
  "summary": "This library enables you to serialize an object of any type to string format (xml/json/base64) and to deserialize a resulted string back to object instance. Also it supports to implement a custom serialization strategy.",
  "title": "SerializationMaster",
  "verbatimVersion": "4.1.0",
  "version": "4.1.0",
  "tags": [
    "Xml",
    "Json",
    "Base64",
    "ToString",
    "Serialization",
    "RabbitSoftware"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}