{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.19.22.07.43/statemachine.1.1.2.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Unterrainer Informatik OG Team",
  "catalog:commitId": "455bc0c8-7d32-4948-9607-19239431b98c",
  "catalog:commitTimeStamp": "2018-01-19T22:07:43.9506326Z",
  "copyright": "Copyright 2017",
  "created": "2018-01-19T22:02:51.14Z",
  "description": "This project implements a Finite-State-Machine (FSM) designed to be used in games.\n\t  Furthermore it implements even a Stack-Based-FSM (SBFSM). So you may tell it to 'continue with the last state before the active one'.\n\t  You describe your FSM using a nice and well documented DSL (Domain Specific Language).\n\n      This replaces the code we usually had for keyboard-input (run-left-right-duck-jump), clicked buttons on the GUI (idle-over-down-refreshing), tower-states (idle-aiming-firing-reloading) or for the connection procedure when setting up peer2peer connections in our games....",
  "iconUrl": "https://github.com/UnterrainerInformatik/FiniteStateMachine/raw/master/StateMachine/icon.png",
  "id": "StateMachine",
  "isPrerelease": false,
  "language": "en-US",
  "lastEdited": "2018-01-19T22:05:51.16Z",
  "licenseUrl": "http://unlicense.org/",
  "listed": true,
  "packageHash": "f0o4AgAfZQbN3lxX5BIAa6mFYcZlhXEbNCNbVPhSH1QlqVGr7sJ+TsmKWikvalz0nWV0a7JSjlpCf9Rs6b61Mw==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 11620,
  "projectUrl": "https://github.com/UnterrainerInformatik/FiniteStateMachine",
  "published": "2018-01-19T22:02:51.14Z",
  "releaseNotes": "",
  "requireLicenseAcceptance": false,
  "summary": "Build complex machines holding the state of your game components using an intuitive fluent DSL.",
  "title": "StateMachine",
  "verbatimVersion": "1.1.2.1",
  "version": "1.1.2.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.19.22.07.43/statemachine.1.1.2.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.19.22.07.43/statemachine.1.1.2.1.json#dependencygroup/jetbrains.annotations",
          "@type": "PackageDependency",
          "id": "JetBrains.Annotations",
          "range": "[11.1.0, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.19.22.07.43/statemachine.1.1.2.1.json#dependencygroup/system.runtime",
          "@type": "PackageDependency",
          "id": "System.Runtime",
          "range": "[4.3.0, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.19.22.07.43/statemachine.1.1.2.1.json#StateMachine.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 885,
      "fullName": "StateMachine.nuspec",
      "length": 1752,
      "name": "StateMachine.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.01.19.22.07.43/statemachine.1.1.2.1.json#lib/portable45-net45%2Bwin8%2Bwpa81/StateMachine.dll",
      "@type": "PackageEntry",
      "compressedLength": 8729,
      "fullName": "lib/portable45-net45%2Bwin8%2Bwpa81/StateMachine.dll",
      "length": 21504,
      "name": "StateMachine.dll"
    }
  ],
  "tags": [
    "state",
    "finite",
    "machine",
    "gamestate",
    "transition",
    "fluent"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}