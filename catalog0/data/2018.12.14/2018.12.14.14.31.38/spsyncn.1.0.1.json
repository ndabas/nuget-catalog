{
  "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Andrew Koltyakov",
  "catalog:commitId": "5824926d-197d-451d-bb76-9438505d6299",
  "catalog:commitTimeStamp": "2018-12-14T14:31:38.5669822Z",
  "copyright": "Copyright 2017, ARVO Systems",
  "created": "2018-04-29T11:36:39.783Z",
  "description": "SharePoint .Net assets sync via Node.js",
  "iconUrl": "https://raw.githubusercontent.com/koltyakov/SPSyncN/master/packaging/nuget/SPSyncN.png",
  "id": "SPSyncN",
  "isPrerelease": false,
  "lastEdited": "2018-12-14T14:31:30.92Z",
  "licenseUrl": "https://raw.githubusercontent.com/koltyakov/SPSyncN/master/LICENSE",
  "listed": true,
  "packageHash": "sJkUww+zXzuk/c6k4memj9ie3gH0ZyLyou6tAnzEwztrebuhWmcd7yb5P7gc+l8DVzj1hH5iQviJAgAzxcw2dA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 720973,
  "projectUrl": "https://github.com/koltyakov/SPSyncN",
  "published": "2018-04-29T11:36:39.783Z",
  "releaseNotes": "Incremental upload functionality",
  "requireLicenseAcceptance": false,
  "summary": "Hey! Attention please! On the first place, it is a crazy experiment which solves one of the our very specific task for a frontier technology stack with SharePoint/Node.js/.Net where we need running the same exactly auth mechanisms which we use in Node.js but in .Net applications. We know exactly what we're doing and why.",
  "title": "SPSyncN",
  "verbatimVersion": "1.0.1",
  "version": "1.0.1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json#dependencygroup/edge.js",
          "@type": "PackageDependency",
          "id": "Edge.js",
          "range": "[8.2.1, )"
        },
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json#dependencygroup/newtonsoft.json",
          "@type": "PackageDependency",
          "id": "Newtonsoft.Json",
          "range": "[10.0.3, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json#SPSyncN.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 702,
      "fullName": "SPSyncN.nuspec",
      "length": 1411,
      "name": "SPSyncN.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json#lib/net45/SPSyncN.dll",
      "@type": "PackageEntry",
      "compressedLength": 709106,
      "fullName": "lib/net45/SPSyncN.dll",
      "length": 2409472,
      "name": "SPSyncN.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2018.12.14.14.31.38/spsyncn.1.0.1.json#.signature.p7s",
      "@type": "PackageEntry",
      "compressedLength": 9465,
      "fullName": ".signature.p7s",
      "length": 9465,
      "name": ".signature.p7s"
    }
  ],
  "tags": [
    "sharepoint",
    "dotnet",
    "nodejs",
    "assets",
    "sync",
    "spsave"
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}