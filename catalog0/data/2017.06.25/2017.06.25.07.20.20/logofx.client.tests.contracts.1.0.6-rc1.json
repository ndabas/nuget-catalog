{
  "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.25.07.20.20/logofx.client.tests.contracts.1.0.6-rc1.json",
  "@type": [
    "PackageDetails",
    "catalog:Permalink"
  ],
  "authors": "Gennady Verdel",
  "catalog:commitId": "3f6a0a2d-a4e0-4a57-9689-37d30acf69c9",
  "catalog:commitTimeStamp": "2017-06-25T07:20:20.8401119Z",
  "created": "2017-06-25T07:18:44.07Z",
  "description": "LogoFX Client Testing Contracts containing contracts for three Test Services:\n1) Builder Registration Service - used during the Arrange/Given Steps.\n2) Start Application Service - used at the beginning of the Act/When Steps.\n3) Start Application Helper - should be implemented for the actual UI Automation framework.",
  "id": "LogoFX.Client.Tests.Contracts",
  "isPrerelease": true,
  "lastEdited": "0001-01-01T00:00:00Z",
  "licenseUrl": "https://github.com/LogoFX/logofx-client-testing-contracts/blob/master/LICENSE",
  "listed": true,
  "packageHash": "TpNFMtYbblww0VHggqdVF5Tthxqeb5CFS4FoRnSSWgxPLDmheWR80G1YKnaawTIhPBTUy96hmi7aqI2FQibzKA==",
  "packageHashAlgorithm": "SHA512",
  "packageSize": 6130,
  "projectUrl": "https://github.com/LogoFX/logofx-client-testing-contracts",
  "published": "2017-06-25T07:18:44.07Z",
  "releaseNotes": "Initial release.",
  "requireLicenseAcceptance": false,
  "summary": "LogoFX Client Testing Contracts containing contracts for Test Services",
  "title": "LogoFX.Client.Testing.Contracts",
  "verbatimVersion": "1.0.6-rc1",
  "version": "1.0.6-rc1",
  "dependencyGroups": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.25.07.20.20/logofx.client.tests.contracts.1.0.6-rc1.json#dependencygroup",
      "@type": "PackageDependencyGroup",
      "dependencies": [
        {
          "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.25.07.20.20/logofx.client.tests.contracts.1.0.6-rc1.json#dependencygroup/attest.fake.builders",
          "@type": "PackageDependency",
          "id": "Attest.Fake.Builders",
          "range": "[1.1.2, )"
        }
      ]
    }
  ],
  "packageEntries": [
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.25.07.20.20/logofx.client.tests.contracts.1.0.6-rc1.json#LogoFX.Client.Tests.Contracts.nuspec",
      "@type": "PackageEntry",
      "compressedLength": 585,
      "fullName": "LogoFX.Client.Tests.Contracts.nuspec",
      "length": 1304,
      "name": "LogoFX.Client.Tests.Contracts.nuspec"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.25.07.20.20/logofx.client.tests.contracts.1.0.6-rc1.json#lib/portable-net45+wpa8+win8+MonoAndroid+MonoTouch+uap10.0/LogoFX.Client.Testing.Contracts.dll",
      "@type": "PackageEntry",
      "compressedLength": 1719,
      "fullName": "lib/portable-net45+wpa8+win8+MonoAndroid+MonoTouch+uap10.0/LogoFX.Client.Testing.Contracts.dll",
      "length": 5120,
      "name": "LogoFX.Client.Testing.Contracts.dll"
    },
    {
      "@id": "https://api.nuget.org/v3/catalog0/data/2017.06.25.07.20.20/logofx.client.tests.contracts.1.0.6-rc1.json#lib/portable-net45+wpa8+win8+MonoAndroid+MonoTouch+uap10.0/LogoFX.Client.Testing.Contracts.XML",
      "@type": "PackageEntry",
      "compressedLength": 608,
      "fullName": "lib/portable-net45+wpa8+win8+MonoAndroid+MonoTouch+uap10.0/LogoFX.Client.Testing.Contracts.XML",
      "length": 2745,
      "name": "LogoFX.Client.Testing.Contracts.XML"
    }
  ],
  "@context": {
    "@vocab": "http://schema.nuget.org/schema#",
    "catalog": "http://schema.nuget.org/catalog#",
    "xsd": "http://www.w3.org/2001/XMLSchema#",
    "dependencies": {
      "@id": "dependency",
      "@container": "@set"
    },
    "dependencyGroups": {
      "@id": "dependencyGroup",
      "@container": "@set"
    },
    "packageEntries": {
      "@id": "packageEntry",
      "@container": "@set"
    },
    "supportedFrameworks": {
      "@id": "supportedFramework",
      "@container": "@set"
    },
    "tags": {
      "@id": "tag",
      "@container": "@set"
    },
    "published": {
      "@type": "xsd:dateTime"
    },
    "created": {
      "@type": "xsd:dateTime"
    },
    "lastEdited": {
      "@type": "xsd:dateTime"
    },
    "catalog:commitTimeStamp": {
      "@type": "xsd:dateTime"
    }
  }
}